package topc.test.math;

import junit.framework.*;
import org.junit.Test;
import static org.junit.Assert.*;
import topc.math.*;

public class SetOfPatternsTest {
  SetOfPatterns setofpatterns = new SetOfPatterns();

  @Test
  public void case1() {
    String[] patterns = { "?" };
    int k = 1;
    assertEquals(26, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case2() {
    String[] patterns = { "a", "b", "c" };
    int k = 1;
    assertEquals(3, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case3() {
    String[] patterns = { "a?", "?b" };
    int k = 2;
    assertEquals(1, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case4() {
    String[] patterns = { "?????" };
    int k = 1;
    assertEquals(881343, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case5() {
    String[] patterns = { "?", "?" };
    int k = 1;
    assertEquals(0, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case6() {
    String[] patterns = { "??", "ab" };
    int k = 1;
    assertEquals(675, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case7() {
    String[] patterns = { "a??", "?a?", "??a" };
    int k = 2;
    assertEquals(75, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case8() {
    String[] patterns = {};
    int k = 1;
    assertEquals(0, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case9() {
    String[] patterns = { "a?????????????????????????????????????????????????", "b?????????????????????????????????????????????????", "c?????????????????????????????????????????????????", "d?????????????????????????????????????????????????", "e?????????????????????????????????????????????????", "f?????????????????????????????????????????????????", "g?????????????????????????????????????????????????", "h?????????????????????????????????????????????????", "i?????????????????????????????????????????????????", "j?????????????????????????????????????????????????", "k?????????????????????????????????????????????????", "l?????????????????????????????????????????????????", "m?????????????????????????????????????????????????", "n?????????????????????????????????????????????????", "o?????????????????????????????????????????????????" };
    int k = 1;
    assertEquals(61146, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case10() {
    String[] patterns = { "a?????????????????????????????????????????????????", "?b????????????????????????????????????????????????", "??c???????????????????????????????????????????????", "???d??????????????????????????????????????????????", "????e?????????????????????????????????????????????", "?????f????????????????????????????????????????????", "??????g???????????????????????????????????????????", "???????h??????????????????????????????????????????", "????????i?????????????????????????????????????????", "?????????j????????????????????????????????????????", "??????????k???????????????????????????????????????", "???????????l??????????????????????????????????????", "????????????m?????????????????????????????????????", "?????????????n????????????????????????????????????", "??????????????o???????????????????????????????????" };
    int k = 1;
    assertEquals(993142, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case11() {
    String[] patterns = { "a?????????????????????????????????????????????????", "?b????????????????????????????????????????????????", "??c???????????????????????????????????????????????", "???d??????????????????????????????????????????????", "????e?????????????????????????????????????????????", "?????f????????????????????????????????????????????", "??????g???????????????????????????????????????????", "???????h??????????????????????????????????????????", "????????i?????????????????????????????????????????", "?????????j????????????????????????????????????????", "??????????k???????????????????????????????????????", "???????????l??????????????????????????????????????", "????????????m?????????????????????????????????????", "?????????????n????????????????????????????????????", "??????????????o???????????????????????????????????" };
    int k = 2;
    assertEquals(358080, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case12() {
    String[] patterns = { "ek??cz???d?svhm???z?l????o??ooh????x?x?ooz?r", "pfae??adb?g??dy?mmb?ke?wl?pyt??qhlaqobnp????", "???cy??f???h?m?n???t??z???f?o?ezbwqapty??gu?", "??i????ul?k????jk?erx??v?j??e?i?x???p?ua??kc", "v???b?t??ngxy??ogeus?y??o?????wg?u?eqpl??ij?", "mr?uap???k?j?kag?vm?rlser???ysv???h?ldx?psud", "q??pm?c??yhtd?n?u??o?yq??d??y??v?u??ij???hzt", "???zp??xh?????uzp?n???zj????p?h?q?mc????pc??", "??jc???ij??t?w???o?utja???yi??l???o??zy??j??" };
    int k = 6;
    assertEquals(0, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case13() {
    String[] patterns = { "?????????????", "?y???????????", "w????????z???", "??????s????b?", "h????e??????s", "?????????????", "x???a????????", "?????????v???", "????h???????r" };
    int k = 4;
    assertEquals(463824, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case14() {
    String[] patterns = { "x?????pebf?xay?d?jk??m?o?????cn??x?f?g?p?", "??fuzru?e??k????ne?i??r?qk?sg?hs?t??z?l?s", "?wquxuynhdy??m?j?c?h?ui???dce?i?wn?c??zmv", "m??fewo?j?j?s?????veoc??qd?yll?br?h?y????", "kp?ny??k?ork?xky?r?e?nik??w???uz??godh???", "??tl?b?g?es?tmya?s?i????qgt?o??t??b?niz?i", "??qm?ysee???g?z??xo?c????lmjq?rcwmpxep?m?" };
    int k = 2;
    assertEquals(0, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case15() {
    String[] patterns = { "?????????w????d", "o?rdb??????????", "???????????????", "??k????a???j???", "??r??????phr???" };
    int k = 1;
    assertEquals(245945, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case16() {
    String[] patterns = { "??g???????????????????g??????????", "?????????????????????????????????", "??r??????????????????l????xy?????", "????????????????????????????u?v??", "???????????????????????ax?l?????a", "??????????????l???????po?????????", "?????????????nwc????????????????e" };
    int k = 3;
    assertEquals(844724, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case17() {
    String[] patterns = { "l???b??h??????????s???lu", "???????q????w??d?k??????", "?i???oqa?????????????p??", "???q???s????????????????", "????????o?????b?????????", "???f??a?????????????????", "???i????????????p???????", "?????????i?????uw???????", "??g????????h??u?????kn??", "????x???????????????????", "?x?b??q????n??z????o??r?", "????h?????q???????????l?", "??????d?i??o???y????i??q", "??e??????n???????????e??", "????j??a??????????????p?" };
    int k = 10;
    assertEquals(0, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case18() {
    String[] patterns = { "?u??????????????????????m?????????kt????", "?????tu??m?m????????m?????t?????????????", "??????????????????????????f????i????????", "???p?????????????????x????c?????????????", "c????????????f??h????v?????o??????j?c??v", "????b????z??cy??????g???????????????????", "o??u?????????p??????l????s??????????????" };
    int k = 7;
    assertEquals(0, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case19() {
    String[] patterns = { "??????????", "?????n??ou", "??????????", "??n??????q", "????????x?", "??m?????l?", "?x????ms??" };
    int k = 4;
    assertEquals(549663, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case20() {
    String[] patterns = { "c?u?n???d??q??o??u?e???????uv?????n????" };
    int k = 1;
    assertEquals(12328, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case21() {
    String[] patterns = { "knfichp", "rljwuek", "leoyfvo" };
    int k = 3;
    assertEquals(0, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case22() {
    String[] patterns = { "j???i?a?????????l?????m??a?????????", "???????j???????q???m?b??e??????????", "????e???????????????????b???????l??", "?????????????????t????????????????l", "???????i???pr????m??????d??b?????h?", "?c?uk???????????????????????????b??", "????d???????n??t??????l??opf???r???", "????????????????????????r??????????", "?????????r????z????v?ds???s????????", "?o?????v??ed???????t??u??p?k???????", "?????????????????v?????????l?y?????" };
    int k = 7;
    assertEquals(0, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case23() {
    String[] patterns = { "??c?a??????br???u??q???f??x????c????i?????g???r?", "f??n???x??p???wh????z?????f?iw??n?e??y????p??c??", "???tta?l??i?ed????s?ml??m???????f?ja???ii?????h?", "?p?x?n??z???q?????????d?u??s?y????q???b????z???u", "r?s??????????a????h?????c?????e??????mn????z????", "???????g?y?he?s??b??????a???x????owcp?x?????ul??", "r??????x?hj?n????zp????pjt??x?j??x?xr??gx??v??a?", "???????r????b??e????t?gv?z????qo?????lw???p?iv??", "??cyfl??c??g??kpwk????o?hp???j??phu?????jzsu????", "??????????u??????b?pxb?????????eg???k??nma???q?r", "???e??qib????z?????j???ubt???dh??z????s?e????i??" };
    int k = 8;
    assertEquals(0, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case24() {
    String[] patterns = { "????b", "??r??", "????r", "?????", "?h???", "??y??", "?????", "?????", "???c?", "?????", "?????", "?????", "?????", "????p" };
    int k = 8;
    assertEquals(635094, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case25() {
    String[] patterns = { "?????????????fz?r???????????????k????????sg???e?", "?????????????????a????g?r?????????????????????q?", "????????????????d???o??v?????x??f????????m???e??", "?????h?x??????????????v??????????????????q???s??" };
    int k = 2;
    assertEquals(254478, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case26() {
    String[] patterns = { "?fp?bx??d????a??tz", "?lx??lh????n?o????", "?t???v?????yuta?bm", "r?v?ozy??r?t?????a", "?od???qe?f????y??j", "???v?gz?te????????", "????l??zy??k??????", "????b?b?t????yv?zz" };
    int k = 3;
    assertEquals(0, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case27() {
    String[] patterns = { "??????????b??a???dy???????z?????n??", "?b???l????hi???????????i????????b?d" };
    int k = 1;
    assertEquals(332856, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case28() {
    String[] patterns = { "??c??v???v???????v??????????r?mdf??", "?a??k?a?v????t??d?d?????????q??????", "apy???z?????????q??t??????o???p???g", "w????s??????????????????p???d??????", "????b?????????i?ex??????????????l??", "?i???w???r?????o??z???????????o????", "w??d??i???e?nel?????qlp????m?e?????", "?????ik????p?y?????????sqm???????d?", "???????mz?????q???qf??x???????????h", "??s?j?x???????????a?????????u??????", "?????d?wh?????a????????????????????", "??jd????x????????????g??w????y???d?" };
    int k = 5;
    assertEquals(0, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case29() {
    String[] patterns = { "f???u???ve??a?qk?fmd?b???????hc???????r", "????vs??sn???qr???el?????v????mn?ke????", "g???????h?l?mu??????l????hq????id?y???d", "????o?toi???s?????o??aiz????????????h??", "??g??ub?z???fp?fl??kmod??l?o????sh?osz?", "mn??v?j???hiwtd???beo??vu???????m?m?x?s", "???v????niz????p?e??????oo?b???w??x????", "g???????t?liy?b?y???v??g??w??od???bx???", "?y??d????ec????mqvg?t??????i???z?k?oj?d", "u??n???cs?????bs??????qr?o???k?s?q????b", "????w??id??????????u?k???????nw??ljs?z?", "l?????z???z??fk???????zqp???w?s?m??snab", "???q?????gtwuq????????kih???i????a?f?ty" };
    int k = 9;
    assertEquals(0, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case30() {
    String[] patterns = { "????c????pz????????i???????????", "?b????????????????????h?x??j???", "????????????e?????????id??????c", "????????o??????????????????????", "???????????????????w???????????", "n??????a?????q?????????????o???", "???l?g?????????i??x?kq?????????", "????f?m?????????r??????g???????" };
    int k = 6;
    assertEquals(0, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case31() {
    String[] patterns = { "????", "????", "????", "????", "????", "??a?", "?r?b", "????", "????" };
    int k = 8;
    assertEquals(18200, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case32() {
    String[] patterns = { "??????", "??k???", "??s???", "?zo???", "??????", "???p?a", "???i??", "??l???", "iu????", "?????v", "?????d", "??????" };
    int k = 1;
    assertEquals(0, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case33() {
    String[] patterns = { "?", "?", "?", "?", "?", "w", "?", "?", "?", "?" };
    int k = 5;
    assertEquals(0, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case34() {
    String[] patterns = { "??????????????v????????v???????????????????n?????" };
    int k = 1;
    assertEquals(178039, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case35() {
    String[] patterns = { "???lt??????????" };
    int k = 1;
    assertEquals(447275, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case36() {
    String[] patterns = { "???????????t?????" };
    int k = 1;
    assertEquals(281817, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case37() {
    String[] patterns = { "??k??????qo????j????????????d???", "??sw???????????????????u????????", "?q???????u???????????????j?f????", "?????????????????????i???????z??", "?????????????b???v???g??????qte?", "p??ks??????y??t????j???a????????" };
    int k = 2;
    assertEquals(159411, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case38() {
    String[] patterns = { "??z?", "??as", "?yxs", "??d?", "xi??", "fob?", "wp??", "cl?a", "o?hj", "u?t?" };
    int k = 4;
    assertEquals(0, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case39() {
    String[] patterns = { "m????????????????????????rb????x?r???fca", "??jim?q?p???p??????j??????g?d????b??????" };
    int k = 1;
    assertEquals(916933, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case40() {
    String[] patterns = { "?????????????????????h???sus???v?????m???" };
    int k = 1;
    assertEquals(802154, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case41() {
    String[] patterns = { "?f??????", "u???????", "?r??????", "w???????", "????????", "??cw???d" };
    int k = 6;
    assertEquals(0, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case42() {
    String[] patterns = { "????????????????????????b????l????????????????????", "??????????ys????jr?????????????i?????????????n?h?w", "?????z??????????????????u???????????????????g??i??", "????????????i?????h????????d??????x????f??????????", "?z???x??m????????????????????????????i???d????????", "????????????????????????????????????f???????????r?", "?????????f?????????k?????????????????b????????????", "??????????????t?????????????????????t?????????????", "????????????p???????????????????w?????????u?u?????", "??t????z??????m???????????????????????????????????", "?????????????????????g?????????????t???x??????????", "??????????kr??nw?o????????????z????j????i?????????", "???????d?????????gb????????u???ar?????????????????", "????????????????????s??????q????????????l??g?????t", "?e?????????????????????????????????????????x??????" };
    int k = 4;
    assertEquals(912233, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case43() {
    String[] patterns = { "?????????????????????????????d????????????d?????y?", "f????????????????????????m????????????????????????", "??????????p???????????????????????????????e????d??", "???????????????????i???????????m?t??y????z????????", "???????????q??d?????????????g??????h?v?????????a??", "????????????????x?b?????????????????????????r?????", "?????el????????h???y?n????????????????????g???????", "?????????????????????x??????m?????????????????????", "???????????????????????????????????h??y?????y?????", "???i???k??a??????i??v????????????a????????????????", "?????????????????????f?r????????p?????????????????", "?l?????????????c????????w????????????k????????????", "c?????????????????????v????????????d?????c????v???", "??????????????????????????????????????????????????", "????j?????????a?????i???x????????????????f????????" };
    int k = 9;
    assertEquals(0, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case44() {
    String[] patterns = { "g?????????ql??????h???????????????????????????m???", "?????????????????????l????????????????????????????", "?????????????????????w????????????????d?????ds????", "???????p????????????????????????????????????????p?", "??q???g??????????j?????f???????????s?o?????n??????", "?????????????????????????????y?????????????????q??", "???????o??????????d?v?????????????????????????????", "????????????????????i?????????sc?i????????????????", "???????????????????????????????????z???????qw?d???", "??????????????????????????????t????????w?????????f", "????????????????????t??????s??q?????q??????h??????", "?????????????????????y??a??m???s??v?h??fi?????????", "?m?????????????????z?????????????????zm???????????", "r???nw?f??????f???????????y????????x?????k????????", "??????b????????????????????j???????e??????????u???" };
    int k = 3;
    assertEquals(496612, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case45() {
    String[] patterns = { "???????????????????????????????????e?????????a????", "???????????????????f???????i?????dq?????????q?????", "???????????????????????????????????????o??????m???", "???????????????q??????????w?????????????????n?????", "?????????a????k??????d???????u???????p????????????", "?m??????????????????????????????????????ei????????", "??k????????????????????????????????d????????????m?", "??????m?????????????????????o????????????????????e", "???????????e????????????o?????????????????????????", "??u??????????????????????????????????x??v?????rx??", "?????????i??????u?????????????p??p????u??????????u", "??????????????????????????????????xo??????????????", "l???????????????????????????????wx???????????k???u", "??????i???e???t???????????????????????????????????", "??????????n????????m??????????????r????????????x??" };
    int k = 15;
    assertEquals(0, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case46() {
    String[] patterns = { "??????????????????????c???????????????????????????", "????h??????????r???????????????????r??????????????", "????????????????????i??????????????o??????????????", "????????????????????????jh????????????????????????", "?????????????s??????????????????????????????????u?", "?????????e??????c??????????????g??????o????n??????", "???????????????????????????ff????????????????????a", "?k?????????????o?????????h????????????????????????", "?????????w????????????c?????y?????????????????????", "??????????????????????????????????v???????d???????", "?q????????????????????a??????????????????s??????b?", "????????????????ta??????????????????????????j?????", "?????????????????????????????v??????????????u?????", "y??????????f?????u???a?u??????????????????????????", "????????????????????????????????????r?????????????" };
    int k = 9;
    assertEquals(758265, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case47() {
    String[] patterns = { "?????????????????i?j????????????????????e?????????", "c????f??????????????????b?i??????????v??????b?????", "?????????????r????????????????ax??????????????????", "??????w???????????????????????g???????????h?????v?", "??????????????????????tu??????????????????????????", "?jx???n???????????dg????????????????o?????????????", "?????????????????????????????????????q??????????i?", "?????????????????????????????p????????????????????", "?????????n?????k??????????????????v???????????s???", "?w??b?????????????????????????????????????????????", "???????????????????????????????e???????????????zi?", "?????????????z???????????????????????????x????????", "?????????????????????????s????????????????????????", "???????????m????????????????????????r?????????m???", "??????????t???????????????????????????????????????" };
    int k = 5;
    assertEquals(307797, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case48() {
    String[] patterns = { "??????????o??????????????????w??c???bt????????????", "????x??????????????p????h?????????????????????????", "???????n???????????????????????????????t??????????", "?????????????x?t?????????????????g??a??????????x??", "?????????p??????????????????????m?l???????????????", "?????f????????m?ho?????????x?????o???????????????o", "b??????????????a????????????????????????qg??s?????", "???????????k?????m??????????????????u??q??????????", "?????????????????????????????????z????????????????", "??????????????????????????????????????????????r???", "???????????????????????????b??????w?i??????u??????", "??????????????????????????????????w???q???d???????", "??????????????h?????????????????????????????d?????", "???????w??????i????c?????????????????????d????????", "???b???????????????p????????????????????????m?????" };
    int k = 8;
    assertEquals(0, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case49() {
    String[] patterns = { "????????u????????????o??????????????????????u?????", "?????g??f???????????wq????????????????????????????", "???k?t???????????????g????????j????????????yn?s???", "?????????????????z??????????????g?????????????????", "???????u????????e?????????????????????????????????", "????????????r?????????i?????k???????l?????m??d??af", "?????????????????????????u??p?????????????k???????", "????????????????????????????j???????r????j????????", "??????????????????q????????wz????????????k???????s", "??z?????j???i???????????????????????p?????????x?s?", "???????????????????y??????????????????????????????", "???????????????????n?????????e?????e??????????????", "??????????????????????p??????????????wj???????????", "??????????????t????i???t??????????????????????????", "????????n???????????????????t????????????????b????" };
    int k = 1;
    assertEquals(731682, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case50() {
    String[] patterns = { "??????????????????????????????????????????????l???", "?????????w?????p????s????????v?i????????????????h?", "??????????????????kv??????????c????????????u??????", "????????o??????????????????????????????????i??????", "????????xn????????????u??e???????????n??????xz????", "??????tx?????????????????????????z???y????????????", "???b?z??u????????ta???????????????????jd??g???????", "???????????????????????w???????????????????h?????l", "????????o??????x???????c?????????????????j????????", "?????????w??c???????????????????????????????????s?", "???v????o????????f????i????b?????????????????r????", "?????t????w??y?????????????c??????u????r??t???????", "??????????????????????????????????????????a???????", "?w????h?????????t????????x???????????????????l????", "???????o????y???x???h???b????????e???????q????????" };
    int k = 14;
    assertEquals(0, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case51() {
    String[] patterns = { "m?????????????s???????????????a????p???????????q??", "?????????e??????????????????k??????????????????b?u", "??????????????????????????????????????????u???????", "????????f???h???????????????????????????o?????t???", "?????????????????????????x????????????????????????", "???????????????????????w??x?????????w????j??????n?", "k????????????????????????????????????????????l???q", "??????????r???????????????????????????y???????????", "?????????????z??????????v????????g???????mr???????", "????????????????i?????????????????????????b?g?????", "????????????????????????t?????????????????i?l?b???", "??????????????????????w??l????????????????????????", "????f?????????????????????????w???????????????????", "????e?s???????q??q????h??????????????d????????????", "????????????????s???????d??????????j?f????????????" };
    int k = 1;
    assertEquals(795984, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case52() {
    String[] patterns = { "??dg????????i?????????????????????????????????????", "???t??????????????????????c??????t????????????????", "??????????????????????????????????????????????????", "?????????????????j????????????????????????????g???", "??z???????????????????????????????????????????i???", "?????????z?g????????????????????????????????w?????", "??h?????????????????p????g?d???h???????f?v????????", "?????????b????????????t???????????????????????????", "??????????????????m??????t????????????????????????", "??????????????????????????????????????????e???????", "???????b??????????????????g???????????hu??????????", "??????h???????????????????o???????????????????????", "??????????i????????y??????????e???????????????????", "?????l????????????????????????????????????????????", "????????????k????????q???????????q????????????????" };
    int k = 3;
    assertEquals(64602, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case53() {
    String[] patterns = { "???bq????????g????????????????????????????????????", "w?c???????????????????????????????????????????????", "??????????????j????w??????????????????????????????", "??????k??????????????????o????????????????????????", "????x??????v?????????????s??????i?r????h??????????", "???????????????????????c??????????q???????????????", "????????????u????????????????w????????????????????", "?ou????????????????????y???????????t??z???????????", "??????b?????????????????????????i????k????????????", "??????????????????????????????z???????????????????", "????????????b?????????????????????????????????????", "?????cc????????????????????n?????????????w????????", "??????????????????????????????????????????????????", "??????????????w??????????????????????????????w????", "?????????????????????????????????????????????i??a?" };
    int k = 10;
    assertEquals(0, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case54() {
    String[] patterns = { "??????????????????????z???????????????????????????", "b???f???????????p??????????????????????????t??????", "?????????????????????????f???????g??????????????y?", "c?????????????????????d???????????????????????????", "????w??????????????????????z??????????????????l???", "??????????????????????????????????????????????????", "????????????????e?????????????z?????????l??bt???f?", "???????????x??????????????a????g?m????????????????", "????????????????????????????????????????????ty??i?", "?????????a?b?????????????????????????????????m????", "???g??????l???????????????????????????????????????", "????????????????????s?????????????????????????????", "??????????????????????????????????????????????????", "?????x???????n??????????????rk??f??????f??????????", "??????????????????????????v???????????????????????" };
    int k = 9;
    assertEquals(845442, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case55() {
    String[] patterns = { "?????????????????????????????????li??????r????????", "?a?q?????????m?????????????????????????????xm?????", "???w?r???????g??????????????c?o?????z???x?????????", "?????????g??????????????????o?????????????????????", "?kd?????????????????????????????????????????????m?", "???????????????????????????v?f????????z?????????r?", "???????l???????r????????????j????????n????????????", "?f??h????????????????j??????d???w?????????????????", "??????????????????????????????????????????d???????", "?????????u??m??????????????????z??????????????????", "????????e??h???p???????????????kr?????????????????", "???????q????????????????????????????k?????????????", "?????c???????????????f?????????????l????cp??x?x???", "??????????????c???????????????????????????????????", "????????????????k???????????????????????????????f?" };
    int k = 9;
    assertEquals(0, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case56() {
    String[] patterns = { "???????k?????????????g??????????????????k????g???x", "?????????dr??????????????j??????????????????????x?", "??????????o?????????????????z?????????????k???????", "?????????i????????????????????e??q????h???????????", "??j???????s????????m??????????????????????t??m????", "????????l?c???????????????????????????y???????????", "??????????????s?????????????m??????o??????????????", "???????????????z???m????m????????????????m????????", "t????????????????????????i???j????????????????????", "??????y?d????????c?????????????????y????????i?????", "q?b????d????o??????????????????j?????????a?m??????", "?????j??????????????y??????a??xn???????h??????????", "?????????????j????j??????????????????????????yo??y", "??a?????p???????????????????m??x???d??????????????", "???t??????p?????????k????????????????eg???????m???" };
    int k = 2;
    assertEquals(240925, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case57() {
    String[] patterns = { "???????????????h?????????i??a??????????????v?x????", "????x????????t?????????c?????????????????????p???v", "???????????????????e??????????????????????????????", "??????s??m????????????y???????????j?h?????????????", "????????????c????????????????????v??????????x?????", "??em??????e????????????????????j????????n?????????", "??????????????????????????c?o??s?????????????o????", "?????????i???b??????????????i?????????????????????", "????????????v??????p????????????y????????????d????", "??????o????b????????????????b????????????k??s?????", "????v????w????????????????????????????????????????", "??????????k??????z?????????r??w?????u????????????j", "????????g????????f??????j?????????????????????????", "?????z?????l???????????????????s??n??v????????????", "?????g?????????m?????f????????????????????????q?j?" };
    int k = 6;
    assertEquals(656923, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case58() {
    String[] patterns = { "????????????????l?l?????????c??????q??????????????", "??a???????????????????????????????r?????????????m?", "???????m??????????y???????????????????????????????", "???????????????a???????h??????????????????????????", "??n???????zg????????g????????????a????????????????", "??????t?????????????h?????????????????????????f???", "??l???????????????j????l????r?????????????????????", "??????????????????????????????o???????????????????", "??v?????????????????????p?????????????z???????????", "??a?????????????????????q???s??????????????s??u???", "????d?????f???????????????????w??n?????s??????????", "???????v???????????????????????t??????????????????", "?????z??j??k????????????????????i?????g???????????", "????????r??????????????????v??????????????????????", "???i????????????w?????????????????????j???????????" };
    int k = 3;
    assertEquals(364838, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case59() {
    String[] patterns = { "??????????e???????????e??????????e????????????????", "??u??ao???????????????l????????????k?h????xx?????v", "?????????????????????????????k?x????z?????????????", "????x????y??????se?????????????????k???p?????????z", "b??????f???a?????????????p?????e???????b?w????d???", "???????y???????????????????????????r?h????????????", "?????????????s???y??q??????????????????a??????????", "??????w???????l??o????????????s??????e????????????", "????????????j?k?????????j?????????????????????????", "?v?????????????????n?????????????????????????k?n??", "?????????k??????????????????????????sss??p???q????", "????q??????o???efu????b???????????????????????????", "?????????????p??????????????????????????a????????c", "r?w????????????????b??p???d?????????????????????j?", "????o??????????w?????????????????????y????????????" };
    int k = 6;
    assertEquals(357753, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case60() {
    String[] patterns = { "????????d????????????b???????????????????????????j", "?????x?????????????????????????????????????????h??", "?????????????????????????????????????????????q????", "??y?dm?????????????s?????????????????????ig???????", "????????c??????????????y????????????????ko????????", "????????????????????????????????pm??????????f??a??", "??????k????v?????????????????????????????l????q???", "??????????????????????w????????????g??????????a???", "??k???????????????????????g??????????????????????u", "???????????????s?????????????w????e?????m??s??????", "??????????????????????????????????????????????????", "?????q????????????????????????y??????n????????????", "????x??h???????v???m?????w????????????????????????", "??????????????????????c??????????????????????????p", "????????????????j??????k???????r?????????????????v" };
    int k = 11;
    assertEquals(0, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case61() {
    String[] patterns = { "?q???????????????????????????sa???????????r???????", "????????????????????????????????c??????????z??????", "????????????????a?????????????????????q???????b???", "????g?????????????????????????????????????????????", "???w???????????j???????n??????????v???????????????", "????????????????????????e?????????????????????????", "?j????????????????h???????b????????????????????g??", "??????v?????????y???????????i???????e?????????????", "?????q???????g??n???????????x?????????????????????", "??????????e????????????????????u??????????????????", "???????????????????????????????????????z??????????", "????k?????????????????????????????????????????????", "???????z????????????u??????????????m??????????b???", "???????????????????????i???x???????????p??????????", "????????t?????????????????????????????p?s????j????" };
    int k = 1;
    assertEquals(71422, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case62() {
    String[] patterns = { "??????????????????k???????????????????????????????", "????????????o?????????m???o?????????????????????q?", "????a?????????????????????????????????????????????", "??????????????t????????????o?????????k???????a???o", "m?????????????p???????????????????????????????????", "????d?l??e???h??????????????????w?????????????????", "????????????c?????????????????????????????????????", "?????????????????????x?????n???o??r???????????????", "??????l???????????????????????????????????????????", "??????w?????????????b????????????????b?y?k???n????", "?u???????????j????????????????????????????????????", "?m???????????v????????????if????????????p?????????", "?????????j??m?????????????????????????????????????", "?????????????????????????g?????????q???h?????????q", "e?????????????????????????????????????????????????" };
    int k = 13;
    assertEquals(0, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case63() {
    String[] patterns = { "????????????????????????y????w??????????????u?????", "????s??????????????????l??????????????????????????", "????????c?????????????????????????????????????????", "??????????????????????????s???j????????????z??????", "?h???????????????r?????????s?????x??????????j?????", "????????????????????????m?????????????????????????", "?????????????????????????????????????????n???l????", "??????????????u??????????f????????????????????????", "????????????v??????????????????????????????????e??", "????f???????????????????????????????????w?????????", "???????????????????????????n??????????????????????", "????????????????????????????????????????????m?????", "???w????i????????m?????????????????????????c??????", "??????o?????????????g?????????????q??v????????????", "?a??????f???????????????????????o??????????????y??" };
    int k = 10;
    assertEquals(352557, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case64() {
    String[] patterns = { "??????????????????????????????????????????z???????", "?????????????????????????b???????l??t?????????????", "???????????????e???????????????p??????????????????", "??k????????????f?x??????z????t????????????????????", "b??????????t???????????????????????????x??????????", "????c?????b?????n??t?????y???????hm???????????????", "???????x??z???????????????????????lm??????????????", "???p?????????????????or??????????????????t????????", "y??g??o???????l????????????r????????t????????????d", "??????????h????????t???????u????????y?n???i?????l?", "???m???????????z???????????j????????????v?????????", "??????qxc???????????n?????????????u??????v????????", "????s????????????????????????????r????????????????", "????z????c????d?????????????????????????????b?????", "??????????f???s???c?f?????m??????????????????????o" };
    int k = 10;
    assertEquals(0, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case65() {
    String[] patterns = { "??????????????????x????q????????????????????p?????", "??d??????g??????????????y??????????????????r?a????", "??????????????a??sv?????????????????????u?????????", "??????????????????ca??????????????????????????????", "????????????????????????????y???????w?????????????", "????????????????????????????????????????????????t?", "??????????????????????????????????????????????????", "??????????????z?????????????????????????????????y?", "????a??w?????????????????s???????g????????????????", "??????????????????????????????????????????????????", "?????????????????????p?n????????????w?????????????", "?????????b???????????????r??i?????????????????????", "??????????j???????n?????????????n??????????o??????", "???????h??????????????????????????????????????????", "????????????????????????????????????????????l?a???" };
    int k = 8;
    assertEquals(420047, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case66() {
    String[] patterns = { "???????????h??????????w??????????????????????v????", "???????????????k?????????????????????????????????a", "???????????????gk?????????????????????????????????", "????????????g????o???j?????????dv????????????t????", "?????????s????r??????????????????????i??????????q?", "??????????????????????????????????????????????????", "??a????q??????e??????????????s???????t????????????", "??????????????????????????????????n????????v???di?", "???f???????????????h???????????????????????????w??", "??????????????s?j??????????????????????????????c??", "v????????i???????????????????????h????????????????", "?????l?h??????????h???????????k??????????????d????", "??i???????????????????????????????????????????????", "????????????s??????????????y?f??e???o?????????????", "????????????v????m????????????????????r???w?k?????" };
    int k = 8;
    assertEquals(0, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case67() {
    String[] patterns = { "???????????????????????????????x???l??????????????", "???????????????????c????????????????????p?????????", "??????????n???h?????????????v??nb?????????????????", "?s???v????????????????????????????????????????g???", "?????w??????????????????i???????????m?????????????", "???????g????????t???????u??j??????????y???????????", "??????????????????????????????????????????????????", "??????????????????????????????????????????d???????", "???????m???k??????q???????????h?????????i?????????", "?????p???r?????r????????????hu????????????????????", "??l?????????????????????x?????????????????????s???", "??????????????????????????t????????????????c???g??", "???????????????????z???????????qj?????????????????", "y????s??????????c????????????????????cm???????????", "??????????????????????????k???????????????????????" };
    int k = 9;
    assertEquals(0, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case68() {
    String[] patterns = { "????????????????????????z???bm?????p????????a?????", "?k????p???m??????????????????k???????p???l?j??????", "t????????????????t???????????????????c???????????o", "?u??????t??e??q??d?w???????????kr?????h?????a?????", "??????????????????o????g????????f????c????????????", "????????z??e????????????????c?????am????q????u?s??", "??????q????????????????y??????????????????????????", "?????????p????????????????x?????k?j??????????a????", "?????????????bxt????????v???????????????????????v?", "?????????????????????????????????i?????????o????h?", "?????????????xio????i??hv?????????????????????????", "??o????????????????u?v?????u??????????????????????", "????????????????????????fk??????????????xn????????", "h????q????k????????????????????????t???????o??????", "?????????????????????????????v??????y????????w????" };
    int k = 15;
    assertEquals(0, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case69() {
    String[] patterns = { "????????????????u?????????????????????????????????", "???????????????a??????????????????????????????????", "????????????????z???????s?????????????????????????", "???dq?????????????????????????????????????l???????", "????????????m????????????????????????y????????????", "????c???????u????????????????????n?????????????p??", "????????????????????????????????????????q?????????", "??????????????????????????????????????????????????", "???????????????????v?????????????????????????c????", "l?????i????????????j??????????b??????????????????b", "?????????????????????????????????u??????????b?????", "l??????????????????????h?????????????????l??v?????", "??s?????????????????m????????????????????????????a", "????k?????????????????????????????????n???????????", "???????????c????????l??????n??????????z???b???????" };
    int k = 15;
    assertEquals(0, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case70() {
    String[] patterns = { "???????l??????????????????????????????h???????????", "????????????????????????????????????????i?h?q?????", "??????g?????????????????????p?????????????????????", "?????l??????????????????????????m???p?????????????", "?????????????????e????????b????????s??????????????", "????????x????i??????????????????????????y?????????", "?l???????????????????????d????????????????????????", "??????????f??????????????????n????????????s?u?????", "??????????z???????????????????????????????????????", "?????????????????????????????s????????????????????", "?o????????????????????????????????????????????????", "???d????sx????a??m??i?????????????????????????q???", "???jw?????????????????z?????????????????t?????????", "n???????????d???????????t???????????????????????g?", "??????????????????????????????????????????????????" };
    int k = 9;
    assertEquals(891565, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case71() {
    String[] patterns = { "??????ax?????z?s???z?????????????????????o??z?????", "?o???????km???????????????????????????????g???????", "??????????????????????????????o???????l???w???t??u", "??????????????????????????????????????l???????????", "?????a???????????????????????????????????????d????", "j?????l????i???????????????????????????sl?????????", "???????d???????????????????????f??d??????????x?u??", "???????????????????????????a????k????????h????y???", "??????s???w?????u????????j???????????????????????u", "??????????l???t??????????s???sw???j????????????k??", "o??????v???q??????c?????????????j??l???f??m??y??a?", "????mu????????????????????j???????y??????????????k", "???????????????o?????b?????????????r?y????????????", "????????????d???????????????y???p??????v??????????", "??????????o???????????????????????????????????????" };
    int k = 8;
    assertEquals(0, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case72() {
    String[] patterns = { "a?", "?b" };
    int k = 2;
    assertEquals(1, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case73() {
    String[] patterns = { "a", "b", "c" };
    int k = 1;
    assertEquals(3, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case74() {
    String[] patterns = { "???????????????a??????????????????????????????????", "???????b??????????????????????????????????????????", "??????????????????????????????????????????????????", "??????????????????????????????????????????????????", "??????????????????????????????????????????????????", "??????????????????????????????????????????????????", "??????????????????????????????????????????????????", "??????????????????????????????????????????????????", "??????????????????????????????????????????????????", "??????????????????????????????????????????????????", "??????????????????????????????????????????????????", "??????????????????????????????????????????????????", "??????????????????????????????????????????????????", "??????????????????????????????????????????????????", "??????????????????????????????????????????????????" };
    int k = 10;
    assertEquals(0, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case75() {
    String[] patterns = { "a???", "?a??", "??a?", "???a" };
    int k = 2;
    assertEquals(3750, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case76() {
    String[] patterns = { "a?????", "a??b??", "??c??b", "zxcvb?" };
    int k = 3;
    assertEquals(676, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case77() {
    String[] patterns = { "a?", "??" };
    int k = 1;
    assertEquals(650, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case78() {
    String[] patterns = { "?", "?" };
    int k = 1;
    assertEquals(0, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case79() {
    String[] patterns = { "???", "a??" };
    int k = 2;
    assertEquals(676, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case80() {
    String[] patterns = {};
    int k = 7;
    assertEquals(0, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case81() {
    String[] patterns = { "??????????????????????????b???????????????", "?????????????????????????a????????????????", "?????????????????????????ab???????????????", "?d????????????????????????????????????????" };
    int k = 2;
    assertEquals(330597, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case82() {
    String[] patterns = { "a??", "?b?", "??c" };
    int k = 2;
    assertEquals(75, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case83() {
    String[] patterns = { "??????????????????????????????????????????????????", "ababa?????????????????????????????????????????????", "abab????a?????????????????????????????????????????" };
    int k = 2;
    assertEquals(477667, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case84() {
    String[] patterns = { "??????????", "??????????", "??????????", "??????????", "??????????", "??????????", "??????????", "??????????" };
    int k = 4;
    assertEquals(0, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case85() {
    String[] patterns = { "a????a", "a?????", "?????a", "abc???", "??????", "??????" };
    int k = 2;
    assertEquals(609145, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case86() {
    String[] patterns = { "?????????????????????????a???", "?????????????????????????a???", "??????c??????????????????a???", "????????d????????????????a???", "?????????????????????????a???", "?????????????????????????a???", "?????????????????????????a???", "?????????????????????????a???", "?????????????????????????a???", "?????????????????????????a???", "???????e?????????????????a???", "?????????q???????????????a???" };
    int k = 5;
    assertEquals(0, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case87() {
    String[] patterns = { "a?c", "a?d", "???", "??c" };
    int k = 2;
    assertEquals(676, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case88() {
    String[] patterns = { "?a???a???????b????????a???a???????b????????????", "a?????????a????a??????a????a???a???????b??????c", "a????a?????????????????????a???a????b??????????", "???????????????????????????????????????????d???" };
    int k = 2;
    assertEquals(448817, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case89() {
    String[] patterns = { "??", "??", "??" };
    int k = 2;
    assertEquals(0, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case90() {
    String[] patterns = { "?????" };
    int k = 1;
    assertEquals(881343, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case91() {
    String[] patterns = {};
    int k = 8;
    assertEquals(0, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case92() {
    String[] patterns = { "???????????????????????????????????a??????????????", "?????????????????a??????????b?????????????????????", "??????????????????????????????????????????????????", "???????????????e??????????????????????????????????", "??????????????????????????????????????????????????", "????????????????????????????bb????????????????????", "????????????????????????????bb????????????????????", "??????????we????????????????bbb???????????????????", "????????????????????????????????????????cd????????", "??????????????????????????????????????????????????", "??????????????????????????????????????????????????", "???????????????????????????????????a??????????????", "????????????????????????????b?????????????????????", "??????????????????????????????????????????????????", "????????????????????????????b??????a??????????????" };
    int k = 11;
    assertEquals(39398, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case93() {
    String[] patterns = { "?????", "??a??", "bb???", "?????", "?????" };
    int k = 2;
    assertEquals(0, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case94() {
    String[] patterns = {};
    int k = 10;
    assertEquals(305987, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case95() {
    String[] patterns = { "???????????????????????????????" };
    int k = 1;
    assertEquals(676280, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case96() {
    String[] patterns = { "a?c", "abc" };
    int k = 1;
    assertEquals(25, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case97() {
    String[] patterns = { "b??", "b?b", "bc?" };
    int k = 2;
    assertEquals(50, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case98() {
    String[] patterns = { "????", "????", "????", "????", "????", "????", "????", "????", "????", "????", "????", "????", "????", "????", "????" };
    int k = 7;
    assertEquals(0, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case99() {
    String[] patterns = { "a?", "a?", "a?", "aa" };
    int k = 1;
    assertEquals(0, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case100() {
    String[] patterns = { "abc?", "a?cd" };
    int k = 1;
    assertEquals(50, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case101() {
    String[] patterns = { "??a??", "?b???", "??c??", "?????", "?????", "???ae" };
    int k = 2;
    assertEquals(529970, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case102() {
    String[] patterns = { "??????????????????????????b???????????????", "?????????????????????????a????????????????", "?????????????????????????ab???????????????", "?d????????????????????????????????????????", "c?????????????????????????????????????????", "cd????????????????????????????????????????" };
    int k = 2;
    assertEquals(20377, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case103() {
    String[] patterns = {};
    int k = 8;
    assertEquals(0, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case104() {
    String[] patterns = { "??????????????????????????????????????????????????" };
    int k = 1;
    assertEquals(305987, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case105() {
    String[] patterns = { "aca???bc????ccd??aaazaaacd?", "ac???cdwaaazaaacd?aazaaacd?", "?c???cdwaaazaaacd?aazaa?cd?", "ac???cd??aazaa?cd?aazaa?cd?", "?????cd??aaeaa?cd?aazaa?cd?", "?c???cd??aazca?cd?aazaa?cd?", "ac???cd??aazaa?cd?aazaa??d?", "?c???cd??aazaa?cd???zaa?cd?", "ab???cd??a?zaa?cd?aazaa?cd?", "bc???cd??aazaa?cd?aazaa?ce?", "gc???cd??aa?aa?cd?aazaa?cd?", "gc???cd??aazaa?cd?aa?aa?cd?" };
    int k = 3;
    assertEquals(951332, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case106() {
    String[] patterns = { "abc", "abc", "???", "???" };
    int k = 2;
    assertEquals(17575, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case107() {
    String[] patterns = { "a???b??ed???eda???b??ed???eda???b??ed???ed", "a?d?b?d?d?b?e?a?d?b?d?d?b?e?a?d?b?d?d?b?e?", "a???b???d?bfe?a?d?b?d?d?b?e?a?d?b???d?b?e?", "a???b???d?bfe?a?d?b?d?d?b?e?a?d?b???d?b?e?", "a???b???d?bfe?a?d?b?d?d?b?e?a?d?b???d?b?e?", "a???b???d?bfe?a?d?b?d?d?b?e?a?d?b???d?b?e?", "a???b???d?bfe?a?d?b?d?d?b?e?a?d?b???d?b?e?", "a???b???d?bfe?a?d?b?d?d?b?e?a?d?b???d?b?e?", "a???b???d?bfe?a?d?b?d?d?b?e?a?d?b???d?b?e?", "a???b???d?bfe?a?d?b?d?d?b?e?a?d?b???d?b?e?", "a???b???d?bfe?a?d?b?d?d?b?e?a?d?b???d?b?e?", "a???b???d?bfe?a?d?b?d?d?b?e?a?d?b???d?b?e?", "a???b???d?bfe?a?d?b?d?d?b?e?a?d?b???d?b?e?", "a???b???d?bfe?a?d?b?d?d?b?e?a?d?b???d?b?e?", "a???b???d?bfe?a?d?b?d?d?b?e?a?d?b???d?b?e?" };
    int k = 2;
    assertEquals(727880, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case108() {
    String[] patterns = { "?ab", "?bb", "?ac", "?bc" };
    int k = 2;
    assertEquals(0, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case109() {
    String[] patterns = { "?ca?", "a?a?", "bbc?" };
    int k = 1;
    assertEquals(1326, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case110() {
    String[] patterns = { "a?b", "ab?", "???" };
    int k = 3;
    assertEquals(1, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case111() {
    String[] patterns = { "z?", "?a", "?b", "y?" };
    int k = 2;
    assertEquals(4, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case112() {
    String[] patterns = { "ab?", "abc" };
    int k = 1;
    assertEquals(25, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case113() {
    String[] patterns = { "??????????????????????????????", "??????????????????????????????", "??????????????????????????????", "??????????????????????????????", "??????????????????????????????", "??????????a????v????a?????????", "??????????a???a???????????????" };
    int k = 4;
    assertEquals(0, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case114() {
    String[] patterns = { "?????????????????????????a???", "?????????????????????????a???", "??????c??????????????????a???", "????????d????????????????a???", "?????????????????????????a???", "?????????????????????????a???", "?????????????????????????a???", "?????????????????????????a???", "?????????????????????????a???", "?????????????????????????a???", "???????e?????????????????a???", "?????????q???????????????a???", "?????????j???????????????a???", "w????a???q???????????????a???", "?????????q?????r?????????a???" };
    int k = 7;
    assertEquals(0, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case115() {
    String[] patterns = { "a??", "??b", "???" };
    int k = 1;
    assertEquals(16250, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case116() {
    String[] patterns = { "??????????????????????????????????????????????????", "??????????????????????????????????????????????????", "??????????????????????????????????????????????????", "??????????????????????????????????????????????????", "??????????????????????????????????????????????????", "??????????????????????????????????????????????????", "???????????????????????d??????????????????????????", "??????????????????????????????????????????????????", "??????????????????????????????????????????????????", "??????????????????????????????????????????????????", "??????????????????????????????????????????????????", "??????????????????????????????????????????????????", "??????????????????????????????????????????????????", "??????????????????????????????????????????????????", "??????????????????????????????????????????????????" };
    int k = 14;
    assertEquals(101910, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case117() {
    String[] patterns = { "a??????????????", "?b?????????????", "??c????????????", "???d???????????", "????e??????????", "?????f?????????", "??????g????????", "???????h???????", "????????i??????", "?????????j?????", "??????????k????", "???????????l???", "????????????m??", "?????????????n?", "??????????????o" };
    int k = 1;
    assertEquals(928332, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case118() {
    String[] patterns = { "a???b??c???d??", "a??b???c??????", "a??????c??????", "a?????????????", "??????????????", "???????????d??" };
    int k = 4;
    assertEquals(905134, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case119() {
    String[] patterns = { "???", "???", "???" };
    int k = 2;
    assertEquals(0, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case120() {
    String[] patterns = { "??????????????????????????????????????????", "??????????????????????????????????????????", "??????????????????????????????????????????", "??????????????????????????????????????????", "??????????????????????????????????????????", "??????????????????????????????????????????", "??????????????????????????????????????????", "??????????????????????????????????????????", "??????????????????????????????????????????", "??????????????????????????????????????????" };
    int k = 10;
    assertEquals(731111, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case121() {
    String[] patterns = { "???", "???", "???", "???" };
    int k = 2;
    assertEquals(0, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case122() {
    String[] patterns = { "hk?????ed????x?wb???????osq?rjqdj??skrei??ra??j?x?", "mh??o??g?vn?kc???????arap???qk??cu??iu??ovrykzqrlf", "k?k?xtljrqa????m?ejijyt?t?tox?ctaer?u?f?a?xhe???y?", "?ez?????qu?h?y?ngnt?b?g?p?l?lpx?d?gd????kxhz?vpqo?", "???????xhs?fnlhbfhwwdotvwalvoa??e?l?klqv?z?o?sfbb?", "fwcvlqorqf??ulcs?e?gdhib?ab?rd?qv??smqkv?ak?b?q?cu", "hxhyxr??swrwof???gsx?fe?w????n?sl?esfk???pnog???jf", "?d?cv?w?liu?ub???et??cde?da?es?m???dl?c?qe?b?wjyna", "julhhyzxdldwvk?rq?zpler????zphuporho?dj?semb???jz?", "?y???tiwmzapg??u?clefpmnkr??aau?c?ezh?n??v?vqjumda", "?ir??azg??jag?t?tqvvyhzvyvncpb???n?wvg?v??jfxs?eqx", "?zmmc?mlqubsvvr?qoftow??ua?fwo?xf?lkpefjo?w?bllb?l", "hznel??b?vfc???uei?rurkb???ujm?hz?z?kjsbnqwjot?ft?", "t??ixg??ywpp??jdlbjn????aq??do?ehcd?d?vys??hnu?psl", "ps?ofh??yaofmyvdnyd?oo???ml?u?yg?z?nqha?wi?qqaximj" };
    int k = 8;
    assertEquals(0, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case123() {
    String[] patterns = { "a?b", "a?b", "aab" };
    int k = 2;
    assertEquals(25, setofpatterns.howMany(patterns, k));
  }

  @Test
  public void case124() {
    String[] patterns = { "aaaaa", "?????" };
    int k = 1;
    assertEquals(881342, setofpatterns.howMany(patterns, k));
  }

}
