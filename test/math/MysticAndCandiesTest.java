package topc.test.math;

import junit.framework.*;
import org.junit.Test;
import static org.junit.Assert.*;
import topc.math.*;

public class MysticAndCandiesTest {
    MysticAndCandies mysticandcandies = new MysticAndCandies();

    @Test
    public void case1() {
        int C = 15;
        int X = 12;
        int[] low = { 1, 2, 3, 4, 5 };
        int[] high = { 1, 2, 3, 4, 5 };
        assertEquals(3, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case2() {
        int C = 60;
        int X = 8;
        int[] low = { 5, 2, 3 };
        int[] high = { 49, 48, 47 };
        assertEquals(2, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case3() {
        int C = 58;
        int X = 30;
        int[] low = { 3, 9, 12, 6, 15 };
        int[] high = { 8, 12, 20, 8, 15 };
        assertEquals(2, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case4() {
        int C = 15332074;
        int X = 11335384;
        int[] low = { 663309, 1576013, 1362582, 1301332, 1179780, 1505690, 2559372, 2546878 };
        int[] high = { 2024137, 2210961, 2444442, 2934786, 3470826, 2038099, 2595278, 3454584 };
        assertEquals(7, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case5() {
        int C = 61417010;
        int X = 11111585;
        int[] low = { 1555959, 1395093, 460858, 297481, 942197, 1139062, 397459, 172960, 1828543, 588657, 1743011, 331370, 859276, 177404, 498886, 287026, 830838, 151876, 539393, 181170, 748592, 1239008, 2061806, 970607, 1503050, 886266, 281903, 327908, 1002223, 466731, 410800, 1297600, 1498774, 596691, 250986, 552188, 2356868, 520075, 1526253, 671257, 1188185, 1029074, 1871859, 1764730, 951012, 1030391, 1216433, 2551940, 1215789, 827680 };
        int[] high = { 2022927, 2224211, 1397776, 400859, 966034, 1365729, 1636894, 2464090, 2418389, 1077051, 2540093, 548474, 962704, 1114948, 963904, 364091, 1859203, 2602565, 2116599, 1704501, 2513185, 2289410, 2278827, 1181048, 2403737, 1297251, 2143945, 1387390, 1599054, 472031, 1787984, 2550663, 1514676, 806425, 590507, 1922573, 2380000, 2137909, 2388202, 1027133, 2302353, 2524664, 1897474, 2108876, 1101160, 2324498, 1217524, 2563846, 1738784, 2118559 };
        assertEquals(6, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case6() {
        int C = 132669178;
        int X = 118082764;
        int[] low = { 3548822, 3503135, 2846824, 2509935, 2282842, 3813679, 2055799, 2069209, 2199786, 2382416, 2722144, 3043562, 2437709, 2173151, 2892934, 2445876, 2070813, 2222021, 3016440, 2793514, 3600295, 2133324, 2057326, 2821975, 3077204, 2673587, 3237340, 2100303, 2326096, 2639962, 3076176, 2763470, 2473857, 2296628, 2733925, 2340481, 2628063, 2214745, 2129096, 2247380, 2790771, 2084892, 3556857, 3123213, 2936150, 2355996, 2181221, 2265597, 2445715, 2198796 };
        int[] high = { 3776720, 3631913, 2932225, 3575671, 3766528, 3847122, 3661272, 2411096, 2744921, 2410362, 3208884, 3593985, 3237422, 3248493, 3132802, 3143993, 3757220, 2953792, 3123609, 3099703, 3687099, 2874050, 2815459, 3571182, 3590503, 2835838, 3653786, 2696950, 3458882, 3161713, 3383333, 3627852, 3655666, 3710652, 3176395, 3085664, 3548243, 3052651, 2892290, 2551058, 3357161, 3724175, 3752699, 3158778, 2937895, 3601051, 2934863, 3071812, 3564785, 3466998 };
        assertEquals(44, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case7() {
        int C = 204627826;
        int X = 108858104;
        int[] low = { 3891618, 3993234, 4211536, 4086953, 4098356, 3960523, 4152392, 4214157, 3953620, 3984778, 4153708, 4110000, 4042548, 3952095, 4044269, 3971450, 4074033, 3964597, 3964272, 4077550, 3975859, 3973949, 3943904, 4048113, 4117474, 4168155, 4026860, 4103736, 3912647, 3989524, 4279017, 4223922, 4207372, 4110810, 4160843, 4025490, 3995263, 4151268, 4144032, 3900877, 3922019, 4131240, 4310396, 3996290, 3978789, 4259192, 4083102, 4263144, 3924949, 3896029 };
        int[] high = { 4012849, 4167814, 4365941, 4320760, 4294728, 4060411, 4259591, 4343900, 4018719, 4171422, 4176406, 4282498, 4069477, 4250428, 4266589, 4364125, 4133622, 4044579, 4068722, 4304061, 4294661, 4292675, 3960252, 4219004, 4168333, 4232938, 4283890, 4305110, 3962824, 4080593, 4381656, 4270468, 4312775, 4178623, 4351755, 4096684, 4241712, 4176079, 4294007, 4104187, 4092582, 4313105, 4374843, 4044927, 4080869, 4332848, 4354020, 4275718, 4133438, 3897161 };
        assertEquals(27, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case8() {
        int C = 12709967;
        int X = 12628670;
        int[] low = { 6812036, 5720267 };
        int[] high = { 7060872, 6299029 };
        assertEquals(2, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case9() {
        int C = 136473987;
        int X = 19854296;
        int[] low = { 2459302, 4017384, 3758086, 3316522, 5610879, 2616133, 2443874, 6835492, 4812141, 8046179, 4548271, 8575177, 3927214, 3712544, 2773849, 6318425, 2415831, 3433391, 2574163, 5592606, 4106817 };
        int[] high = { 5063518, 4047318, 8717930, 8710769, 7579759, 4061149, 6947892, 7306257, 7437767, 8269015, 6226041, 8647069, 7847015, 8761632, 7072505, 6585309, 8487098, 4795641, 4327960, 6301634, 6784961 };
        assertEquals(3, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case10() {
        int C = 29444760;
        int X = 15883289;
        int[] low = { 4066155, 3932603, 4144277, 4056819, 4128320, 4068649, 3926679 };
        int[] high = { 4372764, 4217355, 4154354, 4093507, 4368639, 4099861, 4181363 };
        assertEquals(4, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case11() {
        int C = 240002391;
        int X = 192860623;
        int[] low = { 5458189, 4926495, 5110289, 5143499, 5540939, 5293341, 5534771, 5005193, 5374435, 4962317, 4907863, 5207400, 5500803, 5872843, 5178421, 4881135, 5286894, 5441214, 5784097, 5383578, 5556226, 5486323, 5127191, 5803678, 5908303, 5405974, 5003805, 5261084, 5180234, 5361378, 6031536, 6030187, 6002766, 5159618, 5093043, 5111035, 6074187, 5034656, 5160489, 5397803, 4876547, 5468168 };
        int[] high = { 5749387, 5465283, 5741402, 5402253, 5907660, 6109172, 5792356, 6061131, 5878779, 5069446, 5364788, 5409741, 6332811, 5978153, 5946108, 6307966, 6402636, 6224219, 6142226, 5895782, 5591172, 5933412, 6380066, 6115083, 6330923, 5952702, 5597606, 6245822, 5625104, 5422906, 6282926, 6131794, 6316458, 5833670, 5676747, 5868641, 6092480, 5604824, 5726863, 5598703, 6196038, 5617324 };
        assertEquals(34, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case12() {
        int C = 299222869;
        int X = 189215971;
        int[] low = { 4482204, 6164570, 3358242, 5096258, 6095914, 4113386, 7280155, 7172038, 3997506, 5259763, 3400621, 3515463, 3384414, 4395568, 4934092, 4606634, 6388699, 5154553, 5392870, 4998470, 3618283, 3800031, 6640813, 5181138, 5450833, 3666810, 7565864, 5457085, 4822052, 4177326, 5764832, 3968880, 3664552, 5441527, 5684994, 5662479, 4645505, 3577976, 3376584, 4427052, 3721599, 5981866, 5156011, 6703803, 6131600, 5741525, 6944386, 5567145, 5533592, 5207660 };
        int[] high = { 6557210, 6781683, 5317983, 7822494, 7076318, 7387241, 7428020, 7887490, 7321334, 5734539, 4407433, 7841525, 7816399, 5753144, 6572337, 6788171, 7428459, 6929192, 6300082, 6847340, 5800085, 6334866, 7396168, 8188768, 6552758, 6631996, 7884996, 6016316, 7107359, 8087719, 6361925, 5989696, 6122690, 8042213, 5854131, 8039081, 7090742, 5276088, 6774034, 6489262, 6886273, 7511815, 5343446, 7968248, 7603815, 6871153, 7365963, 7418721, 6234620, 7303918 };
        assertEquals(32, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case13() {
        int C = 134894797;
        int X = 116329386;
        int[] low = { 4296587, 5634688, 3894574, 1888776, 2790794, 2327649, 3299548, 2636032, 2895150, 3365826, 2954225, 2115854, 2611286, 2399981, 2332521, 5714270, 2450203, 4640328, 2989038, 3750743, 4425707, 4418475, 2675819, 5197108, 1994699, 2238750, 2730482, 2261102, 3307038, 2139063, 2976073, 3510138, 3229660 };
        int[] high = { 6016553, 5847283, 3987981, 5673750, 4349039, 4994222, 5205618, 4804580, 4742444, 4760815, 6058358, 4094944, 3537984, 2572353, 5000639, 6012457, 5577152, 4680617, 3559247, 5609885, 5841361, 4479480, 5718267, 5743833, 3667116, 4945895, 4199172, 5674753, 4690049, 4822569, 5039915, 5675293, 3836611 };
        assertEquals(28, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case14() {
        int C = 103770719;
        int X = 3728319;
        int[] low = { 334349, 261815, 3124849, 2631142, 3413889, 2509046, 1583023, 1722968, 3270759, 914944, 935180, 3045990, 3217407, 5172416, 1125719, 1757418, 1194928, 2203464, 853232, 555778, 754192, 2945410, 5194468, 2206914, 4172520, 2589266, 2130748, 2054202, 744543, 2138081, 3245222, 3414225, 1662355, 3531059, 2868303, 268777, 1854180, 2080713, 1384738, 4490902, 2275009, 3958750, 2742520, 494002, 690829, 1062292, 1265870 };
        int[] high = { 1355797, 2004254, 3807835, 5487452, 5470436, 3350911, 4475710, 4973643, 3791465, 4442474, 1609037, 5338793, 4032756, 5369583, 3124095, 3965906, 3711320, 2301303, 4872692, 5638701, 3535642, 4542173, 5322877, 2856935, 4278873, 3182724, 4829389, 2553057, 4814635, 4916570, 3650150, 4942610, 4133943, 5300037, 3022249, 1830769, 4184281, 5305705, 2280122, 5942951, 5937642, 5600803, 4932348, 1085136, 1819597, 4654404, 4326813 };
        assertEquals(1, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case15() {
        int C = 132016270;
        int X = 97068508;
        int[] low = { 5934648, 6855653, 5312746, 6978599, 5773580, 5633976, 5006806, 5010173, 6725992, 6422568, 5627180, 7123203, 4280537, 6607876, 4263082, 5157865, 6391761, 6076331, 6084728, 4677316, 4277515, 4877877 };
        int[] high = { 7019216, 6989882, 5367573, 7261191, 7206017, 6172578, 5162674, 5586727, 6945517, 6967657, 6118784, 7264088, 4328435, 7216789, 4687588, 6767208, 7088915, 7292483, 7434635, 6146106, 6349456, 7233801 };
        assertEquals(16, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case16() {
        int C = 311465637;
        int X = 149628589;
        int[] low = { 5771599, 5984851, 6154912, 5965919, 5961491, 6117696, 5822231, 6245921, 6024898, 6380960, 6197290, 5923699, 5782307, 6205435, 6064542, 5889927, 6010514, 6154766, 5860848, 5926502, 6003793, 6327004, 5856255, 5906926, 5929650, 5902898, 5868095, 6136525, 6172400, 5753824, 6180947, 5882512, 5855905, 5961099, 5827389, 6000550, 5848471, 6331290, 6025188, 6047761, 6087583, 6452283, 5738684, 6168789, 6072719, 6010898, 5900360, 5827149, 5851208, 6092143 };
        int[] high = { 5841249, 6062340, 6202640, 6234087, 6264711, 6452677, 6423482, 6401653, 6428359, 6393718, 6314366, 6367551, 5972435, 6246328, 6239596, 5897847, 6458417, 6244001, 5878786, 6071749, 6258185, 6332554, 6222695, 6180567, 6282997, 6314919, 6439146, 6166050, 6371647, 6471881, 6381791, 6202225, 6210722, 6194169, 6275333, 6094035, 6451579, 6440561, 6072209, 6089415, 6177663, 6477575, 6395231, 6357708, 6313676, 6453716, 6054343, 6063837, 5861243, 6480447 };
        assertEquals(24, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case17() {
        int C = 473435142;
        int X = 19996099;
        int[] low = { 9429874, 9464949, 9449653, 9441140, 9431049, 9464577, 9465714, 9439070, 9464620, 9450298, 9483447, 9438501, 9500803, 9510722, 9433764, 9447435, 9440282, 9498696, 9446977, 9465877, 9429353, 9486381, 9450211, 9443168, 9442012, 9457222, 9451128, 9447213, 9451228, 9478570, 9477573, 9433858, 9454312, 9473125, 9432331, 9435974, 9430866, 9447061, 9446838, 9487755, 9451608, 9478304, 9460252, 9435024, 9438242, 9473178, 9460012, 9433605, 9436978, 9440039 };
        int[] high = { 9440247, 9484085, 9491431, 9441728, 9444379, 9495641, 9472825, 9510656, 9486537, 9497090, 9506500, 9487136, 9503869, 9510824, 9472749, 9486572, 9478910, 9506617, 9451549, 9505554, 9497069, 9509550, 9485649, 9510769, 9458977, 9469525, 9498426, 9490286, 9454879, 9503076, 9483132, 9505531, 9493985, 9511728, 9437708, 9440098, 9489124, 9447518, 9449962, 9488609, 9453200, 9482602, 9465012, 9448990, 9469646, 9510682, 9478950, 9475267, 9506414, 9478764 };
        assertEquals(3, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case18() {
        int C = 183453901;
        int X = 79130918;
        int[] low = { 6668814, 6188302, 6784805, 6940615, 7346054, 6058780, 6822269, 6123635, 6204091, 6310445, 6070679, 7101039, 6162686, 7122179, 6210311, 7167385, 7170031, 6247437, 6466000, 6376339, 6185904, 6051223, 6350288, 6917871, 6660369, 7106148, 6099331 };
        int[] high = { 7017056, 6229515, 7008420, 6986895, 7418769, 7514774, 7386504, 7292905, 7471102, 6658148, 6300937, 7102879, 6381000, 7161379, 6232957, 7376987, 7595577, 6321685, 6967919, 7070949, 7176564, 6645353, 7139601, 7243578, 6939927, 7441434, 6755257 };
        assertEquals(12, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case19() {
        int C = 228904196;
        int X = 123855385;
        int[] low = { 7202224, 5291513, 5242438, 6153910, 5277075, 5668753, 6427453, 5726781, 6382910, 6469357, 5272221, 5263976, 5098282, 6266734, 5648575, 5072576, 5680721, 7061412, 6202848, 5714982, 5860201, 6736141, 5172168, 5664242, 5141324, 5117996, 5122613, 5275084, 6121649, 6179455, 6060239, 5844093, 5399854, 5597072, 6760822, 5135852 };
        int[] high = { 7303381, 6794150, 7083128, 7122769, 6984284, 7439341, 7284913, 6936627, 7171542, 6838547, 6327915, 6279676, 5247770, 7137703, 7244209, 6064312, 7248699, 7410310, 6258348, 6679109, 5915315, 7170243, 5642954, 6233947, 6936215, 7378285, 7011221, 7245466, 6857373, 6203239, 7391487, 7074391, 6093905, 6695158, 6949305, 5965231 };
        assertEquals(20, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case20() {
        int C = 58049119;
        int X = 14028445;
        int[] low = { 6054392, 6616522, 6150443, 6293209, 6643069, 6393834, 6560730, 6191396, 6200010 };
        int[] high = { 6359723, 6801339, 6182962, 6324084, 6903738, 6528408, 6854977, 6327623, 6869399 };
        assertEquals(3, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case21() {
        int C = 210090574;
        int X = 192105977;
        int[] low = { 5833193, 5814115, 5858223, 5818930, 5848443, 5813778, 5849165, 5812909, 5866983, 5818330, 5826016, 5822482, 5818175, 5854670, 5818786, 5815100, 5810489, 5817114, 5822216, 5814745, 5848453, 5846689, 5817589, 5829080, 5834000, 5839520, 5825375, 5817295, 5812254, 5818639, 5822983, 5823692, 5847536, 5823934, 5822645, 5817809 };
        int[] high = { 5841905, 5869152, 5869937, 5823024, 5850400, 5839312, 5869895, 5833886, 5870255, 5869032, 5864618, 5857875, 5869421, 5858420, 5842717, 5868328, 5850460, 5858729, 5827378, 5840292, 5861944, 5857044, 5840468, 5868570, 5869400, 5839542, 5864571, 5867328, 5817738, 5864876, 5857673, 5840305, 5865775, 5846728, 5853449, 5858117 };
        assertEquals(33, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case22() {
        int C = 308875273;
        int X = 131631425;
        int[] low = { 6669301, 6123758, 6661202, 5751264, 6351055, 5901474, 6758947, 5360613, 6863803, 6073918, 5789721, 6739938, 6858720, 6388572, 7548716, 6172430, 5309164, 5175754, 5649462, 5388431, 5459674, 5688216, 5859644, 6263063, 5776233, 5444654, 7016216, 6158837, 5502741, 5314534, 5150207, 5841906, 5341862, 5390606, 6061669, 5787840, 5559733, 6296821, 6416873, 5360190, 6577619, 5469192, 5823349, 5585595, 5997733, 5562910, 5295077, 5622628, 5773520, 6041537 };
        int[] high = { 7521645, 7199678, 7235292, 6290710, 6998447, 6482515, 7632306, 5988922, 7439269, 7134725, 6375313, 6789879, 7350774, 7769256, 7712350, 7748954, 7019049, 5696780, 6331071, 6091350, 6507528, 6782388, 7386131, 7663110, 6796223, 5972421, 7022186, 7449301, 6971294, 6232426, 5484388, 7046429, 7503818, 6385879, 7704432, 6231809, 5912365, 6667139, 7666610, 6704404, 7644791, 7721826, 6520197, 6065203, 6139701, 6436554, 6618542, 6131824, 6510050, 7259477 };
        assertEquals(21, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case23() {
        int C = 456575259;
        int X = 54737481;
        int[] low = { 8951239, 9091977, 9036666, 9126491, 8716319, 9140103, 9124996, 9371266, 9231496, 9205235, 8679833, 8927297, 9184651, 8928376, 8633266, 8655444, 8961630, 8908320, 8845026, 9316342, 8944308, 8723178, 9217492, 9219679, 8706962, 9319932, 8922616, 8773212, 8839927, 9118032, 9109836, 9073815, 8764069, 8862023, 9230483, 8792680, 9105653, 8853353, 9169186, 9237071, 8688889, 8704445, 9008917, 9282592, 8679341, 9359667, 8844627, 9200081, 8630915, 8922550 };
        int[] high = { 9249599, 9303467, 9092175, 9200980, 8942064, 9160044, 9281957, 9377702, 9272489, 9226839, 9308094, 9093614, 9332849, 9318844, 9003955, 9132611, 9380253, 9167195, 8988083, 9376627, 9093959, 8783709, 9359281, 9351919, 9183449, 9346494, 9033584, 8778477, 8993352, 9184441, 9299497, 9356125, 8978171, 8999605, 9350421, 8932448, 9180307, 9128149, 9224930, 9340647, 8951324, 9233720, 9145547, 9355383, 8707467, 9377600, 8890897, 9276783, 8768758, 9366305 };
        assertEquals(6, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case24() {
        int C = 207581165;
        int X = 172146543;
        int[] low = { 4725448, 2753824, 6019698, 4199708, 4070001, 3589497, 5358499, 3637585, 5393667, 2837466, 2747807, 2918199, 3638042, 5199002, 3072044, 3858909, 3762101, 3657754, 3218704, 3888861, 3195689, 4768935, 3137633, 4124272, 4125056, 6087486, 3632970, 3620489, 2748765, 5917493, 3958996, 3335021, 3517186, 5543440, 2951006, 3403270, 3299481, 3093204, 4092331 };
        int[] high = { 5702812, 6805664, 6823687, 5337687, 4286533, 4999849, 6567411, 4563235, 6618139, 6260135, 6249469, 3821449, 5963157, 6385012, 4255959, 5786920, 6112817, 4103918, 6371537, 4231698, 3409172, 6806782, 5623563, 4511221, 6407338, 6491490, 5209517, 6076093, 6530132, 6111464, 5833839, 6253088, 5595160, 6236805, 5772388, 5285713, 5617002, 4650978, 5234740 };
        assertEquals(31, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case25() {
        int C = 211502825;
        int X = 14831041;
        int[] low = { 3867347, 4031824, 4299438, 3806058, 4357097, 4261106, 3903947, 4308695, 4262982, 3869011, 4652836, 4242914, 3757296, 4046074, 4419560, 4114180, 4287385, 4229721, 4139583, 4037804, 3970677, 3811392, 4518552, 4696352, 3886722, 3930332, 4340248, 3861834, 3937506, 4287289, 4670462, 4041619, 4635142, 4090235, 3890925, 4310778, 3840259, 4076359, 4386201, 4326247, 4121865, 4684503, 4607119, 4133957, 4138400, 4639848, 4331161, 4519517, 4239143, 4576180 };
        int[] high = { 4123867, 4445169, 4412290, 4724715, 4370621, 4664613, 4226752, 4636784, 4409609, 4437107, 4771074, 4436683, 4738045, 4296674, 4692172, 4302340, 4701487, 4794384, 4304997, 4649232, 4576722, 4446441, 4699474, 4700048, 4029989, 4767592, 4787914, 4329797, 4117698, 4678445, 4681592, 4601296, 4813169, 4140342, 4312274, 4458351, 4025658, 4591729, 4626635, 4605301, 4177600, 4767247, 4787374, 4368896, 4141815, 4813625, 4509087, 4752190, 4693036, 4656729 };
        assertEquals(4, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case26() {
        int C = 288817181;
        int X = 214628498;
        int[] low = { 3290425, 5183596, 4785153, 2732594, 5443350, 3760355, 3448571, 4213042, 5466973, 4888196, 5054315, 2814479, 4567962, 4133983, 4511843, 2430459, 2990204, 2734646, 4952886, 3652780, 3291646, 4146046, 3894974, 4281612, 2826716, 5136626, 3788541, 3106898, 3159862, 4556381, 3358444, 2395081, 3550875, 3088732, 5812765, 3723823, 6034463, 3204011, 4873133, 3765156, 4546974, 2390381, 5503583, 2846699, 3013636, 3956932, 2914642, 5569809, 3302586, 3236074 };
        int[] high = { 5374982, 6264528, 5565963, 5697223, 6776472, 4874128, 5337513, 4597020, 5570534, 6994234, 5561749, 3794075, 6678241, 5588747, 6395509, 5202028, 6519270, 4454508, 6843255, 4367499, 3941856, 5619146, 6415504, 4738246, 6938994, 6159020, 6509157, 6900766, 6514706, 6815099, 4470345, 6827797, 5735124, 3837035, 6205700, 4810671, 6435669, 6094175, 6913744, 5556209, 5905142, 5892417, 6522366, 5617657, 5639736, 6790079, 6654133, 6343754, 5410183, 6899016 };
        assertEquals(35, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case27() {
        int C = 36594681;
        int X = 32861676;
        int[] low = { 6672004, 5214677, 7380908, 9192890, 5213341 };
        int[] high = { 7979335, 9643068, 8164098, 9634340, 7064978 };
        assertEquals(5, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case28() {
        int C = 85894413;
        int X = 354126;
        int[] low = { 3574352, 2377374, 5002557, 8131909, 7798114, 2013564, 5599736, 6023152, 6104201, 6140760, 5355491, 6225450 };
        int[] high = { 4408800, 8089533, 9356352, 9836645, 7834628, 4502857, 5733268, 7389081, 7654784, 9061267, 7952453, 9494082 };
        assertEquals(1, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case29() {
        int C = 267710893;
        int X = 68961666;
        int[] low = { 5875070, 6203682, 4990230, 5290729, 5994624, 5113538, 5356059, 6574324, 5160062, 4873657, 6182403, 5396787, 6654645, 5483180, 6851312, 5870374, 5155491, 5895620, 6087314, 4814921, 5466186, 5346231, 5578429, 5313800, 5351330, 6544518, 5527371, 6419779, 5302741, 6970294, 5766988, 5090678, 5278646, 6107627, 5379456, 6035309, 6746470, 5104009, 4941606, 5105492, 4617802, 5104560, 6642536, 6217920, 5561171, 6847060 };
        int[] high = { 6471971, 6402904, 6386322, 5832704, 6489637, 5966169, 6264314, 6681456, 5299794, 5596559, 6450300, 6531614, 6824834, 6178733, 6968650, 6796950, 6299188, 6393843, 6778260, 6858564, 6269341, 6080834, 6977971, 5989069, 6286824, 6756190, 6128302, 6469787, 6325954, 6999819, 6308992, 6022487, 6694451, 6190575, 6523547, 6859924, 7046199, 5945917, 6542140, 5225549, 5610582, 6204135, 7005398, 6869854, 5672049, 6895835 };
        assertEquals(11, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case30() {
        int C = 489281440;
        int X = 330767976;
        int[] low = { 9745608, 9842369, 9827268, 9706041, 9748023, 9874141, 9731759, 9865413, 9741153, 9888721, 9600429, 9774127, 9713584, 9922067, 9604719, 9781760, 9591358, 9703783, 9766920, 9597139, 9895305, 9592178, 9878997, 9839441, 9634243, 9601918, 9772353, 9635198, 9617113, 9852506, 9885348, 9765738, 9602429, 9872347, 9614939, 9710508, 9720764, 9727765, 9687562, 9713823, 9674530, 9816257, 9963018, 9674466, 9729780, 9947551, 9612526, 9904008, 9645814, 9804968 };
        int[] high = { 9758474, 9894704, 9861180, 9759062, 9804424, 9929514, 9962716, 9942013, 9867750, 9901974, 9619477, 9880072, 9856309, 9984444, 9699065, 9921113, 9954909, 9821040, 9807261, 9756692, 9942308, 9745196, 9986989, 9909709, 9766025, 9629857, 9791232, 9840991, 9780668, 9927171, 9891497, 9788729, 9990220, 9976752, 9803114, 9927950, 9757013, 9774843, 9817297, 9884977, 9913776, 9979005, 9993618, 9730307, 9856481, 9984341, 9697810, 9944834, 9734721, 9965607 };
        assertEquals(34, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case31() {
        int C = 284685207;
        int X = 267804786;
        int[] low = { 4699429, 4327776, 4651613, 4954380, 5102868, 5624594, 5311294, 5267038, 4837862, 5173097, 4916531, 5245290, 4862455, 4713782, 4888252, 6663530, 5205092, 4547390, 5886588, 4936357, 4321326, 4729916, 4642513, 4799459, 5367757, 5097193, 4951204, 4184968, 4898008, 4793709, 4924106, 4446349, 4772978, 4524019, 5199765, 4450300, 5719817, 5443580, 4629693, 4219605, 4586027, 4797076, 4682736, 4573500, 5382859, 4699239, 4686940, 5890309, 4875011, 5182048 };
        int[] high = { 5212126, 4794130, 6557706, 5107608, 5762062, 6571127, 6002013, 6572128, 5671014, 6131562, 6254479, 6596469, 5855788, 5317242, 5738061, 6668855, 5347444, 5312047, 6480113, 4971304, 4372070, 6234115, 5845117, 5264586, 6566359, 5230140, 5478923, 4361587, 5940863, 5979906, 5979608, 6598498, 5551320, 5404779, 6413918, 5713174, 5989690, 5508840, 5049089, 4784701, 6278780, 4878409, 4920432, 4831286, 5697666, 6720627, 4876258, 6391595, 6025379, 5502391 };
        assertEquals(47, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case32() {
        int C = 331531212;
        int X = 243258669;
        int[] low = { 7844966, 5507181, 6262507, 5590062, 6756249, 7305283, 7079246, 6139998, 6771626, 6049514, 5743273, 6681236, 5158001, 5563104, 5632395, 5140306, 5363563, 6787546, 5523542, 5709531, 5156355, 5650580, 6353869, 5047964, 5097698, 7963023, 6630180, 6260379, 5386789, 5906552, 5223051, 7262782, 5367179, 7467881, 5157251, 6522042, 5061339, 5288577, 6340227, 5511941, 5190851, 5612432, 6284878, 6511000, 6027004, 5358816, 5705046, 5166970, 5082080, 5838249 };
        int[] high = { 7864254, 6232540, 7758498, 5926781, 7808719, 7596856, 7880233, 6824364, 8018638, 6829749, 7952360, 8041242, 5762881, 7104338, 7843473, 5251136, 8290697, 7144572, 5856199, 8242754, 5517973, 5725396, 7534538, 6969363, 7962447, 8296702, 7187530, 6597069, 5629027, 6361038, 7159992, 7551311, 6231462, 7669415, 7246980, 8013993, 7356938, 7400706, 8186885, 8060135, 5855386, 6091050, 6938199, 6811486, 7875524, 8255403, 6837494, 5255417, 6122762, 6650083 };
        assertEquals(36, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case33() {
        int C = 87315845;
        int X = 73755002;
        int[] low = { 4822261, 5884481, 4951192, 6298310, 5889392, 5164275, 6223031, 4832044, 4480085, 5550447, 7524660, 6334288, 4729398, 6684274 };
        int[] high = { 5166761, 7507393, 7491408, 6558741, 5965780, 7865519, 6728408, 6841932, 6595422, 7538543, 7803804, 6363097, 5275866, 7784582 };
        assertEquals(12, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case34() {
        int C = 43873566;
        int X = 32789748;
        int[] low = { 2053198, 2175819, 4260803, 1542497, 1418952, 5000015, 1381849, 2462882, 6466891, 1827580, 6943641, 5775477 };
        int[] high = { 2827461, 3726335, 5410505, 4781355, 4925909, 5621160, 7325774, 5025476, 7876037, 8072075, 6979462, 6647628 };
        assertEquals(7, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case35() {
        int C = 141653299;
        int X = 117253275;
        int[] low = { 2935178, 3763969, 3820622, 3168904, 6407824, 6778789, 6057763, 4834978, 5235764, 3037253, 3790586, 6571576, 6035645, 2923012, 4884871, 6266100, 6218257, 3998750, 4704525, 6625025, 3323620, 2997732, 3753938, 6134617, 3724331, 5035922, 3701738 };
        int[] high = { 8060477, 3777652, 6893719, 5975413, 7225444, 7109862, 7695036, 8327729, 6102514, 3839344, 5771012, 6915639, 7181638, 5074287, 7139320, 8336090, 7823806, 5242145, 6618970, 7085979, 4171564, 6062518, 5609953, 8331095, 5635022, 5185859, 8170603 };
        assertEquals(22, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case36() {
        int C = 397228382;
        int X = 26351743;
        int[] low = { 6869562, 8294421, 6750241, 7999761, 7205454, 7491667, 8056795, 8094506, 8261065, 6676520, 6934650, 7872419, 7335289, 6693283, 6771176, 7324261, 7767869, 6795617, 7429942, 7692707, 7469101, 7549866, 6643341, 8210791, 8025944, 7150702, 6695546, 7412523, 7304737, 7763237, 7144830, 8294383, 7330811, 7871591, 7256137, 6767185, 7032397, 6889252, 6816560, 8342874, 7393115, 7652093, 6924589, 7452363, 7109131, 7572312, 7052603, 6725571, 7159772, 7999374 };
        int[] high = { 8576562, 8309644, 7277959, 8545429, 7757083, 8595444, 8601675, 8256973, 8539355, 7701123, 8269424, 8575946, 7561062, 8060864, 7914882, 7520630, 7951153, 7155109, 8477043, 8162522, 7878892, 8226256, 8009797, 8456915, 8363360, 8471657, 8045712, 8470804, 8603831, 8425765, 8423702, 8344264, 8233292, 8610839, 7419068, 8276847, 8555837, 8347253, 8363225, 8563343, 7824395, 8029177, 8452495, 8142211, 8179800, 7988424, 7504839, 8334361, 8049362, 8456217 };
        assertEquals(4, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case37() {
        int C = 266796577;
        int X = 101052808;
        int[] low = { 5311762, 5869397, 5165832, 5300937, 5449105, 5652385, 4946785, 5387642, 5361740, 5028206, 5415108, 5181619, 5453883, 5020055, 4860976, 5370653, 5013472, 5396927, 4713575, 4742232, 5130912, 4722142, 4720762, 4799787, 5353852, 5702232, 4920174, 5139940, 5210006, 5553577, 5537087, 5289021, 5183486, 5020455, 5286973, 5184051, 5284775, 4765657, 4915845, 5035718, 5114082, 5510028, 4883155, 4786493, 5259872, 4781760, 5239996, 4826954, 4793325, 5201994 };
        int[] high = { 5523851, 5909598, 5887566, 5713285, 5677890, 5676244, 5813187, 5712106, 5843859, 5033080, 5713482, 5385098, 5809761, 5414014, 5412745, 5536823, 5318027, 5734883, 4865104, 5604068, 5679965, 5192153, 5419423, 4852925, 5471617, 5885715, 5579422, 5796251, 5452492, 5606232, 5846063, 5407804, 5612080, 5330690, 5347882, 5629076, 5793607, 4836409, 5579792, 5281545, 5521987, 5858711, 5384432, 5100042, 5858580, 4993170, 5677681, 5016062, 5161008, 5535934 };
        assertEquals(19, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case38() {
        int C = 10327819;
        int X = 8577705;
        int[] low = { 1147074, 695573, 755193, 639781, 747177, 878108, 798650, 787104, 1045267, 729596, 693662, 1157757 };
        int[] high = { 1236553, 956920, 778020, 782414, 934201, 1109847, 1033910, 1196931, 1052210, 740297, 1126944, 1198165 };
        assertEquals(10, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case39() {
        int C = 6867323;
        int X = 2962057;
        int[] low = { 3148546, 3548695 };
        int[] high = { 3769825, 3863789 };
        assertEquals(1, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case40() {
        int C = 148031450;
        int X = 5357574;
        int[] low = { 4582450, 6503017, 3807252, 3313878, 2496222, 3226748, 2533368, 4830310, 6828339, 3909275, 2909544, 4964709, 2730851, 4277490, 5686759, 4224667, 2951004, 6460940, 6126079, 3532868, 4794731, 3935164, 2959492, 6179658, 3069960, 2658423, 3039036, 2491048, 4437585, 3890233, 4971245, 3803253, 2887993, 4740727, 4128386 };
        int[] high = { 6103596, 6603495, 5420273, 4750747, 5180789, 6975821, 5930459, 5817504, 7131750, 4530447, 6330458, 5317082, 4905276, 7106191, 6231359, 5387762, 7001208, 6907316, 7118451, 3599007, 6072624, 6993666, 3197198, 6944622, 6238149, 4951070, 6590952, 3599191, 6646826, 5856595, 6516045, 6876509, 6413554, 6931609, 4655850 };
        assertEquals(1, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case41() {
        int C = 190237880;
        int X = 48501511;
        int[] low = { 3373050, 4331851, 5148394, 5503770, 5083554, 4197790, 5539055, 4245941, 3250166, 3908060, 6136420, 6766829, 5405685, 4698008, 3529623, 3577737, 3430703, 4080948, 3126936, 4104470, 4672398, 4661282, 4937677, 3796080, 4043742, 4982080, 4473266, 3561648, 6384632, 3637556, 3807623, 3062707, 3508068 };
        int[] high = { 4426805, 6161315, 5644228, 7233355, 6678623, 6692710, 6089373, 7063406, 5103733, 7146480, 6986849, 6796260, 7173711, 6053703, 4488892, 7177356, 5931570, 6976527, 7020084, 5609500, 5260832, 6586573, 6300983, 6493698, 5438667, 6517847, 5977331, 6270031, 7176125, 4663895, 4777743, 4955715, 3884647 };
        assertEquals(9, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case42() {
        int C = 89786136;
        int X = 47377219;
        int[] low = { 2121048, 1456936, 778875, 1418927, 4901127, 1108558, 822651, 5362178, 1038403, 628866, 1194500, 658805, 2265938, 3190319, 903034, 4358365, 1093688, 6262089, 1116059, 1600065, 2381501, 552549, 5428392, 1172631, 1965978, 2429248, 468841, 939737 };
        int[] high = { 3102998, 2025743, 963570, 5264178, 6166458, 5915224, 7040179, 5846725, 4232740, 2783687, 6671097, 3827241, 3355129, 5005777, 6982343, 6610676, 5015948, 6758834, 6841364, 4619890, 6627633, 6333487, 5457120, 2810112, 3431234, 6826027, 6152607, 6637077 };
        assertEquals(16, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case43() {
        int C = 215501131;
        int X = 41542025;
        int[] low = { 4288654, 4480221, 4380335, 4472042, 4212350, 4186046, 4414014, 4251060, 4447878, 4069863, 4015847, 4746213, 4127297, 4518437, 4441367, 4195678, 4005132, 4061640, 4069396, 4003019, 4168471, 4171283, 4083183, 4441458, 4878687, 4025288, 4058405, 4792971, 4444235, 4184467, 4704764, 4130796, 4425418, 4470161, 4344562, 4071696, 4130732, 4177426, 4483579, 4072134, 4552829, 4419941, 4529567, 4270582, 4172139, 4378339, 4153028, 4075389, 4141017, 4299462 };
        int[] high = { 4648408, 4517231, 4486749, 4610158, 4729580, 4877740, 4440445, 4757332, 4713236, 4934255, 4396999, 4939174, 4818274, 4792209, 4921942, 4674697, 4619281, 4787909, 4667936, 4767177, 4870276, 4529439, 4799980, 4683580, 4985472, 4403646, 4805740, 4902783, 4847066, 4943229, 4959695, 4244062, 4916801, 4803734, 4362097, 4799609, 4581187, 4447565, 4712688, 4445887, 4693283, 4739119, 4655316, 4822510, 4249635, 4464936, 4905530, 4650241, 4800484, 4380865 };
        assertEquals(9, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case44() {
        int C = 1;
        int X = 1;
        int[] low = { 1 };
        int[] high = { 1 };
        assertEquals(1, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case45() {
        int C = 347266085;
        int X = 112991492;
        int[] low = { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
        int[] high = {};
        assertEquals(27, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case46() {
        int C = 10000000;
        int X = 1830159;
        int[] low = { 10000000 };
        int[] high = { 10000000 };
        assertEquals(1, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case47() {
        int C = 50;
        int X = 49;
        int[] low = { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
        int[] high = { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
        assertEquals(49, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case48() {
        int C = 2364249;
        int X = 2350755;
        int[] low = { 1 };
        int[] high = { 10000000 };
        assertEquals(1, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case49() {
        int C = 500000000;
        int X = 364082740;
        int[] low = {};
        int[] high = {};
        assertEquals(37, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case50() {
        int C = 2;
        int X = 1;
        int[] low = { 1, 1 };
        int[] high = { 1, 1 };
        assertEquals(1, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case51() {
        int C = 15;
        int X = 12;
        int[] low = { 1, 1, 1, 1, 1 };
        int[] high = { 1, 2, 3, 4, 5 };
        assertEquals(3, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case52() {
        int C = 15;
        int X = 5;
        int[] low = { 1, 3, 4 };
        int[] high = { 6, 3, 8 };
        assertEquals(1, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case53() {
        int C = 5;
        int X = 5;
        int[] low = { 1, 1, 1, 1 };
        int[] high = { 1, 1, 1, 2 };
        assertEquals(4, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case54() {
        int C = 32;
        int X = 22;
        int[] low = { 5, 5, 5, 5, 5, 5 };
        int[] high = { 5, 5, 5, 6, 6, 6 };
        assertEquals(4, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case55() {
        int C = 30;
        int X = 20;
        int[] low = { 1, 1, 1 };
        int[] high = { 10, 10, 10 };
        assertEquals(2, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case56() {
        int C = 15;
        int X = 15;
        int[] low = { 5, 5, 5 };
        int[] high = { 10, 10, 10 };
        assertEquals(3, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case57() {
        int C = 58;
        int X = 30;
        int[] low = { 3, 9, 12, 6, 15 };
        int[] high = { 8, 12, 20, 8, 15 };
        assertEquals(2, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case58() {
        int C = 2790;
        int X = 2294;
        int[] low = { 314, 35, 62, 1095, 523 };
        int[] high = { 326, 849, 1303, 1137, 1780 };
        assertEquals(4, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case59() {
        int C = 90;
        int X = 50;
        int[] low = { 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 };
        int[] high = { 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5 };
        assertEquals(10, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case60() {
        int C = 1027903;
        int X = 885354;
        int[] low = { 42, 6335, 19170, 11479, 26963, 5706, 23282, 9962, 2996, 4828, 32392, 3903, 293, 17422, 19719, 5448, 14772, 1870, 25668, 17036, 28704, 31323, 17674, 15142, 28254, 25548, 32663, 20038, 8724, 27530, 12317, 22191, 289, 9041, 19265, 27447, 15891, 24371, 15007, 24394, 19630, 24085, 18757, 4967, 13932, 16945, 24627, 5538, 16119, 22930 };
        int[] high = { 18510, 32836, 34895, 40838, 51428, 33852, 40110, 10454, 14939, 10265, 46997, 4057, 12676, 36139, 39615, 27175, 26311, 21783, 51968, 26931, 52516, 61657, 22339, 22854, 35123, 53193, 65421, 32898, 18466, 28309, 15353, 24034, 30396, 17984, 41914, 51253, 22621, 39722, 46109, 27943, 32254, 44040, 30598, 12344, 40241, 49385, 35951, 27077, 18202, 39472 };
        assertEquals(40, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case61() {
        int C = 50;
        int X = 22;
        int[] low = { 11, 10, 10 };
        int[] high = { 11, 100, 100 };
        assertEquals(2, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case62() {
        int C = 13;
        int X = 9;
        int[] low = { 1, 2, 2 };
        int[] high = { 10, 2, 2 };
        assertEquals(1, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case63() {
        int C = 6;
        int X = 4;
        int[] low = { 1, 1, 2 };
        int[] high = { 3, 3, 2 };
        assertEquals(2, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case64() {
        int C = 276786796;
        int X = 170651933;
        int[] low = { 9343529, 6821141, 3484169, 9821311, 735638, 6641134, 277813, 1982594, 2646113, 1815854, 2824486, 18490, 5063078, 2549570, 2218776, 8131638, 5066436, 2818520, 187656, 2512448, 836694, 9688539, 3850547, 7942120, 4663994, 2053242, 8014103, 8803833, 4048141, 3424160, 6267633, 9034496, 4274732, 111996, 4730172, 2670411, 5086515, 8573434, 7477943, 2302439, 6586881, 2578247, 9679710, 1561760 };
        int[] high = { 9827022, 8211768, 5449679, 9928086, 5745372, 6825243, 6530399, 7260272, 6698208, 5682563, 6347989, 6852333, 8084202, 4109594, 4161816, 8691786, 5986457, 6354447, 240072, 5407422, 9340522, 9855336, 7992159, 8134964, 7517137, 2557453, 9397747, 9255155, 5582941, 4910752, 8831951, 9840449, 9417986, 2652052, 8606811, 7059353, 5252323, 9137436, 9835644, 3750086, 9017725, 8181650, 9843550, 9338363 };
        assertEquals(24, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case65() {
        int C = 252507777;
        int X = 114514001;
        int[] low = { 387172, 1701379, 4232191, 611011, 4938775, 3457372, 2694580, 740272, 4753908, 193971, 1342956, 303064, 2816329, 1269332, 4663712, 3189420, 2167847, 1795760, 2511790, 1709907, 4920383, 220885, 1073658, 3456574, 4538783, 2323137, 2810467, 4833911, 2505205, 2314321, 3085725, 2601814, 3872818, 4211946, 4335348, 3372109, 4946413, 730385, 3797646, 4088493, 4326401, 922743, 1336199, 3520877, 4385505, 4464345, 1921966, 3676885, 294576, 2325517 };
        int[] high = { 7284301, 5026413, 8471319, 8539683, 7237066, 9616708, 6424697, 7198418, 7905763, 9311383, 5254579, 7801828, 5676025, 9541324, 9765620, 5948203, 6866483, 9399448, 6915221, 7370256, 8644466, 7449867, 8890112, 9937529, 9156987, 9472195, 9406811, 9386106, 8424492, 8417466, 9542139, 5516765, 6545004, 5157872, 6029816, 5774696, 9083094, 8455565, 7602880, 7796789, 7924780, 9402004, 8216323, 8991290, 9919531, 9475924, 7582743, 9685145, 5303323, 9096673 };
        assertEquals(29, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case66() {
        int C = 61682313;
        int X = 19180455;
        int[] low = { 2747885, 1442730, 2012684, 4353405, 212854, 918319, 6271621, 1842260, 5486385, 2239969, 5482865 };
        int[] high = { 4232386, 7595632, 5321585, 9941382, 7446451, 7526946, 6639000, 2897788, 5871701, 2404636, 5621676 };
        assertEquals(3, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case67() {
        int C = 5;
        int X = 5;
        int[] low = { 1, 1, 1, 1 };
        int[] high = { 100, 100, 100, 100 };
        assertEquals(4, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case68() {
        int C = 14;
        int X = 11;
        int[] low = { 3, 2, 6 };
        int[] high = { 3, 8, 11 };
        assertEquals(2, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case69() {
        int C = 7;
        int X = 4;
        int[] low = { 1, 2, 1 };
        int[] high = { 4, 2, 4 };
        assertEquals(2, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case70() {
        int C = 27;
        int X = 11;
        int[] low = { 5, 5, 4, 3, 3 };
        int[] high = { 5, 5, 4, 10, 10 };
        assertEquals(2, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case71() {
        int C = 210121012;
        int X = 123456789;
        int[] low = { 396875, 766986, 40959, 818201, 607192, 715565, 887888, 962477, 138120, 974633, 277066, 187855, 376570, 474472, 186960, 691914, 359889, 520982, 483655, 983787, 343862, 770659, 413221, 756486, 422867, 12100, 417265, 814768, 766488, 859314, 752386, 923909, 954808, 194409, 792579, 831970, 60715, 1172, 255787, 134179, 112940, 54134, 246905, 676035, 945851, 220506, 159982, 885848, 208027, 807457 };
        int[] high = { 3188982, 4470657, 9149151, 2729773, 9991767, 3895576, 5730851, 7114165, 2508102, 3399579, 5223042, 8188273, 7296967, 7911281, 6250036, 8483801, 9159557, 4597863, 1205397, 3735371, 9936589, 5274281, 547992, 7234056, 4190866, 9998669, 4488456, 3147444, 1434089, 1748424, 2000901, 5751513, 9470221, 613877, 8259594, 7344867, 6379866, 497257, 6211621, 637354, 7173204, 5198535, 8819595, 7477454, 2032544, 5937557, 5637011, 7870206, 972040, 3127658 };
        assertEquals(23, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case72() {
        int C = 10;
        int X = 5;
        int[] low = { 1, 1, 3 };
        int[] high = { 10, 10, 3 };
        assertEquals(2, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case73() {
        int C = 2370;
        int X = 568;
        int[] low = { 7, 15, 48, 27, 42, 5, 32, 18, 8, 43, 5, 28, 16, 46, 37, 21, 43, 21, 12, 2, 44, 22, 3, 4, 36, 21, 28, 3, 18, 27, 45, 48, 6, 49, 27, 37, 27, 49, 1, 28, 2, 9, 17, 27, 12, 29, 21, 19, 46, 19 };
        int[] high = { 14, 34, 49, 48, 88, 33, 59, 43, 9, 69, 29, 59, 53, 86, 83, 55, 89, 44, 20, 50, 86, 52, 12, 45, 84, 44, 53, 51, 66, 41, 73, 55, 42, 75, 62, 38, 67, 80, 2, 64, 39, 36, 66, 51, 25, 35, 61, 65, 47, 41 };
        assertEquals(10, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case74() {
        int C = 600;
        int X = 120;
        int[] low = { 1, 1, 10, 10, 10 };
        int[] high = { 600, 600, 160, 160, 160 };
        assertEquals(2, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case75() {
        int C = 1027903;
        int X = 577202;
        int[] low = { 42, 6335, 19170, 11479, 26963, 5706, 23282, 9962, 2996, 4828, 32392, 3903, 293, 17422, 19719, 5448, 14772, 1870, 25668, 17036, 28704, 31323, 17674, 15142, 28254, 25548, 32663, 20038, 8724, 27530, 12317, 22191, 289, 9041, 19265, 27447, 15891, 24371, 15007, 24394, 19630, 24085, 18757, 4967, 13932, 16945, 24627, 5538, 16119, 22930 };
        int[] high = { 18510, 32836, 34895, 40838, 51428, 33852, 40110, 10454, 14939, 10265, 46997, 4057, 12676, 36139, 39615, 27175, 26311, 21783, 51968, 26931, 52516, 61657, 22339, 22854, 35123, 53193, 65421, 32898, 18466, 28309, 15353, 24034, 30396, 17984, 41914, 51253, 22621, 39722, 46109, 27943, 32254, 44040, 30598, 12344, 40241, 49385, 35951, 27077, 18202, 39472 };
        assertEquals(24, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case76() {
        int C = 888888;
        int X = 555555;
        int[] low = { 16256, 5313, 365, 4457, 12494, 8829, 12630, 9613, 2076, 11435, 5105, 1291, 9851, 13170, 4341, 9227, 16804, 23362, 16770, 359, 7546, 18380, 7917, 5043, 16803, 2112, 8213, 7707, 7922, 13834, 11871, 18357, 16289, 17573, 920, 5038, 10148, 7938, 13771, 11577, 12518, 1975, 14343, 8658, 10618, 192, 15751, 20674, 5114, 6605 };
        int[] high = { 26818, 24192, 29071, 26887, 25818, 30808, 22770, 16049, 19139, 19915, 15699, 26318, 27651, 25600, 5290, 22145, 21617, 25228, 24579, 22637, 9135, 25465, 32686, 15033, 19094, 4622, 30947, 29993, 14539, 30474, 17363, 27857, 24450, 29656, 4282, 14051, 25645, 20515, 16144, 26567, 14146, 25770, 16321, 21455, 18690, 7806, 29957, 31421, 31780, 31668 };
        assertEquals(28, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case77() {
        int C = 10000000;
        int X = 5;
        int[] low = { 1, 1, 2, 2 };
        int[] high = { 10000000, 10000000, 2, 2 };
        assertEquals(2, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case78() {
        int C = 20000000;
        int X = 12345678;
        int[] low = { 96875, 66986, 40959, 18201, 7192, 15565, 87888, 62477, 38120, 74633, 77066, 87855, 76570, 74472, 86960, 91914, 59889, 20982, 83655, 83787, 43862, 70659, 47992, 56486, 22867, 12100, 17265, 14768, 66488, 59314, 901, 23909, 54808, 94409, 92579, 31970, 60715, 1172, 55787, 37354, 12940, 54134, 46905, 76035, 32544, 20506, 59982, 85848, 8027, 7457 };
        int[] high = { 188982, 470657, 149151, 729773, 991767, 895576, 730851, 114165, 508102, 399579, 223042, 188273, 296967, 911281, 250036, 483801, 159557, 597863, 205397, 735371, 936589, 274281, 413221, 234056, 190866, 998669, 488456, 147444, 434089, 748424, 52386, 751513, 470221, 613877, 259594, 344867, 379866, 97257, 211621, 134179, 173204, 198535, 819595, 477454, 45851, 937557, 637011, 870206, 972040, 127658 };
        assertEquals(20, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case79() {
        int C = 1003;
        int X = 1001;
        int[] low = { 2, 1, 1 };
        int[] high = { 2, 1000, 1000 };
        assertEquals(2, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case80() {
        int C = 10;
        int X = 6;
        int[] low = { 1, 1, 3 };
        int[] high = { 5, 5, 3 };
        assertEquals(2, mysticandcandies.minBoxes(C, X, low, high));
    }

    @Test
    public void case81() {
        int C = 25;
        int X = 13;
        int[] low = { 1, 2, 3, 4, 5 };
        int[] high = { 9, 10, 3, 4, 5 };
        assertEquals(2, mysticandcandies.minBoxes(C, X, low, high));
    }

}
