package topc.test.graph;

import junit.framework.*;
import org.junit.Test;
import static org.junit.Assert.*;
import topc.graph.*;

public class StrangeParticlesTest {
  StrangeParticles strangeparticles = new StrangeParticles();

  @Test
  public void case1() {
    String[] interacts = { "0+-", "-0+", "+-0" };
    assertEquals(1, strangeparticles.remain(interacts));
  }

  @Test
  public void case2() {
    String[] interacts = { "000", "000", "000" };
    assertEquals(3, strangeparticles.remain(interacts));
  }

  @Test
  public void case3() {
    String[] interacts = { "0++++++++++++++", "-0+++++++++++++", "--0++++++++++++", "---0+++++++++++", "----0++++++++++", "-----0+++++++++", "------0++++++++", "-------0+++++++", "--------0++++++", "---------0+++++", "----------0++++", "-----------0+++", "------------0++", "-------------0+", "--------------0" };
    assertEquals(1, strangeparticles.remain(interacts));
  }

  @Test
  public void case4() {
    String[] interacts = { "00000000000000000000000000000+00000000000000+000++", "0000000000000000+00000000000000000000000000000+000", "000000+00000+000000000000000000000000000+0000++000", "0000000000+000000000000000000000000000000000000000", "00000+00000000000000000000000000000000000000000000", "0000-00000000000000000000000000000000+000000000000", "00-0000000+00000000000000000000000+000000000000000", "00000000000000000000000000000000000000000+0000+000", "00000000000000+000000000+0000000000+00000000000000", "00000000000000000000000000000000000+00000000000000", "000-00-000000000000000000000000+000+00000000000+00", "0000000000000000000000000000000+0+00000000000+0000", "00-000000000000000000000000+0000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000-000000000000000000000+0000000000000000000", "0000000000000000000+000000000000000000000000000000", "0-000000000000000000000000000000000+0000000+000000", "00000000000000000000+0000000+0000000000000000+0000", "0000000000000000000000000000000000000000000+000000", "000000000000000-00000000000+00+0000000000000000000", "00000000000000000-000000000000000+0000000000000000", "00000000000000000000000000000000000000000+00000000", "00000000000000000000000000000000000000000000000000", "0000000000000000000000000000+000000000000000000+00", "00000000-0000000000000000000000000000000+000000000", "00000000000000000000000000000000000000000+000000+0", "0000000000000000000000000000000000000+000000000000", "000000000000-000000-000000000000000000000000000000", "00000000000000000-00000-00000+0000000000+000000000", "-000000000000000000000000000-000000000+00000000000", "00000000000000-0000-00000000000000000+000000000000", "0000000000--00000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000-00000000-0000000000000000+000000000000", "000000-0000000000000000000000000000+000000+0000000", "00000000---00000-00000000000000000-000+00000000000", "00000000000000000000000000000000000000+00000000000", "00000-00000000000000000000-000-00-0000000000000000", "00000000000000000000000000000-00000--0000000000000", "00000000000000000000000000000000000000000000000000", "00-000000000000000000000-000-000000000000000000000", "0000000-0000000000000-000-00000000000000000000+000", "0000000000000000000000000000000000-00000000000000+", "0000000000000000-0-0000000000000000000000000000000", "-0000000000000000000000000000000000000000000000+++", "00-00000000-00000-00000000000000000000000000000000", "0--0000-000000000000000000000000000000000-00000000", "0000000000-000000000000-00000000000000000000-00000", "-000000000000000000000000-000000000000000000-00000", "-00000000000000000000000000000000000000000-0-00000" };
    assertEquals(15, strangeparticles.remain(interacts));
  }

  @Test
  public void case5() {
    String[] interacts = { "0000000000000000000000++00000000000++0000000+00000", "000000000000000000000000000000000000000+0000000000", "0000000000000000000+00000+0000000000000000000000+0", "00000000+00000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000+00000", "0000000000000000000000+000000000000000000000000000", "0000000000000000000000000000000+00000000000000000+", "000-0000000000000000+0000000000000000000+000000000", "000000000000000000+0000000000000000000000000000000", "000000000000000000000000+000000000000000000000+000", "0000000000000++00000000000000000000000+00000000000", "00000000000000000000000000000000000+0000+000000000", "00000000000-0000000000000+000000000000000000000000", "00000000000-00000+00++0000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "0000000000000000000000000000000000000000000+0000+0", "00000000000000-000000000000+0000000000000000000000", "000000000-0000000000000000000000000000000000+00000", "00-0000000000000000000000000000000000000000000+000", "00000000-00000-00000000000000000+00+00000000000000", "00000000000000-0000000000+0000+0000000000000000000", "-00000-00000000000000000000000+0000+000000+0000000", "-000000000000000000000000000000000000000+000000000", "0000000000-00000000000000000000000000000000++00000", "00-0000000000-0000000-000000000000000000000000+000", "00000000000000000000000000000000000000000000000000", "00000000000000000-00000000000000000000000000000000", "000000000000000000000000000000++00+000000000000000", "000000000000000000000000000000000+0000000000000000", "000000000000000000000--00000-000000000000+00000000", "0000000-00000000000000000000-000000000000000000000", "00000000000000000000-000000000000000+000000000+000", "00000000000000000000000000000-0000+000+00+00000000", "0000000000000000000000000000-0000-0000000000000000", "-00000000000-0000000-0-0000000000000000000+0000000", "-0000000000000000000000000000000-00000000000000000", "0000000000000000000000000000000000000000000000+000", "00000000000-000000000000000000000-000000000++00000", "0-00000000000000000000000000000000000000+00000000+", "00000000-000-0000000000-000000000000000-000000+000", "000000000000000000000000000000-00-0000000000000000", "0000000000000000000000-000000000000-00000000000000", "0000000000000000-0000000-0000000000000-00000000000", "-0000-000000000000-00000-0000000000000-00000000000", "00000000000000000000000000000000000000000000000000", "0000000000-00000000-00000-000000-0000-00-000000000", "00000000000000000000000000000000000000000000000000", "00-0000000000000-000000000000000000000000000000000", "0000000-0000000000000000000000000000000-0000000000" };
    assertEquals(16, strangeparticles.remain(interacts));
  }

  @Test
  public void case6() {
    String[] interacts = { "000000000+0000000+000000000+00000+0000000000000000", "000000000+0000000000000000000000000000000000000000", "000000000000+00000000000000000000+0000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000+00000000000000000", "00000000000000+0000000000000000000000+000000000000", "00000000000+000000000+0000000000000000000000000000", "00000000000000000000+00000+00000000000000000000000", "00000000000000000+00000000000000+00000000000000000", "--00000000000+0000000000000000000000000000+00+0000", "0000000000000000000000000000000000000000000+000000", "000000-000000+0+0000000000000000000000000000000000", "00-000000000000000+000000000000000+000000000000000", "000000000-0-000000000000+000000000000+000000000000", "00000-00000000000000000000000000000000000000000000", "00000000000-0000000+00+000000000000000000000+00+00", "0000000000000000000000000+0000+0+00000000000000000", "-0000000-000000000000000000+00++000000000000+00000", "000000000000-000000000000000000000+0000000000000+0", "000000000000000-0000000000+00000000000000000000000", "0000000-000000000000000000000000000000000000000000", "000000-000000000000000000000000000000000000000+0+0", "000000000000000-000000000000000000000000000000+000", "0000000000000000000000000000000000+00000000+000000", "0000000000000-00000000000000000000+000000000000000", "0000000000000000-0000000000000+000000+000000000000", "0000000-00000000000-00000000+000000000000+00000000", "-0000000000000000-000000000000000000000000000000+0", "00000000000000000000000000-00000000000000000000+00", "00000000000000000000000000000000+00000000000000000", "0000000000000000--0000000-0000000000000000000000+0", "00000000000000000-00000000000000000000000+0000000+", "0000-000-0000000-000000000000-00000000000000000000", "-0-00000000000000000000000000000000000000000000000", "000000000000-00000-0000--0000000000000000000000000", "00000000000000000000000000000000000000000000000000", "0000000000000000000000000000000000000000000000000+", "00000-0000000-00000000000-000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "0000000000000000000000000000000000000000000000000+", "00000000000000000000000000-0000-000000000000000+00", "000000000-0000000000000000000000000000000000000000", "0000000000-000000000000-00000000000000000000000000", "000000000000000-0-000000000000000000000000000000+0", "000000000-0000000000000000000000000000000000000000", "000000000000000000000--000000000000000000000000000", "000000000000000-000000000000-000000000000-00000000", "000000000000000000-00-00000-00-0000000000000-00000", "0000000000000000000000000000000-0000-000-000000000" };
    assertEquals(17, strangeparticles.remain(interacts));
  }

  @Test
  public void case7() {
    String[] interacts = {};
    assertEquals(21, strangeparticles.remain(interacts));
  }

  @Test
  public void case8() {
    String[] interacts = { "0+0000000000000+0000+00000+00+0000000000000+00000+", "-0000000000+00000000000000000000000+00++000000000+", "00000000000000000000+000+00+00000000000+0000000000", "000000000000000000000+0000000000000000000000000000", "000000+000000000000000000+0000000000+000000+000000", "000000000000000000000000000000000000+0000000000000", "0000-0000000000000000+0000000000000000000000000000", "0000000000000000000000000000+00+00000000000+000000", "00000000000000000+000+000+000000000000+0+00000+0+0", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000+00000000000", "0-0000000000000000000+0000000000000000000000000000", "000000000000000000000000000000000000000000000+0000", "000000000000000000000000000000000000000000+0000000", "000000000000000000000000000000000000000+0000000000", "-00000000000000000000000000000000000000000000000+0", "00000000000000000000000000000000000000000000000000", "00000000-00000000000000000+000000000000+0000+00000", "000000000000000000000000000+0000000000000000000000", "000000000000000000000000000+0000000000000000000000", "-0-00000000000000000000000000000+00000000000000000", "000-00-0-00-00000000000000000000000000000000000000", "000000000000000000000000000000000000000+00+0000000", "000000000000000000000000000000+000000000000000+000", "00-000000000000000000000000+0000000000000+00000000", "0000-000-00000000000000000000000000000000000000000", "-0000000000000000-0000000000000000000000000+000000", "00-000000000000000--0000-000+0000+0000000000000000", "0000000-0000000000000000000-0000000000000000000000", "-00000000000000000000000000000000000000+0000+00000", "00000000000000000000000-00000000000000000000000000", "0000000-000000000000000000000000000000000000000000", "00000000000000000000-000000000000000000000000+0000", "000000000000000000000000000-0000000000000000000000", "00000000000000000000000000000000000+000000000+0000", "0-00000000000000000000000000000000-000000000000000", "0000--00000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000+00000", "0-000000-0-000000000000000000000000000000000000000", "0--00000000000-00-0000-000000-0000000000+000000000", "00000000-000000000000000000000000000000-0000+00000", "000000000000000000000000-0000000000000000000000+00", "0000000000000-00000000-0000000000000000000000++000", "-000-00-000000000000000000-00000000000000000000000", "00000000000000000-00000000000-0000000-00-000000000", "000000000000-0000000000000000000-0-0000000-0000000", "00000000-00000000000000-000000000000000000-0000000", "00000000000000000000000000000000000000000-00000000", "00000000-000000-0000000000000000000000000000000000", "--000000000000000000000000000000000000000000000000" };
    assertEquals(18, strangeparticles.remain(interacts));
  }

  @Test
  public void case9() {
    String[] interacts = { "0000000000000000000000000000000000000000+0000000+0", "000000000+0000000000000000+0000+000000+00000000000", "0000+0000000000000000+0000000000000000000000000000", "00000+000000000000000000000+000++000000000000+00+0", "00-00000000000000+0000000000000+000000000+00000000", "000-00000000000+00000000000000000000000000+0000000", "000000000000000000000000000++000000+00+0000+00000+", "00000000000000000000000000000000+0000000000000000+", "000000000000000+00000+0000+00000000000000000000000", "0-000000000000000+000000000000000000000000000+0000", "00000000000000000000+00000000000000000000000000000", "00000000000000000+00000000000000000000000000000000", "0000000000000+000000000000000000000000000000000000", "000000000000-00000000000+0000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000-00-00000000000000000000+0000000000000+0000+0", "00000000000000000000000000000000000000000000+00000", "0000-0000-0-00000000000000000000000000000+00000000", "0000000000000000000000+00000000000000+00000000000+", "0000000000000000000000000000000+00000000+00000000+", "0000000000-000000000000000000000000000000000000000", "00-00000-0000000000000000+000000000000000000+00000", "000000000000000000-0000000000000000000000000000000", "0000000000000000000000000000000000+0+000000000000+", "0000000000000-000000000000+0000++00000+00000000000", "000000000000000000000-0000000000000000000000000000", "0-000000-000000000000000-000000000000+0+0000000000", "000-00-00000000000000000000000000+0000000000000000", "000000-0000000000000000000000000000000000000000000", "000000000000000-00000000000000000000+0000000000000", "00000000000000000000000000000000000000000+00+0000+", "0-0--00000000000000-0000-0000000+0000+00000+000000", "000-000-0000000000000000-000000-00+000000000000000", "000000000000000000000000000-0000000000000000000000", "00000000000000000000000-00000000-00000000000000000", "000000-0000000000000000000000000000000000000000000", "00000000000000000000000-00000-0000000000000000+000", "000000000000000000-0000000-0000-000000000000000000", "0-0000-00000000000000000-000000000000000000000+000", "00000000000000000000000000-000000000000000000+0000", "-000000000000000000-000000000000000000000000000000", "0000-000000000000-000000000000-0000000000000+00000", "00000-00000000000000000000000000000000000000000000", "000000-00000000-000000000000000-00000000000000000+", "0000000000000000-0000-00000000-0000000000-00000000", "000-00000-00000000000000000000000000000-00000000+0", "000000000000000000000000000000000000-0-00000000000", "00000000000000000000000000000000000000000000000000", "-00-00000000000-00000000000000000000000000000-000+", "000000--0000000000--000-000000-000000000000-0000-0" };
    assertEquals(15, strangeparticles.remain(interacts));
  }

  @Test
  public void case10() {
    String[] interacts = {};
    assertEquals(18, strangeparticles.remain(interacts));
  }

  @Test
  public void case11() {
    String[] interacts = {};
    assertEquals(22, strangeparticles.remain(interacts));
  }

  @Test
  public void case12() {
    String[] interacts = { "0000+00000000000000000000000000000000+000000000000", "00000000000000000000000000000+0000000000000000000+", "00000000000000000+0000000000000000000000000000+00+", "00000000000000000000000000000000000000000000+00000", "-0000000000000000000000000000000000000000000000000", "00000000000000000000000000000000+000000000000000+0", "000000000000000000000000000000000000+0000000000000", "0000000000000000000000000000000000000000000000+000", "00000000000000+0000000000000000000000000000000000+", "000000000000+000000+000000000000000000+00000000000", "0000000000000000000000000000+000000000000000000000", "00000000000000000+0000000000000000000000000000+000", "000000000-0000000000000000+00000000000000000000000", "000000000000000000000000+000+0000+00000+0000000000", "00000000-000000000000+0000000000000000000000+00000", "0000000000000000000000++00+00000000000000000+00000", "000000000000000000+0000000000000000000000000000000", "00-00000000-00000000000+00000000000000000000+00000", "0000000000000000-000000+00000000000000000+000000+0", "000000000-0000000000000000+00000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000-0000000000000000000+000000000000000", "000000000000000-00000000000000000+00000000+0000000", "000000000000000-0--00000000000000000+0000000000000", "0000000000000-000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "000000000000-00-000-000000000000+0000000000+000000", "0000000000000000000000000000000000000000000+000000", "0000000000-00-000000000000000+000000000000+0000+00", "0-00000000000000000000000000-00000000000000+000000", "0000000000000000000000000000000+000000000000000+00", "000000000000000000000000000000-0000000000000000000", "00000-00000000000000000000-00000000000000000000000", "0000000000000-00000000-000000000000000000000000000", "000000000000000000000-0000000000000+000+0000000000", "0000000000000000000000000000000000-00000+000000000", "000000-0000000000000000-00000000000000000000000000", "-00000000000000000000000000000000000000000000+0+00", "000000000-0000000000000000000000000000000+0000000+", "0000000000000-00000000000000000000-000000000000000", "00000000000000000000000000000000000-00000000000000", "000000000000000000-0000000000000000000-00000000000", "0000000000000000000000-00000-00000000000000+000000", "00000000000000000000000000--0-000000000000-0000000", "000-0000000000--0-00000000000000000000000000000000", "0000000000000000000000000000000000000-000000000000", "00-0000-000-00000000000000000000000000000000000000", "0000000000000000000000000000-0-000000-000000000000", "00000-000000000000-0000000000000000000000000000000", "0--00000-00000000000000000000000000000-00000000000" };
    assertEquals(18, strangeparticles.remain(interacts));
  }

  @Test
  public void case13() {
    String[] interacts = { "00+00000000+00000000000000000+00000000+000000000+0", "00000000000000000000000000000000000000000000000000", "-0000000000+000000000000000000+00+0000000000000000", "00000000000000000000000000000000000000000000000000", "0000000000000000+00000000000+0+00000000000+0000000", "00000000000+00000000000000000000000000+00000000000", "000000000000000+000+00000000000000000000000+00000+", "000000000000000000000000000000000+00000000000+0000", "00000000000000000+00000000000000000000000000000000", "0000000000+000000000000000000000000000000000000000", "000000000-00000000000000000000000+00000000+0000000", "-0-00-000000000000000+00+000000+0++00000000000000+", "0000000000000000++00000000000000000000+000000+0000", "000000000000000000000000000000000000000+0000000000", "00000000000000000000000000000000000000000+00000000", "000000-000000000000000000000000000000000000000+00+", "0000-0000000-0000000000000000000000000000000++0000", "00000000-000-0000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "000000-00000000000000000000000000000000+0000000000", "00000000000000000000000+0000000000000+0+0000000000", "00000000000-0000000000+0+0000000000000000000000000", "000000000000000000000-0000000+000000000+0000000000", "00000000000000000000-00000000000+00000000000000000", "00000000000-000000000-00000000000+000000000+0000+0", "000000000000000000000000000000000000+0000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000+00000000000", "0000-000000000000000000000000000000+00000000000000", "-000000000000000000000-00000000000000+000000000000", "00-0-00000000000000000000000000+000+0000000+00+000", "00000000000-000000000000000000-000000+000000000+00", "00000000000000000000000-00000000000000000000000000", "00-0000-00--000000000000-0000000000000000000000000", "00000000000-000000000000000000000000000+0000000000", "0000000000000000000000000000-0-000000000000000+000", "0000000000000000000000000-000000000000000000000000", "00000000000000000000-00000000-0-000000000000000000", "-0000-000000-00000000000000-00000000000000+000000+", "0000000000000-00000--0-00000000000-000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000-00000000000000000000000000000000000", "0000-00000-000000000000000000000000000-00000000000", "000000-00000000000000000-00000-00000000000000000+0", "0000000000000000-000000000000000000000000000000000", "0000000-0000-000-000000000000000000000000000000000", "000000000000000-00000000000000-0000-000000000000+0", "0000000000000000000000000000000-000000000000000000", "-00000000000000000000000-000000000000000000-00-000", "000000-0000-000-0000000000000000000000-00000000000" };
    assertEquals(18, strangeparticles.remain(interacts));
  }

  @Test
  public void case14() {
    String[] interacts = { "00000000+0000+000000000000000+00000000000000+000++", "0000+00000000000+00000000000000000000000000+00+000", "000000+000+0+00000000000000000+000000000+0000++00+", "000000+00++000000000000000000000000000000+00000000", "0-000+00000000+00000000000000000000+0000000+0+0000", "0000-000000000000+0000000000+0+000000+000000000000", "00--000000+0000+000000000000000000+00000000000+000", "00000000000000000+0+000000+00000000+00000+0+00+000", "-0000000000000+0000+0000+0000000000+00000000+00000", "000-0000000000000000000000000000000+00000000000000", "00--00-000000000+00000000+00000+000+00+00000000+00", "0000000000000000000000000000000+0+00000000000+0000", "00-00000000000000000000+000+0000000000000000000000", "-0000000000000000000000000000000000000000000000000", "0000-000-00000000+000000000+00+0000000000000000000", "000000-000000000000+0000000000000000000000+00+0000", "0-00000000-000000000000000000000000+0+00000+000000", "00000-0-000000-00000+0000000+0000000000000000+0000", "0000000000000000000+00000000000000000000000+000000", "0000000--000000-00-00000000+00+00000000000000000+0", "00000000000000000-000000000+00000+00000000000+0000", "000000000000000000000000000000000+00+0000+00000000", "00000000000000000000000000000000000000000000000000", "000000000000-000000000000000+000+00+00+00000000+00", "00000000-0000000000000000000000000000000+000000000", "0000000000-000000000000000000000+0+00000++000000+0", "0000000-0000000000000000000+00000+000+000000000000", "000000000000-0-0000--00000-0000000+00000000000+000", "00000-00000000000-00000-00000++000000000+000000000", "-000000000000000000000000000-000000000+00000000000", "00-00-00000000-0000-00000000-00000000+00000000000+", "0000000000--00000000000000000000000000000000000000", "00000000000000000000000-0-0000000000000+0000000000", "00000000000-00000000--0000-0000000000+000000000000", "000000-000000000000000000-0-0000000+000000++000000", "0000-00----00000-000000-0000000000-000+00000000000", "000000000000000000000-0000000000000000+00+00000000", "00000-0000000000-000000000-000-00-0000000000000000", "0000000000-000000000000-00000-00000--0000000000+00", "00000000000000000000000000000000-0000000000000000+", "00-000000000000000000000--00-000000000000000000000", "000-000-0000000000000-000-0000000000-00000000++000", "000000000000000-000000000000000000-00000000000000+", "0-00-00-00000000-0-000000000000000-000000000000000", "-0000000-00000000000000000000000000000000000000+++", "00-0-000000-000-0-00-00000000000000000000-00000000", "0--000--0000000000000000000-0000000000000-00000+00", "0000000000-000000000000-00000000000000-00000-0-00+", "-000000000000000000-00000-000000000000000000-00000", "-0-000000000000000000000000000-00000000-00-0-00-00" };
    assertEquals(9, strangeparticles.remain(interacts));
  }

  @Test
  public void case15() {
    String[] interacts = { "00000000+000000000+000++00000000000++0000000+00000", "00000000000+000000+000000000000+0000000+0000000000", "0000000000+00000000+00+00+0000000000000000000000+0", "00000000+00000000000+000000000+0000000000000000000", "000000000+00000000000+0000000000000000000000000000", "000000000000+000000000+0000+00000000000+0000+00000", "0000000000+0000000000++0000000000+0000000000000000", "00000000+0000000+000+0+00+00+00+00000000+00+0+000+", "-00-000-000000000000+000+0000+0000000000+000000000", "0000-00000+0000+00+0000000000000000000000000+00000", "00-000-00-0000000000000++000000000000000000000+000", "0-00000000000++000+0000000000000+0+000+00000000000", "00000-00000000000000000000000000000+0000++00000000", "00000000000-000000+000000+00+0+00000000000000+0000", "00000000000-00000+00++000000000000000000+000000000", "000000000-00000000000000+0000000000000000000+00000", "0000000-00000000000000+00000000000000000000+000++0", "00000000000000-000000000000+0000+00000000000000000", "--0000000-0-0-000000000000000000000000+00+00+00000", "00-0000000000000000000000000000000000000000000+000", "000-000--00000-00000000000+00000+00+000+0000000+00", "0000-0-0000000-0000000000+0000+0000000000000+00+00", "-0-00---00000000-0000000+00+00+0000+000000+0+00000", "-000000000-00000000000000000000000000000+000000000", "00000000-0-0000-000000-00000000000000000000++00+00", "00-0000-00000-0000000-000000000+00000000000000+000", "00000000000000000000-000000000+00+00000+0000000000", "00000-00000000000-0000-000000000000000000000000000", "0000000-00000-0000000000000000++00+0000000+0000000", "00000000-000000000000000000000000+0000000000+00000", "000-000000000-0000000--000-0-000000000000+00000000", "0-00000-00000000000000000-00-000000+00000000000000", "00000000000-00000-00-000000000000000+000000000+000", "000000-0000000000000000000-00-0000+0+0+00+00000000", "00000000000-0000000000000000-0000-0000000000000000", "-00000000000-0000000-0-00000000-0000000000+0000+00", "-0000000000000000000000000000000--0000000000+00000", "0000000000000000000000000000000000000000+00000+000", "00000000000-000000-00000000000000-000000+00++00000", "0-000-00000000000000-00000-0000000000000+0+000000+", "0000000--000-0-00000000-0000000000000---000000+000", "000000000000-00000-00000000000-00-000000000+000000", "0000000000000000000000-00000-000000-000-0000000000", "0000000-00000000-0000000-0000000000000-00-00000000", "-0000-000-00000-00-00--0-0000-000000-0-00000000000", "0000000-00000-000000000000000000000000000000000000", "0000000000-00000000-00000-000000-0000-00-000000000", "0000000000000000-000--00-0000000000-00000000000000", "00-0000000000000-000000000000000000000000000000000", "0000000-0000000000000000000000000000000-0000000000" };
    assertEquals(10, strangeparticles.remain(interacts));
  }

  @Test
  public void case16() {
    String[] interacts = { "000000000+0000000+000000000+00000+0000000000000000", "000000000+0000000000000000000000+0+0+0000000000000", "000000000000+00000000000000000000+00000++00000000+", "0000000000000000000+000000000000+00+00+00000000000", "000000+000+00+00000+0000000000+0+00+00000000000000", "00000000000000+000+00+000000000000000+000000000000", "0000-000000+000000000+00000+0000+000000000000+000+", "00000000000000000000+0000++0000+00000000000+000000", "000000000000+0000+000+0000000000+00000000000000000", "--000000000+0+0+0000000+000000000000000000+00+0000", "0000-000000000000000000000000000000000000+0+000000", "000000-00-000+0+00000000000000000000000000000+0000", "00-00000-000000000+000000000+00000+0000+000000000+", "0000-0000-0-000000000000+000000000000+000000000000", "00000-0000000000000000000+00000000000000000000+000", "000000000-0-0000000+00+0000+0000000000000000+00+00", "00000000000000000000+0000+0000+0+00000000000000000", "-0000000-00000000000000000++00++000000000000+00000", "00000-000000-000000000000000000000+0000000000000+0", "000--0000000000-0000000000+00000000000000000000000", "0000000-00000000-000000000000000000000000000+00000", "00000--0-0000000000000000000000000000000000000+0+0", "000000000000000-000000000000000000000000000+0++000", "000000000-000000000000000000000000+00000000+000000", "0000000000000-00000000000+00000000+000000000000000", "0000000-000000-0-0000000-00000+000000+000000000000", "0000000-000000000-0-00000000+0000000+0000+00000000", "-00000-00000000-0-0000000000000000+000+00+000000+0", "000000000000-0000000000000-00000000000000000000+00", "00000000000000000000000000000000+00000000000000000", "0000-00000000000--0000000-0000000+0+0000000000+++0", "0000000-000000000-000000000000000+0000000++000000+", "0-0--0-0-0000000-000000000000-000000+0000000000000", "-0-000000000000000000000000000--0000000000000000+0", "0-0000000000-00000-0000--00-000000000000000+000000", "000--0000000000000000000000000-000000000+0000+0000", "0-000000000000000000000000-00000-0000000000000000+", "00000-0000000-00000000000-000000000000000000000000", "000-00000000000000000000000-0000000000000000000000", "00-000000000-0000000000000000000000000000000000000", "00-00000000000000000000000000000000-00000000+0000+", "0000000000-000000000000000--000-000000000000000+00", "000000000-000000000000000000000-0000000000000+0000", "0000000-00-00000000000--0000000000-000000000000000", "000000000000000-0-00-0000000000000000000-0000000+0", "000000-00-0-0000000000-000000000000-000000-0000000", "00000000000000-000000--0000000-0000000000000000000", "000000000000000-000000000000-0-0000000000-00000000", "000000000000000000-00-00000-00-00-0000000000-00000", "00-000-00000-000000000000000000-0000-000-000000000" };
    assertEquals(9, strangeparticles.remain(interacts));
  }

  @Test
  public void case17() {
    String[] interacts = { "0+000000000000000000000000000+000000000000000000++", "-00+0000000000000000000000000000+00000+0+000000000", "000000000+00+000000000000000000+00000000000++00000", "0-00000000000000000000000000+00000000000000+000000", "00000000+0+00000000000+00000000000000000000+000000", "00000000000000000+00000+0000000000+0000+00+0000000", "00000000000000000+000000+++00000000+000+0000000000", "0000000000000000000+00000000000000000000+00000+000", "0000-00000000000000+0000000+000000000000+000+00000", "00-00000000000000000000000000000+00+00000000000000", "0000-00000000000000000000+000000+000000+00000000+0", "0000000000000+0000000000+00000000000000000000000+0", "00-000000000000+00+00+000000000000+000000000000000", "00000000000-0000000000000000000000000000+000000000", "000000000000000000000+0000000000000+00000+00000000", "000000000000-0000000000000000000000000000000000000", "0000000000000000000000000+000000000+000000000+0000", "00000--0000000000000000000000+00+++00000000+000000", "000000000000-00000000000+00000+00+0000000000000000", "0000000--000000000000000000000000+00000+0000000000", "00000000000000000000000000000000000000000000000000", "000000000000-0-000000000000000+0000+00000+0+000000", "0000-00000000000000000000000000+0000+0000000000000", "00000-000000000000000000000000+0000000+0000000+00+", "000000-0000-000000-000000000+0000000+0000+00000000", "000000-000-00000-00000000000000000+000000000+00000", "000000-00000000000000000000000000000000+0000000000", "00000000-0000000000000000000000+000000000000+00++0", "000-00000000000000000000-00000000+0+00000000000000", "-0000000000000000-00000000000000000000000000000+00", "000000000000000000-00-0-0000000+000000+000000+0000", "00-0000000000000000000-0000-00-0000000000000000000", "0-0000000--000000-0000000000000000+000000000000000", "00000000000000000---00000000-000000000000000000000", "00000-000000-0000-0000000-000000-0000000000000+000", "000000-00-0000-0-0000-000000-00000000000000000000+", "0000000000000000000000-0-000000000000+000000+00+00", "000000000000000000000000000000000000-000+000000000", "0-000000000000000000000-000000-0000000000000000000", "00000--000-00000000-000000-0000000000000+0+0000+00", "0-00000--0000-00000000000000000000000-0-00000+0000", "00000000000000-000000-00-000000000000000000000000+", "00000-000000000000000000000000000000000-000+000+00", "00---000000000000-000-00000000000000000000-0000000", "00-00000-0000000000000000-0-00000000-0000000000000", "0000000000000000-0000000000000-000000000-000000000", "0000000-000000000000000-0000000000-000000000000000", "000000000000000000000000000-0-000000-00-00-0000000", "-000000000--000000000000000-000000000000000000000+", "-0000000000000000000000-00000000000-00000-000000-0" };
    assertEquals(11, strangeparticles.remain(interacts));
  }

  @Test
  public void case18() {
    String[] interacts = { "0+00000000+0000+0000+0+000+00+00000+000000++00000+", "-00000+00+0+0000000000++00000000000+00++000000000+", "00000000000000000000+000+00+000000+0000+0000000+00", "000000000000+00000000+0000000000000000000000000000", "000000+000000000000+0000++0000000000+0000+0+000000", "000000000000000000000000000+00000000+0000000000000", "0-00-00000000+0000000+0000000000000000000000000000", "000000000+000000000000000000+00+000+0000000+000000", "000000000000000+0+000+000+000000000000+0+00000+0+0", "0-00000-000000+00000000000000000000000000000000000", "-0000000000000000000000000000000000000+00000000000", "0-0000000000000+00000+0000000000000000000000000000", "000-000000000000000000000000+0+00000+00000000+0000", "000000-00000000000000000000000000000000000+0000000", "000000000-00000000000000000000000000000+000+0000+0", "-0000000-00-000000+00000000000+00000000000000000+0", "00000000000000000000000000000000000000000000000000", "00000000-000000000000000+0+00+000000000+0000+00000", "000000000000000-00000000000+0000000000000000000000", "0000-0000000000000000000000+0000000000000000000000", "-0-000000000000000000000000+0000+00+0+000000000000", "000-00-0-00-0000000000000000000000+0000000000000+0", "--000000000000000000000000000000000000++00+0000+00", "0-0000000000000000000000000000+000000000000000+000", "00-0-000000000000-000000000+0000000000000+00000000", "0000-000-0000000000000000000+00000000000000000000+", "-0000000000000000-0000000000+0000000+000000+000000", "00-00-000000000000---000-000+0000+0000000000+00000", "0000000-0000-000000000000---0000000000000000000000", "-0000000000000000-000000000000000000000+0000+00000", "000000000000-00-0000000-00000000000000000000000000", "0000000-000000000000000000000000000000000000000000", "00000000000000000000-0000000000000+0000000000+0000", "000000000000000000000000000-000000000000000000+000", "00-000000000000000000-0000000000-00+000000+00+0000", "--00000-000000000000-0000000000000-000000000000000", "0000--000000-0000000000000-00000000000000000000000", "00000000000000000000-00000000000000000000000++0000", "0-000000-0-00000000000-000000000000000000000000000", "0--00000000000-00-0000-000000-0000000000+000000000", "00000000-000000000000000000000000000000-0+00+00000", "0000-0000000000000000000-000000000000000-000000+00", "-000000000000-00000000-00000000000-0000000000++000", "-000-00-000000-00000000000-00000000000000000000000", "00000000000000000-000000000-0-0000000-00-000000000", "000000000000-0000000000000000000-0-00-0000-0000000", "00000000-00000000000000-000000000-00000000-0000000", "00-0000000000000000000-000000000000000000-00000000", "00000000-00000--00000-0000000000000000000000000000", "--00000000000000000000000-000000000000000000000000" };
    assertEquals(14, strangeparticles.remain(interacts));
  }

  @Test
  public void case19() {
    String[] interacts = { "00000000000+0000000000000+00000000000000+0+00000+0", "000000000+0000000000000000+0000+000000+0+00000+000", "0000+000000000000+000+000++000000000000+0000000000", "00000+000000++0000000000000+000++00000000+000+00+0", "00-00000+00000000+++00000000000+0000+0000+00000000", "000-00000000000+00000000000000000000000000+0+00000", "000000000000000000000+00000++00000++00+0000++0000+", "0000000000000000000000+000000000+000000000000000++", "0000-0000+00000+00000+0000+0+000000000000000000000", "0-000000-00000000+0000+0000000000000000000000+0000", "000000000000+0000000+0000000000000+000000000000000", "-0000000000000+00+00000000000000000000000000000000", "000-000000-00+0000000000000000000000000000000000+0", "000-00000000-00000000000+00000000000+0000000000000", "00000000000-00000+000000000+0000000000000000000000", "00000-00-0000000000000+000000+0000000000000+0+00+0", "00000000000000000000000000+00000000000000000+00000", "00-0-0000-0-00-00000000000000000000000000+0+000000", "0000-00000000000000000++0+00000000000+00000000000+", "0000-00000000000000000000000000++000000++0000000++", "0000000000-00000000000000000+000000000000000000000", "00-000-0-0000000000000000+0000000000000000+0+00000", "0000000-0-00000-00-0000000000000000000000000000000", "000000000000000000-000000000000000+0+000000000000+", "0000000000000-000000000000+0000++00000+000000000+0", "-0-000000000000000-00-000000000000000000+000000000", "0--00000-0000000-0000000-0000000000+0+0+0000000000", "000-00-0000000-000000000000000000+0000000000000000", "000000-0-00000000000-00000000+00000000+00000000000", "000000000000000-000000000000-00000+0+0000000000000", "0000000000000000000000000000000000000000++00+0000+", "0-0--00000000000000-0000-0000000+0000+00000+000000", "000-000-00000000000-0000-000000-00+000000+00000000", "000000000000000000000000000-0000000000000000000000", "000000-000-000000000000-00000-00-0000+0000000000+0", "000000-0000000000000000000-00000000000000000000000", "0000-00000000-000000000-00000-0000000000000000+000", "000000000000000000-0000000-0000-00-000000000000000", "0-0000-00000000000000000-000-00000000000+00000+000", "00-0000000000000000-000000-000000000000000000++++0", "--00000000000000000-00000-0000-0000000-00000000000", "000--000000000000-000000000000-0-00000000000+00000", "-0000-000000000000000-0000000000000000000000000000", "000000-00000000-0-0000000000000-00000000000000000+", "00000--000000000-0000-00000000-0000000000-00000000", "000-00000-00000-00000000000000000000000-0000000++0", "0-0000000000000000000000000000000000-0--0000000000", "000000000000000000000000000000000000000-00000-0000", "-00-000-0000-00-000-0000-000000000-0000-00000-000+", "000000--0000000000--000-000000-000000000000-0000-0" };
    assertEquals(10, strangeparticles.remain(interacts));
  }

  @Test
  public void case20() {
    String[] interacts = { "0000000000+0000+000000000+000+0000000000000+000000", "0000000000000+00000+0000000000000000+00000000000+0", "000000000000++000000+0+000000+00+000000000000000+0", "00000000+0000+00000000000000+0000000000000000+0000", "000000000000+00000000000000000+00000000+00+0000000", "00000000000000000+0000000+000000000000000000000000", "00000000000000000000000+00+0000000+000000000000+00", "000000000++000000000+0000+00000000000000000+000000", "000-00000000+0000000+0+00000000000+000000000000000", "0000000-000++0000+000000+00000+0000000000000000000", "-000000-0000+000000+0000+000+000000000000000+00000", "000000000-000000000+00000000000000000+0+000+0++000", "00-0-000---00+0000+00000+0000000000000000000000000", "0---00000000-00000000000+000000000000+0000+000000+", "0000000000000000000+00000000+000000000000000000++0", "-000000000000000000000000000000000000+0000+0+0+000", "0000000000000000000+0000+000000000000000000000+000", "00000-000-00000000000000+00000000++000000000000000", "000000000000-00000000000+0000000000000+000+00000+0", "0-00000000--00-0-000++0000+00000+00000000++00+0000", "00-0000--0000000000-000+000+000000000+000000000000", "0000000000000000000-0000+000000000000000000+000000", "00-00000-0000000000000000000000000+00++0+000000000", "000000-0000000000000-00000000000000+00000000000000", "000000000--0--00---00-0000000+00000000000+00000000", "-0000-0-000000000000000000000000+00000000000000000", "000000-000000000000-000000000+00+000+0000000000000", "00000000000000000000-00000000000000000+000000000+0", "000-000000-000-000000000000000+00+0000000000000000", "-0-000000000000000000000-0-000000000++00000000000+", "0000-0000-000000000000000000-00000000000+00000+000", "00000000000000000000000000000000000000000000000000", "00-0000000000000000-00000--0000000+000000000+00000", "00000000000000000-0000000000-0000000000000+0000000", "000000-0-00000000-0000-000000000-0000+0000000+0000", "00000000000000000000000-00000000000000000000+00000", "0-000000000000000000000000-00-00000000000000000+00", "00000000000-0-0-0000-0-000000-0000-000000000000000", "000000000000000000-000-0000-000000000000000000+00+", "0000-000000-00000000000000000000000000000000000000", "0000000000000000000000-0000000-000000000000+000000", "0000000000000000000-0000-0000000000000000000000000", "0000-00000000-0-00--0000000000000-0000000000000000", "-000000-000-000000000-000000000000000000-000000000", "0000000000-0000-0000000000000000-00-00000000000000", "000-0000000-0000000-00000000000000-000000000000000", "00000000000-000--0000000000000-0000000-00000000000", "000000-0000000-000000000000000000000-0000000000000", "0--00000000000-000-00000000-0000000000000000000000", "0000000000000-000000000000000-00000000-00000000000" };
    assertEquals(12, strangeparticles.remain(interacts));
  }

  @Test
  public void case21() {
    String[] interacts = { "00000000000000000000000+00000000000000+0000000+000", "000000000000+00000000000+00000+0+000+00000000+0000", "0000000+000000000000000000000000+000000000000+00+0", "00000000000000000+0000000000000000000000000+000000", "0000000000000000+00000+0000000000+000000+000000000", "000000000000+00++00000+0+00000000000000+0000000000", "000000000000000000000000000000000000+0000000000000", "00-0000000000+000000++0000000000000000+00000000+00", "000000000000000+00000+0+000000000000000000+00+0000", "00000000000000000000000++000+0000000000000000000+0", "0000000000000000+0000000000000000000000+0+0000+000", "0000000000000000+00000000000000000000000++00000000", "0-000-000000000+000000000000+0000000+000000000++0+", "0000000-00000000000++0000+0000000000000+00000+0000", "0000000000000000000000000000000000000000000000000+", "00000-00-000-000+00+000000000000000+000000++0+000+", "0000--0000--000-00000000000000000++000+00+0+000000", "000-00000000000000000++0000000+00000+0000000+00000", "00000000000000000000+00000000000000000000000000+00", "0000000000000-0-00000000+00000000000+0000000+00000", "0000000-00000-0000-0000000000000+00000000000000000", "0000000--00000000-000000+0+0+000+00000000000000000", "0000--00000000000-00000000000+00000000000+00+00000", "-0000000--00000000000000000000000000000000000+0000", "0-000-000-000000000-0-000000+00+00000000+000000000", "0000000000000-0000000000000+0000000000000000000000", "000000000000000000000-0000000000000000000000000000", "0000000000000000000000000-000000000000000000000000", "000000000-00-00000000-00-0000000+00++0000000+00000", "0000000000000000000000-0000000+0000000000000000000", "0-000000000000000-00000000000-0+0000000+0000000000", "000000000000000000000000-00000-000000+000000000000", "0--00000000000000000--000000-000000000+000+0000+0+", "0000-00000000000-000000000000000000000000000++0000", "0000000000000000-0000000000000000000000+0+00000000", "000000000000000-000000000000-000000000++00000000++", "0-0000-00000-0000-0-00000000-00000000+0000+0000000", "0000000000000000000000000000000-0000-0000000000000", "-000000-00000000-000000000000000-00-000000000+00+0", "00000-0000-00-0000000000000000-000--00000000000000", "0000-000000-000000000000-00000000000000000000000+0", "0000000000--0000-00000-00000000000-000000000000000", "00000000-000000-0000000000000000-000-000000+000000", "000-00000000000--0000000000000000000000000-0000000", "00000000000000000-0-00-00000-0000-0000000000000000", "0--00000-0000-0-0000000-000000000-0000-0000000+000", "-000000000-0-00000000000000000000000000000000-0+00", "0000000-0000-00000-0000000000000-0000000000000-000", "00-000000-0000000000000000000000000-00-0-000000000", "000000000000-0--0000000000000000-00-00000000000000" };
    assertEquals(10, strangeparticles.remain(interacts));
  }

  @Test
  public void case22() {
    String[] interacts = { "0000+00+0000000000+000000000000000000+000000000000", "0000000000++0000000000000+000+0000000000000000000+", "00000000000000000+000000000000000000000000000++00+", "0000000000000+0000000000000+000000+000+00000+00000", "-00000000000000000000000+000000+000000+00000000000", "000000000000000+0000+000000000+0+000000000000000+0", "000000000+0000000000+000000+00000000+0000000000000", "-000000000000000+00+00000+00+00000000000000000+00+", "00000000000000+00000000+0000000000000000000000000+", "000000-00000+00+000++0+0000000000000+0+00000000000", "0-00000000000+000+0000+00000+0000000000+0000000000", "0-00000000000000++00000000000000000000++000000+000", "000000000-0000000+00+000+0+00000000000000000000000", "000-000000-000+000000000+000+00+0+00+00+000000000+", "00000000-0000-0000000+0000000000000000000000+00000", "00000-000-000000000000++00++000000000000000++0000+", "0000000-000-00000++0000000000000000000+00000000000", "00-0000000---000-0+0000+00000+000+0000000000+00000", "-000000000000000--00000+0+00+000000000000+000000+0", "0000000-0-0000000000000000+000000+00+0000000000000", "00000--00-00-0000000000000000000000000000+000+0000", "00000000000000-0000000000000000000+000000000000000", "000000000--0000-00000000+0+000000+00000000+0000000", "00000000-000000-0--00000000000000000++000000000000", "0000-0000000--00000000-00000000000+0+0000000000000", "0-00000-0000000000-0000000+000000000000000+0000000", "000000000000-00-000-00-00-000000++000000000+000000", "000-00-00000000-000000000000000000000000000+000000", "0000000-00-00-0000-0000000000+00+000+00000+0000+00", "0-000000000000000-0000000000-0000000000+000+000000", "00000-0000000000000000000000000+00000+0000+0000+00", "0000-00000000-0000000000000000-0000000000000000000", "00000-00000000000000000000-0-0000000000000+0000000", "0000000000000-000-0-00-000-00000000000000000000000", "000-00000000000000000-00-0000000000+000+0000000000", "0000000000000000000000000000000000-00000+000+00000", "000000-00-000-00000-000--000-000000000000000+0+000", "-0000000000000000000000-000000-00000000000000+0+00", "000--0000-0-0000-000000000000000000000000+0000000+", "0000000000--0-000000000000000-0000-0000000+0000000", "00000000000000000000000000000000000-00000000000000", "000000000000000000-0-00000000000000000-00000000000", "0000000000000000000000-00-00-0-0-000000-000+000000", "000000000000000-0000000000--0-000000000000-0000000", "000-0000000000--0-00000000000000000--0000000000000", "00-00000000000000000-0000000000000000-000000000000", "00-0000-000-000000000000000000000000-0000000000000", "0000000000000000000000000000-0-000000-000000000000", "00000-000000000000-0000000000000000000000000000000", "0--0000--0000-0-0000000000000000000000-00000000000" };
    assertEquals(11, strangeparticles.remain(interacts));
  }

  @Test
  public void case23() {
    String[] interacts = { "00+00000000+00000000000000000+00000000+000000+00+0", "000000000000000000000000000+0000000000000000000000", "-0000000000+0000000000+0000000+00+0000000000000000", "0000000000000000000000000000000000000+000000000000", "0000000000000000+00000000000+0+00000000000+0000000", "00000000000+0+00+000000000+00000+00000+00000000000", "000000000000000+000+++0000000000000000+0000+00000+", "00000000000000+000000000000000000+0000000+000+0000", "00000000000000000+0000000+000000000000000+00000000", "0000000000+000000000+00000000000000000000000000000", "000000000-00000000000000000000000+00000+00+0000000", "-0-00-000000000000+00+00+000+00+0++00000000000000+", "0000000000000000++000000+00+000000000++000000+0+00", "00000-00000000000000000000+000000000000+00+0+00000", "0000000-000000000000000000000000000000000++00+00+0", "000000-000000000000000000000000000000+0000+000+00+", "0000--000000-0000+00000+00000000000000000000++0000", "00000000-000-000-000000000000000+000++000+00000000", "00000000000-00000000000000000000000000000000000000", "000000-00000000000000000000000000000000+00000+0000", "000000-00-0000000000000+0000000000000+0+0000000000", "000000-0000-0000000000+0+00000+000000000000+000000", "00-000000000000000000-000000++000000000+00000+0000", "0000000000000000-000-00000000000+00000000000000000", "00000000000--00000000-00000000000+000000000+0000+0", "00000000-000000000000000000000000000+000000000000+", "00000-0000000-000000000000000+00000000000000000000", "0-0000000000-000000000000000000000000+++0000000000", "0000-000000-0000000000-0000000000+0+00000000000000", "-000000000000000000000-000-0000000000+000000000000", "00-0-0000000000000000-000000000+000+0000000+00+000", "00000000000-000000000000000000-000000+0000+0000+00", "00000-00000000000-00000-0000000000000000+000000000", "00-0000-00--000000000000-000-000000000000000000+00", "00000000000-000000000000000000000000000+000+000000", "0000000000000000000000000000-0-000000+00000000+000", "00000000000000000-0000000-000000000000000000000000", "000-00000000-00-0-00-000000-0-0-000-00000000000000", "-0000--00000-00000000000000-0000000000000++00000++", "0000000000-00-00000--0-0000-000000-00000000000000+", "00000000000000000000000000000000-00000000000000000", "0000000--00000-00-00000000000000000000-00000000000", "0000-00000-00---000000000000000-000000-00000000000", "000000-00000000000000-00-00000-000-0000000000000+0", "0000000000000-00-000000000000000000000000000000000", "-000000-0000-0-0-00-00-000000000000000000000000000", "000000000000000-00000000000000-0000-000000000000+0", "000000000000-000000000000000000-0-0000000000000000", "-0000000000000-000000000-0000000000000-0000-00-000", "000000-0000-000-000000000-000000000000--0000000000" };
    assertEquals(11, strangeparticles.remain(interacts));
  }

  @Test
  public void case24() {
    String[] interacts = { "0++00000+00+0+++0000++000+00+++0++00+0+00+0++00+++", "-0+++00+++000000+0+000++00+00+000+0+0+00+00+++++0+", "--0+0++000++++0+00000++000000++000000+00++000+++0+", "0--00+++0++0000+0+0+0000+0000+0000000+000++0++0+00", "0-000+++00000++0+0+0000000+00+00000++00000++0+000+", "00---000+00++0000+0000000000+0+000+0++++000++000+0", "00---0000++++00+00+++000000+0000+0+00+00000+00++00", "0-0--000000000000+0+0++++0++0+00+00+00000+0+0++00+", "--000-000+0+00+00+0+++00+0+000++000++000000+++0000", "0-0-00-0-00000000000+0+00++++00+++++00+++0++++++00", "00--00-0000+000++++0+000++++0+++000+0+++0+000++++0", "-0-00--0-0-0+00000+0+0+0++0++00+0+++0+0000000+0000", "00-00--0000-00+000+0+0+++00+0+000++0+00+000+0000+0", "-0-0-000000000000+0000++0000++0000+++0+00000+00000", "-000-000-000-0000++000++++0+00++0000++0+0++00+0+00", "-0--00-000-00000000++0+++0000+0+000000+000+00+0++0", "0-00-00000-0000000+000000++00+0+000+0+0+0+0+00+000", "000-0-0--0-00--00000+00+0++0++0000+00000000+0+++00", "0-00-0-000---0-0-00+000+000+0000++00+0000+0++00+++", "000-00---000000-00-00+000+0+00+000++00+000+00++0++", "-00000-0-----00-0-000000++0+00000++0+00+00000+0+0+", "-0-0000--0000000000-00++0000++0+0+00+0++0+0+0++00+", "0--0000-0-0-----00000-00++00+000++00+00000+00++++0", "0-00000-0000----0--00-000000+000+00+00+00000000+00", "000-000--0---0--0000-0-000+0+00+0++0+000+0+0000+0+", "-00000000---00-0--0--0-000000000+++00000++++0+++++", "0-00-00----00000--000000-00+0+00++0+0+++000+0+0+00", "000000--0----0-000---00000-00+++0++000++0000+++++0", "-0000-000-0-0-000-000----0000+++++000+00+00+0000++", "-----00-00-0--0---000-0000---000++0+0++00++000000+", "-0-00-00-0-000-0000-0000000--00+00+00+++0+00+0000+", "00000000----00---0000-00-00--0-0+00000+00++000000+", "-00000--0-00000000-000--0--0--0-000+000+++00++0000", "--0000000-0--00000-0---0------000000++000++000+0++", "00000--00-0---000-0--000--0-00-0000+0+0+00++++000+", "0-00-00-----0-00-00-000-00-00-00-0-000++000++00000", "-000--00-000---000-0---0-00000000-0000+00+00000000", "0---0--000--00-0-000000000-0---00--000000+0000000+", "-0000-000--00-0-000-0-0-00--0---000--000+00+000+00", "00000-000--0-0-0-000--0000--00-0-0--0000000+0+++++", "0--000000-00000000000000--00-000-00000-00000+00000", "-0--000-00-000-0-0-00-000-000-----00--0000++0+++00", "000--0000-0000--000-00-0--000-0-0--000000-0+0+000+", "--00------00-000---00-000--0-00000--00--0--0000+00", "--0-0-00--000-0000-00000000-00-0-0--0000-0000+0+++", "0----00-----00--0-0----00---0000-0-0000-0--0-0+00+", "0--000--0--00000--0-0--00-0-00000-00000-0-000-0+00", "----00-00--000--0--0-0------0000000000--0-0--0-00+", "-0000-0000-0-00-00--00-00-0--0000-00000-0000-00000", "---0-00-0000000000----00--00----0--00-0-00-0--0-00" };
    assertEquals(2, strangeparticles.remain(interacts));
  }

  @Test
  public void case25() {
    String[] interacts = { "0000++00+00+00+000+000++++00000000++++000+00+0+000", "00+000++000+0+++00+++0+00+000+0++000000++000+0000+", "0-00000000+0000+000++0++0+000000+0000+0+0+00000++0", "00000000+00+00+0000+++0++00+00+++00+++00++0++0+00+", "-0000000++0000+++000++0000+0+000+0+0000+0000+0000+", "-00000++00+++00+0+0+0++000++0+++0++0000+0+00+0+0+0", "0-000-0000++0000000+0+++00+00+++++0+00000000+0++++", "0-000-00++0000+0+000+++00+0++00+++0000+0+00+++000+", "-00--00-0+00+00++0+++000+0000++0+00+++0+++++0+00+0", "0000-00--0+0000+00++000+0000+0++00000++0000++00000", "00-00--00-00000+00+0+++++00+0+0+000000000+000++00+", "--0-0--000000++++0+00+00++00++0++0++00+00+00++000+", "00000-00-000000+++0000+00+++0++00+0+0+00++0+++000+", "0-000000000-00++0++00+++0+00+++00000000000++0+00++", "--0--00-000-0-000+++++0+00+0+0000+0+0++0+000000+00", "0--0--00------00000+0+00+0+00+0+++00+0000++0++00+0", "0000-00--00--0000+00+0+000+00+0+00+++00+00++00++++", "00000-000000---0-0++000+000++++0++++0000+000000000", "--000000----0--00-0000+0+00000++000000+00+00+0+0++", "0---0--0--0000--0-00+++0++00000000000000++00+0+000", "0----00--0-000-0-00-00+000+00000+00++0++0++0+0++0+", "000-----00--0---000-00000+++00++000++000000++00++0", "---00---00-0--00-0---000+00++0+0+00+000000+++000+0", "-0--00-00--00--00-000000++000+0+0+000+00+0+++00000", "-00-0000-0--000-00--00--0+0000000+000+00+0+++00+00", "---0000-000---00000-0-0--00+000+000+00+000+000+000", "0000---00000-0---000--000000+0+00++0000+0000++++00", "000-0-0-00-0-0000-000--00-000++0000+000+0000000000", "0000-00-0-0-0--00-0000-000-000++00+000+00++00++00+", "0-000--0-0----0---00000-000-00++++0+00+00++0+00+++", "000-0--0--00--000--00--000----0+000+000+0+0+0+0+00", "0-0-0---0---000--0-00-0-0-00---00+++++00000+0+0000", "0----0---00-000-0-00-0-000000-000+0+++0+0+0++0++00", "00000---0000-0--0-00000--0-00-0--0+0++++0+000+00++", "-000--00000-0000--00000000-0-00-0-0+0000000++0+00+", "-00-00-0-00--0-0--00---00-0-0----0-0000000++0+0++0", "-00-0000-000000--000--000000000---000+000+00++000+", "-0--0000--00-0-00000000--000000---00-00+++000+++++", "0000000-0-0-00-000-0-0000-00--000-000000+00+++000+", "0--0--00-0000000-000-00000--00-0--000-00+0+0++00++", "0-0-000--000-0-00-0-000--000000000000---00+0+0++0+", "-0--0-00-0---00-00---0000000---0--00--00000+000+00", "00000000-0000-0--000-0----00--00000-000--000+0++00", "000-000---00--00-0000----00000---0--00-00-00++0000", "--0-----0-0--00-00-------0-00-00-0-0-0---0--000+00", "0000000--0----0-0000000000-0-0--0-0-----000-00++00", "-00-0--000-00000-0---0000--0-000-0-00-00-0-00-0+00", "00-000-0000000-0-000--00-0-00--0-00-0-00---0---000", "00-00--0-0000-0--0-00--000000-000-0-0-0-0000000000", "0-0--0--00----00-0-0-0000000--000--0-----000000000" };
    assertEquals(3, strangeparticles.remain(interacts));
  }

  @Test
  public void case26() {
    String[] interacts = { "00+0000+++0+++00+++0000+++0+0++00+00+00+0+00+000+0", "0000+000+++00++0000+00+0+000000++0+0+00+00000+00+0", "-00++0000000+0+00000000+0+0000000+00000++0++0++00+", "00-0+00+0000+0000++++00+00+++++0++0+00+00+00000+0+", "0---00+0+++00++++00+000+0+00+++0+0+++000++0++0++++", "000000++000000+000+0++00+00000000+0+0+0000+0++0000", "0000--0+0+++00+0+0000+00+0++0000+0+++0+00000++00++", "-00-0--00000000++00++++00++000++000000000+0+00++00", "--00-0000+00++000+0+0+0+00+00000+0000++0+0+++0++00", "--00-0-0-00+0+++00+0+00+++0000+0+0+0+00+++++0++000", "0-00-0-0000+0+0++00+0++000000+0000+0+0++0+0+0++000", "-00000-00--0++++0000+000+00+0000000000+0+++00++0+0", "-0--0000-00-00+0+0++0000+++0+00++++0+00+0000000+++", "--00-000----00+00000++00+00++0++00000+++000++0+000", "0--0---00-0---0+00++0+00++00+0++00000000000000+++0", "0000-00-0---00-000++00+0000+00+000000++0+00++0++0+", "-000-0--00-0-00000++++00++0++0+0+++++00++00000++0+", "-00-0000-000000000+000+00+++00++0+0++000+0+++00+00", "-00-0-000-00-0----0+++000+00+00++0+0+00+0000++00++", "0-0--00--0-0-0---0-000+++0++000000+000+0+++000+0+0", "000-0-0-0-0-0-00-0-00+++000+0+00++00000+000++00000", "00000----0-00--0-0-0-0+00000000+000+00+0000000+0+0", "0-00000-00-0000-0-0---0000000000+000+00000+++++00+", "-0---000--000000000--000000000000++00+00000++0+000", "--000--00-0----0-00-00000+000+++00++++0++0000++0++", "-0-0-00-0-00-0-0---00000-0+0+++00000++0000000+000+", "000-00---000-0000-0-00000-0+++000+00+0000+00+0+00+", "-00-00-0000-0-0---0--00000-0+00000+000+00++00+0++0", "000--0000000---0-0-000000---0++0++000++++00000++0+", "-00--00000-000000000-000---0-0+0++0+00+000000+++0+", "-00--00-0-000-----000000--00--00++0+00+000000++++0", "0-00000-0000---00--00-00-00000000+0000+00++0+000++", "0-0--0-0--00-000-0-0-0-00000---000+0++00+0+++0+000", "-0--0-000000-000--00-00-00-0----000000++0000+00+++", "0-00-0-00--0-000-0--000--00-0000-0000+000+0++00+00", "000----000000000--000-00-0000--00000+000++000+00+0", "--00-0-00--0-000---000-0---00000-00-000000+++0+0++", "00000-00-0000-0-0000000---00-000-0-0000+000000+00+", "000-00-0-0--0-0-000-0-00000-----0-0000000000+000+0", "---000000--0--00-0-0-000-000-0000-000-00+00++0+000", "00-0-000--0-000---0-0000-000-000-00-000-0000+000++", "-00--00-0---0000000-000000--000-00--00000000+00+00", "00-00-00--0-00000-0-00-0000-000--000-0000000++00+0", "00-0-00----00-0-0-00-0--00000000-0-0-00-00000+000+", "-000---0-0000-0-0--0-0--00-0000----0-0-----000+0++", "0--00--00---000000-000-0--0-0--0000-000000--00++++", "00-0-00-----0----00-0----0-0---0-000--0-0000--0+00", "000--00--000-0----000000000----00--000000-000--000", "--00-0-0000--0-000--0-00-00-00--0-0--0-0-0-0--0000", "00---0-00000-00--0-000-0---0--0-0-00--00-00---0000" };
    assertEquals(3, strangeparticles.remain(interacts));
  }

  @Test
  public void case27() {
    String[] interacts = { "0++000+++0+0+00000+00+000+0+0+00+000+00000+00+0+++", "-00+000000000000+00+000++000+00+++0++++0+0++00000+", "-00++000++0+++0000000+++0000+++++000000+000++0+++0", "0--00000000000+00+0+++000+00+0++000+000+++0++00+++", "00-00+0++++0+0+0000000+00+0+0+++000000+0+00+00+++0", "0000-0+00+00+0000+00000+0+++000000+0+00+0++0++00+0", "-0000-0+000000+0++++0000+++0+000000+000+0+00000++0", "-000-0-0+00++00000++00+0000+0+0+0++00+00+00000+000", "-0-0-00-0+000000+00+++0000++0+0000+000+++0+0+000++", "00-0--00-0++00+++0++00+000000000+00+0+00000++00++0", "-000-0000-0++0000000000+0++00+0++0+++00++0000000+0", "00-0000-0--00+0000++0000+0+0++000+00000+00++0+0++0", "-0-0--0-00-00+0+00+00+0+00++0+0000++00000++0+000+0", "00-00000000--00000+00+0++00000+0+0+0++0++00+000000", "000--0-00-000000+00+++0++00+0++++0+++0000+00+000+0", "000000000-00-0000++0000000++++0000000+000+00000++0", "0-0000-0--0000-000+0+0+0+++0+0+000+++0+00+000+000+", "000-0--00000000-0000+0+++0000+00+++00+0000+++0++00", "-00000--0-0---0--0000000+00++0+00+000+0+00+00+000+", "0-0-00----0-00-00000000000+000++0++000+++0000+0000", "000-0000-00000-0--0000+0+0+0+00++000+000+000000000", "-0--0000-000---00000000++++000+0+0+++0++++0+00+00+", "00-0-00-0-000000--00-00000+0++++++00+00+0000+00000", "0--00-0000-0---00-000-00000+0++0++0+00+000+000+00+", "0-0000-0000-0--0---0--000+00+00++++0+++00+00+00+00", "-00----000-00000-0000-00-0+0+00+0++00++0++0++00++0", "00000--0-0---00--00----00-0000+00+00++++++0000++0+", "-000--0--000-0--00-0000-000000++0+0000000000++++++", "0---00-0000-000--0-0-0-0--000+0+++0++0+000+0000000", "-0-0-00--0---0--0-0000--0000-0+0000+000+00+0+0++00", "00---00000000--0-0--0---00--0-0+00++00++00++0+000+", "0----00-00-000-0000--0-0--0--0-00+000++0++++000+0+", "---000000--00--00-00-----000-0000++0++0+00++00000+", "0-00000-000-00000---00-------00--00++00++000+++0+0", "00000-0--0-0---0--0-0-00--0000-0-000+0+000+000++0+", "0-0-00-00--0-0-0-0000-0-0000---00-000000+00000000+", "--000-0000-00--0-000---0-0-0-000---00++00+00+00+0+", "0-00000-0-000-0-0--00000---0000--000-000+0+000+000", "0-00-000-0000000-00-0-0----0-0--00-0-0000+0++000++", "00--0--0-0--0-0000--0--000-00--0--000000+++++0++00", "0-0--00--0-00-00000---000--0000-0-0-0-0-00000+0000", "000-0--00000-0---0000-00---0000-0000-0--00+++00+++", "--000-00-00--0000--0000-0000-----0-00-0-0-0+0+0+00", "0----0000-0-0-000-000-000-0000---00000--0--0+0+00+", "00--0-00--00-0-00-0000-0--0-0-000-00-0--0-0-00++++", "-0000-00000-0000-0--0000000-00-00-000000-0-0000000", "00-0-00-000000000-000-0-00--0-000--00-0-000--000+0", "-0---0-00-0-000-0-000000----0-0-00-0-00-0--0-000++", "-0-----0-----0--000000000-0-00000-0000-00-00-0--0+", "--0-0000-0000000-0-00-0-00--00---0---0-00-0--00--0" };
    assertEquals(2, strangeparticles.remain(interacts));
  }

  @Test
  public void case28() {
    String[] interacts = { "0+000++000+++00++0+0++++++++++++000+000++++++0++0+", "-00+0++0++0+00+0+00+00++00+++00000++0+++00+00++00+", "00000000000000000+0+++00+0++000000+00+++00++0++++0", "0-0000+000+++00+00++0++00000+0000+00+000+00+0++0+0", "00000++0+0+00+00000+00+0++0+++0+++0++0000+0+0+0000", "--00-0+0000+0+0++++00+00+00++0+00+00++0000+++0000+", "--0---000++00+00+00+0++0+++0++00+00+00++0+++000+0+", "000000000+0++000+0+00000+000++0+000+0+00+00+00+00+", "0-00-000000000++++00++00++00+++0000000+0+++0+++0+0", "0-0000--0000+++00+0+0+00+00000+000000++000+00+0000", "-00--0-00000++0++00+0000+000++0000+00+++000000000+", "--0-0-0-0000+00+000+0+000+00++00+0000+00++00+000+0", "-00-000-0---0++000+0000+00+0+0+00+0++00+++00+++0+0", "0000---00--0-00++0+0+000000+++00000++0+0+0++0+0000", "0-000000--00-00+00++++00++0+00+000+00+0+0+0+0000+0", "-00-0-00-0--0--000+0++0+000000+00+0++0000000+000+0", "--000----0-00-000+00++00+00000000+00+++00++0++++0+", "00-00-00--000000-0000++0+++00++0+0+000+++000+00000", "-00-0-0-0000----00000+0000++00000+00+00000+0+0000+", "0----0-00---00-00000+0+0++++000+0++++00000+0000000", "-0-00000-0000----00-0+0+00++0000+00+++00+++0++0000", "-0--0--0--0-00-----0-00+0+0+00000++00+000000+00++0", "--0--0-0000000000-0-00000+++00++000+++++00+0++++00", "--0000000000-00-0000--0000+0+++0000++0+00+++0++000", "-0-0-------000-0--0-0000000+0000000++0+00+000+000+", "-000-0-0-00-00-00-0-0--000+++00+0000++00+0+00+00++", "---000-00000-0000----0--0-00+00+0+00+0++00++++00++", "---0--0000000--000-----0--00+00+0++0+00+0000+00+00", "--0------0----000000000-0---00000+00++00000+000000", "-000-0---0--0-000-00000-00000000+0+0000+000++0++00", "-0000-00--00-0--0-0000--0000000+0++00+000000000++0", "-000-00-00000000000-00-00---00-00+0000+000+0+000++", "0000-0-0000-00000-00-00000000-000++0000+00+00++0+0", "000---000000-00--0--0-0000---0---00000++00++00+000", "0--0000000-000-00-0-0-00000-0--0-00++000+0+++++0+0", "--00-0--0000--0-000--0---000000000-00+00++00++++00", "000---000000--0--0---0-------00000-00++00+++00+0+0", "0--00-0-0---00-0-000---00-00-0-0000--00+0000++00+0", "0--000-0---00-00--0000---0-0000-0-00-0000000000+0+", "---000-000-0-0-00-0000-000--0-00--000-00++00000+0+", "-00-000--00---000-00-0000-00000000--000-0++++0++0+", "-000-0-0-00--0-0-000-00--0000000000--00--000++++00", "---00--0--000-00-0---0--0--0000----0-000-0000+++00", "-0------00000--00000000-00-0--000--0-000-000+0000+", "-0000-00-00--00----0---000--0-0-00--0-00--0-0000+0", "0----000--00--00-000-0-----00000-0--0-000--0000000", "----000--000-000-00000--00000-00-----000---0000+0+", "-0-000-000000000-0000--0000-0--0000-00-----000-00+", "00--0000-00--0--00000-000--000---0-0--000000-0000+", "--000---00-00000-0-00000---0000-000000---00-00---0" };
    assertEquals(2, strangeparticles.remain(interacts));
  }

  @Test
  public void case29() {
    String[] interacts = { "000++0++0+++0+++00+++00+0++0000000000000+0+0+++0++", "00000++0+++++000+00+0+0000+0+00+000000+0++0++0+0+0", "000++0+00++00+000++00+00+++000+000+0++++0+++0++000", "-0-0+++++0+0++0+00000+0+0+++00+++0+000000++00++0++", "-0--00+0+000+0000+++000+000+000+0++++0000++0+000+0", "0-0-000+000+00+++000000000+0000+00000+0+0++0+00+00", "-----000+000++00+0000++000++++00+0+++0+0++0++0++++", "-00-0-000+00000+0000+++000000++0+000+000000000+0++", "0-0--0-00+00000+0+00++0+0+++++00000+0000+0+0+00+++", "---0000--000+0+00+00+0++00++0++++++000+0+++00+0+00", "----00000000+0+0+00++000000+000+00+0+0+0+0+000+000", "--000-000000+0+0+++000000+00+0++0+000000+000000+++", "0-0--0-00---0+0000+0000+000000+000+00000+0+++000++", "-0--00-00000-0++0000+00++0+0+00++00++00000000+0++0", "-0000-000---0-000+000+0+0++++0+0+0000++0000+00+000", "-00-0-0--0000-000+00+++00+000+0++000+00+++++++00++", "0-000--000--0000000+00+++0++0+0++0000++00000+0000+", "00-0-000--0-00--000+0+0000000+0+00++0+00++0++000++", "-0-0-000000--000000+0+++++0+0+0000000+++0000+000++", "--00-00000-00000---0++0+0++0++0++0+0+00++0+0+00+++", "-000000----00-0-000-0+00++++++0000++++000+0000+0+0", "0---00---00000--0----0+0+++++0000+++0+00+0+0+00+00", "000000--0-00000--0-00-0++0+00+++++0+00+0+00+0+000+", "-00--000--00---0-0--00-00+00000000+0+0++++0+000+0+", "00-0000000000-00-0-0---000++000++00000++0+++000++0", "-0--0000-00-00--00----0-00000+0+++00+0+0+000000+00", "----0--0--000--0-00----0-00000000+++0+++0++0++00++", "000--0-0---000-0-0-0--00-000000+0+0+00000+0+0000+0", "0-0000-0-00-0--0000---0000000+0+0000+++000+0++00++", "000000----00000------0-00-00-00++0+0+0+0000+0+0+00", "00--000-0-0--0-0000000-00000000+0++0000++++++0+0++", "0-0---000---0-0---0-00-0--0----0+0++0+000+0+0++0+0", "000-00--0-000----00-00-0--000-0-00++000+0+00++00+0", "0000-0000-0-000000000--00---00-00000000++0+++00++0", "00---0-00--0-0000-0---0-00-00----0000+00000+0+0++0", "0000-0-0-0000-000-00---000--000--000+0+0++00+0++0+", "00-0-0--00-00-0-000--00-0-00--00000-000+0+00+0+00+", "00-00-00000000-0---0--0000-0-00-00-0000++0+00+000+", "0--000-00--000-0-0-000-----0--00000-0000++0000+000", "00-00-000000000-00--000--0-000-0--00--000+0+++++++", "--0000-0-----00-0-0-0---0-0000-00-0-0--00+000+0000", "0------00-00000-0-00-00--0--00---00--0---000+00000", "-0----00---0-00-000-0-00-0-0-0-00-000-000000+00+0+", "0--000-00000-0--0-0000---00-0---0--0000-0000++++0+", "--00---0-000-00-----0-0000-0-0-0--0--00-0---00000+", "-0--00000-000-0-000000-000-0--0--0-00-0--00-00+++0", "----00--00-000-00000-000000000--000--0--000-0-0++0", "00000--0--0-0-00000-0-0---000-000---000-00--0--00+", "--0--0---00---0-0----000-0---0-----0000-00000--00+", "-00-00---00--00-----00--00-0-0-0000---0-00---00--0" };
    assertEquals(1, strangeparticles.remain(interacts));
  }

  @Test
  public void case30() {
    String[] interacts = { "00+000++00+0+0+++000+0++0++0++000+000+0000++0++000", "00+00+00+++00++0+00+0+0++0+0000+0000+0+00+0+0000+0", "--0++++00++++++00+0++0+0000+0+00+00+0+0+000+0+00+0", "00-00+00+00+0+00+000+000++0++0+00+000000++00++000+", "00-000000++0+0000000000++00000+0000++00++0++000++0", "0---0000+0000000+++00+0+0+0+00+00+00+0000+0++00+0+", "-0-000000000+0000++00+++0++0+0+000+00+00+++00+0+00", "-0000000+++00+0+0++0+00+0+0+00000+0+0++0+0+++000+0", "0-0-0-0-0000++000000+0+0000+0+00+0++000++00++000+0", "0--0-00-000++000+++0++00+++000+0++0000+000+0000000", "---0-00-0000+0++0+++000++++++00+00000+0000+++0+000", "00--00000-000+00+00+0+0+0+000000000+0+0+000+0++000", "-0-0-0-0---00+0+00+00000+00+000+0000+0+000000+00+0", "0---000--00--0++00++0++0++00+00000+00+0++++++0000+", "---0000000-00-000+0+00++0000+000++++0+00+0000++++0", "-000000-00-0--00000+0+000++0+++++++0++0+00+0+0+0+0", "--0-0-000-0-00000+0+0000+0+000000000+0+00+0000++00", "00-00---0--000-0-0000+00+0+00000+++0000000+00000+0", "00000---0--0--00000+0000+00+++000+0+00+000+0+000+0", "0--0000000--0----0-0++0+0+++000++000+0+++++00++000", "-0--000---000000000-00++00++000+00++0+0+000000++0+", "0-000--00-0-0-0-0-0-0000+000+00++00+0++0++0++00+0+", "-0-000-0-0000--00000-000000++0000++00++0+++++00++0", "--00----00--00-0000--0000000++00000++0000000+++00+", "0-0--0000--0--00---00-00000+0+0+00+000000+0+00++00", "-00-0---0---0-0-000-000000000000+0000+0+00+000+000", "--0000-00--0000---0--000000++++0+0+0+00+0000+0+++0", "00--0-0--0-0-00000---0-0-0-000+0+000+++0+0000000+0", "-00-00-000-00---00-00---00-00++00++00000++00000++0", "-0-00000-000000-00-0000--0-0-0000+0+++000+000++00+", "000----00-00000-0000000000---00000000+00+00+00+0+0", "0-00000000-0-00-000---00-00000000+00+0+00000++0+++", "00-00000--0000--0-0-0-000---000000+0+000+0+++00+00", "-00-0-0-0-0000--0--000-00000--0-00+0000000++++0+0+", "000000-0-0000---0-00-0-0-0-0-000--0+0+000+0+0+000+", "00-0-00--00-00-000-0--0-00000-0000-0+000++00+00+0+", "0-00--000000-00--00-000-00--0-0--00-0+0+++000+++0+", "-0-000--00--0---0000---00-0-0--000-0-0+++0+000000+", "0-00000-0-00-000-0--0--0000-000-00000-0+00000++0++", "00-0-000-00-0-0-000--0000--000000000---0++00000++0", "000--0---0000--0000-0--0000--0-0-00---0-000+0+0000", "0-0-0--000000-00-00-0--0-000--0000---00-000000000+", "-000-0--0--00-0-0---00-00-000000--000-00000+0000++", "---0--0--0--0-0000000--0-00000-0---00000-0-0000+00", "000-0-0--0-00-0-00-00---00-0000---0-00000000000+00", "-0--00-0000--0-0000-000-00000-0-0--0-0-0-000000++0", "-000000000--00---00--00----00--00000-0-00000000000", "0000---0000000-0-000---0-0-0-00---0--00-000---00+0", "0--0-00--000-0--0--000-000---0--000000--00-00-0-00", "000-0-0000000-000000--0-00000-0-0------00--0000000" };
    assertEquals(3, strangeparticles.remain(interacts));
  }

  @Test
  public void case31() {
    String[] interacts = { "0+00+00+0000000+0++0+0++000++0000+0+00+0++0+++++00", "-000000+0000++0000000000+00+0++++++++00+++000++00+", "0000+00+000+00+000+0+00000+0+00++00+0000000+0++0+0", "0000+00000+++0000+00+0+++00000+0000++++00+0+0+++0+", "-0--0+++00++0000+00000++00000+0+0++000+0+00+0000++", "0000-0++00+0+00++00000++++0++000000+0+0++0+00000+0", "0000--0+++000000+000000+0+0+00++0000++00++000+000+", "---0---00++00+00++00++000+0+00000++00+++0+0+00++0+", "000000-00000000+00000+0+00+00000+000000++0++0+0+00", "000000--0000+000++++000+++00+0++++++0++0000+000+++", "000---0-0000000+++0+0+000000000000++0+0+++++00+0+0", "00---00000000+00+0++00000++000+00000000+++000000+0", "0-0-0-000-00000++00000000+00++0+0++++000000+00++0+", "0-00000-000-0000+00++0000+00+0++000+000++00+0+0000", "00-00000000000000+00+0000+00+++0+0++00++000++0000+", "-0000-00-0-0-000++0++0+000000++000+++++000++0+++0+", "0000----0-----0-000++000000++0+00++0+0++0+0+00+0+0", "-00-000-0--000--00000++0+0+0+++00000++0+00++++++++", "-0-000000-0-00000000+0+00+0000000000000++000000+0+", "000000000---0-0--000+0+0+0++00++0000+000+0+0++0000", "-0--000-00000----0--0+0000000++++0++0+000+0++0+0++", "0000000--0-000000-00-000+0+0+000+++++00++00+++00+0", "-00---000000000-0---00000+000++000+00++0+++++00+++", "-00----0--00000000000000+00+00000+0000+0+0+00+0+00", "0-0-0-000-0000000-0-0-0-00+0++0+0+0+000++0+0000000", "00000---0-0----000-000-0000+0+00000+0+0++000+0000+", "00-00000-00-00000-0-0-00-00000000000+0000+++++00+0", "--000---00000000-00-000-0-00+++++000++00++00+0++00", "-0-00-000-00---0--000-00-00-0000++0++++0+00++00++0", "0-00-0000000-0--0-00-0-0--0-00+0000+0000+0000+0+00", "0-0-00-00-0-0-----0--0-0000-0-0+0+00+00+0++00++000", "0--0-0-00-00--00000--000-00-00-0+000+++00+++++00++", "0--00000--0000-00000--00000--00-00++00+0+0+0000+0+", "--00-00-0-00-000-0000-0--000-0-0000+00000+00++0000", "0-00-00-0--0-0---000---000000000-00+++0+0++0+0+000", "----0-000--0----0000--00--00--00---00+++00000+00++", "0-0-00-00000-00---0-0-0000---0--00-00+000++000000+", "000-0---0--0000-0-00-0-00-0--00-00---0+0000+++00+0", "-00--00-0-0000---00000--0000-00--00-0-0+00+00+0++0", "0-000-0--0--0--0---00-00--0000-000--00-0000+0+00++", "--00---0-0--0-0000--0-----0---00-00000000+0++000++", "--0-00--00--0000-000-0-000--00--0--0-000-00+000000", "00000-00-0-0000-0-0-00---0-000---0-0-0-0000+00+0++", "-0---00----0------00---000-0-00-00000-0----00+00+0", "-0000000000000-00-0----00----00-0--00-00-00000+00+", "----00-0-0000-0-0-0-0-0-00-00---0-0-0---000-00+++0", "----000-00-0-00---00-000000-00-000-0000000-0--0+00", "-00-000---00-00-0--000--000---00-00000-000000--0+0", "00-0--000---0000--00---000-0-00-000-0----0--0-0-00", "0-0--0--0-00-0--0--0-0-00-00000--00--00--0-0-00000" };
    assertEquals(2, strangeparticles.remain(interacts));
  }

  @Test
  public void case32() {
    String[] interacts = { "0000+00+000+000000++00+00000+000++000+0+000++000++", "0000+000++++0000+0+000000++00++000+0000+0+00++000+", "0000+00+00+0000+0+0+00+0+++000+000+0000++000+++00+", "000000+000++0+000++++0000+0+0000+++000++0000++00++", "---0000000000+000++00000++++00++000++++000000+0+++", "0000000+0+000+0++0+0+0+0++00+0+0++0+00++0+0++000+0", "000-00000+0+00+00000+00++0+++0++0+00+0000++0000+++", "-0-00-00000+0+00++++00+00+00+000+0+000++000000+00+", "0-0000000+0000++00+0000++0+00+00+0++00++00+000000+", "0-000--0-000++0++00++++000+000000+00+0+00000++++0+", "0---00000000++++0+000++++000++0++00+0+++00000+00++", "--0-00--000000+0++0+00000000000+00+++0++0000+0+00+", "000000000--00+0+++00+++++0+00000000+0+0000+000+0++", "000---0-0--0-0+000000000+0+++00+0+0++00++0+000000+", "000000-0-0--0-00000+++0+000000000+000000+0+0+000+0", "00-00-00---0-000000000++00+++0000+000++++00++++0++", "0-000-0-0-0--0000++0+0++0+++000000+000+++00000000+", "00---00-00---000-0++000++0++++++0+++++00+000+000++", "--0---0--0000000--00++0+0+0++++++++0+00+0++0+000+0", "-0--000-0-0-00-00-000000+0+0++000+00++00000+0+++00", "000-0--00-00-0-0-0-00000+00000000000+++00+000+0000", "000000000--0-0-000-000000+0000000++0+++0+00000000+", "-0-00-0-0--0-00--000000++0++000+0++00+000++0+00++0", "000000-0-0-0-0-----000-0+0000+000000++00+00+0+0000", "00-0---0-0-0--000-0--0--0+00+0000++0+0+000+000000+", "0-----0-00000000-0-00-00-0++00++0000+00+00+00+0000", "0--0-0-0--00--0---0-00-00-00+0+0+++00+00000+0+00++", "000--0-000000-0----000-00-00+0+000000000000+0000+0", "-0000---00-00-0-0---0000-0--0+00+000+0000++++0++00", "0-000000-0-000000---000-0000-0000+0+000+0+0+000000", "0--0---0000000000--000000---000+000+0+00+0+++00+0+", "0000-0-000--0-000--000-00-0000-00++00+0++0+00000+0", "-00-0-0--0-0000000-0000000-0-00000+0+00000++0+0000", "-00-0--00-000---0---0--0-0-00-0-00++00000+0+++00+0", "0---000--00-0000---00--0-0-0000---0+000+00++00+00+", "0000--00-0----000-00000000000--00--0+0+++0+0+0++0+", "0000-0-00-0-0-000-----0---00-000-00-0+++0000+++000", "-000-00000-0-00-0-0-----00-000--0000-000+00+++++++", "000---0-----000--000--00-0000000000--0000+000000++", "----0-0--0--0-0--0-000000-000-0-00---000+0++00++0+", "00-0000000000-----000-0-000000--000-0-0-00000+0000", "0-000--00000000000-0-0-00000--000-0000-000+000+0+0", "000000-0-000---000-000-0--00-0---0--000-0-0+0000+0", "-0000-000000000-000-000-00-----0---00-0-00-0000+00", "----0-000-0-00--0--000-00000-0-00-0---0000000000+0", "0----0000--0000-000--00-0--00000--00--00-000000+00", "00-0000-0-0--00-000-00000000-00000----0-0-00000++0", "0000-0-00-000000000-00-00000-0-0000-0-0-000-0--0+0", "-00----000-0-0--0--000-000--000-0-000--00--0-0--0+", "-----0--------0---000-00-0-000-000--0---00000000-0" };
    assertEquals(1, strangeparticles.remain(interacts));
  }

  @Test
  public void case33() {
    String[] interacts = { "0++00000+00++0+0+00+000+++00++000++000++++++0+0++0", "-00+00000+++0+++000000+000++00000+00++0000+00000++", "-0000++0000+000+0++0+++000000++0+++0000+000+000000", "0-000+00+00+00+00++0+0000+00++00+++0++000+0+000+0+", "0000000++0+00++++0+++000+00++0++000+00++++++000000", "00--0000000+++00+0000+0000+00++++++00++00000000000", "00-0000+00+0+00+0+0+++++00+00++00000+++00+++00000+", "0000-0-00+00+0+0000++0000++0000+++0+0+0++++00+00++", "-00--0000+0+++00++00+0++0++0000+00++000++++++0++00", "0-00000--0+00+0+0000+00000+0++00++00+00+0+00000+++", "0-00-0-00-0+00000+0+0000000++000+++00+0++0+0000000", "----0-00-0-0++0000++++0++000++++0+++000++0+0+0000+", "-0000----00-0+0+++0000+++0++00+0++000++0+000++0+++", "0-00--00--0--0+++0000+00+0+0+0+++000+00++0+0+0+0++", "--0--00-00000-000000+000+00000+00+0+++00+++00+00+0", "0--0-0-00-00--000++++++0+++0+0000+++0++++0++0+++0+", "-000--00-000--000+++00++0++0000++++000+0+00++++00+", "00--00-0-0-0-00--0+000000++++0+0+0++++000+0+0+0+00", "00---000000-000---0000+00+0+0++0+0+0+0000+000000++", "-000-0--00--000--000000+0+000000+++0000++0+0++0+++", "00---0----0-00--00000+++0000+0+++0+00+++00000+++00", "00-00--0000-0-0-0000-0+0+000+0+0000+0+00000++000+0", "0--000-0-000-00--0-0--000++0++0000++000+0000+++000", "-00000-0-00--000-00--00000+00+00+0000+++++0000+000", "-000-000000-----00000-000+0+0000+++++0++000+0000+0", "-00-000--000000-----00-0-0+000000000++00+0+++00+0+", "0-000-----00--0---0000--0-000+000000++00++0000+000", "0-00-00000-0-0000--00000-0000++00++00+++0+0000+000", "-00--0000---0-0-0-00---0000000000+0+++++00+++0+000", "-0--0--00-0-000000-000--00--00++000+++000+00+0+++0", "00-0---0000----00--0--00000-0-0+++0+0+00000++0+++0", "0000--0--00-0-00-000-00000000--0++000+0000+0+0++00", "00--0-0-0--0--00-----00--00000--000+000++0000+0000", "----0-0-0----0---00-0000-00--0--0000000+00+00+++++", "-0--0-00-0--000------0-0-00-00000000+00+00++000++0", "0000-00--00-00--0-000--0-000---0-0000+0+00++0++000", "0-0-00-00-000--00--00000---0--0000-00+00+00000+000", "0-0-0---00-0-0--0-00--0-0-------000--00000+00++++0", "-000---00000-00--000-00--00--000000000000++++000++", "-0-0-00-----0-0-000--0---00--000----00000++00000++", "-000-00--0-------00-000-0--00000-000-000000+0+0++0", "-00--0----0000-00--0000-00--0-00000000--0000+000++", "--00-0---0--0---000-00000-00-00-0---0---000+00+0++", "-0---0-0-000000---000-00--00-0-000--00-0-0-00+00++", "00000000-00---00-00-0--00-00----000000-00-00000+0+", "-000000-0000-0----0--0-000000000--0-0-00-00-000+0+", "00000000-0000-0--000-0--00------0-0---0000-00000+0", "-00-0000--00-00-0-0--0000-000---0--00-00-000--0000", "--00000-0-00---000--0-00-0000--00--00-------00-000", "0-0-00--0-0---0--0--00000-0000000-0000--0-----0000" };
    assertEquals(3, strangeparticles.remain(interacts));
  }

  @Test
  public void case34() {
    String[] interacts = {};
    assertEquals(1, strangeparticles.remain(interacts));
  }

  @Test
  public void case35() {
    String[] interacts = { "0+--00", "-0+++-", "+-0000", "+-0000", "0-000+", "0+00-0" };
    assertEquals(1, strangeparticles.remain(interacts));
  }

  @Test
  public void case36() {
    String[] interacts = { "0+-000000+00", "-0++00000000", "+-0000000000", "0-00+-000000", "000-0+000000", "000+-00-0000", "0000000+-000", "00000+-0+000", "000000+-0000", "-000000000+-", "000000000-0+", "000000000+-0" };
    assertEquals(2, strangeparticles.remain(interacts));
  }

  @Test
  public void case37() {
    String[] interacts = { "000-+00+0++00", "00---+000+000", "0+000+000-000", "++00000000+-0", "-+000+000-+00", "0--0-0-0-0+00", "00000+00+00++", "-0000000-0000", "00000+-+0++00", "--+0+000-0-00", "-00---00-+0-0", "000+00-000+00", "000000-000000" };
    assertEquals(3, strangeparticles.remain(interacts));
  }

  @Test
  public void case38() {
    String[] interacts = { "0-0000", "+0-0+-", "0+0000", "000000", "0-000+", "0+00-0" };
    assertEquals(2, strangeparticles.remain(interacts));
  }

  @Test
  public void case39() {
    String[] interacts = { "00-00", "00-0+", "++0--", "00+00", "0-+00" };
    assertEquals(1, strangeparticles.remain(interacts));
  }

  @Test
  public void case40() {
    String[] interacts = { "0+000000", "-000000-", "00000+0-", "0000++-0", "000-0+0-", "00---0+0", "000+0-0-", "0++0+0+0" };
    assertEquals(2, strangeparticles.remain(interacts));
  }

  @Test
  public void case41() {
    String[] interacts = { "0-000", "+0+-0", "0-0+-", "0+-00", "00+00" };
    assertEquals(1, strangeparticles.remain(interacts));
  }

  @Test
  public void case42() {
    String[] interacts = { "000+-", "00-00", "0+0+0", "-0-0+", "+00-0" };
    assertEquals(2, strangeparticles.remain(interacts));
  }

  @Test
  public void case43() {
    String[] interacts = { "0++-00+00-0+00-0+00", "-0+0-000000-000++-0", "--0+000-0+00000++--", "+0-00000-+00-0+0+00", "0+0000-+0--000-00+0", "000000000+0-+00++-0", "-000+00--+0+00+0000", "00+0-0+00+-0000-0+-", "000+00+00000-+-0+--", "+0--+---00000+00+-0", "0000+00+000-000+0-0", "-+000+-000+00+--00+", "000+0-00+00000+0000", "00000000--0-00-0000", "+00-+0-0+00+-+00000", "0--00-0+00-+0000-00", "----0-00--00000+000", "0++0-+0-+++0000000+", "00+0000++00-00000-0" };
    assertEquals(1, strangeparticles.remain(interacts));
  }

  @Test
  public void case44() {
    String[] interacts = { "000+-000+0000++0+0+00-", "000-000-+00+000+00-00-", "000+00+-0-+0000-000-00", "-+-00000000+0-00-00000", "+0000+---0+00+-+000-00", "0000-00-0---0+---+0000", "00-0+00-00000-0-+++-++", "0++0+++0++++000000+00+", "--00+00-0+0000-++00000", "00+00+0--00+0+0+00++00", "00-0-+0-000000-00000+0", "0-0-0+0-0-000-0++00-0+", "00000000000000+0000-0+", "-00+--+00-0+0000000-+0", "-000++00+0+0-0000++---", "0-+0-++0--0-0000000000", "-00+0+-0-00-0000000+-+", "00000--0000000-000000-", "-+0000--0-0000-0000-0-", "00+0+0+00-0++++0-0+000", "000000-000-00-+0+0000-", "++0000--000--0+0-++0+0" };
    assertEquals(1, strangeparticles.remain(interacts));
  }

  @Test
  public void case45() {
    String[] interacts = { "000", "000", "000" };
    assertEquals(3, strangeparticles.remain(interacts));
  }

  @Test
  public void case46() {
    String[] interacts = { "0+-00000000", "-0+00000000", "+-000000000", "00000000000", "00000+-0000", "0000-0+0000", "0000+-00000", "00000000+-0", "0000000-0+0", "0000000+-00", "00000000000" };
    assertEquals(5, strangeparticles.remain(interacts));
  }

  @Test
  public void case47() {
    String[] interacts = { "0+---", "-0+--", "+-0+-", "++-00", "+++00" };
    assertEquals(1, strangeparticles.remain(interacts));
  }

  @Test
  public void case48() {
    String[] interacts = { "00+0", "00-0", "-+0+", "00-0" };
    assertEquals(2, strangeparticles.remain(interacts));
  }

  @Test
  public void case49() {
    String[] interacts = { "0+00", "-00-", "000+", "0+-0" };
    assertEquals(1, strangeparticles.remain(interacts));
  }

  @Test
  public void case50() {
    String[] interacts = { "0++0++-+---+-+-0++0--0+-0+---0+++0-++-0+-+0-+0-+", "-0+-+-+-++-++0-+0-+-0+-0+00+-0+0-0-0-0+0-+0-0+0-", "--00+0-+0-+-0+0-+0-0+-0+-0+0-+0-0+-0+0-+0-0+0-0+", "0+00++0-+0-0+00+0+0---0++0+0+0++++0+++-0-0++++++", "----0-+++++----++-++++-++--00000000000000+-+000+", "-+0-+0-+0-+0+000000000000+-+-+-+-+0-++0+0++0+0++", "+-+0-+00+-0+0+00++0-0+-0-0+0-0+-0+0-0+0+0+0-0+--", "-+-+--00+00-+0-0+0-0+-0+0-0+-+0-+0-+-+-0+-0+0+0-", "+-0--0--0+-+-+-+-++00000-+0-0+-0+0-0+-0+0-+00-0-", "+-+0-++0-0+0+0++0-0+0-+0-00-0--0-0+0+0++00+-0+--", "++-+--00+-0+-+-+-+-+----------+++++-+-+-+-0+0-+-", "--+0+0-+-0-0+-+--0+0+-0+0-00+-00-0+0-0+-0+0-0+0-", "+-0-+-0-+-+-0+-+0-0+0-+0-+-+-+00-+0-0+0+00-0-0-+", "-0-0+0-0-0-+-0+0-0+0-0+0-+0-0+0-0+0+-0+0-0+0++--", "++00+00++-+-+-0++0-+0-0+-0+0-+0-+0-0+-0+-+-+-+-+", "0-+--000---+-0-0--+-+0-+-++++-+-+-+-+-0+0-+0-0++", "-0-0-0--+0++0+-+0+-0+-0+0-0+0-+0-0+0-0+0-0+-000+", "-+0-+0-0-+-0+00+-0+-+-+-+-+0-+0-+-+-+-0+-++++0-+", "0-+0-00+-0+-0-+-+-0+-+-+0-+00+0-+--+0-+0-+-+--+-", "++0+-0+00--0-0-+0+-0+-+0-+0-0+0-+0-0+0-0+-0+0-0-", "+0-+-00-00+-0+0---+-0+0-0+0-0+0--0-0-0+0+0000---", "0-++-0-+0++++0+0++-+-0-+-+-+-0+0-0-0-0+0++0+0-0+", "-+00+0+00-+0--0+0-+-0+0+0-0+-0+0-0+-+-0+-0+-+-+-", "+0---00-00+-00---+-0+--0+++++++-+---+-+-0+--+--0", "0-+--0+0+++0++++0-0+0+0-0+0+-0+-0+-0+-0-0-+0+-00", "-000+-0+-0++--0-+++---+--0+-+-+--+-0+0-0+0-0-++0", "+0--++-000+0+0--0--00+0-0-0-+-+0-0+-0-0+0+0+0--0", "+-000-0-+++0-+0--00++----++0---++0-0-0+0-0+-0+00", "+++-0+++00+-+0+-0+000++-+--+0----+0-0-+0-0+0+++0", "00-00-0--+++---++----00-0++++0+-+0-+0-0+-0+00--0", "--0-0+-0++-0000--0000------++-0+-+-+0-++-+-+0-0+", "-0+-0-++00-00+++0++++00+++0-++-0+0-+0-0+0-0-+-+-", "-+0-0+0--+-++0--+---+++-0++-+-+-0+-+-+-+-0+-+--+", "00--0--000-0--0+0++0000+--00-0-0-0+-+0-0+-+0-+-+", "+++0000++---00+---++++-+++-+0++++-0-+-+--++-+--+", "-00-0++-00+0+-0+0+-000++00+0+----++0+-+0-0+0+---", "-+--0-0+---+0+--+-0-++----0+0000+---0+-+0+0++0-+", "+00-0---+0+0-0++0++000+++0+0++++-0++-0-+-+-+-0+-", "0-++000+0---0-00-0-+--0-0+0--0-0++--++00+0--+-0+", "-0-00--0--++-0--0-0000-++0-00----0+0--00+-0+0-00", "++0+000-00-00++0+++---+00-0++++0+-++0+--0++00--+", "--+0---++0+-00-+0--+0-0-+0-000-+0+-0--0+-0+-0+0-", "000-+-00--00+-+---+000-+-+0---+0----0++0--0+-+00", "++---0+-0+-+00-0+---0-++00-+00-++0+0--+-0+-0+0-0", "-00-0-000000+-++0-+000---+00-00--+---+-000+-0+-0", "0-+-00--+-+-0--000+++++++-+--++++-++00+++--0-00-", "+00-0-+00+-0+++-0+-0+0-+0-+0-+0-+++++-00+00++00+", "-+----++++++-+----+++-+0000000-+---+-+-0-+000+-0" };
    assertEquals(1, strangeparticles.remain(interacts));
  }

  @Test
  public void case51() {
    String[] interacts = { "0--+", "+00-", "+000", "-+00" };
    assertEquals(1, strangeparticles.remain(interacts));
  }

  @Test
  public void case52() {
    String[] interacts = { "0+-000", "-0+000", "+-0000", "0000+-", "000-0+", "000+-0" };
    assertEquals(2, strangeparticles.remain(interacts));
  }

  @Test
  public void case53() {
    String[] interacts = { "0000000--0+++0-0+0+----+-00-++++-+--0+00-+-+--+-0+", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "0000000-00--+00+++-++0+0-+0-+0+-0--0-0++----+++++0", "00000000000000000000000000000000000000000000000000", "00000000+0---000+000--0++-+++-0-+0+00+0-0-+-000000", "+000+000-00+-0+0+0+--0+0+++0-0-++++-00-000-+00-+0+", "+00000-+00+---+-++-0-0+++0+-++0+0+--+-+0++0-+0++0+", "00000000000000000000000000000000000000000000000000", "-000+0+0-000++0-+0+0+00+0-0+0-+00-0-0+0+-+0---00-0", "-000+0+-+000-+-00+0++0-++00+0000+00--+-0-++0+0++-0", "-000-0+++0-+0000++--0+00+-++00+----0-0-00-000-+---", "00000000+0--000--0-++0+--++--0+00-++-+0-00+++-++0+", "+000000--00+000-0+-+-00--+++-+00-00-0+++-0-0+-+-0-", "0000-000+0+00++00-+++0-+-+-0+0+++0-0++++-0+0--00--", "-000-0---0-0-+000-0-++++-00-0-0--+-00+-+0-+-+00+0-", "0000-000-00--0-++0-0--0000--0+--++0-+00--+-+-0+-0-", "-000+00-+0-0+++-0+0+0--0+--00++++++-+0++++--0+0-0-", "+000-00+000-+---+0-0-0+00---+++++-0----0+--00++++-", "+000-0+++0--0-+--+0+0++0-+-0-00-++-+-0-00-+00--++0", "+00000+00000-000-++0-00-+00++-++-++-0++0-0-000-+0-", "+000-00--00+0-0+-0+--00+0--0+00+--+--0-00-00--+-0+", "-00000-0-0--0++--0000+-0--0++-0-+0000+-0+++-+0-+0-", "+000+0---00--++++0-0+-0+00-0-+-++-0+--+0--0++-++-+", "0000-0+-00+0+---00++-0++000++--00+0--0-0--+------+", "000000---000---+0++++0+0+00++0+00-00000+0+-+0-0-0-", "+000+0-0+0---+-0++0+0-0-0--0+00-0+0-00+-+0+-++0+--", "-000-0-+-0000++-000-+---+---0-0-+---0-0-+--0-0+-++", "-00000+0-0+000-0+---0+0+-+00+00-0-0+-0+-0-00--0-0+", "-000-00+00-0--0-0+--0-00++-00000-00+-00-+++000++-+", "-000+0+--000+00-++--+--+-00+++000-+++0++--0+--0+00", "+00000--000-+0+-+----++--000-0+000++0-++0-0+--+-+-", "-000+00--0+0++00---+--+0+-+-++0+00-0-0-0-+-00+00-+", "+000+0--+000+-0++0-0+--00000+00--+0+-+000+0-0++-++", "+000000++0++0-+00+++-++0-+0++----0-0-0+-+-0--+00-+", "0000+000-00+++0-0--++0+0++000++-0+++00-++--0+-----", "-00000-0+0--0----00+0-0-+000+000+0-000+++-00--0--0", "0000-00+-00++0--+0-++-++-+0-0-0--+0-+-0+0-+++0+0-0", "0000-0+000-00+---+-0000000-++++--00+---0-++0+0--0-", "+000+000-0++00++0+--0+0-++0--0-+0+0---0+0--+-00--0", "-000+0+0-0--+000+--++0+-++-0++-++--++++-+0-00000+-", "+000+0-+000-0-+--+++-+0-0-+-+0-00+00+0--++00------", "-000+0+-+0+00-00+-+0000+-+-+000--0++00-0-0000-+00-", "+000-000-0+-0--+-+0000+--+0-++0++00+-+--+0+00-00--", "+000-00000+0++++00--+0+0+++-0+0++---++0000+++000+-", "-000-00+-00----00-0-++-+-+00-0-0-0-0+0-+00+-000+-0", "+000-00--00-+-+0-++---+--++-++--+0+0++0++0+000-00+", "0000-00000+++00+000--000++0+-0+0-+-++++0+-+0+-+000", "-000000--000+-++++++0+-+--++---0+---+00+0+++++0-00" };
    assertEquals(6, strangeparticles.remain(interacts));
  }

  @Test
  public void case54() {
    String[] interacts = { "0++0", "-0++", "--00", "0-00" };
    assertEquals(2, strangeparticles.remain(interacts));
  }

  @Test
  public void case55() {
    String[] interacts = { "0++++++++++++++", "-0+++++++++++++", "--0++++++++++++", "---0+++++++++++", "----0++++++++++", "-----0+++++++++", "------0++++++++", "-------0+++++++", "--------0++++++", "---------0+++++", "----------0++++", "-----------0+++", "------------0++", "-------------0+", "--------------0" };
    assertEquals(1, strangeparticles.remain(interacts));
  }

  @Test
  public void case56() {
    String[] interacts = { "0-000", "+0---", "0+000", "0+000", "0+000" };
    assertEquals(1, strangeparticles.remain(interacts));
  }

  @Test
  public void case57() {
    String[] interacts = { "0+-00", "-0+00", "+-000", "0000+", "000-0" };
    assertEquals(2, strangeparticles.remain(interacts));
  }

  @Test
  public void case58() {
    String[] interacts = { "0+-000", "-0+0-0", "+-0000", "0000-+", "0+0+0-", "000-+0" };
    assertEquals(1, strangeparticles.remain(interacts));
  }

  @Test
  public void case59() {
    String[] interacts = { "0+0-000", "-00+000", "0000+-+", "+-00000", "00-00+0", "00+0-00", "00-0000" };
    assertEquals(2, strangeparticles.remain(interacts));
  }

  @Test
  public void case60() {
    String[] interacts = { "0+00", "-0++", "0-00", "0-00" };
    assertEquals(2, strangeparticles.remain(interacts));
  }

  @Test
  public void case61() {
    String[] interacts = { "0-+0", "+0-0", "-+0+", "00-0" };
    assertEquals(1, strangeparticles.remain(interacts));
  }

  @Test
  public void case62() {
    String[] interacts = { "0-0", "+0+", "0-0" };
    assertEquals(2, strangeparticles.remain(interacts));
  }

  @Test
  public void case63() {
    String[] interacts = { "0--", "+00", "+00" };
    assertEquals(1, strangeparticles.remain(interacts));
  }

  @Test
  public void case64() {
    String[] interacts = { "0---", "+0--", "++0-", "+++0" };
    assertEquals(1, strangeparticles.remain(interacts));
  }

  @Test
  public void case65() {
    String[] interacts = { "0+0000", "-0+000", "0-0--0", "00+000", "00+00-", "0000+0" };
    assertEquals(1, strangeparticles.remain(interacts));
  }

  @Test
  public void case66() {
    String[] interacts = { "0-000", "+0-00", "0+0-+", "00+0-", "00-+0" };
    assertEquals(1, strangeparticles.remain(interacts));
  }

  @Test
  public void case67() {
    String[] interacts = { "0+-000000+00", "-0+000000000", "+-0000000000", "0000+-0000++", "000-0+000000", "000+-0000000", "0000000+-000", "000000-0+000", "000000+-0000", "-00000000000", "000-00000000", "000-00000000" };
    assertEquals(4, strangeparticles.remain(interacts));
  }

  @Test
  public void case68() {
    String[] interacts = { "00-", "00+", "+-0" };
    assertEquals(1, strangeparticles.remain(interacts));
  }

  @Test
  public void case69() {
    String[] interacts = { "0+0", "-00", "000" };
    assertEquals(2, strangeparticles.remain(interacts));
  }

  @Test
  public void case70() {
    String[] interacts = { "00-", "00-", "++0" };
    assertEquals(2, strangeparticles.remain(interacts));
  }

  @Test
  public void case71() {
    String[] interacts = { "0-+0+000", "+0-00000", "-+0000+0", "0000-000", "-00+0000", "00000000", "00-0000+", "000000-0" };
    assertEquals(3, strangeparticles.remain(interacts));
  }

  @Test
  public void case72() {
    String[] interacts = { "0+-0000", "-0+0000", "+-0000-", "0000+-0", "000-0+0", "000+-0-", "00+00+0" };
    assertEquals(2, strangeparticles.remain(interacts));
  }

  @Test
  public void case73() {
    String[] interacts = { "00+-", "00-0", "-+0+", "+0-0" };
    assertEquals(1, strangeparticles.remain(interacts));
  }

  @Test
  public void case74() {
    String[] interacts = { "0-000", "+00+0", "00000", "0-00-", "000+0" };
    assertEquals(3, strangeparticles.remain(interacts));
  }

  @Test
  public void case75() {
    String[] interacts = { "00-0", "00-0", "++0-", "00+0" };
    assertEquals(2, strangeparticles.remain(interacts));
  }

  @Test
  public void case76() {
    String[] interacts = { "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000" };
    assertEquals(50, strangeparticles.remain(interacts));
  }

  @Test
  public void case77() {
    String[] interacts = { "00-", "000", "+00" };
    assertEquals(2, strangeparticles.remain(interacts));
  }

  @Test
  public void case78() {
    String[] interacts = { "000+", "00-+", "0+0-", "--+0" };
    assertEquals(1, strangeparticles.remain(interacts));
  }

  @Test
  public void case79() {
    String[] interacts = { "00+", "00+", "--0" };
    assertEquals(1, strangeparticles.remain(interacts));
  }

  @Test
  public void case80() {
    String[] interacts = { "0+-000000", "-0+000000", "+-0000000", "0000+-+00", "000-0+000", "000+-0000", "000-000+-", "000000-0+", "000000+-0" };
    assertEquals(2, strangeparticles.remain(interacts));
  }

  @Test
  public void case81() {
    String[] interacts = { "0-+000", "+0-000", "-+0000", "0000-+", "000+0-", "000-+0" };
    assertEquals(2, strangeparticles.remain(interacts));
  }

  @Test
  public void case82() {
    String[] interacts = { "0+000", "-0000", "000+0", "00-0+", "000-0" };
    assertEquals(2, strangeparticles.remain(interacts));
  }

  @Test
  public void case83() {
    String[] interacts = { "0+++++++++++++++++", "-0++++++++++++++++", "--0+++++++++++++++", "---0++++++++++++++", "----0+++++++++++++", "-----0++++++++++++", "------0+++++++++++", "-------0++++++++++", "--------0+++++++++", "---------0++++++++", "----------0+++++++", "-----------0++++++", "------------0+++++", "-------------00000", "-------------00000", "-------------00000", "-------------00000", "-------------00000" };
    assertEquals(5, strangeparticles.remain(interacts));
  }

  @Test
  public void case84() {
    String[] interacts = { "0+00", "-000", "000+", "00-0" };
    assertEquals(2, strangeparticles.remain(interacts));
  }

  @Test
  public void case85() {
    String[] interacts = { "0---", "+0+-", "+-0-", "+++0" };
    assertEquals(1, strangeparticles.remain(interacts));
  }

  @Test
  public void case86() {
    String[] interacts = { "00+", "00-", "-+0" };
    assertEquals(1, strangeparticles.remain(interacts));
  }

  @Test
  public void case87() {
    String[] interacts = { "0-+0", "+0-0", "-+0-", "00+0" };
    assertEquals(1, strangeparticles.remain(interacts));
  }

  @Test
  public void case88() {
    String[] interacts = { "0-0", "+0-", "0+0" };
    assertEquals(1, strangeparticles.remain(interacts));
  }

  @Test
  public void case89() {
    String[] interacts = { "0++0++-+-00000000000000000000000--0+++0-++-0+-+0", "-0+-0+-+0-0++-0+0+00-+0000-0+-0+00-0+00+-0+0-0-0", "--0000+00-+0-+-000+0000-00+0-0+-0+-000+0-+0-0+-0", "0+00++00000-0+00-0+000+0000+0---0++0+0+000++++0+", "-00-0-+0++00++00----+00000000-+0000+-0-000000000", "--0-+0-+0000-+000+000000000000000000+0000-+-+-+-", "++-0-+00+-0000+0+00+00+000-000+-00-0+0-0+000-0+0", "--000-00+000-0+0-0+0000-00+-000+0-0+-+0-+0-+-+-0", "+000-0--0+-+0-0+0-+000-+0+0000000000-+0-0+000000", "0++0-0+0-0+0+0000000000++0-000+000000-+0-00-0--0", "00-00000+-0+-+-0+-000000000000000000000000000000", "0-0+0000-0-0+-+0--000+00+000000000000000000+0-0+", "0-+0-+0+0-+-0+-+00-0+0-+0000-+-+0-+00-+0-00000+0", "0+----00+0-+-0+0-0+0-0+0-+0000000-00+0-0+0+00-0+", "00+000--00+-+-0++0-+000000++0+00+-00+0000-+-+-+-", "0-000000-000-0-000000000000000000000000000000000", "000++0-+00-+0+-00+-0+-0+000-000000+0000-+0-0+000", "0-00+-00+0++0000-0+-0+-0000+-0+-+000-00+00-+00-+", "00--+00--000+-+0+-0+0-0+-+00-+000000000000000000", "0000+0-0000000-00+-0+-+0-+000-0+0-00+0-0+00-0+-0", "0+00-0000000-+00-00-0+0-0+00000-0+0--00-0-000+0+", "0-000000000-0000+-++-0-+0-+-00+-0+0-0-0000-0+00+", "000-00-0+000+-000+0-0+0+0-0+-00000000+00-0+-0+-0", "00+0000+--00-000-0-0+--0++00000000000++0+--0-000", "000000000-0-0+0000++000-0+0+-000000+000-000+0-0+", "00000000-0000-0000---++--0+-+0-+-0000000-+-0+00-", "0+-000+-0+0000-000000-000-0-+-+00000-00+-0-0+00+", "000-000+000000-0+-000+-0-++0---00++00-00-0+0-00+", "0-+000000000+0000++000+0+--+0--0--+0-00000000000", "0+0++0000000-0-000-+000000+++0+-+00-+0000-0+-000", "00-+-0-00-00+0000-000-000+-++-0+-+0-0+0-000+0+-+", "0-++00+-0000-0000+0-++000-000+-0+0-+000-00+000-0", "+0000000000000-00-0000000+00+-+-00+-+-+-000000+0", "+0--000+0000+++0000+--00000-+0-0000+-+00-0+0-+0-", "0++-00+00000-000-0000000000--00+-00-0+-0000+0--0", "-000-00-000000000000++00-0000++-+-+0+-+0-00+00+-", "--0-+--++0000--00+0-+00000+0+-00-+0-0+00-+0+00++", "-000000--+00+00000000+--000+00-0+--+-0-+-0+-00+-", "00--+0+00-00-+00000+000-00000000-0+-0+00+00-0-+-", "+-00000++0000000+-00+000+0-000+++0000-00+-0+00-0", "-++000--0+00+-00-00-00+-0+++00000+0+++--0++00--+", "-0-00+00-00000+00000+00+0-000+000000-00+-0+-0+0-", "+-0-0-0+00000--0++000+-+0++-000-0-000-00--0+00-+", "00+-0+0-0+0-00+00-0+00+0-0000--000---++-0+-0+0-0", "-+0-0-++000000-0-0000-0+0--+0+000+000000000-0+-0", "+0--0+0-0+0+0++0000--0-0+00000-00-+000+0+-00-00-", "-++00--+0+00-0-00+0+00+0000000++-0+----++0+++00+", "000-0+00000-0-+00-00--00-+--00-00+0+-++0-+-00+-0" };
    assertEquals(1, strangeparticles.remain(interacts));
  }

  @Test
  public void case90() {
    String[] interacts = { "0-+0", "+0-0", "-+00", "0000" };
    assertEquals(2, strangeparticles.remain(interacts));
  }

  @Test
  public void case91() {
    String[] interacts = { "0+-0", "-0++", "+-00", "0-00" };
    assertEquals(1, strangeparticles.remain(interacts));
  }

  @Test
  public void case92() {
    String[] interacts = { "00-0000000", "00-0000000", "++0-0+0000", "00+0-00000", "000+0-0000", "00-0+0+000", "00000-0-0+", "000000+0-0", "0000000+0-", "000000-0+0" };
    assertEquals(3, strangeparticles.remain(interacts));
  }

  @Test
  public void case93() {
    String[] interacts = { "0-++00", "+0-0+0", "-+0000", "-00000", "0-0000", "000000" };
    assertEquals(3, strangeparticles.remain(interacts));
  }

  @Test
  public void case94() {
    String[] interacts = { "000+", "00+0", "0-0+", "-0-0" };
    assertEquals(1, strangeparticles.remain(interacts));
  }

}
