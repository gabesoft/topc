package topc.test.graph;

import junit.framework.*;
import org.junit.Test;
import static org.junit.Assert.*;
import topc.graph.*;

public class SnowPlowTest {
    SnowPlow snowplow = new SnowPlow();

    @Test
    public void case1() {
        String[] roads = { "010000", "101000", "010100", "001010", "000101", "000010" };
        assertEquals(10, snowplow.solve(roads));
    }

    @Test
    public void case2() {
        String[] roads = { "010000", "101000", "010100", "001020", "000201", "000010" };
        assertEquals(12, snowplow.solve(roads));
    }

    @Test
    public void case3() {
        String[] roads = { "031415", "300000", "100000", "400000", "100000", "500000" };
        assertEquals(28, snowplow.solve(roads));
    }

    @Test
    public void case4() {
        String[] roads = { "0100", "1000", "0001", "0010" };
        assertEquals(-1, snowplow.solve(roads));
    }

    @Test
    public void case5() {
        String[] roads = { "0101", "1001", "0000", "1100" };
        assertEquals(6, snowplow.solve(roads));
    }

    @Test
    public void case6() {
        String[] roads = { "000", "001", "010" };
        assertEquals(-1, snowplow.solve(roads));
    }

    @Test
    public void case7() {
        String[] roads = { "09", "90" };
        assertEquals(18, snowplow.solve(roads));
    }

    @Test
    public void case8() {
        String[] roads = {};
        assertEquals(22050, snowplow.solve(roads));
    }

    @Test
    public void case9() {
        String[] roads = { "0130160769466953930555010163915912769075104246", "1094442093413174588754942605413550275767843981", "3909516385357633274127142137481822962358392882", "0490395926191420420607131814904596395008274039", "1453017749604650604053776942140118459986020136", "6419107778780327408544224867650993498404825192", "0265770650984228535637705405684014299591716258", "7039776036634643149349605060767176836083517433", "6982475303251037859043171033117281815042720661", "9356980630578227840459886750838041457932208053", "4431679625046229787524355112940982096365614237", "6159088357406157021880681586763675745499279208", "6371404418660243192005454458886072960773946934", "9164632602212033248767275740047765586408055067", "5732522432254307814725639292428145598298149183", "3430078377973370008908325760426827214409331655", "9524645188701280080027361980263055166971354166", "3872003454829410804017611341980495862572544590", "0840485990712848040227247890760462799589557633", "5716056304580779002004896169215985703601318663", "5520543445280620212000776075572703403078385657", "5477347939405758777400251999338429599674731116", "0911727618364263362872039617494895166674499277", "1443720078585732614975302129347154985482449009", "0221645516514595117661920527363163544616562088", "1618984007154727938109615020562025174142646926", "6031460635185496849679122208608298507204988036", "3574275030268020010959797080767201395142153373", "9449166718978044297253433567098162418255708779", "1180458613468422686173946606904637117857204366", "5314004778036786300528473287840585692744523810", "9585190120960718044974811022165041323400420163", "1529191784877642596802956290638408605950685988", "2026834611252557552539543581275180627308870104", "7293442884079552187745195153416366067280864893", "6769599315946891669009684709119202605584648736", "9525989657650684629339654475872357750684778369", "0730945009347424955606646121287493256043638097", "7650809843697090778077781404554050888408874977", "5788641322593889129184426242574008044380950116", "1832087572629013355337445691725468867689003763", "0497221120174543545183946485002287647375001194", "4324056708496591447851992683843050488840310012", "2980112460229016156661200903738191873091710090", "4883395365303685693651708237761680936971691909", "6129628313784735603376798663960384369776342090" };
        assertEquals(9376, snowplow.solve(roads));
    }

    @Test
    public void case10() {
        String[] roads = { "097001463345043625710392308283348809533055", "905254881863983732530468894891406900749218", "750564316185191367621002827515659759284265", "025019049093928565831557513883018263684722", "056108736914273458377130870835560260627948", "144980406597876201093839212833608599388991", "483074084489144279271174605771862741965654", "681430806086343228061650820470873487335172", "316966460889911313528200869146495985133424", "381095408075300111528503894082832683195078", "468919888709417510834738233380159778918484", "535347969590129655955944790534207437894101", "091928139341060640275662000405343804704979", "489277441012603163582823376860542986411388", "331836431079030627964738574615078335306742", "673542223156616070781326529745641269712378", "236650721115462708038033279161965367057401", "527581983105037080497046760868681576223326", "756830205589259704082987600045593677970000", "132379762235786839805545465727628861163209", "001173118845524187250017156477415275701041", "340518162579687300950055246038901564881318", "960533750034623234841504674723749679631046", "282709400384238636757540870364414433058713", "388582688827035527641268032488039246539838", "092171026939077276065477308575106518420257", "847302509430064990056640280578175731507766", "285888741035486718074073455071054831914386", "891833774883061466427326877709386209874266", "315353106204505518577834858190841017061723", "346056884812350696564974011038069033790660", "405160679350447468921041307584603479135130", "869808235297328151385194965461930379805936", "897225749674893235682564257820043070389368", "005669488873083667767673413301377709654438", "909309175387465976715493681197399090332665", "572663931198743702917860545980718363039116", "348828633919010152760835320176930853300500", "394478553584416273031118907441055942900522", "022799614041937343020307827327619346155057", "516249572780784702004141356862633636102500", "585281424841982816091863876663006885602700" };
        assertEquals(7742, snowplow.solve(roads));
    }

    @Test
    public void case11() {
        String[] roads = { "0491203607416275930383", "4093701263408642197302", "9907705527520138586916", "1370261216756982364455", "2772036496173053935640", "0006308119020456409156", "3151680730401580135306", "6252417092134468660542", "0621913903666765287542", "7376690230243843285392", "4457104162067871150593", "1025720364606390721740", "6806301463760640989399", "2619045478836076674340", "7438558664794703102769", "5282360853100630049350", "9153941622179610013292", "3986303688528704107490", "0764595075019429370514", "3394613553573373245039", "8015450449949465991306", "3265066222309090204960" };
        assertEquals(1978, snowplow.solve(roads));
    }

    @Test
    public void case12() {
        String[] roads = { "048508653568615280667081125775898087937", "409471855467904173976463605165741902746", "890922032404012511899107701425869040219", "549048969092135719421277888736745269931", "072404113055167463921632709978712997603", "812840919790425620225480471286465118552", "680919018976436036910183007136055756548", "553611106506095483067216525880437917824", "352939860083078917553540275144032145395", "544007950077807591695087210233678460376", "660959708707510952854405062081349754187", "874250663770545391819172326574607121366", "690114400855013295571010981613740796960", "101362397014100639346364018484298878139", "542575658705300070505289077898193245413", "215746049593260028890645879169310840023", "871162381959937200495169025574187050955", "031930637121590800744774505336455915584", "698492905688535847019349448698296379100", "679222165951740994100045204868125821493", "769115073549165054900899261487767923836", "041264125041032617308090262628025830609", "860738814807168467449900482674298961342", "137720360752049594959000879224871007511", "167874052203900805422248033191704729083", "200807027162817720406687308139090708606", "551891755026187955841229380459934706350", "714792181205648153684662114026540313663", "762378384387189673968272935203096910309", "555686604314348946887844199630997534903", "878774040636721314217028709509052821307", "946416533740499185926297093499501549567", "819525572897083075657581404067210226135", "090291791471782809389890777395852050442", "804691514652974451722360200113242508044", "720978675041685005913017986304196080032", "972965583313914095148635063639351400044", "341305429786631258093041805600063443402", "769132845676093354036921360393775242420" };
        assertEquals(6594, snowplow.solve(roads));
    }

    @Test
    public void case13() {
        String[] roads = { "001397", "001142", "110699", "316093", "949909", "729390" };
        assertEquals(146, snowplow.solve(roads));
    }

    @Test
    public void case14() {
        String[] roads = { "08339016408", "80085560507", "30042813282", "38402556158", "95220570729", "05855070648", "16157706656", "60360060227", "45217662058", "00852452506", "87289867860" };
        assertEquals(496, snowplow.solve(roads));
    }

    @Test
    public void case15() {
        String[] roads = { "0691104670603732518", "6082410872537649067", "9809808808838289809", "1290163592102232939", "1481070691757883086", "0106708048288232875", "4083080996089254050", "6885609025840611134", "7709949208697899980", "0282186580742881894", "6581720867001344446", "0330588494004683488", "3782789072140548826", "7622822688365030596", "3483835198484307694", "2992324191438070875", "5089080198448568066", "1603875389482997607", "8799650404686645670" };
        assertEquals(1690, snowplow.solve(roads));
    }

    @Test
    public void case16() {
        String[] roads = { "02851476826000311843670910867130563705866956", "20182960105878072071882476631542612251329946", "81091512349967621669939575960190341513658066", "58902661910490059915144081217849769921185228", "12120241397479236747294563867206685830667121", "49562041304759386249560415860947168544320454", "76164401503287195522694947505999510322987424", "60211110857765047779268855036172432053271682", "81393358001516021469275611568569335487061148", "20419005007207647674050631790769191472464590", "65907437170066645664372276139935361607978731", "08944727520029306321796876166530623816105605", "07697586106201562055191476328072925019206053", "08709975676910056035890212488646214031965852", "30602310066350090538599235641364296216158889", "17253894244065901998734674022176476661681208", "12196657175626010340216919017325119776293271", "80697257466300593096314049879483143740001708", "47614427676253394902262703177345950457374600", "31957929944155880620441798608926226057750724", "68912562203718572324020297574359397263957725", "78349696757999931164208983330234418225907217", "02944048502610946421080771968028936592332441", "94505498662842269077297026955368320629787907", "17786145137771371409987209589373925448680620", "06513575116662549938731690424837976692705020", "86928850571134600816539954075441775704261608", "63616603693628421770736582702815678447103399", "71077056809688127978408594520461915251592295", "15182991579506313439320338484047494636693160", "34940497663374672842532673416403412792065958", "02096792995026465356948837151730808072075851", "56376154313692241192349399769448081361127993", "61468613396221971452913227771910802501168799", "32195802511354669306786056585428120425179029", "72598530446800267740225646742670354007396388", "05123425870113167455629249045397602008178943", "51310423727691616077352982471622115780881007", "83616392049129162037993767215600111318097738", "62586287667006589075503880609967267978904336", "69857071148565813140772705132355789681740153", "99021446157608822767724960632198970390731042", "54622528493055807002214022099655992840335405", "66681442801532981804571700895081399837863250" };
        assertEquals(8534, snowplow.solve(roads));
    }

    @Test
    public void case17() {
        String[] roads = { "099732825694681065", "908927492807891532", "980408216937445894", "794075530394723700", "320700148892316225", "278500415415136416", "842514043469566532", "291341406257921315", "526085360227579655", "689384422024764990", "903991652202234103", "477425977420312051", "684731595723057666", "894213627631505080", "115366619442750670", "058724536910606081", "639021315905687803", "524056255031600130" };
        assertEquals(1346, snowplow.solve(roads));
    }

    @Test
    public void case18() {
        String[] roads = { "08928075879680", "80876355985780", "98066009839428", "27601614627623", "86610672416337", "03066052386823", "75017503376738", "55942230732876", "89864337008773", "78321873008654", "95976662880764", "67463878767072", "88223237756703", "00837386344230" };
        assertEquals(928, snowplow.solve(roads));
    }

    @Test
    public void case19() {
        String[] roads = { "0380450102592584118358696382464793744449615893793", "3024011976012939686047176816091859551448441722000", "8200953024421528689737984421545678989871791229920", "0400057697577165355415474144321066323534782584757", "4090056253243159982111205131475503585692684320838", "5155500592754986026408267364980522484772857757169", "0137600793424217602012763064713826996888669883981", "1906257042061626077974852324343710490791063272551", "0729599409089501420766296384353618163567220927086", "2647323290242849366305633276074178355006364145975", "5045274002063802903386521350997213635337119468487", "9127452684605556168501803996992691887175295156734", "2217344192350832264718329634473033741680004816521", "5951192658858076811237564345016852920570247214445", "8326581204053700702772594623884017016730296878469", "4985967619262600281044749485610375432318856801849", "1663906043912872012711562079113161395797591055415", "1885820726066108108548615561295583126468492938709", "8695262706384121280386448138235413279265655402787", "3074140973357270753089659229665783921151968382944", "5431101760801374148805653414828294178623208223545", "8775182465618724186950748060846976974984649403402", "6194227826583557564667024032923487872838496886857", "9787066593202694614554203404962045664946995873413", "6644573263139449258938430814599985172073063881573", "3841130332396364051240048095751498270845010075167", "8124366287593428763216301908818452108481855521766", "2614144446064535918940244580679240601813020309150", "4053497330994086122688995786042476247685793866054", "6942781457997181193624269517404540504330850991472", "4151503334723640355586329189240334013426763796476", "7860558761260803154729409442453090888082026920793", "9576022117193517681897848954743900508011867865355", "3986326088313275133346755820604000503563069897505", "7593549413687904312919861216250855067283358194260", "4582889965384213927277767700401800601157239696631", "4193546035571062569184242081743883710289002143749", "4485678750316573742169890848634005212025344614618", "4473978960378731966528347481832816858202458531806", "9814228176750008785134863513506213379520889960029", "6477686023120228546926490080787080320348002153057", "1498856626190495995604996152956266530458001737183", "5112479304954766125889653050303679892489210007552", "8725378291418288094324888053897988161659170088953", "9228258724651170530820878720699269994136530804024", "3294073275866481582233631519616057463410377840813", "7097819509475448477954845171044735267680015908069", "9025368587832464108440517665577950634102585521602", "3007891165741599597452733760426355019869732343920" };
        assertEquals(10692, snowplow.solve(roads));
    }

    @Test
    public void case20() {
        String[] roads = { "0974633317113973398", "9034265972198942564", "7306258499309790285", "4460337189210388893", "6223069725216761146", "3653601983341127715", "3587910891795525923", "3941798046561268574", "1798289401779774541", "7299531610792552181", "1132237577080772606", "1901149679805407963", "3890615192050990302", "9973715275749033457", "7498622675709307670", "3208175842270370521", "3528179551693465090", "9689412748060572903", "8453653411632701030" };
        assertEquals(1626, snowplow.solve(roads));
    }

    @Test
    public void case21() {
        String[] roads = { "0528482111458159550178375344558534536516922958036", "5031550377021867013214698653963120528706114308838", "2302322927139152750715949051438808048874919425361", "8120538317267609757577935616659044884400050102891", "4535002545487394799284732320419446992413330458967", "8523008174552278687031471900196864610863735273899", "2028280338452545619803502272148242720104800860556", "1393513035448259970869884979263005307307770653282", "1721473306856178453434436186337639361811215730943", "1777548560585250718390423288513842759942118790925", "4012454485041981294656474794857416589746669677780", "5236855458402244322585678509677983214444827868183", "8197722865120384409766287500773153741436798339456", "1816325212923069421684108903916049789530424618202", "5650974575848605232341933817674392689981819840362", "9729485980144950975572311352815778788641554060547", "5077766947234429005599784837259423471645265787138", "5155981751920237002883211499263467269838651946912", "0307979038429125520306274545671989760279444211522", "1275208843657635583023195580286669518645448249239", "7117830639586847980205988971653927858876773703229", "8457413940656412936350845127183479789352937074954", "3699745844462193722198024082470838094790130474044", "7943370832778031817984201397909200201438206627015", "5895212463487831414585410783875330522275586808810", "3606392912755983845591037024300070928568156921348", "4551207788900015394872898202338021268139025508027", "4316002968490372795017273420115098385515728282677", "5946411235867968226261498331069514982527467441729", "5635194631577171567858707031604731796508180663765", "8389968373773645931633095085940510957803371342880", "5180482068491037449694823000575068729962987901224", "3204464034185497268627303729131606220207608459360", "4084642592633928379979800018410860346592268913711", "5508967337527767427587025923979723090503454576673", "3248912065814888766158902268895224904224730821883", "6884200719941998190889412885267906040178572960995", "5784481389744596682683742515558925521005116402974", "1070160014443384437475937631200609027002327450239", "6640334712646011589562085895783272348520944891180", "9190378721687485264479125107413962475139036670235", "2115330711629215654473308522687806537124306533412", "2490050058978494514837066658701788402674660431467", "9341428677683680792270468952463949589448654091315", "5020576539763146841407720208464051726059733902618", "8852830300789800761934478182132193610201031120547", "0838985299714235195229008306778237689921244365026", "3369695842885064312325411427268261789738316114205", "6811796235036227822994450877950401335490527587650" };
        assertEquals(10768, snowplow.solve(roads));
    }

    @Test
    public void case22() {
        String[] roads = { "02502716327826", "20416789284719", "54099821868607", "01902146149658", "26920890227937", "77818096195221", "18249902464605", "69160620167777", "32812141037988", "28642966302599", "74897547720910", "87669267959026", "21053207891202", "69787157890620" };
        assertEquals(902, snowplow.solve(roads));
    }

    @Test
    public void case23() {
        String[] roads = { "0526993626294777", "5099555382382855", "2900016805439384", "6900065241359245", "9500034996141967", "9516309346403060", "3565490236788468", "6382932082084625", "2804943802142142", "6251666220535334", "2343147015065337", "9835408843603221", "4299138425530110", "7832904613321036", "7584666243321300", "7545708524710600" };
        assertEquals(1042, snowplow.solve(roads));
    }

    @Test
    public void case24() {
        String[] roads = { "06182453697817474", "60264079725257417", "12023770493308510", "86203177865739099", "24330134128949531", "40711084524332114", "57773800599196479", "39074400157732314", "67481551022458571", "92962295207096659", "75358497270846568", "82379317408007902", "15034393594007597", "77899262866770906", "44505143565959022", "71193171756090209", "47091494198276290" };
        assertEquals(1284, snowplow.solve(roads));
    }

    @Test
    public void case25() {
        String[] roads = { "03847027827381225", "30648135318709685", "86023426542440909", "44203321234549480", "78330770761192383", "01437087057778744", "23227800357247574", "75610700042375753", "83527030019341896", "21436554106817064", "78241772960087250", "37451723380036125", "80449747418305901", "19092875177650350", "26943757802193098", "28088475965205907", "55903443640510870" };
        assertEquals(1204, snowplow.solve(roads));
    }

    @Test
    public void case26() {
        String[] roads = { "02765391715304524", "20085641385737491", "70024782876974354", "68202023926395116", "55420436357239496", "36704007478968817", "94823000552257736", "11236700081028757", "73893450056399229", "18725758508268183", "55667821680650257", "37932920326078167", "03793652965703602", "47459878980830900", "54314877212169051", "29519135285600507", "41466767937720170" };
        assertEquals(1268, snowplow.solve(roads));
    }

    @Test
    public void case27() {
        String[] roads = { "08194923088744488436574762974120211741243893635", "80042045875411659166481831958300148755784590292", "10066532125153683351733136329317792135600500453", "94607297277929707255118339569120938009839240663", "42670679946781884519424425939701495367373959251", "90526045897479404231871001576416621638900221616", "24397406626174980269349864095395332603884804436", "35279560192465922782048537741749163198279535054", "08129861012251672217231360401844248764346510313", "87274929101828733897394310376100936171536928986", "85576762210975346311874110438184808402306524651", "74197414289035567267970168412070815384701541574", "41528776527305668599398062088221230364429720579", "41391945185550718433022923478202439189324633910", "46678499673567078314036624365156770785488989733", "85808082734661704029684157991575970670442167592", "89374402236788840232060729802771835404549671731", "41325227283254302005597847289723569335258340352", "36551368191693123006664712822744704745893848207", "66159192771793492560778377252156494054939451340", "54714830238930060567033596264399711117747619000", "78312744397792386967306045402606345019543540458", "41384198144082640748360108762240514209258662703", "78134085331109617873501008309033007938155288957", "63332063611662252417940006250474113451146916679", "21695147000823479727658860035045782823183884413", "99359507434404398282247320076382729926831640471", "75263794073187690825606053706224410226275808992", "48999651168288512922422905660762594093531474228", "13317437811022157771362040327069737482869144679", "20120194408720577245904374826609514845420527816", "00701659404012651346960345242990831626876951674", "21794631298824798574735017745758086296650978190", "14939236430133773609141018219313806615142959801", "18285123868509005944154732904741660459129675540", "77103661714331764370102948920486264085377817979", "45306309670868870345110352229842915803014622705", "15597838412449504554799813663256659530523483750", "27683982353743445289752111825848611305008157827", "48037087430022844593445548373627542712005567791", "34093049666194829839738563151906029743850443096", "85529285595576916384656298684159996864154012292", "99045203122423867445146818407425757128564100185", "30009145084103971081902864084471895723773200990", "62462640396559757323047964492686185977870219022", "39565135185771393504050571792717904705299989201", "52331664361490321270083793128964010950716250210" };
        assertEquals(9666, snowplow.solve(roads));
    }

    @Test
    public void case28() {
        String[] roads = { "060608200785460133066505", "608432673886472351847342", "080140022012789698021577", "641062323982507663691927", "034603889561692615444498", "820230305810014127185025", "260383040656474871264904", "072280402406612591983368", "032395020215689321394401", "780958642004596642238323", "881861501009934432656750", "562210665490717355538684", "447560466597045364075894", "678091718931405450387278", "029724429647550777769235", "136661853643347070848555", "359612792435657707644232", "318357111225407070009176", "080641293265037860089000", "642948689353786440805681", "671145434868579849950527", "535940934376822521065091", "047292060258973537082907", "527785481304485526017170" };
        assertEquals(2452, snowplow.solve(roads));
    }

    @Test
    public void case29() {
        String[] roads = { "076005866761693542133", "702676168156063616318", "620092903130197834553", "060088969275941380428", "079801447796050297848", "562810605468587464134", "819946092878318582541", "660640900851776338814", "683975200236608087306", "711274882091899153774", "653796753908017115187", "160568816180352743701", "601905376803099309017", "969458170915908349173", "337107868972980614310", "568324530117336064969", "413896838514041604974", "264074287353994440265", "135481583717013992014", "315243410780171676103", "383884146471730945430" };
        assertEquals(1938, snowplow.solve(roads));
    }

    @Test
    public void case30() {
        String[] roads = { "0434310886898179", "4028328813090861", "3205604944101816", "4850257855386458", "3362098896730460", "1205907781218007", "0847870338800810", "8898873015204688", "8145983106245189", "6345618560035585", "8013728220019294", "9908310043103135", "8016080455930359", "1884408615213049", "7615601888935400", "9168070895459900" };
        assertEquals(1094, snowplow.solve(roads));
    }

    @Test
    public void case31() {
        String[] roads = { "08849462348513166477196459939097887750019", "80909919621250912591907262902246052139631", "89049237961485185726569031631355552041344", "40407944256455124336796177135494946445371", "99970230743040704258167231386515851271879", "49292013086144814075702744833584685229274", "61343104650529597420029993398958148411403", "29740340129983261070658077556256646959995", "36927061073759502734115631760871893112337", "42654852702247057236971336284205771237723", "81163609320035356211421338986492676413652", "52440159720012196381624236772386599496632", "15854428543107281838275858992160113995182", "30550493975270140658231870724809255135751", "19117852503121021654544946178754505136022", "61820196055984204934248415078477247556007", "62544471276610140749291967300632109244146", "45732040722386697091276276861985076500320", "79235727331835534907074711557020038330646", "71668500461188449170309986767081939220572", "19571706194622522203029255708985439576474", "90696025172273449770209317042132598951297", "67967298511451481649990603518798000381622", "42012790633288949279236092394106189585069", "56373497333357416718510908170037379328791", "92171437168680657616573280300279266357704", "99613835729797103857705313030506915773426", "30338395688792770656041970303946947390114", "92156386046224880177828400030691632893904", "02345592824318746900917102596068646946668", "94591855709860573828839037049607661396515", "76545486152609472501528679661870023643744", "80598616876512521009450132996660046901073", "85545844977915040733390876143462400844320", "72261586316935579689980996572613600655010", "71042249124491152532593533738936986040768", "53447215131993354032758825799494045407768", "09151919273655664000611587303663145070876", "06338249376617001365426077419657030778047", "13477709325385204247792690210614721667408", "91419435732221276062472914644854300886780" };
        assertEquals(7372, snowplow.solve(roads));
    }

    @Test
    public void case32() {
        String[] roads = { "034586660301327", "301588913008940", "410530311000219", "555097073095033", "883909562573387", "680790264604907", "693052067872430", "611766604454564", "031324740323317", "300056843010088", "000970752105605", "180534243050932", "392039453069053", "241380361803500", "709377047852300" };
        assertEquals(834, snowplow.solve(roads));
    }

    @Test
    public void case33() {
        String[] roads = { "0718972", "7031432", "1301289", "8110103", "9421036", "7380302", "2293620" };
        assertEquals(164, snowplow.solve(roads));
    }

    @Test
    public void case34() {
        String[] roads = { "09995959258579", "90191295513998", "91059996757987", "99506599093795", "51960766992265", "92957099598996", "59996907439995", "95696970895984", "25709548099977", "51599939903997", "83732895930998", "59972999999095", "79896998799909", "98755654778590" };
        assertEquals(1238, snowplow.solve(roads));
    }

    @Test
    public void case35() {
        String[] roads = { "099899898995935998999968989979994889989799", "909999899797959995719986995665799767999898", "990749997687975968582799959268799695867997", "897089659599989969974996676569554779959669", "994804999897999696992796899895998899996998", "999940959669876596892589699855665796969775", "889699086996576969956957059799293975968997", "999595809599579665799095979969259999999998", "897999690667667798695688949696999987699999", "976586956079579977684959989998565699989659", "998996996709658766768767919958659585895917", "577979697990869688929919955959699859869978", "999998556568091974698599876995969969999887", "357897776756907685545997989998999691957995", "595996697989170599965256965599956879866505", "999965967976965055989796976929999799998699", "996699669768789507558978899615567516566829", "858966958768459570955999799859597979469967", "975998976679659959099975999679267977997596", "918799599862946855909998999899999525799958", "992422695489855985990989928886765679999998", "997975906979592799999089598997998797968999", "689998598561995979798809991999699899846689", "869669758979976689589990996728397689897359", "999686099999899987999599069679879919999798", "895799574815786799992999609613966690869765", "959699999995695699998816990997998598999979", "962588796999995968688997669099598895968689", "766695969955999215798992719909798985999985", "958955996889589959996798937990769937698899", "977596229566999955297963899577079998595864", "999596959659695969696999769996707989918997", "499485399599996977795897968889970978895098", "876787999658968759956786965899999065839155", "869799798985697917727998199983987607999999", "975996597959919969759799908557898570994875", "998999996988998954979988989996598899017585", "896596699896956966999649969699919399109985", "997969899959976869799867999898585994790889", "789697999699895689599963779698890198598097", "999697999517890926959985967889699597888909", "987985789978755997688999859959478595559790" };
        assertEquals(12686, snowplow.solve(roads));
    }

    @Test
    public void case36() {
        String[] roads = { "00979654686596579997978599977575589696759989979995", "00801579859884870968878769997984974979249979997986", "98098965559979999997982757959759565999365695097497", "70907997988697977875899996986888695599985938199995", "91870299955999999858968897759989869797981895935959", "65992055889998999995978959898989686995898855697796", "57699506698967679369969986999969959966759599995999", "49579560997999999794888857976694898909859989598598", "68599869099969999599289957597978997859999897999694", "85585899908999299989583189998596999686756856689699", "69985987980395879995575999997689796988999299799736", "58969999993099856659869555869693869569996959999975", "98799969699905995899988659797986769778866588976975", "64979879995950959799989678984937978599269156999999", "58999969928899055967999595996697398859697679599995", "77979979997595503698799979595797999869966525823899", "90979999999659530996895869239796967507855599618699", "99988937599687969079899399796799799668977999928779", "96975969989599699708799989788599999987899869799996", "78758594995999786980997605598889799999898995768877", "98989998255899978879097966996579869696876589599556", "77896768887688999999909699995275066197999799972559", "88298898935989995997790977979679966199599989789569", "57798998919566598396969057968599919799578959895959", "96599585589557976980697508957697659959824579899958", "99767967799598599995697780986865696669597974777919", "99997899599879952775999999077595986971955957999699", "79585997999698993989997658709955999999599982898999", "77969896787974659688659876790997998099797999556985", "59789996956699677758526568599099569998969856989655", "78588869798983999998777996959909799729799799696788", "54989994869367776999959975557990969997986597699899", "59568698997879399797809966999579099989979889895979", "87696859999667996999666159899696909597969995695945", "94559698796998897999966996698999990966897992999999", "69957999869575885699611796990979959099376999695959", "97999960588679560689999956799929896908985799559899", "69997569968989997879679999199897976980996889867990", "72399878979982698988895585957979998399099957599997", "54688955959966965799799729599698769789907999979979", "99551899969669765798699847597996997656970996695798", "99698859882951655989579959999875899978999099965698", "87939598959585729969898577589599899998599907352999", "99585599769986959995999994729697952999796970956958", "99019695967999586977597887985966869658596939099789", "79993999989979921296978997995899999956979655907895", "97795758999969938898929597986969559597995526970398", "99499795667999986798555999699678999989997699783099", "98995999993779999797556551998589749599979995899909", "56759698496559599967699989995589959990798898958990" };
        assertEquals(18146, snowplow.solve(roads));
    }

    @Test
    public void case37() {
        String[] roads = { "099988898956699991", "908595997799925107", "980592977985149995", "955096959879855999", "899909999996995459", "852690997656756392", "899999095687879957", "997599909687599997", "877997590977566819", "979896669098370959", "598795887909193685", "695966777890927999", "691897855319099599", "924595796792906788", "959556996037960959", "919943998969579079", "909959591589985708", "175992779959989980" };
        assertEquals(2162, snowplow.solve(roads));
    }

    @Test
    public void case38() {
        String[] roads = { "091599957869669566859976196957996956697", "908799978969989998996758659759959599979", "180999755959987965057997688596997969699", "579079659999059897839798598995689799956", "999709995996982959268586957976778999769", "999990096995975865799567977955999075789", "997690055578669869895498999669988898975", "575599509598965599675899599799968555179", "785956590599899999658676995897697989997", "899999555095959799759929716857979798959", "665999799906667799879968669999739995977", "999965889560878866593792795695956585779", "699099698968095597899998979889999699891", "688587669567906985975876738997587599958", "997925959978560598966998389795989999659", "599898859778595099976699572895966977999", "696956699996989904659999889299687979578", "685795999996758940999645920999899999596", "890827866785899969059399996999999757559", "595369975579976759508962989971595569988", "967989558993956699980989755789996958391", "979755486997989696399085769887799809895", "759986997269979994968807978967995566958", "687867896982868995929570929994797967485", "166599959767973589997799098496699959957", "958957999169738782985672909499926608995", "698877995695989290695989890898797699997", "975999678896897829997899448095969580639", "559975699599899999978869999909888959972", "796565997795975599919774698590966995799", "999679996979959968959797697989079599699", "959879869735988689999999929686708689869", "697989887996979679956957967986980989996", "959790859795659999759859966599569099797", "596997958998999779565066509859988909559", "699995859855999799798967989095999990655", "696977919997896955593894999697689756015", "979568779577955979589958599379969955105", "799699597979189986981585757929996795550" };
        assertEquals(10798, snowplow.solve(roads));
    }

    @Test
    public void case39() {
        String[] roads = { "0290585599889", "2096978168996", "9905979976998", "0650929887760", "5999097796878", "8772909595661", "5899790519989", "5198755069670", "9678991605998", "9867659950898", "8997869698095", "8996768799903", "9680819088530" };
        assertEquals(1066, snowplow.solve(roads));
    }

    @Test
    public void case40() {
        String[] roads = { "08999797685669652775697996955980993878998", "80699559599959996739955878979997946869995", "96077968999469919938965689668899699769985", "99709999998695699899598966986999999899675", "99790681898619795678999999999698598976995", "75996098686999559899969688587999699779558", "95698907897986989795999815556999589989995", "79891870775615699987587699929976996575377", "65998687067999499559775956599966885599819", "89999897601599896092985977976965599599496", "59988675710998989779269599897797999659599", "69466996959097588555899985857689995999679", "65691981999900969979186628799996799679769", "99959965998700995999997758998798886386598", "69967596489599077999789988717979795860999", "59199589998869709629965877986807688596795", "26995999969895790579989996579299999579897", "77986879507599965099996999987777587999197", "73397998597579927909858768739599699595787", "59898957929599999990978775999793599767980", "69959995792819799989099559789966999999979", "95699698786989868957909676196757999879898", "75589997559967959688990877098689859459799", "98699686995967989977568056997009666985566", "97869819579825879967577509969599859986915", "68969859679588876985967690659999855999999", "99699559598879795979710996095699399989959", "57689852979599187839899965907895999887958", "59869769967798769799968799570879379999899", "99896999997697982757976059688086937557797", "89999997669899709799658099997808908859255", "07998996657968979793679999959680598489767", "99695659859978769565998688393995099999899", "94999989899998989899995655997309905618699", "36998996599596589799999695999788950691979", "88789795556963855957984999989584966094995", "76697787995978697996975889889558919907796", "89996995999996069957999569979799981470959", "99969593845675978179987599998727869979092", "99879597199769999988799619559956997995909", "85555857969998957770989659989757999569290" };
        assertEquals(12012, snowplow.solve(roads));
    }

    @Test
    public void case41() {
        String[] roads = { "097999999909695746969915799739879", "906981496598399699979576898589575", "760999679699999995973989979969959", "999096868987595599999594599969559", "989906967751689693999979998726989", "919660996995998588978952977696879", "946899096967999566077905979599995", "997669909897869671775967677968798", "969876690598986096958966989787969", "956979985069197576895996949666778", "099859699609759777986968685999565", "989715778990799848999959969995829", "639569989177069797466860768565997", "999989968959609375593791769615595", "599598996799990858955749995897965", "769565560578738078966899879798969", "499998679774975709979569999569997", "695938616678758890599779999979659", "999999079899459995098986995796059", "677997775989695679909993689795797", "993998758569635699890698486995559", "959599999999877857996092955199597", "178975066965694967899908799919285", "569492576689019999638280899999552", "789599969969779899964978057995777", "997997778486669799988599505896798", "989987979959895999596599750869995", "759976597699568759779199988019859", "386629968699619967999919996109995", "999966987695557899655999569990696", "859598979758959996075525779896089", "775587996762996695595985799599809", "959999589859755979979752785956990" };
        assertEquals(7618, snowplow.solve(roads));
    }

    @Test
    public void case42() {
        String[] roads = { "06776799699546677999999997875595899996995768", "60595948879961999998979965518698585989977965", "75085978785989897579097889986779699797899856", "79805998999939799999979998299798898899865695", "65550892896906669999783979889998999998997277", "79998066659769557695859959953998966992969665", "94799609495996579984998879759798771999538267", "98882690990796659699519766999999668957951989", "68798649097559699779959995992997957979869999", "97899599905679575979869978576699599998997675", "99596950750976875966976995995997665399995679", "59999797569097599969699996979969657159056995", "46830699577905899899969795983599577998996598", "61996966996750697999599959997555899789998969", "69876556658586098667699959775799889826799976", "79996575977999909985899983698608069859769959", "79799799955997890659990496955968967899599999", "99599696799989696079999997965956699887989989", "99799989776699685709259990597889678999957995", "98999549996999759990767562699679687999549576", "99097895989695689927069959959672989909656599", "97978591567969999956605389989957579999990976", "99793989996999990997950699889997797798999759", "99899987999979994995936096639926799799679669", "96897576979995589996589909779996795596537598", "75989996585659936702999690999797799965699667", "85928979959999769956998679095698587986989665", "71898559979789795699588379905995989787936699", "58699399265937585579999999550579199955785959", "56779979969955769986699997695099558976699965", "99799999999695906587759299997909685898999789", "58988889797995988699277667859990796997996968", "85689976956658809666957777591567089971993797", "98999676596579866978879999889589809568897299", "95989618795779997987997959799856990058459978", "99789999993197888899997759979989950056779998", "98999995799598259899099996885799765509979979", "69798297989989699799998965675687188690779819", "99889959899099775995699656997699984797098762", "97969635699599969854599739838999995777907889", "57957981975668999979609979965996379999870875", "79862629966959999995597656669979729998788097", "66597668977996759897975696695686997971687909", "85657579959589699956969987599598798899295790" };
        assertEquals(13904, snowplow.solve(roads));
    }

    @Test
    public void case43() {
        String[] roads = { "078679686279959999888697889879", "704869779699785959946998549899", "840669999696699997889999959989", "686096996689979358988998939899", "766905999899999999969988678651", "999650979998865589876994786979", "679999099898899999969699714997", "879997905699896888969565967998", "699699950978578798997609899186", "266689869099859996295790999999", "799899997907967588968679569996", "996998898970191699898195298268", "976998885891078976999599999695", "589796997569709869699575872979", "959995968971890807999897578926", "999395987956988079996589671259", "959598989989760705799687857955", "997899988689697950999698568997", "898998999298969979098988595697", "848867669969999999909587995795", "869896997588999699890897866899", "699999656761558566958097977586", "999989960979979889889906999965", "789884959095957978877760797999", "859967798952985685598997099992", "845378169969977756996799909995", "999986479998928178556797990499", "889869991992699299678599994089", "798957998996972559999869999808", "999919786968596957759659259980" };
        assertEquals(6492, snowplow.solve(roads));
    }

    @Test
    public void case44() {
        String[] roads = { "085959972866978999755995049569709999989959587", "808956999869087969597559585999998779979795599", "580969989988999569589979998885399926799899968", "999079899998999599969977598789599979865979897", "556709997999589975799899767995579797999978176", "969990969950999695999996996868895999989976564", "999899058886699595889995659966599569558795968", "798996505799785099891095579676996589855959989", "299979850995860997979599599986999579969785579", "889999879088679158757759989967699758699859835", "668995899809599999994998896967978679799788927", "698890695890698929799979997797618649984598985", "909959678656099599882999797779999997999955275", "789989986799905699945295668999597179899978675", "879999950998950999966866697999999796791787693", "995596509199569075799789666587956775989197858", "966979999592999709977986651699688699995899999", "999955597899999590999659999899898995999599969", "755979889797899799067966866658796585977855999", "598699897599846979606959981699859879999679879", "579999919749256979760799279997595930896596655", "959989905799928796997087899997989769267996559", "957799999597996885659807479989996906899577999", "599796559989956969699770869299998989898997799", "059579655989766669892848097965518968986996895", "489969579899969659687976909889699995670979995", "958876999967787619619999790963489999975897999", "598798969997799568669992989099982955288965959", "698896678669799899599989686909896595778649575", "995958666777999799897799593990999969386995978", "793558599696959968785999564989099387598761975", "099979999971999589959899198899905476556989872", "989995969988979688695968899269950959599189769", "979979555766917769589799999959349059689689956", "972799687574979799873608699596875509793293965", "996979999899796595590969859559769990959789978", "997899589679987999998288969273555679089979996", "879698556998999899799699877878959895802999596", "999599859994991959796798605886869939920569988", "978999797875997185865959998969791627995079059", "599777958589578999579979979649688898796707999", "959986595988587799596677697595199939999970979", "559815995899266899986597899959987999959099096", "896976687328779596975599999577776567998597909", "798764899575553899995999559958529658668999690" };
        assertEquals(14588, snowplow.solve(roads));
    }

    @Test
    public void case45() {
        String[] roads = { "08969898997999999879956638795599059899", "80955959959389699968657998778957619559", "99079967995967999967796517999547999579", "65705699959060979999969569077995969559", "95950599457758959899566879569738660979", "89965065979699977997585719199959599999", "95699607988999979499599894724595565885", "89799570598859557999811969999969996797", "99994995069999995956959992996699979799", "95955789609669959697869995956589969567", "79597988990699599999597976899997559869", "93907698966067967993769665996699969985", "98665995969607895709696799955799999559", "99708999999770698777988977977999957976", "96999995995986099598792999999955677998", "99975775959699907750988999998989299999", "99999797599758970798569269866999599798", "89998949969977577097697769362999596896", "76699999599907959907855525669699999989", "98799799679397808770975999978957859998", "96795558985769795689061867988968986955", "55966891569698986957609995695999699399", "67696591997968289755190957798859596699", "69558789999679992759899090599299797599", "39167196997697996629695909988778768969", "88799949256597999959757090739799785974", "77905179998999998369967597098999995999", "97976929959957996667899983909983289798", "58979949669657986298858989890859996266", "59597959659679999969998277998099799986", "95493596989999589995695979985907586969", "97758959997999599997899989939970699999", "06996559995999625598965777929756058679", "51966969765695799995899968989989509895", "99990956999997799699696785596969890797", "85559987758959997899936599972999687093", "95757989966857999989599967996869799902", "99999957979596898698599994986699957320" };
        assertEquals(10344, snowplow.solve(roads));
    }

    @Test
    public void case46() {
        String[] roads = { "075655799921857595", "709959959999519999", "590897765197639898", "698059995999967958", "559505991995955999", "597950999899155859", "797999097569687576", "956999909757952996", "995519790568895895", "991998575067968799", "299999656607565699", "197959978770054599", "856991698950099027", "513655859665905004", "799755725854950795", "598998598765007099", "999595799999209909", "598899665999745990" };
        assertEquals(2094, snowplow.solve(roads));
    }

    @Test
    public void case47() {
        String[] roads = { "0898517699919996", "8067925898915166", "9609898995091697", "8790758599799576", "5987088895669979", "1295805877859379", "7588850999779919", "6895889087859195", "9999979809775599", "9859579790899805", "9907687878099679", "1199657579909697", "9519999959990973", "9165939158669055", "9697771990797509", "6676999595973590" };
        assertEquals(1668, snowplow.solve(roads));
    }

    @Test
    public void case48() {
        String[] roads = { "07989558969957804999699959", "70887995869997967956987689", "98099926798465599566561985", "88905893598879695995928967", "97950999866159999995767899", "59989097480991559695195659", "59299906896696999799990659", "85639760655996977665686956", "98758486075957699995595895", "66996895706568597788996999", "99886065560879889698579959", "99481969958067969979956699", "59675999567609566771592897", "77599166789790939678995999", "89569599658959099699799915", "06999597998663905859098247", "47959997979969950879967685", "99599676976976688093956788", "95699996989777957909897956", "96655595588918999390760969", "69597196595959709987059960", "98626998997599996596506957", "97187506569625987670960799", "96998669899689926799997078", "58869555995999148856659705", "99579996599979575869079850" };
        assertEquals(4586, snowplow.solve(roads));
    }

    @Test
    public void case49() {
        String[] roads = { "07619995999752596988678", "70695999498259595969098", "66099797788698698669989", "19909999799976999997897", "95990279999995997988787", "99792099497971985929855", "99997908969975795999997", "59799980999856686797665", "94779499077795759795999", "99899969708699757658798", "98899799780989985995996", "72699998769097657095969", "55979775998909897765959", "29865156599790799869691", "55699976779687094978546", "99999898558599909065957", "65897556975779490786797", "99699997769078907045785", "86698299959966768406569", "89978997585559856560897", "60987896979996597758066", "79898596999659459869609", "88977575986991677597690" };
        assertEquals(3680, snowplow.solve(roads));
    }

    @Test
    public void case50() {
        String[] roads = { "07989599", "70259999", "92029879", "85208969", "99980796", "59897036", "99769308", "99996680" };
        assertEquals(410, snowplow.solve(roads));
    }

    @Test
    public void case51() {
        String[] roads = { "0687997799985999989999886495", "6077887196959997696799699685", "8709687558998989997655997599", "7790898977669977996959995978", "9868096995964867659558696999", "9889909975929999949595659798", "7778690069775299959049095665", "7159990059987579889789677357", "9957976508979486595885965989", "9687559980999969726699997891", "9996997999039559956955959672", "8596627879307989960999709696", "5989495799970156596996999974", "9999892549591097857908859999", "9987699786585908965566959956", "9797799969996780769998989997", "9699699857995897069996798999", "8999545892569566609386878989", "9676999956606759990895585977", "9769550786999959938070997697", "9955594889599069989709975989", "9959859959596868665090978995", "8699660699979899785999089997", "8999959769509558978977809896", "6975695757999999885758990955", "4659976398669999999699989076", "9897996589797959987989995708", "5598985791264967997795765680" };
        assertEquals(5498, snowplow.solve(roads));
    }

    @Test
    public void case52() {
        String[] roads = { "0866977966996", "8099967459999", "6909096778699", "6990267666958", "9902098599969", "7696909995755", "7767890856989", "9476598089689", "6576995807967", "6986956970928", "9969979699098", "9995658862909", "6998959978890" };
        assertEquals(1140, snowplow.solve(roads));
    }

    @Test
    public void case53() {
        String[] roads = { "05965592947878699697249698098969994987", "50199869856996579691698599599859969599", "91099697969659999197995589689499668989", "69908599996759789997099069999899099880", "59980989989896599689939798791659967995", "58659088698979676999458995659899818569", "96998808859984979777999795836755299549", "29799880099979998878957929969559598989", "98999680019589609558977695567857999528", "45698959109093859999699559577995997877", "76969899990586679979989989598969899589", "89678999505099999969996899997597588999", "79559787898903697797969879967799978759", "86996949936930966587659699696999158845", "65975699686969068559899788366995656896", "97989779057996609899787996766795979992", "99999698999976890656395999598969757769", "66196978599975586079590877979970679979", "99998977597698595708795549695959969868", "71779978899977996980671918995985259599", "26909499969996873576087974299765975885", "49993595798965989997809188859779789988", "98599897799699975051790679999989979699", "65507979659886799859916093998979667999", "99869992958979899741787906695985979675", "89998559599999869798489360096589598797", "05697689555996375969289960058558599955", "99899536679969669799959999507696895996", "89991969778776668955999856870575968899", "98486875899579979999779995565075616967", "65995955596999996758678788597709677678", "99999959759799559095599959865590589799", "99609825998591697692979695589665086837", "96696199999875575765787679996178808998", "49897898979888697999599798958679680956", "95989559585978897985896967998967899057", "89889648278954996769889979599679395505", "79905999879995629989589957569789786750" };
        assertEquals(10160, snowplow.solve(roads));
    }

    @Test
    public void case54() {
        String[] roads = { "09799578959696998699699986695699893895975584890869", "90766955769999889768997555559979596796317996946979", "77045786999659992798586991896997959899669959958290", "96406975895595989989852589979878284979996856990977", "96560965799999565856566976758999999798958999997957", "59799099499975899959859192599996679669979789566585", "75876900599759959690919897879959896895697951595966", "85655900869728617615999965997896097966598797849982", "97987458099567999596985878889865596999974499509957", "56999996905968968668688999998999575959598898989599", "99959999950859975999796694967895873659956699999698", "69659977598073999999965798998979898859989559997988", "99599752665709788796969899999999998989988617989679", "69959598789390765858999787797709899969956649567796", "98995896999977088955978159866525999998369578879598", "98986951967986809696867979939999689959960976998659", "89295997985985890766997968082979599598959999959505", "67798966569978967055684699999757785968957793799677", "96985591969995596508999691699699975879889988877688", "98896905689968566580978779966678619727809689999979", "69585899967999989699095696998593989896569999599658", "99856519889669769897907696894996999978879799752695", "97626999586599877498570949999995999796759699875959", "95959189896787199667669076899582959955898667996799", "85987996799998576997994705996998882595946829696909", "65196275894897998919669650996566789996087669690989", "65897589899997890969989899095959958976869828797599", "95975979896999638996999999905158955869969969879929", "59698997987897692996849966550899929057999966799987", "69989998898997599766599595918056597897979675999875", "97979959699790297597999896559509985996797960928999", "99789696595999599798365286989690897997296599874797", "85929680558898965796999987999598032799795959685989", "99589799977999989871899588552989302965858888999699", "36949967653889999559999929859757220599979898599797", "87897689996899995987897959980899795098789997629979", "99979696955586959672979599765999969909799865997669", "56998956999999898897686556697767959890896655855867", "93699965959999399988587890899972789778078987896995", "71695799795885665580675948669799957899702989075589", "57968978486986909799999867999976589996820656955698", "59989797486566599796976686899695988986996099876975", "89559859999514779988999626266769589965885906959788", "46969917989979869389999799896509988755796960778709", "89999558599995899789578966787998695698809897079169", "94599694089986795979957999979927899295975757709663", "06807659999797989979925660799984599975655698990998", "89299599956967565669669799599897967968956977169099", "67975868599879950787595908928799899766989780669906", "99077562798896895789859999997597997997598589938960" };
        assertEquals(17784, snowplow.solve(roads));
    }

    @Test
    public void case55() {
        String[] roads = { "0958645659999958559699786999968979588969878928", "9044967965559969988699769988767978997799969659", "5405996996386999869746794985568983578999997686", "8450999399897296839996669199917989869856959999", "6999055995659655965657899898799869995559998798", "4699505576399689799969699699765974697999589977", "5769550992986769969975969599658969759799995898", "6993959064996959996999668499966955890897779882", "5699979607591975977989756859965788569459795968", "9569562470995699897899795977977369529599585999", "9538639959089795679996896999978958993866599827", "9589598999809996695797595989899587976555695696", "9967996615990886873968849947799579959896659799", "9992667996798099985999976924968979747895608899", "5699586579998909985796562998927899589958799997", "8996599959566990905559597689976998655999998588", "5988979998668999078768966969968997858959669939", "5863696979797880709869095669969999658996755999", "9899599677953555890599779949759999199598975935", "6679699998979975785089885959599968699935579986", "9949567989996995669807699196779979979985998977", "9966795999678969899970997998595921999965879699", "7776869677858955907869087789979559569995989665", "8696996659994769697899809998979896597995868656", "6949999865659627659597790998867559529888855869", "9991865489999996969919799065219896869599599769", "9889999957984298664599899607616569999999999989", "9859899997997489999968988570995999869199866595", "9759776999987999997575998269097585569959985879", "6661965667799627665979776119905859995946799999", "8787958657899876899995997965750797750959799954", "9999899973955989999999585859587093969177999594", "7788676586587799999672595969859907589995659899", "9839949589879998799891969699597370768896299997", "5958967855999756861699555898597957089798479548", "8976995962975485559979692696695686806769976989", "8789579099369795889999979999950998960689799369", "9798597845858899995999998591999198776095979686", "6995599959659959599386998999545799968909959598", "9996999799656589968555558999969756899590359596", "8999959775566679679598988598977962497993099896", "7695989798995099657797865996899959779755907656", "8979895955959898955989985996599999969999970099", "9669798899867895999996668795899589593655860099", "2589979869299998393879656689795999486899959908", "8969878289769978995679569995994497899686669980" };
        assertEquals(15126, snowplow.solve(roads));
    }

    @Test
    public void case56() {
        String[] roads = { "09998999589999789928696965899695587998699998659675", "90897953999869979998959597855895685895556989995699", "98099567779285568659609999599876458977697476896999", "99905698775656788967799599879859978882895952996261", "87950985996959889779579855996969956597697759697619", "99569080996792899509898799878999989589199599976974", "95698805568957198589619796986899895659299695999879", "93785050989889767787799999769578998998859985897759", "59779959089795566779973995999289755965690969299879", "89779968809997599849999646769995598960199698777698", "99956689990899556959668599978988886099569998998798", "98269798798086559979979599698999989895969595696558", "96855958999806892568299866799859970976876885993956", "99569279579660857999569997995999874599855955095989", "79578817555588059670779966379796999993939509688949", "87688996695595506767677565989599987858698195997979", "99889987696927960979699982979537559945999856696736", "99697557789959679089959978967955965369699953697969", "29567088745769767806915799999890899595939979799769", "88979997999989079960957995977867916989959678959779", "69675867996925766999099919999992992798631498789598", "95097919796796779515906896661255788999498998997739", "69999899398999979957960959962999999595767955879999", "95958779965589959979989094995296699696558796699906", "69995999949969668799195908956889555899979635999996", "57995969569967652895969480799552996588696962585587", "88589897979679399999969997069868696565589799958969", "95979786967999787697966959607799755759569665979858", "95996869998895999797912569970797299697999875909559", "68889985299989755988929285877098609999999679299750", "99756997898959993596959985699908955599997956897997", "55699998958999697507259692897880546746959599599597", "56499989758998995989979659672695055569546989939795", "88575899598877985691989959959054505955995694794598", "75886958586904979596289956659956550795991999757876", "98985569990895989359795685576957597086959979798985", "99789859669979954698999998659994659805956979955967", "85727998509569385959895698597996955650999599959996", "65686128615988969699647596559999599999068849799979", "95999995996675399935396579869995499559609597969655", "96757999099965989999187896999979651969890092797698", "99497569969589518996499769768695969995850059659679", "98755998699985095577995936967759899779499509699955", "89629955988555956398885652955969949999972990959999", "69896998279690696679798695999285977799797669079099", "59999799979999899995897998570999395955969595705869", "95667697978635876799979995899979947859997999950299", "66926987867599997977579995985795758999966699082057", "79961775799558473667939098655599997869759759969509", "59919499988869996999899667989077586576958959999790" };
        assertEquals(17612, snowplow.solve(roads));
    }

    @Test
    public void case57() {
        String[] roads = { "09917652865998797966998755896999", "90656577899655959699799568596699", "96099989569666989689995995799999", "15905399765967925969399599528969", "76950999699796992499566959997969", "65939077615995661897656689679559", "57899705895799994999756999888766", "27999750755978879182995987579751", "88576687099987999599895799592979", "69669195907899997599999907597179", "59959555970999769658969985986998", "96697979989099786877969587989869", "95669997899908798599689899997996", "85676598799980899587796979779966", "79999698997778099699897977698599", "95829697996899905688989699857999", "79952149979689950997969698998079", "96694891556855669095859998597976", "69869998995798989908999999987997", "69999792998797987580975989689197", "97935679899967899899067795999695", "99996559996689986597609993599959", "89596665599996799995790976996587", "75959699799589966999799068959887", "56995898908897799998997607761857", "58599997975799798899536870999895", "85759685559997689596959979099798", "99929787998897959988999569909858", "66987989276979878779996919990677", "96999577919899590991695888786069", "99966565779696997799958859957608", "99999961998966999677597775887980" };
        assertEquals(7364, snowplow.solve(roads));
    }

    @Test
    public void case58() {
        String[] roads = { "07999598977997399098577956177", "70995957973967999920979975768", "99087869137969969999899987976", "99808969979555685985999995679", "95780567998899999596595775997", "59895095965994836798958577979", "95666907389969969099598699559", "87997570955889998690999699999", "99199939079995598956075998959", "77379685705996989978998999989", "73798595950977599999919995998", "99958998999059797750969999828", "96659968997509558669699869799", "77959499567990269851679767789", "39969899595752089969798996952", "99689369989956807996896596999", "99959698899789970989599317796", "09995706999768999095168969599", "92989999579565698907596948099", "80956890689091969570978888525", "59895959099966785159099397668", "77999599791697999697906949499", "79995889589999869868960799957", "99997566999987953998397079197", "57897799999966991648949709668", "65755799895997667988799990799", "17969959999877997505649167097", "76779759589298599992695969908", "78697999998899296995897789780" };
        assertEquals(5922, snowplow.solve(roads));
    }

    @Test
    public void case59() {
        String[] roads = { "004040003032002044", "000000000444054320", "400042000430090646", "000023002003200840", "404207003100101024", "002370000004020038", "000000034033414003", "000000301440972004", "300230410230002000", "044010042000100100", "343000343003003140", "240304300030920040", "000210490109010033", "059002170002100453", "240010422030000000", "036800000110040032", "424423000044350300", "406048340000330200" };
        assertEquals(530, snowplow.solve(roads));
    }

    @Test
    public void case60() {
        String[] roads = { "0839402023241100000032104000040000", "8004114024324433200010000102000134", "3000042107230044330000023034401430", "9400002201340443740400344920004033", "4100000541030110000000408130301024", "0140003140030213130021004401004012", "2422030400130104030200320000240305", "0012514012021023101540940713034125", "2200440101020202003810074403344700", "3471100210200030003034033140282000", "2323001002008042210100022030191400", "4234333220002020402020102613330200", "1400000100820011411140001044140000", "1404121020000014130120100004323203", "0344110203421100800460020100000044", "0343034320201400640300110304043120", "0237010100244186000070000014200703", "0034033000101304002205004043000102", "0000000133021000020004001044033040", "0004002580101143020096040026100303", "3100020413024260700900224304010030", "2000010004000000054600107120030000", "1003403900010101000021023003600204", "0024002473200021000420202036202004", "4034840043221000041047320020600002", "0109140741060013000031000000332300", "0032300104314000144202032003070404", "0240010330034404434640360030020400", "0040302032131300200100626300040743", "4000004348934204003013000372400120", "0014140442100303003000020200000047", "0140003170420201710300200344710030", "0333210200000042004030000000424300", "0403425500000340320300442040307000" };
        assertEquals(1896, snowplow.solve(roads));
    }

    @Test
    public void case61() {
        String[] roads = { "042040050234013006130017", "400300614040200940242001", "200201203103210001413100", "032001000400003461221640", "400000044031024072120232", "001100403001020100210315", "062004010000011001303240", "510040100122001100000420", "043043000080000020110339", "201400010004043000104028", "340030028000013733402402", "403011020400000400402010", "022000000000014740103030", "101022100410101140193004", "300340110330410000352304", "090401010074710000030420", "040670002030440003000014", "601120100030000030602321", "124212301144113006004722", "341221001000095300008414", "023100300422332002480302", "001623243040003403743000", "100431423201300212210000", "710025009820044041242000" };
        assertEquals(920, snowplow.solve(roads));
    }

    @Test
    public void case62() {
        String[] roads = { "020010202000200000003830004350425303000132103", "200114202121010030440400340020034426400300400", "000421400002021400011102200200242000220132021", "014020031200302080001000220000402340032240420", "112200430400100000340012033410833233002000012", "041000050000004042213011042420001402420340043", "224040012002090403040262124012223042033300000", "000335102301021223000370142320048118000043901", "220100220002312030903000400003042004011140020", "010240030021432033120338740230021440130000314", "020000000200090003046330001000941401020300400", "012000212100020022201421303000394200020000000", "200310003400000021040003345000060201100004001", "012000921392000400141000020302224200220004084", "001204012200000040024003004301010032900504343", "004000420000040064020400403303762602216280000", "030804023302204600000003040000011020133100300", "000002330332100400453410006002043003002020242", "040032009102010004012302800120000200202210011", "041041400240442205108200202020000034300420003", "301103003061014003280201001320010030100002030", "841000230334000404322020007300300151411270127", "300011670332000001000200003001021004412007032", "002021200801303030201000420810231030203006440", "032200114703300400820004000832040000030740300", "040234240400420040000002000001002300000420320", "400032420013504306021730000912000210003100114", "302044030200033300103308809024100001301320082", "520012120300000000222001301200010000300013101", "000000203000021302000010212400214110400823003", "402480200093020700000302000102023003433243010", "234030244249621614001023400011200210400440000", "542231382114040213000011020004300022000463201", "340324010442220600200100032001020025000204030", "020430410400003020033503001001012204002203000", "360032284010102203040140000100302540040111040", "042004000100129210231442000334440000043120400", "002302301322020130000110300000300004409003010", "000220301000000632200123003100300020390000500", "131203301030005210240200741308244221100010108", "303404044000000802120700420212446001200100213", "202000030000444000002076000033303431030000070", "140400090340003032000104331010002000405120072", "002214002100084004103234021800100304010017704", "301023010400143002130720004213001000000830240" };
        assertEquals(3038, snowplow.solve(roads));
    }

    @Test
    public void case63() {
        String[] roads = { "0030014091004030130300000600", "0000000430400001040010042000", "3001332034003003302500484040", "0010200000300320100000082900", "0032033100210400142050050033", "1030301403015020421323800003", "4020310003022843007441141430", "0400140030001025001320032430", "9330000303000014400004003300", "1040033030233200243010201000", "0403200002040220051120330440", "0000112003402020404003200400", "4030052103020000502100001002", "0003408002200044323040030411", "3002024210220402030004030130", "0130003540000420000302271040", "1031140042045300004103000223", "3400420004500230007100420120", "0020217103142300470040050310", "3050034300101003110042010100", "0100524201200400004407102200", "0000031040030042300270049140", "0040081002320002040010020033", "0488504300300337025104204000", "0242001231001001000029040002", "6009004430440410213121000080", "0040303300400134221004300802", "0000330000002100300000302020" };
        assertEquals(1162, snowplow.solve(roads));
    }

    @Test
    public void case64() {
        String[] roads = { "0000201104120010200182404039123001000243602020240", "0000200031316401703300006320040341000004202100404", "0004404482649010442002000342404041228033004214000", "0040033039243100103030400300007012264000000034001", "2240010021004100101204233002300010100100172003006", "0003100011000010100000021013104000000470200091244", "1043000000414003142010000003000000000200339004302", "1040000030412040400010201012100231100200840022000", "0383210309000100000080000132040300400323909020003", "4129110090000021000003300010241120414000413341404", "1362004400002101000200000024182002313003700004030", "2144001100001314000200042000200020111020224004042", "0693404200210930003106400100430000041041113000440", "0401100010139004001404301300040700360000000220100", "1010010402013001104040030012031412037058003494003", "0100003001140410043011720203440000014300047100040", "2741111400000010020040011440450000349830200301001", "0040004000000004202000001420030032430000440080204", "0323102000003143020034400002000012000044005343340", "1300200000221400000020001103000043020034034021004", "8003001180000041403200007310001300110213500440000", "2020400003006401004000002100304031000054070024000", "4004200203004307004000002202803004014003000248434", "0000320000040032100000004200060002280004108035412", "4600310100020100110172240431300308333324004081920", "0333000010001302440131224021030410031204404043003", "3240010131200010420010003202001170730300480004407", "9020233220400023002300201120100013200400402201000", "1040310102124004400003803001042004002111100001324", "2400000044803434530000060300400320030011202001120", "3047040001200010000014300010200120422103000030204", "0300000231000740000030003410031043420003403052010", "0441100302020010031403000171022403740020006018201", "1112000100200020022301428003400330230030031001002", "0022100144310300340010023072004472011004900831213", "0026000001114631430210183330032243100420000100420", "0084000004311074900000403100202000100424000334035", "2000142230000003800020003234101000044010200100003", "4030070020024050304315002000110023022104001241020", "3430000030301080004434344400113300404040100042240", "6200123894721000240050010444120400900201030010004", "0000703401021004040307000080000003000000303015212", "2240209093043037005400084402020361000010030090710", "0120000003000241303040200002000000813120000011484", "2013090224000290084242438400003510303044119101400", "0044314201440040103104851341110281104012050110040", "2400023004004100023000449040312020240002027440023", "4000040000344004004000312000220100123024011804200", "0401642034020030140400420370404012305300420400300" };
        assertEquals(3684, snowplow.solve(roads));
    }

    @Test
    public void case65() {
        String[] roads = { "001324144000230440112", "001073310013293440207", "110000103002010107130", "300000702434232200100", "270001402343040003000", "430010302016330340105", "131743000417508001322", "410000000043100874010", "403222000033440103003", "000430400030281130902", "010341143304020000011", "032436733040002220433", "220203514200040300010", "391343004820400000012", "030200800102000040402", "441203081102300000800", "440004070302004000204", "007030143000000000300", "121101300904004823014", "103000210013110000103", "270005203213022040430" };
        assertEquals(742, snowplow.solve(roads));
    }

    @Test
    public void case66() {
        String[] roads = { "0000000402020000401003321440404240010400000", "0021100001081000300008903015032480002100336", "0200400150031004020241001410000020413002811", "0100080400102000001123441130113410110470133", "0140002030723944020004322130375340001430033", "0008000003000413440000000026331010241012000", "0000200034601542004030100107341410011000114", "4014000000241900014214040164004710140324000", "0050303008020000332400000112300000000030904", "2100034080110083022633042112401220000003420", "0001706201000390000024020342401000010022100", "2830200421002000030401411411120010402043004", "0112301100020005304000430310300003430020444", "0000945900300081724204000203200040100203104", "0000414008900800303003430401100244400030010", "0040432003005100213044030030130110000100174", "4300040030003732030401008430420037603141004", "0020240132030201300031400134120940094061731", "1001004422004433000040321202004113400440246", "0021000246040200400003033390071001030820208", "0042003103200004034002413340220300380020440", "3813400403410434110320071034030303181804800", "3904301000044040043040020300000240504332005", "2004200404213033002317200000902234401314000", "1311200002010000801331000240005615344482300", "4041101111343240412330302002350200404000040", "4113320611411003330943004000210000104001323", "0500067422210310042004000200000310000324120", "4001333034413211410020090320090030020310720", "0301734000020003220723000510903003440420010", "4203511401100000004100025000030011403100413", "2404304702000021091033226203000010102014002", "4821411102010441341000431001301100203242000", "0000000000003040703103045000031000008201012", "0041020100044140604031543410044120012201010", "1011041400103000090388004000240000100002022", "0230111000020000340001414440003238200400210", "4104400300000201104808334003341022204005010", "0007310230242030464220318002120140000000311", "0020020403230300110004242014000421120500031", "0381001094104101072248003031704000002030034", "0313301002004017034040000422211001121113300", "0613304040044404416800500030003202020011400" };
        assertEquals(3022, snowplow.solve(roads));
    }

    @Test
    public void case67() {
        String[] roads = { "0001339000020302400100", "0003000419004344220000", "0004000201016090100023", "1340302200633000403900", "3003040000000013000400", "3000400421322230300100", "9002000020208040042010", "0422040040000100010003", "0100022401200403020120", "0910010010004212003000", "0006032020000005360020", "2013020000000404021002", "0463028004000070002121", "3300020142040000001110", "0490134001007000003110", "2400300032540000110030", "4214030000300001010000", "0200004120620001100408", "0003002003012130000202", "1009410010001110042001", "0020001020202113000008", "0030000300021000082180" };
        assertEquals(606, snowplow.solve(roads));
    }

    @Test
    public void case68() {
        String[] roads = { "00133330480020010140130240640222801003010033", "00127003404533004923320130120403032010031010", "11050301300140000230034503404500420030241472", "32507442403033343041440000030100000103000200", "37070200384002202430200380230200000003130000", "30342080200015200001800120800324003434380011", "30040803101000520011340004002320903030101403", "03120030944402020000000008000310402212300440", "44343219004000452002030132020220300230344221", "80008004003810320000900250005001024030002111", "04034014430100221090325000228231122405102208", "05100004081000335101338000440234414044020311", "23430100010000000010000006143100000003000314", "03032502000000024214402010230204010000000602", "00032250432300000000000005141311430064403000", "10040022522302000240044301300100100009000122", "04032000201504000303040004010901402011130000", "19204000000102023004410020200354000005210444", "42343010009011040004180221020344004430200354", "03010110200104003440214020003004243101133282", "13042830093304000412030404140043004132100307", "32340040302300044181300000132031044220001004", "00400000005802040004000303321303424000080320", "21503100120000030020403002020520090250403903", "43008200350001000222000003307030204020002050", "00300048200060514010403230060732214001111100", "61402800002412130200113030004083300151004500", "42033000202443401020432206000024000420541210", "00400020058030100003021070400201000010304320", "24512333202212319330003507002010303001057010", "20000221203300100540430233820100043414070210", "23000400011404101444313002341000043011220010", "80400094301400414002004022300300003036202410", "03200000022101300004042901000044000014030401", "12000332042400002043444044000333300300400302", "00010402204000000041120200140040003022024420", "01300331330400601030320520521011310205021310", "30033402005430491501200001100141640250030004", "00201313301000401221100401053002204000012029", "13403800400200003103008001040572030223101000", "01100010422000300003010321414700200410210100", "00420044212336010432303901523020443430001022", "31700104210110020458002050012111100210200200", "30200130118142020442740300000000012004900200" };
        assertEquals(3154, snowplow.solve(roads));
    }

    @Test
    public void case69() {
        String[] roads = { "0232606342401000", "2020203001010100", "3202070001014400", "2020007301420603", "6200000302320000", "0070000004000200", "6307000430490910", "3003304003314200", "4000003007042510", "2111240370100002", "4004304301000210", "0112209140000301", "1040000420000040", "0146029250230040", "0000001010104401", "0003000002010010" };
        assertEquals(370, snowplow.solve(roads));
    }

    @Test
    public void case70() {
        String[] roads = { "021410040044023001004", "207340200100010003012", "170002013000024042200", "430030413353009014023", "140300208120421020000", "002000034300010002310", "020420000804222002444", "401103004103446022004", "003384040000803040900", "010313810090030170013", "400520000902200301003", "400300430020445330008", "000040248024010210403", "212021240304101200000", "304910263005010310300", "000000000133223043201", "004120024703101401043", "132402220010000310025", "002003409000403200003", "010201400100000042000", "420300440338300135300" };
        assertEquals(702, snowplow.solve(roads));
    }

    @Test
    public void case71() {
        String[] roads = { "00", "00" };
        assertEquals(0, snowplow.solve(roads));
    }

    @Test
    public void case72() {
        String[] roads = { "02000002301200022004022021204040003", "20402202000409707322043000034003019", "04000003000403014004000410200303300", "00001320040131002042120013010000041", "02010300000001300013274024004040330", "02033041091010001010110302403302200", "00020400024100000001334040203035003", "22300100004204222032032234123002010", "30000000034000021404040400200124132", "00040920300240310009241000001040026", "10000144400002021031400243120043400", "24410012020002000080302081810004181", "00030100040004442014030120030034301", "09311004002240007143000100020044431", "07003002030040000140204331002024400", "20100002212040002004100000304305070", "27420102101027020043039003224300300", "03000000400001100004113401008031241", "02041103003814404001020004101112222", "42423012491043043410720013100000502", "00012130024300210107004041224000431", "24027133440030003122003330400400300", "23004042010200409300430443302310236", "00400302402011300400034003120330100", "20112043004820300001434000131421032", "10034204003100103143103300003152024", "20200421201800032011243110030430213", "03010002002132002000200230300460044", "44004333010000244810402013000002101", "00300300100000033010043341440021082", "40004030244034200310001325360203613", "03300252403444450120000012002130307", "00303200104134403225432100201063000", "01043001320803070420303032140810002", "39010030260111000122106024341237020" };
        assertEquals(1896, snowplow.solve(roads));
    }

    @Test
    public void case73() {
        String[] roads = { "0002440081011342", "0004030124003002", "0002102103001203", "2420004210900010", "4010000340000024", "4300000241000210", "0024000302041000", "0112323030913370", "8201440300042220", "1430012000130100", "0009000901080900", "1000004143800020", "1310001320000110", "3020020321901011", "4001210720021100", "2230400000000100" };
        assertEquals(356, snowplow.solve(roads));
    }

    @Test
    public void case74() {
        String[] roads = { "0442030", "4001622", "4000080", "2100322", "0603012", "3282101", "0202210" };
        assertEquals(86, snowplow.solve(roads));
    }

    @Test
    public void case75() {
        String[] roads = { "02313100085210520011100240130044070200000040", "20011363000020400210002007023040412040000540", "30040030000340012050402330040411401304002140", "11402440003044020110005130010140000300002020", "31020044000001502100305414320200001602023300", "13040020040141040000403010010040173042002001", "06344201380440300000400000080002202001101000", "03004010020032744440012000230011130200820220", "00000030010080000402011000030100000040001302", "80000482104009000030042031342010006000420000", "50030000040010040402600300044300046022005040", "20300140000000041401002418042041030940321411", "12440443801000400552004010911101100402241112", "00041102090000004434340400014031200900002003", "54005037000040000013530331300744400403020040", "20120404004400000453001100320020004030040000", "00202004000104000000042010304230022020040004", "02011004404454040010040012410204450010012000", "11510004030053150102010440010040230040112008", "10000000202124330020421700300332060013000300", "10403440006003500004003000442210354302014220", "00000001140004304412000201212413410042049216", "02255302120240012001300520040302000014041004", "20314000003404310047025012030400104300101000", "40331100030110301140002100100222011020041230", "07004000010800100200010200902000033011030000", "10003002030090333403420019070002030010320303", "32412183344411020110414300700000018013443000", "03000000024214004000220002000032800430020404", "00412000103010702203243420000002010100384110", "44140401010403423043110020003007302003020320", "40100021000111400402032020202270425014024000", "04400121000012400420340100008034000404020332", "71000703004300002536510013310102000000007340", "02101320066000042000400413080025000034040403", "20336002000949400000300300004100400013220010", "04000400402400032141041021113001003100322004", "00402210002020300003224001030034404300080000", "00000018040320000010000100340300000230010200", "00002002020240244110144043242822204228101130", "00223210105112000220491110030404070020010200", "05103002300410000003220020304130334000212033", "44420002004110400000210030000120340100030300", "00000100200123004080064000304000203040000300" };
        assertEquals(2792, snowplow.solve(roads));
    }

    @Test
    public void case76() {
        String[] roads = { "062", "603", "230" };
        assertEquals(22, snowplow.solve(roads));
    }

    @Test
    public void case77() {
        String[] roads = { "00046402", "00470000", "04000461", "47002080", "60020310", "40403004", "00681000", "20100400" };
        assertEquals(112, snowplow.solve(roads));
    }

    @Test
    public void case78() {
        String[] roads = { "00308103", "00101003", "31007000", "00003322", "81730200", "10032001", "00020000", "33020100" };
        assertEquals(80, snowplow.solve(roads));
    }

    @Test
    public void case79() {
        String[] roads = { "0022100400210300430412008100000432003163000074", "0000004002400036133040420420301003460230443000", "2000320134300023100310000242000021000050280000", "2000020204004020004030307140402333010334000003", "1030000000130102301204040032200340012020204000", "0022000020832031020003010012040100400202000300", "0400000040001724402143001400042419300000307001", "4012000020003003004323800001900003013020220020", "0030024201000510420301213010404315000700310320", "0244000010001473026104001002432040230404901030", "2430180000004000107018100140400001022000311010", "1000330000008060030320003004300000013020010301", "0004021301480301124201331042500231000240040000", "3000107054003004023000008000000435230000212000", "0322032017060001371044302044342022200404300017", "0630214303001410040021003040000000800044320400", "4110304040101030032030301000044200330181509220", "3300020022032274300034600200201002004009100340", "0304102406704310200004010840001002303140120024", "4030201331032000000000210103320410040102010120", "1413004200120042330000033308042408220114202034", "2000433314801041044000040314000000300100424310", "0403000820103030360200010042440430000002000420", "0200410010003000001134102321410020134014013103", "8007001031031823100030020101533400000100035330", "1421004000100000028133031041001231000020090420", "0244310010404044004001420402403000030502101220", "0020220102042040000384211120061000302120004260", "0304200944435030020300445040002070413426100912", "0000044003000040400240413006000132014030101030", "0102002042000020411020003131200302041000431304", "4003314030002400200440404200013000330283600011", "3023401014003320000100320300730003002340001040", "2313009350101520022080000100022030802300002734", "0400043002000228303023010003400308021040130303", "0601100103210300300420030030114300200023010420", "3000200300230000043000040002341022100017263240", "1203020074002040101111001051400233000083043000", "6353200200024004804010010202230840421803132403", "3004020004000044190240240020600300037330130711", "0420203239300233511024000010114600102011007003", "0480000210114102002102013900003000316433002221", "0300407001100200900024035014011012003320720004", "0000030030030004230103413422903007342047020054", "7000000223100010242231203226130143024001020500", "4003001000010070004040030000204104300031314400" };
        assertEquals(3204, snowplow.solve(roads));
    }

    @Test
    public void case80() {
        String[] roads = { "00910030044300000041430324007030480740084030022", "00330000023006133000420380342200810000400300020", "93000012023300043212000012641000043010330000803", "13000300405004434003201014500313003004207200120", "00000440140410302220002200304062208000300243100", "00034000350700004030310420020043730102001010043", "30104000023000230102400044050323263130440241300", "00200000030200001300120314203004031040212000004", "00041300010100024009440000407020000000500300100", "42204523101013130110301308303032201202403060421", "43350030010440302104001000121100010590131432000", "30304702104001010021001049401203003012210930031", "00001000014005001000030030000438000240002020100", "06040000030150400030032000812100440002088000400", "01043020013004020000301773450002012040134004400", "03430030230100200401074300003904243020172010030", "03342401402010000300090100403504020110100021000", "00202013011000043004004030224700382230300103041", "40102300010203000008020700440010101102100302040", "10230020904100010480000001439012020000000000430", "44020341430000300000036203030200232403020440003", "32000102400033079020304030232000600203302140200", "00012000011102140400640000010201032101394060260", "33002403030000731070200001222002404200303301042", "28110241000430700300030002141242040500314124303", "40240044080900300001300120401301043020200000504", "03653002431408404244020214030000110124305250312", "04400250002001500243331240302427024007110200300", "72104003731102033409020211020820404430100011424", "02030030001241095700202023048080004520200112303", "30016420230030000011000040022800000010032404402", "00032334020380244002001221070000000000100302000", "48002720020004020310260400104000006004400409334", "81400363001004142802303044120000001002103034000", "00338031010300230210202403044400610004200493013", "70000110025020001210421250104500000040100041024", "40100034009140421300000002203210000403012043202", "00040200020202000020331000470000424030340004030", "04323042541200111310033332311201412103044100920", "80300041003108370000209010010030000014400711001", "40070102031028420000024340500020030020400024201", "03022020304900000130410310220143404000170004004", "30004140063320012000446020501100039440012009200", "00003010002000401320000140001242943134014490100", "00811030140014400004022035334340300020902021000", "22020400020300030443006400102000301203200000003", "20300304010100000100300234204320403420011400030" };
        assertEquals(3444, snowplow.solve(roads));
    }

    @Test
    public void case81() {
        String[] roads = { "04000054410900030224260034104630030109734004", "40023011201102001031032030034300010012334040", "00040320023000420000003300030320002019010010", "02406020041411220524200200302421440220030440", "03060011100400040401300003000703303000031030", "00300000000031113034400174320141130007024443", "51221001224303053003313340000202304030000000", "41001010000000032000202030221304302003002041", "42001020008003200000110040601000420102140000", "10240020000200002022100010033032030272315203", "01310040800108004040000014011231010433618090", "91044030021020003013340012493306000012004430", "00010300000200003312301300402400011004400002", "02010130308000132300002003400200030041210700", "00420100200001040320020240030140070300004003", "30224153000003400002342400000040720504013000", "01000332024332000001000050004020106140050202", "20054000000033300010002011240001302020000270", "23020300024110200100000000000800403042000532", "41041430020320021000320021005000008003043000", "20023432110330030003014132000000190121004430", "63000010100400240002100540030100004033410002", "02300032000012020200400046000004233003150331", "00320130000030240000150001000023313003800024", "33000743411100405102344002343300000011023600", "40003400004203000101206120153402040021243447", "10030302600444000200000031040310324000002000", "03300202031900300400030045403110000300002273", "44020001131320004005000033030023040004048000", "63347123002342100080010034310043094023022010", "30220400033000442000000200112400494001301022", "00013124021600000100004302003300000190001000", "00043133400000071340102300300040000100054000", "31040300231013720000903104204990000424300200", "00203042000010006238043300400440000743027043", "10020000124000351000100000030001147025222542", "01120030073104004240230012000209024202000201", "92900703223241040023133311004310043520020000", "73000000136042000000041802000030030200008312", "33133200411001015004015024004200502202002302", "44001402058400430003400033228211407200820247", "00040400020407002250403064020000020520332001", "04143404009300000730303204070120004400104005", "40000301030020302020021407030020003210227150" };
        assertEquals(2886, snowplow.solve(roads));
    }

    @Test
    public void case82() {
        String[] roads = { "012110040013000414", "101102142111700002", "210101020021322313", "111014200444204000", "100101000000200802", "021410000041631480", "010200010033130040", "442000104000012623", "020000040010010500", "010400000061802000", "112404301600240400", "311401300100100004", "073226100821020002", "002003311040200010", "002401020200000044", "403084065040000021", "101008420000014204", "423020030004204140" };
        assertEquals(446, snowplow.solve(roads));
    }

    @Test
    public void case83() {
        String[] roads = { "0000100040092030000034", "0033010080003341100480", "0303000404402110410310", "0330000001000430021203", "1000030024200204200003", "0100304111001040629011", "0000040211004133200100", "0040012000403200232000", "4800211000410900403043", "0041411000040070072300", "0040200440041000902092", "9000000014403530340003", "2320014300130431100001", "0314201290054040039040", "3413043007033401803044", "0100403000001010037221", "0140262240931080010000", "0012020307040303100240", "0001090232200937000300", "0432001003000002023068", "3810010040900442040601", "4003310030231041000810" };
        assertEquals(770, snowplow.solve(roads));
    }

    @Test
    public void case84() {
        String[] roads = { "00000000400", "00100300000", "01004002010", "00000030100", "00400330030", "03003024000", "00033202203", "00200420010", "40010020001", "00103001002", "00000030120" };
        assertEquals(90, snowplow.solve(roads));
    }

    @Test
    public void case85() {
        String[] roads = { "0100300030030232", "1000000222000001", "0000200043102000", "0000012410000010", "3020000003024204", "0001003010032030", "0002030100000000", "0204001010000130", "3241010100030020", "0230300000420011", "0010000004003010", "3000230032000100", "0020420000300212", "2000200100012014", "3001030321101100", "2100400001002400" };
        assertEquals(212, snowplow.solve(roads));
    }

    @Test
    public void case86() {
        String[] roads = { "0440012312000002210", "4000020001002010310", "4000300000002010004", "0000000300000022010", "0030000000000024023", "1200000020022010000", "2000000000030000200", "3003000010000000100", "1000020100100001001", "2100000000000000000", "0000000010000012010", "0000023000004000120", "0220020000040313400", "0000000000003000103", "0112210000101000400", "2002400010203000412", "2300002100014144000", "1101200000120001000", "0040300010000302000" };
        assertEquals(230, snowplow.solve(roads));
    }

    @Test
    public void case87() {
        String[] roads = { "0020040010000440340010200032030000200", "0001000302004040100000101001100402000", "2000210001203001401300020004400001403", "0100033020000004002020203032400022344", "0020044040400011200040010203000000000", "4013401001401200200000400200302010133", "0003410000140110010040403210010102310", "0300000000000000300000400414000410000", "1002400000200000002200303022000220100", "0210010000410100010003030342000440000", "0020441024044004040040300100040000000", "0000004001400400004020000003003020030", "0430010000400000040403000020300030033", "4000021001040000200220001002020400040", "4400101000000000000002114000340000100", "0014100000400000103200040000402200300", "3140220300000201000200000402010040010", "4000001001404000000030003302000010001", "0012000020040003000030000000004210032", "0030000020004202200002030000310001340", "1002404000420200033000000020200230001", "0000000003003020000200002020301401010", "2102044430300010000000022241000010000", "0020100003000014000300200420102002300", "0103003030000140030002200100030000030", "0000222403100000430000241040100000000", "3003001124002000000022420401044230000", "2142300422030200220000100010000200100", "0144030000003034000323010100000001000", "3000001000400240100100003040001002000", "0000020000030002004001020040010000020", "0400001424000402002024000022000031000", "0002010124023000411030100030000300000", "0212002000000000000101020000120100004", "2043013010000013000300030001000000004", "0004031000033400103401003000002000002", "0034030000003000012010000000000004420" };
        assertEquals(1182, snowplow.solve(roads));
    }

    @Test
    public void case88() {
        String[] roads = { "0020200040300000000301004003001004", "0030012031300300040300011203000413", "2301200000002000140300003011000011", "0010100400034001010403410004040030", "2021002014002400410000000003000220", "0100000010041020300040340410400401", "0200200002010003000021220000000410", "0004000010300400003040300204001000", "4300110103000040000230000302023030", "0100402030300003310000000001004010", "3300000303000002030000200043320010", "0003041000002440200032300130000200", "0024210000020400004020130004400200", "0300400400044000200000232000010040", "0000020040040002024000011004010000", "0001003003200020004000210003103322", "0010430003020200010114300000300301", "0441100001300020100002300412312000", "0000000300004044000000404040202300", "3334000020000000100004004140340340", "0000042430032000100004240000011023", "1003001000020000420440034220002303", "0004032300231202334020000402010400", "0101042000003311000043003010000020", "4130000000000210004404030000400220", "0200040230010000040102400004000010", "0010010000430000014402010000000000", "3314300421304043020000200400000000", "0000040000304001332300004000002220", "0004000020200110010410100000000020", "1000000134000003022012000000200030", "0400244000022003303303402000200000", "0113201031100402000420022100223002", "4310010000000002100033000000000020" };
        assertEquals(1094, snowplow.solve(roads));
    }

    @Test
    public void case89() {
        String[] roads = { "034040000102000423003140000400404", "300020400000400002000000000000000", "400004002004003203030140303000004", "000000443002243040002112034134030", "420000340032000043001020003320403", "004000203030004000040000004000030", "040432010004004202020400400021000", "000440100200010032001020100003012", "002303000300010330300030013000004", "100000023002041010002020023004300", "000033000000000341010000011203400", "204220400200001302001030200100110", "040200000000000000004000000303010", "000400011400000420102100300001011", "003304400101000010420120002041004", "402000203033040030403102104300002", "200440033140021303000040024000402", "323030220012000030204042040000034", "000000003000014402012023000000300", "003004200010002000101000000030201", "300210010201420304210120111110200", "101100400000011100001020020030022", "404120023203002044202202000001430", "000200000000000202300020000240300", "003000410002030100001000041004220", "000300001210000024001200400200001", "003434003310002440001000100230200", "400130000021300300001002022002001", "000320200000004000031304003004000", "000400130430311000000010400240013", "400040000341000040322043202000003", "000303010001110003000230200001000", "404030024000014224010200010103300" };
        assertEquals(1072, snowplow.solve(roads));
    }

    @Test
    public void case90() {
        String[] roads = { "00001201010013303003133001122020400032000", "00000104240004004002040420400230000400130", "00003302232000004000001002000010000010410", "00004003142000424430210010300011000000303", "10340000200000000200301104231003210120300", "21300000000000444400202101011004004040012", "00000004030030410313204000000440040411010", "14230040000002000000013100231404030000031", "02212000030200204000000034000000130003000", "14340030300020000003010400000000001203321", "00220000000020040003000003413000020000001", "00000000200000010030100101400033310000000", "10000030022003231243000021304001040433322", "34000002000030000200010420301002040010040", "30040440200020033000400120001300444200431", "00020410004130304000200200403020400000103", "34440400400010340000420004000040002000230", "00042430000022000000130113002300000002202", "00030010000340000000240001410003004040200", "32000030033030000000200340400002001002430", "10023220000100424122022010000201034403120", "34010001010001002340201001030032103000021", "30101243000000000000210040400244000200042", "04001101040104120103000011001012044401403", "02010000300022200104104103400403000340201", "10204100403110004310010130000030020030404", "14032002004433040044004040004200000104000", "20003103001000000010030000000320003143000", "20001101003041130200000100400023002112100", "02000044000000300300202040230004300034020", "23110040000300024000034103022000000102002", "00013404000312000032124230003400200100032", "40002000100300440000010000000302000004200", "00001043302144400000300402000000000000042", "00000400010000402041430400032000000203000", "04001040020040200000402430111011002000203", "30102410000031000040000043041300000000000", "20000010330030000202300100432420403000001", "01433000030030412224100424001000200200030", "03100113020024303003224000000203040000301", "00030201011020130200012314000022020301010" };
        assertEquals(1718, snowplow.solve(roads));
    }

    @Test
    public void case91() {
        String[] roads = { "000003000000010022020202001041210320", "000300020431310000340040004132000010", "000021000412000000000102004100010000", "030010110041243002320022002100004213", "002103042043000000000200304200430041", "301030400030400021132031000010010002", "000104001121000002030200002001000200", "020140000001000140203330031010002002", "000020100400303010003120000320020040", "044000104024040000403010000010101032", "031443200202100200101400010033300001", "012130110420040000004001034001300000", "030204003010031000000200042023100000", "110400000404304032002423031000000000", "000300003000140010040021000300010200", "000000010020000030000103121004400020", "200002041000031304000201100410001323", "200201200000020040213322104400202240", "030301020410000002003041040340110000", "240203300000004001000040102002000042", "000002033314020003300004010003000000", "201020231040240123000030103020010023", "040203032100022002440302000101000030", "202201000001031312104020200003000400", "000030000000000111010102000002021000", "000000030013430200401000000000030100", "144240210004210104020300000033000312", "011120003000003044300010000000000000", "430001012130200010400200003001110010", "120000100031300400023013203010000044", "200040000133100402100000000010010000", "101031002000001000100100230010100200", "000400020100000012000000100000000003", "300200200000002032000004013000020000", "210140004300000224040230001014000002", "000312020210000030020300002004003020" };
        assertEquals(1160, snowplow.solve(roads));
    }

    @Test
    public void case92() {
        String[] roads = { "00100120200110000034002000400303304000", "00023001302001011043200010412101300001", "10002032100331032002001000000330003403", "02000000301410040000200000000400430003", "03200000401000040000201040300240000000", "10000040040200014202202330300110040000", "20300400102240400004034000311200400104", "01200000041030304430041000004003100001", "23134010000300004004021200001010400400", "00000404000010000200004011013000410302", "02011021000001000004010020103020304000", "10340220300030000003030040220200030040", "10310043010300000240030200040103302012", "01100000001000030000000430000110000330", "00000043000000002030003420000004000000", "01344100000003000010020330400203223003", "01200404400000200020200014320001300000", "00000204020020000020001402330430000010", "34000003000040312200100202022300003221", "43200240404300000000001000114000140303", "02022200000000002010000200242010002300", "00000034201330020000000040000200040000", "20101241140000300101000004030321204010", "00000300200024430420200000012041420000", "01004300012403231000040004400010000321", "00000000010000004220004040020301010010", "44003330001200043301200040030000341410", "01000010010240002321403102301031000000", "02000014133000000024200200010010000402", "31342120000211020430023003000000030040", "00304100102001000300102410031004004002", "31000003000030431000001101010040003032", "33040041443030023001002400300000010000", "00030400010300020004040201400300100102", "40300000004020030030204000100043000001", "00400010430003000023300030404000010002", "00000000000413000120001021100403000000", "01330041020020030013000010002022021200" };
        assertEquals(1374, snowplow.solve(roads));
    }

    @Test
    public void case93() {
        String[] roads = { "03400214210200000222004002011043000", "30300001002010000000102040002210003", "43032020030010000100314010032033300", "00300000000000023000010400332000400", "00200120001000000000000400100000020", "20001000000100030024031040001320000", "10202000432000234002010010033300130", "41000000000011400040040003400404001", "20000040034024000011020403420330002", "10300030300231101000010000430100103", "02001020400000000020220003000400004", "20000100020001141001300002030003030", "01100001230002400002100430000000300", "00000001410120100030001200140002030", "00000024010141020400032310200442000", "00020330000400202302030040011204302", "00030040010100020440000122000100030", "20100000000000434003020000243010043", "20000204102003004000010002002234300", "20000420100120020300421003010040010", "01300000002310000004000041004102000", "00110314212000330212003000010004040", "42400100000001200001030240100101400", "00044000400042301000002030420003000", "04100410000030142000404303211220003", "20000003303200002023100030002040000", "00031004440001200200001420000000120", "10330030230304010401010210000003412", "12220130000000010320400012000300000", "02000334314000421020101020003000010", "41300200300000400134000024000000000", "30300004000302240040241300030000430", "00340010010030030030004000140004000", "00002030000303003401040000210103001", "03000001234000020300000030020000010" };
        assertEquals(1146, snowplow.solve(roads));
    }

    @Test
    public void case94() {
        String[] roads = { "0001003001004004201003", "0000220010214043232000", "0002200010310321000300", "1020240000120004000100", "0222001040100102400000", "0204000000240300024034", "3000100240402100001030", "0000002020300300000000", "0110404200011103003200", "1000000000300200400110", "0231124303004220144311", "0112040010000000000330", "4400002010400400010004", "0030131312204033130103", "0420000000200302003400", "4314200030000320010021", "2200400004100100004142", "0300020000401301000030", "1200041030400030400004", "0031000021330140100041", "0000033001130002430400", "3000040000104301204100" };
        assertEquals(492, snowplow.solve(roads));
    }

    @Test
    public void case95() {
        String[] roads = { "000022000004020220202400000400001301004000003", "002131301002400300000420302000000040411000020", "020030010002300000000000000200110300020002040", "010001101033100000200040300142101402400003420", "233000040000310341000420020002002000220024000", "210100203100400000300010010300100020202200040", "030102000110004200041410041010001230000000030", "001040000030402042004000000200000002300320000", "010103000302201001410014403014310003400000000", "000001103000400344412000000302420310000040000", "000300130000040320401010001400420200001003001", "422300002000000001004103100200300430004120003", "043134042400000000000030310030031000204101044", "200010000040000000401020040040200000022004000", "000000421000000000000420400004200001111330000", "230030200330000000400030004030440000320000000", "200040040420000000003104040000040330200000000", "000010021401000000040001440203033002400042030", "200203004440040400010310100400000003000040130", "000000401100000004100001000400302420400000220", "200000140214010030000001000020000404001000000", "440040400001004010300000043000340000000001000", "020421101010322300100003010002003030024130240", "000000004003000041011030040000030100120121100", "030300004001304004100000000002000000010230000", "000021400000140044000414001033400004000000040", "020000103010000400000300010042100010020030001", "402103020342000002440000000022022100040002030", "000400101000340300002000034200020111000340110", "000220004200004003000020232200000430304012340", "001101003443022400030300041000001300400040020", "001000001220300443000403000220000000000420402", "100120100000100003020030000200100010120000100", "303400200324000030044001000114300040444202410", "040002300103000030020030001013001400000000320", "100200023000001002304000040010000000020000340", "040422034000201324040001000003401400004201002", "012020000000021200000022102400002402002000100", "410002000014421000001040000004000400420000000", "000002030001103000000011200030040200200003411", "000020020402003004400032303041420000000000231", "002340000030140002000101000202000200100300020", "000400000000000000120021000013041433010420023", "024204300000400003320040040314200124000132200", "300000000013400000000000001000020000200110300" };
        assertEquals(1842, snowplow.solve(roads));
    }

    @Test
    public void case96() {
        String[] roads = { "00001000000200402000300240000003014020112", "00014400403003003000120300000000403024010", "00004030012014023312000012012011340001100", "01000243000000033000302040200030000001003", "14400330200000010440400001203023033040200", "04023000400003410340001033000000400000440", "00343000032100040400110001034000003010000", "00030000300000020312012433012434043303004", "04002403000000100013000000200303200000100", "00100030002000200000000000004433034013220", "03200020020410024041000000004003100130221", "20000010004003010240010000000011004003020", "00100000001001200000031000410300100200043", "03400300000310000020031030401034300000203", "40000400120020004030000100402201404003204", "00231142002100004030420013003000030000044", "23330000004000440020000010000040001430303", "00304343000200000030201034000100000000330", "00104401104402332300202300300001200000423", "00200002301000000000004410302024200000020", "31034010000000040220040000042204011000040", "02000011000133020000403404000010100000003", "00020102000011000124030000002000044400010", "23000004000000100034040000000000300000003", "40140303000003011301000000240000400203031", "00201313000000030400040000100400300104002", "00022000200044400033000021031112000000004", "00100031000010000000400040304000003004040", "00203042044001230002202000140212204002342", "00000004340030200100200004102021004000000", "00132003030103004002010000101200401430130", "30103004333104100014400000202100003004240", "04300400201013400022010343002040000030002", "10403004030000030000104000000000000200400", "43003033040400401000104000034413000343000", "00000003001020004000004021000040023002100", "22004010013000003000000000000030304002202", "04110003030300300000000034042004003220011", "10102400122002203340000000003012040120030", "11000400022240040322401030044034000001300", "20030004001033443030030312402000200021000" };
        assertEquals(1676, snowplow.solve(roads));
    }

    @Test
    public void case97() {
        String[] roads = { "010000301343100000002024000300300", "100001021400000040020000003000031", "000000222140000123303200300002020", "000032004022000001011120043000000", "000302000231011040020011030000001", "010220313100002010002020000404001", "302003000100401000102000200020001", "022001000000000000000034003010301", "112403000042114000240100300102000", "341021100004033004220400002100203", "404230004000044341004000401010240", "300210002400000034003010000000200", "100000401000014000000230300011300", "000010001340100300010002031020302", "000012104340400114300040430010300", "001000000030031000343003001301203", "042041000043001000420404000000010", "003100000414004000003040000003010", "003000102200003340010204302313000", "020120004200010420102003030003000", "203102200043000303020001000001000", "002100001400200040200030000030302", "200212030001304004000304000001230", "400010040000020340431040003001000", "003000203040304000300000030001010", "000430000000033000030000300140001", "030300030210010100200003000200220", "300004001100000300300000012000104", "000000210010121000100300040000010", "002004002000100103331011100000200", "300000030222333200000320002102000", "032000000040000011000030102010000", "010011110300020300000200010400000" };
        assertEquals(948, snowplow.solve(roads));
    }

    @Test
    public void case98() {
        String[] roads = { "000000002000000010030001224030", "000010102004040111324103100021", "000034000203000200000040210011", "000020240400003400003300001103", "013201024030300000000033340040", "004010004400303210400220040010", "010200043000144100040003400302", "000420403030000001040141000102", "220044330400003000030120400012", "002404004000000242200340010030", "000030030000000344110200010200", "043000000000001000130000033302", "000033100000040000010300300400", "040000400000400104000020031200", "000303403001000000000040000014", "012402100230010040002120200004", "110001000440000400032004040403", "010000010240040000000021000020", "030004000211000000002100000300", "320000443013100030003030012210", "040300000000000220230133130040", "010302011320300100101044020223", "004032042400024202033403000002", "130030310000000041003430400132", "212030404000300200001004002002", "201044000113030040013200000044", "400100000003010000020000200030", "000100310023420040320201000040", "321041001300001002014203043404", "011300222002004430000322240040" };
        assertEquals(912, snowplow.solve(roads));
    }

    @Test
    public void case99() {
        String[] roads = { "00", "00" };
        assertEquals(0, snowplow.solve(roads));
    }

    @Test
    public void case100() {
        String[] roads = { "00400001020240020404300000302020201030234004", "00000300122400114000031240002002010000033020", "40040000004300014000400100000010000101010010", "00402400002220333000200410001004111000040401", "00020220330100030000000000040000334000200020", "03042003000040110301020032401014131010001102", "00002003003000000232030030304002400010000330", "10000330310011041400040000000010000004400030", "01003003000000424000003330430040101440000000", "22003001000101004004020000200000002203001034", "02420030000110004040302403023000401013020331", "24321000011020204000000040004022000000003103", "40020401001203014000000303040000040003100400", "00000001010030403003000134402400020041400000", "01030100400204041301022001000001000001003410", "21133104200010401000012003041400002020320300", "04430001444443110240100314100000000034420010", "40000324000000302040201000000000004000300024", "00000030004000004400010300000210000003000124", "40000120040003100000140200012320200344140020", "30420000003000001201030101002000000202040000", "03000234020000210014302010100320100340040200", "01000000302000220100020004220200110300313033", "02140000304031003032100013002003100230320000", "04010330300403001000010100040440101400410003", "00000200003034134000104300000404000000240021", "30000430420004001000012000030300020004110100", "00004000302040040001002040303300030440433000", "22010140003402010002200200030003440000004320", "00000000000004040023032044330010010010200004", "20100101400200000012020040000101403030000200", "02040420000200100000000304003010011023020000", "20013140104000000002011110004040000044004400", "01013300000042000000001000234101002012003101", "10014100121000020400000010000031020103004000", "00100000420000000003233240040000001000000401", "30000110401004023004040300040132410000000040", "00100004033031104034200000400003423000040100", "20002004000014034301003342140200000000000000", "33140000002000022004441214130002000004002000", "43000100010300300000003000034000434000020100", "00040130003140430010020000103020410401001004", "02102033033000101222003002002000000040000000", "40010200041300000440003031000400010100000400" };
        assertEquals(1894, snowplow.solve(roads));
    }

    @Test
    public void case101() {
        String[] roads = { "00020000023100200400", "00010000142000021030", "00022330000023010004", "21200320232014000400", "00200442030314041402", "00334040302043110003", "00324400300000040040", "00002000003010000042", "01020330000210000300", "24033000000000340000", "32020203000403004000", "10003000204000003000", "00211401100004103340", "00344300003040310400", "20000100030013000002", "02104140040001000012", "01001000004330000010", "40044000300034000001", "03000044000040011000", "00402302000000220100" };
        assertEquals(400, snowplow.solve(roads));
    }

    @Test
    public void case102() {
        String[] roads = { "03000000010300000110400002300040000040422000004040", "30030220010000000000240041040010000000343004300423", "00000020340024200040020000204040300002400400020102", "03000430000043022102200110000004030000000200300200", "00000000030101010200010400040000001100100010400022", "02040003120330123300000400040020400023044010000000", "02230002000100040002002004003120333000000000400200", "00000320003000300300300000000000104302003040200400", "00300100003040030000002100020000001000000400000010", "11403200004040000300400320004440020000000030040000", "00000003340000000041300000003000000012043232020422", "30001310000000000000010002031000040004000300304000", "00240300440000010030400220000030003000004000000034", "00431000000000000030000000010010030343000243004440", "00200103000000000002120440200000110120010003000000", "00021240300010000044000023000000300004003000024030", "00020300000000000000030303210340420023430000000300", "10012303030000000000302042101200020000020400000040", "10400000004033040002001000430411400010004400000100", "00020020001000240020040300400004021310303140330000", "42020003043040100300010130001041312030000403004000", "04201000000100203004100210003000324000043304010330", "00000020200000000210000140403040000440030030300010", "00014400130020403003121000000000000032000320010030", "04010000020020420400314000003200142402000414400440", "21000040000200033200000000003000000300042000043400", "30200000000000202144004000000001010000030000012001", "04004400200301001030000000000000200003303000000000", "00400030043100000100133033000000120000013104401340", "00000010040000003240000020000012041033301400020043", "41400220040031004010404000000104100024042120010043", "00040000000000000014100000100240004004000043000200", "00300431000000134040330010021010030020012030000001", "00030030020403102202120040102400304000240003001000", "00001034100030000001240020000104040000100103034000", "00001003000003100003004043000000000040000221103200", "40000200001004202011304300000320200403201102204030", "00200302002403043000000220030344000030300100230000", "43401000000000004003000000030300021023000304030000", "24000400004000103200043004301040140000002102002040", "23000403003040030043030002033120200010020103000400", "00420000402302000441430340001410001211311002000401", "00001104033004000004003210000024300200000000300000", "04000000002003300000340040004003033120423200200030", "03034042000300000003003040004000000122000032002010", "00200000042000020003010104100210003003300000003310", "40000000000404040000400003201000014340020000230002", "04120024004004003010030044003002000200004400030040", "42002000102034030400031340004440000030040003110400", "03202000002040000000000000100330100000000100002000" };
        assertEquals(2306, snowplow.solve(roads));
    }

    @Test
    public void case103() {
        String[] roads = { "023001200012003402400001", "200003302023003300140300", "300100000243140031031103", "001010000220400300010000", "000100401004000010000001", "130000000001400341440120", "230040004020000300342022", "000000000000003220030000", "020010400002000030000000", "002200000000040002201201", "124200200002111102020400", "233041002020000022003100", "001404000010030021300014", "004000000410304002004000", "330000030010040200012020", "430303320010002003000430", "003014023002200000410303", "201001000222120300000000", "410004300200300040000011", "043104430020001010001040", "001000200103042000010020", "031001000241000430000000", "000002200000102300142000", "103010200100400030100000" };
        assertEquals(518, snowplow.solve(roads));
    }

    @Test
    public void case104() {
        String[] roads = { "0300030032100423100200300003010000", "3011100230400000101243044020002000", "0100132330000000000000400020004010", "0100130030020100040322000000000320", "0111010033340140000000032400000414", "3033100100000430030002031400401001", "0020000400021001000123104310000000", "0230014033000400000100233020241000", "3333300303002200024300014000004020", "2000300330000030400002300304020000", "1400300000013200030040044402032040", "0002402000100004000020302000100100", "0000001020300302010210001220433000", "4001140420203000032040004430002030", "2000430003000000400001310400200404", "3000001000042000010030010344404043", "1100000004000040000040200000000003", "0004030020301301004140004103000020", "0100000040000200040000004204300000", "2203001130002000010023000000300000", "0402002000421403440204040100100343", "0302023002000010000340030001200001", "3040001203030030200000001000000400", "0400330310400011000043003000003110", "0400214340421400044000130000304000", "0000443003402443012010000030010013", "0220001200002304000000000303031200", "3000000004200004034001000030134002", "0000040200014024003312003001000040", "1000000402303000000000000133000000", "0240010140203204000000034014000000", "0003400000010040000030410020000000", "0012100020400304020040010100400000", "0000410000000043300031000302000000" };
        assertEquals(1114, snowplow.solve(roads));
    }

    @Test
    public void case105() {
        String[] roads = { "0303000431130000240030", "3002003000000000204000", "0004031240302040030000", "3240224000000020200400", "0002000040333004002030", "0032000000030000040113", "0314000300010100000014", "4020003000000030400441", "3040400000424001003100", "1000000000003000342040", "1030300040004100004133", "3000331020002034404002", "0020300043420343330112", "0000001000103004000141", "0042000300034001000000", "0000400010043410040040", "2202000403043000020000", "4030040004003004203314", "0400200032440000030000", "0004010410101100030000", "3000311404301404010002", "0000034100322100040020" };
        assertEquals(520, snowplow.solve(roads));
    }

    @Test
    public void case106() {
        String[] roads = { "00000110400040000", "00104203010221003", "01020324202322033", "00200013004000043", "04000000300000400", "12300001000003010", "10210001030000110", "03430110010401000", "40203000004003003", "01000031004000200", "00240000440400003", "02300004004000003", "42200000000000010", "01200301300000001", "00004010020000020", "00340110000010200", "03330000303301000" };
        assertEquals(252, snowplow.solve(roads));
    }

    @Test
    public void case107() {
        String[] roads = { "0040304000201001101000341440040021100004012003", "0023041300000420000004042240000302300320100204", "4200404004022040100030000020000000300010330001", "0300043302204130020303000000030044014200324000", "3040002240002012113000000001010302043034200300", "0404003000000000031024000301402000004002041440", "4143230041124040412012242244110000000203023003", "0303200020004002400041030321000010000043034402", "0000404202000321000430010340101033013400401232", "0042001020313440411001110310000214404400000201", "2002001003000003000000013200000020200000020400", "0020002001000440000010000000004100400102200400", "1024204403000004013200110001303130002000201220", "0401000034040000402432004000303310002040030044", "0243104024040000010004011000300000301200002200", "1000200210304000040200102423230000000430001000", "1010104404000400002400230010300203000010000020", "0002131001001014000002100004203400100002001002", "1000312001003200200000030020402014404210040200", "0003000040002402400024000000000313004010000004", "0030021430010300000200100000440000320013000404", "0403042101000240020400000002010001000100010032", "3000002001001001210010000400000333000001040232", "4400004311101010303000000100122000020000200431", "1200002000300412000000000202314000002030003040", "4200032333200004000000412000200202103004010023", "4420004241000002102000000000400000032031100030", "0000114100001003040002002000030013400010340043", "0000041010003332324040013240000400100401001120", "4003101000000003000041021003001203204010240400", "0000020010043300032000024000010012000002434000", "0300300002011300240300300200420000002000002040", "2004000131203100001100300001001000300133201004", "1204200034000000304301300203032000000020040020", "1330000004240030014030000104120030023210020402", "0001400010000000000020020030000000200210000010", "0004340034002210004400002320040200300000030000", "0302002044010024002001000000400010220021000403", "0210300400000403101110003031010032110200200241", "4000423300020000020030100410102030000100030120", "0133200040022000000000020013024020000020032011", "1032042300200300004001400104043004203003302001", "2004013410001021010000003000104210000000220202", "0200340422442020002040240000140000400421002020", "0000040030002400200003334234200402010042100200", "3410003221000400020442210303000040200310112000" };
        assertEquals(2170, snowplow.solve(roads));
    }

    @Test
    public void case108() {
        String[] roads = { "00040314204000040220020000000000000001200002400", "00003030400000030400333014000100404044401000441", "00000400000000420140420200000000102003000044124", "40000040024230000000100020000022103314200431000", "03000000004004300002000230000000030400010010000", "30400030103000022000303003200040404000000032201", "13040302131000240020010001330002200420200023001", "40000020430002000300000040104003210200030200020", "24000114001404314403023020001121020001134430330", "00020033000100020102033024004044022000004402400", "40044310100004000000040000100123011000000030000", "00020000410020000030002004320000000043101220000", "00030000000200002024001000040040043044442000310", "00004002404000000000000004001030001000020000000", "00403020300000000000000100330000430203040400300", "43200240120000001001014042010303004030300000400", "00000200400020010400000420010200401000003302201", "24100003410000004002003000000041140300400400000", "20400020000320000000100010004004000034040140300", "00002000320040010200124310004103030000023321000", "03410300000000000011011001012030100340410400001", "23200010234000010002100300000300000002012100034", "03000300330210040304100000100000300323030442003", "00202000000000104003030010203000140014002314040", "01023004220000042011000100000010300300002400040", "04000310040404020000100000320243100002410401023", "00000231001300300000001203000410000013000240340", "00000030000240311000100002000000033140302000040", "00000004140001000044200300000004040124000300202", "01000000101000032001030002400000040330002040003", "00020400242043000400300014100002030032022004020", "00020023143000030143000003004020431000000021014", "04110422000000404100103131000004000100040010000", "00003001221040300403000400034433000004424400020", "04230400021031041000000000030001000041402000220", "00034042000000200300303030011300100013010004010", "04010020000440030030402100142330004100230000040", "14340000100340300040023402304020041300303000000", "24020020100140030400400004030000044023001433034", "00001003300042400042113001000020420130000310020", "01000000440120003003020220020220042003100000004", "00040002440200403413414344203000040000430002010", "00431320303200000042004100400402100000310000120", "20410230020000002001002401000041000400300200400", "44100200340030342030000000302000002000000014004", "04200002300010000000030442440021022140320120002", "01400110000000001000143003002304000000404000420" };
        assertEquals(2220, snowplow.solve(roads));
    }

    @Test
    public void case109() {
        String[] roads = {};
        assertEquals(0, snowplow.solve(roads));
    }

    @Test
    public void case110() {
        String[] roads = {};
        assertEquals(2, snowplow.solve(roads));
    }

    @Test
    public void case111() {
        String[] roads = { "01000000000000000000000000000000000000000000000000", "10100000000000000000000000000000000000000000000000", "01010000000000000000000000000000000000000000000000", "00101000000000000000000000000000000000000000000000", "00010100000000000000000000000000000000000000000000", "00001010000000000000000000000000000000000000000000", "00000101000000000000000000000000000000000000000000", "00000010100000000000000000000000000000000000000000", "00000001010000000000000000000000000000000000000000", "00000000101000000000000000000000000000000000000000", "00000000010100000000000000000000000000000000000000", "00000000001010000000000000000000000000000000000000", "00000000000101000000000000000000000000000000000000", "00000000000010100000000000000000000000000000000000", "00000000000001010000000000000000000000000000000000", "00000000000000101000000000000000000000000000000000", "00000000000000010100000000000000000000000000000000", "00000000000000001010000000000000000000000000000000", "00000000000000000101000000000000000000000000000000", "00000000000000000010100000000000000000000000000000", "00000000000000000001010000000000000000000000000000", "00000000000000000000101000000000000000000000000000", "00000000000000000000010100000000000000000000000000", "00000000000000000000001010000000000000000000000000", "00000000000000000000000101000000000000000000000000", "00000000000000000000000010100000000000000000000000", "00000000000000000000000001010000000000000000000000", "00000000000000000000000000101000000000000000000000", "00000000000000000000000000010100000000000000000000", "00000000000000000000000000001010000000000000000000", "00000000000000000000000000000101000000000000000000", "00000000000000000000000000000010100000000000000000", "00000000000000000000000000000001010000000000000000", "00000000000000000000000000000000101000000000000000", "00000000000000000000000000000000010100000000000000", "00000000000000000000000000000000001010000000000000", "00000000000000000000000000000000000101000000000000", "00000000000000000000000000000000000010100000000000", "00000000000000000000000000000000000001010000000000", "00000000000000000000000000000000000000101000000000", "00000000000000000000000000000000000000010100000000", "00000000000000000000000000000000000000001010000000", "00000000000000000000000000000000000000000101000000", "00000000000000000000000000000000000000000010100000", "00000000000000000000000000000000000000000001010000", "00000000000000000000000000000000000000000000101000", "00000000000000000000000000000000000000000000010100", "00000000000000000000000000000000000000000000001000", "00000000000000000000000000000000000000000000000001", "00000000000000000000000000000000000000000000000010" };
        assertEquals(-1, snowplow.solve(roads));
    }

    @Test
    public void case112() {
        String[] roads = { "01000000000000000000000000000000000000000000000000", "10100000000000000000000000000000000000000000000000", "01010000000000000000000000000000000000000000000000", "00101000000000000000000000000000000000000000000000", "00010100000000000000000000000000000000000000000000", "00001010000000000000000000000000000000000000000000", "00000101000000000000000000000000000000000000000000", "00000010100000000000000000000000000000000000000000", "00000001010000000000000000000000000000000000000000", "00000000101000000000000000000000000000000000000000", "00000000010100000000000000000000000000000000000000", "00000000001010000000000000000000000000000000000000", "00000000000101000000000000000000000000000000000000", "00000000000010100000000000000000000000000000000000", "00000000000001010000000000000000000000000000000000", "00000000000000101000000000000000000000000000000000", "00000000000000010100000000000000000000000000000000", "00000000000000001010000000000000000000000000000000", "00000000000000000101000000000000000000000000000000", "00000000000000000010100000000000000000000000000000", "00000000000000000001010000000000000000000000000000", "00000000000000000000101000000000000000000000000000", "00000000000000000000010100000000000000000000000000", "00000000000000000000001010000000000000000000000000", "00000000000000000000000101000000000000000000000000", "00000000000000000000000010100000000000000000000000", "00000000000000000000000001010000000000000000000000", "00000000000000000000000000101000000000000000000000", "00000000000000000000000000010100000000000000000000", "00000000000000000000000000001010000000000000000000", "00000000000000000000000000000101000000000000000000", "00000000000000000000000000000010100000000000000000", "00000000000000000000000000000001010000000000000000", "00000000000000000000000000000000101000000000000000", "00000000000000000000000000000000010100000000000000", "00000000000000000000000000000000001010000000000000", "00000000000000000000000000000000000101000000000000", "00000000000000000000000000000000000010100000000000", "00000000000000000000000000000000000001010000000000", "00000000000000000000000000000000000000101000000000", "00000000000000000000000000000000000000010100000000", "00000000000000000000000000000000000000001010000000", "00000000000000000000000000000000000000000101000000", "00000000000000000000000000000000000000000010100000", "00000000000000000000000000000000000000000001010000", "00000000000000000000000000000000000000000000101000", "00000000000000000000000000000000000000000000010100", "00000000000000000000000000000000000000000000001001", "00000000000000000000000000000000000000000000000001", "00000000000000000000000000000000000000000000000110" };
        assertEquals(98, snowplow.solve(roads));
    }

    @Test
    public void case113() {
        String[] roads = {};
        assertEquals(-1, snowplow.solve(roads));
    }

    @Test
    public void case114() {
        String[] roads = { "0000000000010000000300000", "0000000000000044004000000", "0000000000000000000000000", "0000000000000000000000000", "0000000000000020000020000", "0000000000000000000000000", "0000000400000000000000000", "0000004000000000000004000", "0000000000000000003000000", "0000000000100000000000000", "0000000001000000000000000", "1000000000000000000000000", "0000000000000004000000000", "0000000000000000000000000", "0400200000000000000000000", "0400000000004000000000000", "0000000000000000000000000", "0000000000000000004000000", "0400000030000000040000000", "3000000000000000000000003", "0000200000000000000000000", "0000000400000000000000000", "0000000000000000000000000", "0000000000000000000000000", "0000000000000000000300000" };
        assertEquals(-1, snowplow.solve(roads));
    }

    @Test
    public void case115() {
        String[] roads = { "00000000000000000000000000", "00000000000300000000000040", "00000000000000002020000000", "00000002000000000000000000", "00000000000000000000003200", "00000000000000000400000000", "00000000000000000000000000", "00020000000040000002040003", "00000000000000000000000000", "00000000000000000000000000", "00000000000000000000002000", "03000000000000000000000030", "00000004000000000000000000", "00000000000000000000000002", "00000000000000000000000000", "00000000000000000000000000", "00200000000000000000000000", "00000400000000000000200000", "00200000000000000000000000", "00000002000000000000000000", "00000000000000000200000000", "00000004000000000000000000", "00003000002000000000000000", "00002000000000000000000000", "04000000000300000000000000", "00000003000002000000000000" };
        assertEquals(-1, snowplow.solve(roads));
    }

    @Test
    public void case116() {
        String[] roads = { "0000000000000000200000", "0000000000000000000000", "0000040000000000000000", "0000000000000000040000", "0000000000000000003000", "0040000000000000000000", "0000000000000000000000", "0000000000300402400000", "0000000000000000000000", "0000000000000000000000", "0000000300000000000000", "0000000000000000000000", "0000000000000000002000", "0000000400000000000000", "0000000000000000104000", "0000000200000000040000", "2000000400000010000000", "0004000000000004000000", "0000300000002040000000", "0000000000000000000000", "0000000000000000000000", "0000000000000000000000" };
        assertEquals(-1, snowplow.solve(roads));
    }

    @Test
    public void case117() {
        String[] roads = {};
        assertEquals(364, snowplow.solve(roads));
    }

    @Test
    public void case118() {
        String[] roads = { "00000000001000000000", "00000000000000000000", "00000000000000002000", "00000400000000000000", "00000000000000032000", "00040000000000000000", "00000000000000000000", "00000000000000000100", "00000000000200000000", "00000000000000000000", "10000000000000300000", "00000000200000000000", "00000000000001000000", "00000000000010400000", "00000000003004000000", "00003000000000000040", "00202000000000000000", "00000001000000000000", "00000000000000040000", "00000000000000000000" };
        assertEquals(-1, snowplow.solve(roads));
    }

    @Test
    public void case119() {
        String[] roads = { "0608999701080207405051422329629304930", "6008541267038200806017908818040707910", "0000000000800090080300000000000040005", "8800638142003501008087694760229301900", "9506051426061202600033751268019807440", "9403502739096205303042828005370100870", "9108120534044804907024889932224105460", "7201475055010505208066219234003804300", "0604233509038800708026001977710702370", "1702694590062600401027394110160408390", "0080000000000040050900000000000020002", "8300694136001903807083902162864802770", "0803164082010805905082745579460704780", "2205228586098008207056224846199609540", "0090000000400000020900000000000080001", "7001254500035800208067766399073009490", "4800639274089202003083566659933806590", "0080000000500020000100000000000090005", "5608037881075708300088596965869402610", "0030000000900090010000000000000020003", "5108342622088506808004555730150107730", "1707324667032607308040655855536703960", "4906788203097207505056096733781206540", "2009528109004206609055908062239007300", "2804189914025406606055680542759600980", "3807209291015803609078705057329804840", "2106603371067409506035364508314000220", "9800852470029609905005322780038108290", "6002032071084100908015727330027905640", "2402172016066907306053835213205102230", "9009904300040903309006199948750404880", "3703811874087600804017206801914005450", "0040000000200080090200000000000000006", "4701705428024909602073670408524500230", "9909484333077504506079539822628402070", "3100476079078409901036408429438503700", "0050000000200010050300000000000060000" };
        assertEquals(-1, snowplow.solve(roads));
    }

    @Test
    public void case120() {
        String[] roads = { "00578300060090", "00000090901006", "50041700060940", "70405500000750", "80150500050490", "30755000080180", "09000007800004", "00000070809005", "09000088004002", "60605800000080", "01000009400003", "00974100000060", "90459800080600", "06000045203000" };
        assertEquals(-1, snowplow.solve(roads));
    }

    @Test
    public void case121() {
        String[] roads = { "001302880971525030", "000020000000000503", "100407900021875030", "304008374123209080", "020000000000000600", "207800316908759010", "809303094882077070", "800701904412740030", "000406440951360010", "900109849045817080", "702200815401165080", "101308221510983090", "508207073819088010", "207005746168807040", "505909700753870010", "050060000000000007", "303801731889141000", "030000000000000700" };
        assertEquals(-1, snowplow.solve(roads));
    }

    @Test
    public void case122() {
        String[] roads = { "0062077082082", "0049117004090", "6407570002003", "2970895081087", "0158050038036", "7179504021070", "7705040045006", "0000000000500", "8008324000065", "2421815000023", "0000000500000", "8908370062002", "2037606053020" };
        assertEquals(-1, snowplow.solve(roads));
    }

    @Test
    public void case123() {
        String[] roads = { "0108076340900460104682671400060864", "1000901760900780205648653590090575", "0000000002099000080000000008600000", "8000459930100240802380728940010681", "0904032030200840400752829100050533", "7005306140200350308755134770040971", "6109260930700820008829520250070467", "3709019040300980907489120210030385", "4603343400800790409592337890060794", "0020000000055005060000000000008000", "9901227380000450407161368030020642", "0090000005008003070000000003605000", "0090000005080008050000000000306000", "4702838970400050500440140860010021", "6804452890500500908610797410030445", "0000000005038000080000000003908000", "1208430940400590005076555120000461", "0080000006075008000000000003708000", "4502088790700080500094991130040864", "6603778450100460000010289950010694", "8408552890600410709109718730020198", "2800259920100000604090117530060014", "6607815130300170509271032670030546", "7502232230600490509811300120080801", "1308940070800070501987200690010274", "4509172280000840101975616030050853", "0904075190300610203533729300080042", "0080000000030003030000000000500000", "0060000000063009070000000005000000", "6901547360200130004126381580000314", "0000000008056008080000000000000000", "8506594370600040408610582800030085", "6708376890400240606991407540010807", "4501317540200150104484614320040570" };
        assertEquals(-1, snowplow.solve(roads));
    }

    @Test
    public void case124() {
        String[] roads = { "0574600001232", "5088905001579", "7804209001428", "4840908002786", "6929007004356", "0000000380000", "0598700002670", "0000030080000", "0000080800000", "1112402000196", "2547306001036", "3728507009308", "2986600006680" };
        assertEquals(-1, snowplow.solve(roads));
    }

    @Test
    public void case125() {
        String[] roads = { "068287066004639830", "607709031004874520", "870259039003207531", "272038044004891974", "805303024008030515", "799830052008778256", "000000000490000000", "633425006002028364", "619442060007791639", "000000400030000000", "000000900300000000", "443488027000224094", "682807007002061761", "370937029002602832", "947108081004120685", "855952036000786078", "323715063009638703", "001456049004125830" };
        assertEquals(-1, snowplow.solve(roads));
    }

    @Test
    public void case126() {
        String[] roads = { "00000500", "00255062", "02066046", "05607054", "05670083", "50000000", "06458009", "02643090" };
        assertEquals(-1, snowplow.solve(roads));
    }

    @Test
    public void case127() {
        String[] roads = { "00047700030090004000", "00000094608400500022", "00048700080080050000", "40402900010060031000", "70820900000070089000", "70799000090060065000", "09000000608502800126", "04000000208709100910", "06000062001205200608", "30810900000010071000", "08000088100808000526", "04000057208000300888", "90867600010000035000", "00000029508000600387", "05000081200306000324", "00538600070030009000", "40019500010050090000", "00000019605803300050", "02000021002808200505", "02000060806807400050" };
        assertEquals(-1, snowplow.solve(roads));
    }

    @Test
    public void case128() {
        String[] roads = { "0006303010006007009069", "0050000004800550200100", "0500030001900190800500", "6000501080019001078044", "3005009720099006090017", "0030000006300430100300", "3001900200054001079090", "0000702050075001066011", "1008200500086003020038", "0410060000500740400500", "0890030005000140300300", "0001905780008000048033", "6009904560080002090077", "0510040007100080300100", "0590030004400800100900", "7001601130002000021087", "0280010004300310000200", "0007907620049002008005", "9008009600080001080046", "0150030005300190200000", "6004109130037008004009", "9004700180037007056090" };
        assertEquals(-1, snowplow.solve(roads));
    }

    @Test
    public void case129() {
        String[] roads = { "000300000400040000505000000", "000089056003201747010182004", "000019139007803691080588306", "300000000480080000002000020", "081002802006302245020009007", "099020402001405116020915005", "001084026005007193010173602", "053000208007601114080732300", "069022680005805114000709804", "400400000000080000509000020", "000800000000070000000000080", "037061575000008743070058508", "028034068000009068060065702", "400800000870000000805000070", "013025715008900659010625505", "076021111007006046000156201", "049041911004605409000375506", "071056344003809690070837702", "500000000500080000009000060", "018022180007601007000626301", "500200000900050000900000000", "015009177000006138060043902", "088001730005602573020406104", "028095329008505657060360604", "003000638005705257030916001", "000200000280070000600000000", "046075204008205162010244100" };
        assertEquals(-1, snowplow.solve(roads));
    }

    @Test
    public void case130() {
        String[] roads = { "090000000000900050300040050004000024000500000", "900000000000200020700050081005000009000700000", "000435307483080905091408100260365500972038283", "004082954974024204086000800130897200916017856", "003804359279062302030001300780322400349097152", "005240516296067905069109900120989900312036365", "003935041153074308093000800470209800755090757", "000551400432063006032707900990003100560016018", "007496100920007804063108900480147700350039364", "004922149099054007098409300350472000755085578", "008779532907098706079801900610936900958022407", "003496320970009600041302400520209300104044597", "920000000000000000800060080003000097000900000", "008266760590008806028600100410074600604010826", "000427437489080006006405700230320500866022753", "009239308076080002018508700370865200401008948", "520000000000000000200070039004000010000900000", "005425864760066200012607100290767800322002232", "370000000000800020000070030002000098000700000", "009836936974020101004103100090175100622090004", "001609323891086802040407800660950400563089280", "004001071483064506014009100040721300082008431", "450000000000600070700000078008000008000400000", "008019078912005807037900900160901100477072612", "001839899394017701018109000290737000997007637", "580000000000800030300070000002000093000100000", "010000000000000090000080000003000059000900000", "002171494365042302006001200010264500809095225", "006382798512013709096406900100000300442046857", "450000000000300040200080023000000078000000000", "003839201492003807019709700200027900519083978", "006928004730072606075200300600201200460047632", "005729937269040507050101700400710000493035392", "005249817093065208014301000530920000854040416", "200000000000900010900000095007000004000400000", "490000000000700000800080039008000040000200000", "009933753791068403065004900840544800077037292", "007141565550006002026807900040169500703037847", "002692500584046102023207700920903400730009128", "570000000000900090700040019000000042000000000", "003193913824012000098007000940843400330006449", "008776069524002802009802700560375000779060281", "002813703545087902002406600280963400281042066", "008556516709025403008301300250739100942048604", "003625784877063802040102700570822600278091640" };
        assertEquals(-1, snowplow.solve(roads));
    }

    @Test
    public void case131() {
        String[] roads = { "04063054763005030", "40054030871002740", "00000900000000001", "65004089227009430", "34040068408003240", "00900000000600001", "53086006615001710", "40098060879001290", "78024068001008680", "67020017009003980", "31078059190009150", "00000600000060004", "00000000000600007", "52093011839000780", "07042072691007040", "34034019885008400", "00100100000470000" };
        assertEquals(-1, snowplow.solve(roads));
    }

    @Test
    public void case132() {
        String[] roads = { "0010546000000", "0007000252794", "1000789000000", "0700000846053", "5070047000000", "4080402000000", "6090720000000", "0208000021717", "0504000206400", "0206000160853", "0700000748028", "0905000105209", "0403000703890" };
        assertEquals(-1, snowplow.solve(roads));
    }

    @Test
    public void case133() {
        String[] roads = { "0676057227411632035787", "6084075620730067034693", "7809078453767433090068", "6490070986134533055745", "0000000000000000400000", "5777004363299200056606", "7580040362391287059735", "2649033058928331028191", "2258066502349106054679", "7036032820579863085588", "4771023935060981045383", "1363099247606775016114", "1074091899060678011519", "6045022318976038015483", "3633008306877302099269", "2733007163158820065144", "0000400000000000000000", "3395055258411196008428", "5405069845561595080061", "7607067165315421040002", "8964003978811864026001", "7385065198349394081210" };
        assertEquals(-1, snowplow.solve(roads));
    }

    @Test
    public void case134() {
        String[] roads = { "000030017500008", "002702000042030", "020707000032010", "077005600071060", "300000051400800", "027500200044050", "000602000027060", "100050002100602", "700010020800109", "500040018000300", "043704200000000", "022104700000060", "000080061300006", "031605600006000", "800000029000600" };
        assertEquals(-1, snowplow.solve(roads));
    }

    @Test
    public void case135() {
        String[] roads = { "050605009258", "507406008894", "070702005290", "647001006116", "000000500000", "562100009884", "000050050000", "000000500000", "985609000469", "282108004011", "599108006101", "840604009110" };
        assertEquals(-1, snowplow.solve(roads));
    }

    @Test
    public void case136() {
        String[] roads = { "00068070047174003120583258", "00071080093644003070056464", "00000309800000330007000000", "67005010045288009910521200", "81050030017785001920187557", "00300009700000190002000000", "78013000099640005130275905", "00900900900000750006000000", "00800709000000300003000000", "49041090005068006810619364", "73057090050547005690468425", "16027060005023000500659650", "74088040064201001940224171", "44085000087310004810696044", "00300107300000010003000000", "00300905000000100009000000", "33091050065014000700632030", "10099010086598007010666244", "27012030019041000100914467", "00700206300000390000000000", "50051020064626006690089788", "85028070016529003610803792", "36017050098946002640930024", "24025090034610000240770036", "56005000062574003460892303", "84007050045014000470824630" };
        assertEquals(-1, snowplow.solve(roads));
    }

    @Test
    public void case137() {
        String[] roads = { "00000000000003000060000000", "00603807314030639206932038", "06072338479880548706217153", "00704798841850358607982648", "03240023185180389008132708", "08370082141300764402334854", "00392803454540553100077411", "07883230835790850107671314", "03481148085100397607971565", "01748453803890451200280204", "04915145530190155807525040", "00881357181030007602809633", "03858049099300392103386005", "30000000000000000060000000", "06533758341030096104154895", "03458655955090908002979805", "09889430715720680004736734", "02760411628610100006773052", "60000000000006000000000000", "06678207707230424600128264", "09291306925830197701032221", "03183377782080573702303793", "02722471105960496308230650", "00167843520600887002276091", "03540511604300903506295907", "08388414540350554204130170" };
        assertEquals(-1, snowplow.solve(roads));
    }

    @Test
    public void case138() {
        String[] roads = { "00677000", "00038000", "60073000", "73705000", "78350000", "00000054", "00000505", "00000450" };
        assertEquals(-1, snowplow.solve(roads));
    }

    @Test
    public void case139() {
        String[] roads = { "0084410709880200050004480320000069000103", "0000007090000008201420003009066500132010", "8007650708720940090007930110900089000003", "4070120302980580010002020590600045000703", "4061070008830010010008190400900031000503", "1052700008490250020004140580700070000400", "0700000070009001902950007008025400484020", "7073000008170940090001700640900061000305", "0900007000008003101100007002003600602070", "9082880800010260040008920430300080000904", "8079840100060570010004890980800065000706", "8028390701600520090005350150600028000709", "0000009080000001108130002003032000020060", "2095020902550070060006850870700087000005", "0048150406720700070004990340800074000607", "0800001030001000105640008000073400092070", "0200009010001001007680009000011100816050", "5091120904190670000009420030500058000203", "0100002010008005700910003007061400545020", "0400009010001006609080006009030000036060", "0200005000003004801800002007029600198060", "4072840108450640090000230020300010000001", "4090110709830890040002060120700038000505", "8032940002950590020003600330900084000708", "0300007070002008903620000004030500237070", "3015450604910830000000130050400059000700", "2019080403850740030002230500800051000406", "0900008020003000007970004000003800097040", "0096970903860780050003790480000018000804", "0600002000003007106320003000005400499060", "0600005030002003101090000003050100710070", "0500004060000004104060005008041000465020", "6084370608620870050001380550100007000508", "9095100100580740080000840910800070000807", "0100004060000000805010002000047400093040", "0300008000002009104390003009091600901040", "0200004020000002605680007007090500310000", "1007540309770060020000570740800058000005", "0100002070006007502660007004067200440000", "3033300504690570030001580060400087000500" };
        assertEquals(-1, snowplow.solve(roads));
    }

    @Test
    public void case140() {
        String[] roads = { "08710522079109920219348904379114656217793767", "80493027000506730107849121238478174555864889", "74056029044427860503239029033860495338653889", "19504968028197910058377176815191769296709983", "03640561048977370528226122163631915122649205", "50095086012227660918429890882938608646154040", "22266802059019730969985707904860318722761627", "27981620091292770619984403097124838314381928", "00000000000000004000000000000000000000000000", "70424159001362970662741791300802310390737691", "90488291010901540434494981241624121574474812", "15419202039031800348322221478093854638957250", "00297219060304310036420998242925326965461904", "96777792021140790374657716376895381563814784", "97893677095837020623014241056330363971433597", "23617637074019200684427715696392121656098612", "00000000400000000000000000000000000000000000", "21505996064303660093277736698169481405791960", "10052161063437280901259355496805387619199911", "97388899024864340310946506645062006004630124", "38232499074346040229049655782694590180799880", "44372288049225120754402824418665211374989732", "89976954014207470796920382657706510266791906", "91011874079297270735683018188251197867639764", "02272900098291410350528108587554485826096468", "41962073011186150656542880999132450536897550", "32081890032423060646746159037265165763262748", "73316809004747590994815889303716953306273028", "98353247001826660865287879730947842072339720", "14816981086098330180667251279099318883015318", "17693362002929390606960553614900827214446076", "48011804024355020952456142567900874508987514", "61479638031833310430525144198388092820102316", "57961013012528620880911985654127902213272244", "64595888001461310176010750532874220248783611", "25321673035695960460132885730825822035589477", "15392421097366750010876623607810214302459339", "75862624004853160594046766362348038520929972", "78676173074948400716797608223049127549068598", "96504568037561390993989399673148078852607474", "34399411074714380190991967239567223999870843", "78892069068297560991879745707305326439548000", "68880422091508910612830665422171141737974004", "79935078012044720014026480880864641792843040" };
        assertEquals(-1, snowplow.solve(roads));
    }

    @Test
    public void case141() {
        String[] roads = { "0000003013000900604900040800000300605360000000200", "0057650600208034040058103080668080000002845452054", "0505270200801008000002508090439000000005812982084", "0750260500502047090060203080991010000003886798095", "0622050600209026040037606000758050000000410332066", "0576500100104017010004500010919040000004494088005", "3000000086070400502300060607000900809960000000500", "0625610000803019020014404050182070000005236116038", "1000008004020800308500050908000709490650000000600", "3000006040000200903000010702000803517750000000200", "0285210800006059020047502090759060000009763705040", "0000007020000500204900080201000608701570000000200", "0812940300600084000090301050114040000003886841030", "9000004082050000808600000608000007724160000000600", "0304210100508000060046506090302090000002552679035", "0487670900904000080041309060620000000008796182050", "6000005039020800006000020903000103571740000000400", "0409410200200068000049600050245080000007926311080", "4000002083040800600900090003000100265400000000400", "9000003050090600009000050100000507358100000000900", "0506300100409044040008402000118010000005207271091", "0820740400700061090080200090373020000002216630042", "0152650400503053060042000010183060000006163039043", "4000006051080000209500000408000806495250000000900", "0383600400201069000020000000986090000005714885022", "8000006097020600900100040004000602772490000000600", "0898010500905096050009100000768010000007364822055", "0000007082010800303000080400000707663940000000300", "0649790100701036020013109070014030000003280656015", "0639510800501002040017808060107010000006573219083", "0891890200904020050083306080470060000002457626083", "3000009078060000101500080607000000579060000000900", "0801540700604090080012609010316000000008313897003", "0000000093080700300700060207000000675070000000200", "6000008045070700502300040706000506082000000000200", "0000000091000200706500090706000707803420000000300", "5000009007010400105800050203000905230960000000300", "3000009067050100704100020409000000049070000000900", "6000006055070600400000050904000607026700000000900", "0253040500903028070052605070362080000000882095044", "0888440200708057090022107030254030000008041742087", "0418190300608059020001601060875010000008403923031", "0526040600306026060076304040037030000002130888065", "0497300100708061030026008080626080000000798000097", "0589380100004078010073308020512090000009428004001", "0228280600501092010010905020696070000005238040048", "2000005062020600404900090603000902233990000000000", "0589600300403035080094402050188000000004836904006", "0445650800000050000012302050533030000004715718060" };
        assertEquals(-1, snowplow.solve(roads));
    }

    @Test
    public void case142() {
        String[] roads = { "0002800002000822703680", "0030099800082000040006", "0300027800054000030004", "2000100008500605702110", "8001000007700163006590", "0920002550080000000004", "0970020010057000070009", "0880050080098000000003", "0000051800085000060001", "2008700000500419902580", "0005700005000088903260", "0850085980002000080003", "0240007850020000060009", "8006100004000067700430", "2000600001800609000550", "2005300009800790701160", "7007000009900707000650", "0430007060086000000001", "3002600002300001000180", "6001500005200451601070", "8001900008600356508700", "0640049310039000010000" };
        assertEquals(-1, snowplow.solve(roads));
    }

    @Test
    public void case143() {
        String[] roads = { "070300365090101306520007614230007300200705040070", "700200299040404902140407501080008120800609080084", "000069000408070060006010000003420006032060200500", "320000557040708902610506214840000850400503080065", "006007000001040000001070000006860007024030902300", "009070000004030050006050000001380008023060500600", "320500027030801704630406595150003370400703090057", "690500203020907306860105137930006950500409010044", "590700730020508109240104573120002980700302070050", "004000000000000040004020000000370004079000706200", "940400322000502506560605626810007420600407080048", "008014000000000070002020000000220003004000307600", "140700895050003409520309365390001600300402010039", "007043000000000070006070000001370002003000902200", "140800178020300502180304399730001850700902090095", "390900731050405000410207721710005430000208030039", "006005000407070000000060000005580000083010602200", "620200469060902000610104779460009650600704030098", "510600682050501406050805991780002160600506070035", "240100364060208101500809315520003330700903040037", "006016000402060000000080000004690000074060703500", "040500411060303201880000397990007180000302090054", "001075000202070060008000000009720008074040106300", "770600654050904704590000208520007140600509070068", "650200515060303707930302061860005690500306000047", "100100937020609207910900606210004850500904080084", "410400573060509109150708160320002670300000060057", "200800191080307704750905823060006830800707060001", "380400532010903106820902612600005710800906050015", "003061000000010050004090000000200009057010208200", "004083000302030050006070000002040008078070101700", "002068000702070080009020000000400008065050401900", "780000362070101509230707542650000180600800060084", "310800399040608406130101686870001050100406030046", "020500758020005305630804957310008500900507000017", "006078000403020000000080000009880000047090608500", "280400457060307006670006553880006190000502050024", "003022000700000080007070000005760004007010105000", "002043000904030030004040000007850007070030902300", "760500743040409207590305390790008450500005080064", "006036000000000010006040000001750009013000801400", "590300392070202804630209640760000670200500040029", "002095000703090060007010000002140006019080008100", "480800917080109303740907086650006300500804000033", "000020000607020020003060000008110008052010800500", "005036000206020020005030000002790005003040105000", "780600545040309309330506485010008410200602030003", "040500740080905908570408747150004670400409030030" };
        assertEquals(-1, snowplow.solve(roads));
    }

    @Test
    public void case144() {
        String[] roads = { "00636050664554225395868253972326594881226944108620", "00709796617540988573022622534951391353853597123020", "67022074155333423736616219812920729552211541268300", "30201826801823201155393355467105056345160941542880", "69210992445968809671245162813115992950537033663940", "07089098101758035063929123739956046415376341497940", "59729904219418248597176650741675051487397349326340", "06462840628745827449293022879646752450954774612200", "66184126010593675097651684769046187816284464087550", "61504012106179481665324366043797685957956617259770", "47515198060935529056674452065759172943215573338280", "55389747519025766276909446604485049136993684871390", "54326514973209771549687068371660667089233685021370", "40338885395590696020586143639336763524995393007210", "29428028645776032843902196724636461934104913375530", "28200342782679301326472617880135101298693406569660", "58319587519616210327580265935079446341375376203230", "35716054060250833071796339485506517535049273389550", "97357694965742422707592889742419617349108901513570", "53651379756690367170284569602013921946676218505930", "80632912636965945752023067661041854289256407849130", "62194279527088078998204735756793603898425240524830", "82635963144976220624340524457293271405181065162900", "26231160634401162385075000480337096933876548905570", "52156252865464916386632004365523272688693902040950", "32952302462683675999754040408460975586077446619320", "95848778700636789476674434092991444381943451096940", "73161347646073283840655860904426289569423189757480", "24273919935419405522167058240298743700698081963250", "39911966077463610540072354942020896815870084924640", "25201574495863337011499326929203054211628282533080", "61055656679506659693133730168030063665053595649450", "53709007161067414569862029427800046562387779151950", "99259455887466604112507977484956406888799711628330", "41962612752973116771431625493643660902367140352770", "83539444899105923539284965357826589066070522390710", "85545185154382394344890388860116680605095836073760", "13250570673694481596985386190515282650439925556370", "28215339292929163016241860946860373004013948255340", "25163795851939097407528797429725896793102009663330", "63107674465335435986651637338083797059320970360850", "95590337465663943292420594410025771589909090496690", "49443447617889107701046404588889714232407901442880", "47113194473453366318705826191425910265890010046840", "11256436023800352355851906079956163305263440077520", "02646921853720760810426041956234525975566944700940", "83823762798117593935942509673439182036530626700080", "60389932572332562559189593942604937773338688590090", "22084440578971363573330752485485537167435984248900", "00000000000000000000000000000000000000000000000000" };
        assertEquals(10832, snowplow.solve(roads));
    }

    @Test
    public void case145() {
        String[] roads = { "00", "00" };
        assertEquals(0, snowplow.solve(roads));
    }

    @Test
    public void case146() {
        String[] roads = { "000", "001", "010" };
        assertEquals(-1, snowplow.solve(roads));
    }

    @Test
    public void case147() {
        String[] roads = { "0100", "1000", "0000", "0000" };
        assertEquals(2, snowplow.solve(roads));
    }

    @Test
    public void case148() {
        String[] roads = { "0000", "0070", "0704", "0040" };
        assertEquals(-1, snowplow.solve(roads));
    }

    @Test
    public void case149() {
        String[] roads = {};
        assertEquals(22050, snowplow.solve(roads));
    }

    @Test
    public void case150() {
        String[] roads = { "000", "002", "020" };
        assertEquals(-1, snowplow.solve(roads));
    }

    @Test
    public void case151() {
        String[] roads = { "0001", "0001", "0000", "1100" };
        assertEquals(4, snowplow.solve(roads));
    }

    @Test
    public void case152() {
        String[] roads = { "00001", "00101", "01000", "00000", "11000" };
        assertEquals(6, snowplow.solve(roads));
    }

    @Test
    public void case153() {
        String[] roads = { "0101", "1001", "0000", "1100" };
        assertEquals(6, snowplow.solve(roads));
    }

    @Test
    public void case154() {
        String[] roads = { "0001", "0010", "0101", "1010" };
        assertEquals(6, snowplow.solve(roads));
    }

    @Test
    public void case155() {
        String[] roads = { "001", "001", "110" };
        assertEquals(4, snowplow.solve(roads));
    }

    @Test
    public void case156() {
        String[] roads = { "00000", "00101", "01000", "00001", "01010" };
        assertEquals(-1, snowplow.solve(roads));
    }

    @Test
    public void case157() {
        String[] roads = { "000", "009", "090" };
        assertEquals(-1, snowplow.solve(roads));
    }

    @Test
    public void case158() {
        String[] roads = { "0000", "0000", "0000", "0000" };
        assertEquals(0, snowplow.solve(roads));
    }

    @Test
    public void case159() {
        String[] roads = { "001", "000", "100" };
        assertEquals(2, snowplow.solve(roads));
    }

    @Test
    public void case160() {
        String[] roads = { "0011", "0000", "1001", "1010" };
        assertEquals(6, snowplow.solve(roads));
    }

    @Test
    public void case161() {
        String[] roads = { "010000", "100000", "000111", "001011", "001101", "001110" };
        assertEquals(-1, snowplow.solve(roads));
    }

    @Test
    public void case162() {
        String[] roads = { "0000", "0000", "0001", "0010" };
        assertEquals(-1, snowplow.solve(roads));
    }

    @Test
    public void case163() {
        String[] roads = { "0000", "0010", "0100", "0000" };
        assertEquals(-1, snowplow.solve(roads));
    }

    @Test
    public void case164() {
        String[] roads = { "0001", "0010", "0100", "1000" };
        assertEquals(-1, snowplow.solve(roads));
    }

    @Test
    public void case165() {
        String[] roads = { "000", "000", "000" };
        assertEquals(0, snowplow.solve(roads));
    }

}
