package topc.test.greedy;

import junit.framework.*;
import org.junit.Test;
import static org.junit.Assert.*;
import topc.greedy.*;

public class GoldMineTest {
  GoldMine goldmine = new GoldMine();

  //@Test
  public void case1() {
    String[] mines = { "000, 030, 030, 040, 000, 000, 000", "020, 020, 020, 010, 010, 010, 010" };
    int miners = 4;
    assertArrayEquals(new int[] { 2, 2 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case2() {
    String[] mines = { "100, 000, 000, 000, 000, 000, 000", "100, 000, 000, 000, 000, 000, 000", "100, 000, 000, 000, 000, 000, 000", "100, 000, 000, 000, 000, 000, 000", "100, 000, 000, 000, 000, 000, 000" };
    int miners = 8;
    assertArrayEquals(new int[] { 6, 2, 0, 0, 0 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case3() {
    String[] mines = { "050, 000, 000, 000, 000, 050, 000", "050, 000, 000, 000, 000, 050, 000", "050, 000, 000, 000, 000, 050, 000", "050, 000, 000, 000, 000, 050, 000", "050, 000, 000, 000, 000, 050, 000", "050, 000, 000, 000, 000, 050, 000", "050, 000, 000, 000, 000, 050, 000", "050, 000, 000, 000, 000, 050, 000", "050, 000, 000, 000, 000, 050, 000", "050, 000, 000, 000, 000, 050, 000" };
    int miners = 30;
    assertArrayEquals(new int[] { 4, 4, 4, 4, 4, 4, 4, 2, 0, 0 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case4() {
    String[] mines = { "026, 012, 005, 013, 038, 002, 004", "026, 012, 005, 013, 038, 002, 004", "026, 012, 005, 013, 038, 002, 004", "026, 012, 005, 013, 038, 002, 004", "026, 012, 005, 013, 038, 002, 004", "026, 012, 005, 013, 038, 002, 004", "026, 012, 005, 013, 038, 002, 004", "026, 012, 005, 013, 038, 002, 004", "026, 012, 005, 013, 038, 002, 004", "026, 012, 005, 013, 038, 002, 004", "026, 012, 005, 013, 038, 002, 004", "026, 012, 005, 013, 038, 002, 004", "026, 012, 005, 013, 038, 002, 004", "026, 012, 005, 013, 038, 002, 004", "026, 012, 005, 013, 038, 002, 004", "026, 012, 005, 013, 038, 002, 004", "026, 012, 005, 013, 038, 002, 004", "026, 012, 005, 013, 038, 002, 004", "026, 012, 005, 013, 038, 002, 004", "026, 012, 005, 013, 038, 002, 004", "026, 012, 005, 013, 038, 002, 004", "026, 012, 005, 013, 038, 002, 004", "026, 012, 005, 013, 038, 002, 004", "026, 012, 005, 013, 038, 002, 004", "026, 012, 005, 013, 038, 002, 004", "026, 012, 005, 013, 038, 002, 004", "026, 012, 005, 013, 038, 002, 004", "026, 012, 005, 013, 038, 002, 004", "026, 012, 005, 013, 038, 002, 004", "026, 012, 005, 013, 038, 002, 004", "026, 012, 005, 013, 038, 002, 004", "026, 012, 005, 013, 038, 002, 004", "026, 012, 005, 013, 038, 002, 004", "026, 012, 005, 013, 038, 002, 004", "026, 012, 005, 013, 038, 002, 004", "026, 012, 005, 013, 038, 002, 004", "026, 012, 005, 013, 038, 002, 004", "026, 012, 005, 013, 038, 002, 004", "026, 012, 005, 013, 038, 002, 004", "026, 012, 005, 013, 038, 002, 004", "026, 012, 005, 013, 038, 002, 004", "026, 012, 005, 013, 038, 002, 004", "026, 012, 005, 013, 038, 002, 004", "026, 012, 005, 013, 038, 002, 004", "026, 012, 005, 013, 038, 002, 004", "026, 012, 005, 013, 038, 002, 004", "026, 012, 005, 013, 038, 002, 004", "026, 012, 005, 013, 038, 002, 004", "026, 012, 005, 013, 038, 002, 004", "026, 012, 005, 013, 038, 002, 004" };
    int miners = 56;
    assertArrayEquals(new int[] { 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case5() {
    String[] mines = { "100, 000, 000, 000, 000, 000, 000", "090, 010, 000, 000, 000, 000, 000", "080, 020, 000, 000, 000, 000, 000", "075, 025, 000, 000, 000, 000, 000", "050, 050, 000, 000, 000, 000, 000", "025, 075, 000, 000, 000, 000, 000", "020, 080, 000, 000, 000, 000, 000", "010, 090, 000, 000, 000, 000, 000", "000, 100, 000, 000, 000, 000, 000", "000, 090, 010, 000, 000, 000, 000", "000, 080, 020, 000, 000, 000, 000", "000, 075, 025, 000, 000, 000, 000", "000, 050, 050, 000, 000, 000, 000", "000, 025, 075, 000, 000, 000, 000", "000, 020, 080, 000, 000, 000, 000", "000, 010, 090, 000, 000, 000, 000", "000, 000, 100, 000, 000, 000, 000", "000, 000, 090, 010, 000, 000, 000", "000, 000, 080, 020, 000, 000, 000", "000, 000, 075, 025, 000, 000, 000", "000, 000, 050, 050, 000, 000, 000", "000, 000, 025, 075, 000, 000, 000", "000, 000, 020, 080, 000, 000, 000", "000, 000, 010, 090, 000, 000, 000", "000, 000, 000, 100, 000, 000, 000", "000, 000, 000, 100, 000, 000, 000", "000, 000, 000, 090, 010, 000, 000", "000, 000, 000, 080, 020, 000, 000", "000, 000, 000, 075, 025, 000, 000", "000, 000, 000, 050, 050, 000, 000", "000, 000, 000, 025, 075, 000, 000", "000, 000, 000, 020, 080, 000, 000", "000, 000, 000, 010, 090, 000, 000", "000, 000, 000, 000, 100, 000, 000", "000, 000, 000, 000, 090, 010, 000", "000, 000, 000, 000, 080, 020, 000", "000, 000, 000, 000, 075, 025, 000", "000, 000, 000, 000, 050, 050, 000", "000, 000, 000, 000, 025, 075, 000", "000, 000, 000, 000, 020, 080, 000", "000, 000, 000, 000, 010, 090, 000", "000, 000, 000, 000, 000, 100, 000", "000, 000, 000, 000, 000, 090, 010", "000, 000, 000, 000, 000, 080, 020", "000, 000, 000, 000, 000, 075, 025", "000, 000, 000, 000, 000, 050, 050", "000, 000, 000, 000, 000, 025, 075", "000, 000, 000, 000, 000, 020, 080", "000, 000, 000, 000, 000, 010, 090", "000, 000, 000, 000, 000, 000, 100" };
    int miners = 150;
    assertArrayEquals(new int[] { 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case6() {
    String[] mines = { "030, 040, 000, 000, 030, 000, 000", "010, 010, 010, 010, 020, 020, 020" };
    int miners = 9;
    assertArrayEquals(new int[] { 4, 5 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case7() {
    String[] mines = { "010, 010, 010, 010, 010, 010, 040" };
    int miners = 1;
    assertArrayEquals(new int[] { 1 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case8() {
    String[] mines = { "010, 010, 010, 010, 010, 010, 040", "010, 010, 010, 010, 010, 010, 040" };
    int miners = 1;
    assertArrayEquals(new int[] { 1, 0 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case9() {
    String[] mines = { "090, 010, 000, 000, 000, 000, 000", "090, 010, 000, 000, 000, 000, 000" };
    int miners = 6;
    assertArrayEquals(new int[] { 5, 1 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case10() {
    String[] mines = { "006, 009, 010, 006, 012, 016, 041", "037, 002, 030, 009, 004, 009, 009", "005, 011, 001, 034, 014, 004, 031", "019, 006, 011, 028, 022, 013, 001", "012, 002, 003, 024, 037, 007, 015", "029, 022, 012, 008, 008, 001, 020", "035, 001, 008, 013, 019, 013, 011", "029, 023, 005, 033, 006, 001, 003", "017, 024, 008, 010, 008, 003, 030", "004, 006, 005, 059, 010, 013, 003", "006, 014, 018, 037, 010, 011, 004", "008, 008, 028, 021, 022, 008, 005", "004, 033, 001, 003, 032, 012, 015", "012, 028, 018, 011, 003, 023, 005", "015, 009, 028, 028, 006, 011, 003", "008, 011, 019, 031, 015, 009, 007", "002, 001, 004, 006, 016, 029, 042", "004, 020, 007, 024, 010, 019, 016", "025, 023, 013, 011, 005, 019, 004", "024, 013, 004, 011, 015, 031, 002", "001, 003, 013, 017, 027, 025, 014", "013, 007, 015, 018, 006, 036, 005", "012, 053, 003, 002, 027, 003, 000", "026, 054, 001, 001, 006, 009, 003", "029, 003, 012, 015, 003, 017, 021", "046, 015, 010, 009, 017, 002, 001", "009, 044, 002, 011, 022, 011, 001", "035, 016, 001, 029, 015, 004, 000", "011, 003, 011, 007, 018, 019, 031", "006, 004, 001, 015, 046, 028, 000", "003, 017, 040, 011, 012, 008, 009", "014, 008, 006, 015, 008, 038, 011", "024, 038, 019, 001, 001, 004, 013", "011, 002, 027, 029, 015, 006, 010", "006, 014, 029, 016, 014, 018, 003", "033, 006, 009, 031, 018, 001, 002", "006, 010, 011, 025, 021, 024, 003", "018, 032, 018, 001, 004, 014, 013", "019, 006, 042, 003, 004, 021, 005", "005, 027, 005, 009, 013, 002, 039", "010, 012, 002, 010, 021, 039, 006", "022, 007, 007, 012, 002, 009, 041", "008, 003, 008, 008, 002, 016, 055", "033, 017, 003, 004, 010, 008, 025", "007, 041, 002, 008, 018, 008, 016", "043, 008, 013, 006, 011, 016, 003", "001, 002, 021, 012, 020, 034, 010", "008, 003, 014, 012, 049, 004, 010", "005, 021, 013, 026, 013, 004, 018", "002, 018, 023, 011, 015, 004, 027" };
    int miners = 201;
    assertArrayEquals(new int[] { 5, 3, 5, 4, 4, 4, 4, 3, 5, 3, 3, 4, 4, 4, 3, 4, 5, 5, 4, 4, 5, 4, 3, 1, 5, 3, 4, 3, 5, 4, 4, 5, 2, 4, 4, 3, 4, 4, 4, 5, 4, 5, 5, 5, 4, 4, 5, 4, 4, 5 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case11() {
    String[] mines = { "002, 006, 016, 033, 012, 028, 003", "009, 015, 010, 012, 028, 026, 000", "009, 038, 001, 015, 008, 016, 013", "002, 027, 015, 011, 003, 041, 001", "002, 057, 001, 013, 004, 002, 021", "007, 004, 009, 005, 002, 053, 020", "012, 008, 017, 014, 018, 016, 015", "021, 029, 020, 006, 015, 003, 006", "002, 005, 019, 010, 004, 040, 020", "037, 006, 021, 004, 009, 007, 016", "002, 031, 023, 010, 029, 004, 001", "037, 010, 009, 002, 004, 009, 029", "006, 012, 036, 007, 029, 008, 002", "006, 001, 002, 017, 025, 028, 021", "028, 005, 026, 017, 001, 019, 004", "015, 037, 002, 011, 003, 024, 008", "023, 006, 003, 001, 007, 031, 029", "014, 013, 013, 002, 002, 008, 048", "012, 003, 001, 013, 062, 003, 006", "001, 001, 007, 004, 025, 054, 008", "002, 016, 026, 003, 014, 024, 015", "006, 014, 024, 011, 022, 010, 013", "021, 014, 004, 045, 004, 008, 004", "021, 026, 003, 008, 028, 004, 010", "022, 017, 014, 003, 034, 008, 002", "034, 002, 004, 016, 002, 004, 038", "019, 024, 035, 003, 010, 003, 006", "019, 025, 004, 023, 012, 014, 003", "024, 006, 012, 003, 008, 046, 001", "009, 020, 001, 014, 042, 013, 001", "004, 014, 010, 002, 021, 029, 020", "003, 023, 006, 004, 013, 020, 031", "011, 001, 017, 021, 022, 027, 001", "021, 026, 012, 006, 008, 005, 022", "017, 009, 007, 003, 015, 024, 025", "002, 021, 001, 008, 001, 013, 054", "023, 004, 009, 025, 015, 016, 008", "025, 012, 014, 006, 003, 008, 032", "008, 016, 005, 039, 016, 015, 001", "013, 006, 013, 004, 058, 005, 001", "002, 017, 034, 008, 002, 032, 005", "002, 038, 042, 001, 004, 011, 002", "008, 028, 003, 016, 008, 025, 012", "008, 003, 007, 015, 007, 032, 028", "013, 011, 004, 011, 005, 037, 019", "013, 017, 002, 023, 032, 009, 004", "014, 021, 014, 020, 011, 013, 007", "026, 011, 009, 006, 005, 030, 013", "026, 002, 022, 006, 003, 039, 002", "009, 009, 008, 014, 012, 023, 025" };
    int miners = 64;
    assertArrayEquals(new int[] { 2, 1, 1, 1, 1, 3, 2, 1, 2, 0, 1, 0, 1, 3, 0, 1, 1, 1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1, 0, 2, 2, 1, 1, 1, 3, 2, 1, 1, 0, 0, 2 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case12() {
    String[] mines = { "014, 004, 020, 001, 022, 012, 027", "009, 002, 038, 012, 033, 005, 001", "002, 010, 003, 001, 002, 034, 048", "009, 014, 014, 024, 019, 012, 008", "002, 040, 008, 025, 004, 017, 004", "004, 004, 049, 006, 018, 006, 013", "002, 025, 001, 013, 038, 015, 006", "017, 002, 019, 011, 023, 026, 002", "006, 003, 024, 006, 025, 020, 016", "023, 002, 003, 020, 009, 016, 027", "014, 011, 011, 027, 021, 016, 000", "004, 001, 001, 010, 042, 036, 006", "013, 003, 015, 037, 023, 005, 004", "007, 007, 022, 037, 017, 008, 002", "018, 005, 011, 026, 007, 025, 008", "033, 013, 027, 004, 016, 002, 005", "012, 021, 009, 019, 016, 013, 010", "012, 046, 001, 009, 007, 021, 004", "046, 030, 007, 002, 003, 009, 003", "004, 022, 003, 022, 033, 011, 005", "023, 005, 003, 046, 003, 014, 006", "004, 004, 031, 025, 008, 021, 007", "002, 003, 004, 074, 004, 004, 009", "009, 022, 006, 009, 021, 026, 007", "002, 023, 004, 043, 006, 007, 015", "002, 010, 003, 034, 018, 018, 015", "004, 002, 003, 010, 064, 002, 015", "002, 045, 015, 017, 004, 015, 002", "014, 007, 028, 023, 009, 013, 006", "001, 005, 003, 007, 032, 045, 007", "054, 006, 020, 001, 002, 015, 002", "005, 025, 001, 004, 004, 031, 030", "023, 006, 003, 021, 009, 029, 009", "011, 016, 024, 009, 036, 002, 002", "001, 006, 030, 003, 015, 025, 020", "033, 013, 002, 001, 004, 042, 005", "015, 010, 006, 005, 045, 017, 002", "017, 008, 010, 009, 014, 024, 018", "001, 001, 031, 003, 023, 032, 009", "016, 018, 004, 003, 011, 028, 020", "008, 032, 012, 014, 028, 001, 005", "010, 001, 015, 004, 003, 052, 015", "015, 013, 003, 040, 007, 015, 007", "003, 017, 011, 011, 008, 030, 020", "008, 008, 015, 012, 015, 038, 004", "030, 010, 012, 006, 005, 011, 026", "013, 043, 003, 013, 002, 005, 021", "009, 013, 006, 009, 004, 014, 045", "013, 027, 013, 013, 005, 006, 023", "004, 004, 020, 008, 018, 046, 000" };
    int miners = 162;
    assertArrayEquals(new int[] { 4, 3, 5, 3, 2, 2, 3, 3, 4, 4, 3, 4, 3, 3, 3, 2, 3, 1, 1, 3, 3, 3, 3, 4, 3, 4, 4, 2, 3, 4, 1, 4, 4, 3, 4, 4, 3, 4, 4, 4, 3, 4, 3, 4, 4, 3, 2, 5, 3, 4 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case13() {
    String[] mines = { "011, 039, 011, 013, 004, 022, 000", "015, 001, 013, 015, 044, 005, 007", "007, 004, 013, 034, 017, 012, 013", "016, 011, 002, 063, 001, 006, 001", "035, 002, 021, 012, 014, 007, 009", "031, 019, 007, 006, 006, 027, 004", "007, 001, 016, 021, 021, 006, 028", "027, 001, 001, 001, 017, 036, 017", "008, 008, 016, 012, 030, 014, 012", "022, 014, 020, 006, 023, 003, 012", "002, 044, 004, 002, 007, 031, 010", "017, 012, 011, 005, 013, 016, 026", "006, 044, 011, 020, 006, 011, 002", "021, 008, 015, 005, 035, 012, 004", "007, 001, 019, 012, 023, 009, 029", "019, 009, 010, 006, 048, 008, 000", "015, 009, 002, 006, 008, 053, 007", "056, 001, 009, 003, 016, 003, 012", "016, 012, 039, 011, 017, 001, 004", "013, 019, 004, 002, 010, 012, 040", "008, 002, 007, 004, 043, 020, 016", "026, 024, 002, 002, 024, 010, 012", "023, 013, 013, 013, 009, 004, 025", "001, 007, 007, 030, 015, 019, 021", "002, 034, 002, 034, 013, 003, 012", "002, 003, 015, 025, 018, 025, 012", "051, 013, 003, 014, 008, 002, 009", "031, 006, 013, 011, 023, 008, 008", "037, 002, 006, 001, 031, 001, 022", "017, 003, 027, 007, 017, 027, 002", "023, 033, 008, 011, 006, 009, 010", "004, 011, 008, 019, 041, 005, 012", "031, 017, 020, 020, 005, 005, 002", "012, 008, 022, 013, 005, 022, 018", "012, 024, 018, 004, 005, 037, 000", "009, 002, 066, 008, 005, 006, 004", "012, 014, 016, 019, 013, 019, 007", "020, 012, 017, 001, 037, 004, 009", "005, 001, 018, 024, 010, 010, 032", "044, 009, 008, 002, 023, 003, 011", "017, 007, 003, 021, 021, 002, 029", "037, 013, 018, 005, 010, 004, 013", "004, 003, 001, 010, 044, 011, 027", "052, 003, 010, 009, 008, 010, 008", "003, 004, 004, 027, 031, 002, 029", "022, 006, 003, 016, 016, 005, 032", "003, 014, 031, 020, 010, 021, 001", "018, 005, 025, 017, 002, 018, 015", "035, 007, 019, 033, 001, 002, 003", "007, 010, 025, 023, 018, 004, 013" };
    int miners = 32;
    assertArrayEquals(new int[] { 0, 1, 2, 0, 0, 0, 2, 0, 1, 0, 1, 0, 1, 0, 2, 0, 0, 0, 0, 1, 2, 0, 0, 2, 1, 2, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 2, 0, 0, 0, 3, 0, 2, 0, 1, 0, 0, 1 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case14() {
    String[] mines = { "001, 011, 003, 014, 018, 028, 025", "015, 027, 005, 011, 002, 029, 011", "020, 012, 010, 001, 016, 003, 038", "010, 017, 026, 001, 003, 022, 021", "013, 013, 002, 005, 013, 039, 015", "021, 023, 001, 010, 022, 003, 020", "001, 002, 051, 005, 031, 001, 009", "005, 001, 016, 006, 023, 007, 042", "002, 031, 022, 002, 002, 013, 028", "012, 014, 031, 025, 014, 004, 000", "003, 012, 037, 011, 014, 011, 012", "003, 004, 021, 015, 017, 015, 025", "002, 005, 013, 007, 014, 035, 024", "003, 011, 021, 025, 008, 032, 000", "002, 019, 040, 007, 017, 004, 011", "031, 012, 019, 002, 011, 007, 018", "002, 003, 003, 016, 007, 005, 064", "005, 009, 002, 045, 026, 009, 004", "005, 009, 020, 018, 006, 004, 038", "028, 037, 011, 003, 004, 015, 002", "041, 001, 016, 010, 018, 006, 008", "017, 020, 008, 023, 021, 004, 007", "012, 014, 014, 009, 002, 012, 037", "008, 012, 018, 032, 025, 005, 000", "001, 046, 008, 022, 009, 006, 008", "002, 017, 005, 034, 007, 022, 013", "004, 026, 006, 002, 039, 006, 017", "017, 026, 005, 022, 007, 003, 020", "012, 005, 032, 005, 023, 004, 019", "009, 034, 013, 014, 021, 003, 006", "003, 005, 013, 017, 018, 025, 019", "002, 004, 011, 012, 042, 002, 027", "026, 012, 005, 013, 038, 002, 004", "011, 025, 002, 010, 025, 015, 012", "004, 020, 003, 009, 004, 059, 001", "002, 002, 015, 041, 011, 020, 009", "011, 011, 023, 011, 021, 001, 022", "010, 002, 018, 031, 018, 011, 010", "007, 014, 008, 008, 033, 004, 026", "034, 018, 001, 010, 012, 009, 016", "047, 017, 006, 014, 001, 012, 003", "005, 018, 020, 026, 009, 011, 011", "002, 009, 028, 002, 030, 021, 008", "011, 010, 014, 017, 017, 021, 010", "017, 029, 026, 014, 007, 001, 006", "006, 020, 028, 007, 011, 013, 015", "006, 024, 014, 044, 006, 001, 005", "003, 007, 003, 054, 008, 007, 018", "004, 021, 019, 016, 025, 010, 005", "012, 016, 001, 020, 035, 006, 010" };
    int miners = 257;
    assertArrayEquals(new int[] { 6, 5, 6, 5, 5, 5, 5, 6, 6, 4, 5, 6, 6, 5, 5, 5, 6, 5, 6, 5, 5, 5, 6, 4, 5, 5, 5, 5, 5, 5, 5, 6, 4, 5, 5, 5, 5, 5, 6, 5, 5, 5, 5, 5, 5, 5, 4, 5, 5, 5 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case15() {
    String[] mines = { "000, 030, 000, 070, 000, 000, 000", "000, 000, 000, 070, 010, 010, 010" };
    int miners = 5;
    assertArrayEquals(new int[] { 2, 3 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case16() {
    String[] mines = { "000, 030, 000, 040, 000, 030, 000", "020, 020, 020, 010, 010, 010, 010" };
    int miners = 3;
    assertArrayEquals(new int[] { 2, 1 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case17() {
    String[] mines = { "000, 000, 000, 000, 000, 000, 100", "020, 020, 020, 010, 010, 010, 010" };
    int miners = 7;
    assertArrayEquals(new int[] { 5, 2 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case18() {
    String[] mines = {};
    int miners = 25;
    assertArrayEquals(new int[] { 6, 6, 6, 6, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case19() {
    String[] mines = { "016, 012, 013, 019, 015, 013, 012", "016, 019, 011, 016, 010, 016, 012", "017, 013, 012, 013, 019, 014, 012", "009, 021, 017, 018, 012, 011, 012", "020, 013, 011, 013, 016, 013, 014", "014, 014, 009, 021, 011, 018, 013", "013, 011, 017, 013, 014, 016, 016", "013, 013, 015, 013, 012, 019, 015", "013, 021, 011, 010, 014, 016, 015", "016, 021, 008, 010, 016, 016, 013", "015, 019, 013, 013, 015, 013, 012", "018, 012, 008, 012, 018, 018, 014", "013, 022, 012, 016, 011, 012, 014", "008, 017, 015, 010, 017, 016, 017", "014, 013, 012, 020, 014, 015, 012", "018, 018, 013, 009, 014, 012, 016", "018, 014, 018, 009, 019, 014, 008", "013, 018, 018, 010, 016, 011, 014", "010, 008, 024, 011, 015, 013, 019", "009, 015, 015, 022, 018, 010, 011", "017, 011, 016, 009, 012, 014, 021", "011, 018, 021, 017, 010, 010, 013", "018, 013, 016, 015, 016, 006, 016", "012, 009, 006, 021, 019, 014, 019", "010, 013, 011, 017, 016, 017, 016", "013, 016, 015, 016, 007, 014, 019", "013, 014, 017, 017, 011, 012, 016", "012, 019, 013, 014, 008, 012, 022", "007, 015, 013, 018, 019, 016, 012", "016, 022, 014, 013, 009, 009, 017", "013, 018, 011, 017, 011, 016, 014", "013, 016, 012, 016, 010, 016, 017", "020, 013, 011, 022, 008, 015, 011", "017, 010, 012, 016, 012, 019, 014", "011, 017, 012, 012, 017, 014, 017", "015, 010, 013, 012, 017, 020, 013", "016, 015, 018, 015, 012, 012, 012", "012, 011, 012, 017, 019, 017, 012", "010, 013, 017, 017, 016, 014, 013", "017, 018, 013, 012, 011, 014, 015", "009, 019, 014, 016, 015, 014, 013", "013, 010, 016, 017, 018, 013, 013", "006, 017, 016, 016, 014, 020, 011" };
    int miners = 192;
    assertArrayEquals(new int[] { 4, 4, 4, 4, 4, 4, 5, 5, 5, 4, 4, 5, 4, 5, 4, 5, 4, 4, 5, 4, 5, 4, 4, 5, 5, 5, 5, 5, 4, 5, 5, 5, 4, 5, 5, 5, 4, 4, 4, 5, 4, 4, 4 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case20() {
    String[] mines = { "015, 014, 013, 014, 017, 015, 012", "013, 020, 013, 007, 018, 014, 015", "008, 019, 012, 015, 016, 015, 015", "016, 015, 021, 014, 013, 012, 009", "017, 012, 010, 014, 019, 011, 017", "014, 008, 020, 014, 013, 013, 018", "015, 019, 015, 012, 016, 013, 010", "024, 020, 014, 009, 015, 010, 008", "017, 013, 011, 016, 010, 014, 019" };
    int miners = 48;
    assertArrayEquals(new int[] { 5, 5, 5, 5, 6, 6, 5, 5, 6 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case21() {
    String[] mines = { "013, 014, 017, 010, 024, 012, 010", "022, 011, 011, 011, 018, 013, 014", "010, 015, 014, 023, 014, 012, 012", "013, 008, 016, 018, 014, 012, 019", "008, 017, 015, 014, 010, 018, 018", "016, 011, 015, 020, 013, 005, 020", "011, 014, 013, 018, 019, 016, 009", "017, 016, 012, 016, 016, 009, 014", "011, 010, 019, 019, 009, 017, 015", "017, 006, 016, 016, 015, 016, 014", "021, 013, 013, 011, 012, 011, 019", "014, 020, 011, 011, 016, 015, 013", "015, 009, 019, 013, 007, 021, 016", "015, 011, 021, 009, 013, 013, 018", "015, 008, 013, 013, 020, 016, 015", "016, 017, 016, 014, 011, 014, 012", "014, 011, 013, 013, 014, 016, 019", "012, 020, 015, 010, 013, 018, 012", "010, 010, 013, 018, 013, 018, 018", "014, 025, 012, 010, 016, 015, 008", "015, 017, 009, 015, 013, 014, 017", "013, 011, 017, 018, 009, 019, 013", "012, 017, 019, 015, 011, 012, 014", "020, 015, 014, 016, 015, 009, 011", "016, 020, 017, 014, 011, 010, 012", "010, 007, 016, 015, 015, 023, 014", "014, 020, 016, 017, 012, 011, 010", "010, 015, 016, 018, 007, 019, 015", "013, 017, 014, 016, 015, 015, 010", "012, 016, 009, 014, 020, 015, 014", "013, 017, 018, 014, 008, 015, 015", "013, 011, 015, 013, 018, 019, 011", "014, 013, 013, 014, 022, 012, 012", "015, 013, 009, 017, 017, 011, 018", "019, 015, 012, 016, 011, 010, 017", "016, 019, 012, 013, 016, 012, 012", "018, 020, 021, 012, 016, 006, 007", "017, 017, 016, 015, 017, 007, 011", "012, 018, 013, 012, 015, 016, 014", "015, 012, 016, 012, 013, 018, 014", "013, 012, 017, 010, 023, 014, 011", "022, 011, 015, 008, 013, 016, 015", "013, 012, 011, 011, 013, 018, 022", "012, 015, 016, 011, 021, 019, 006", "014, 009, 015, 015, 018, 014, 015", "011, 015, 013, 011, 021, 012, 017", "017, 018, 013, 011, 013, 017, 011", "015, 015, 015, 017, 018, 010, 010", "018, 017, 013, 019, 015, 012, 006" };
    int miners = 42;
    assertArrayEquals(new int[] { 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case22() {
    String[] mines = { "013, 022, 019, 016, 010, 012, 008", "015, 011, 014, 012, 014, 019, 015", "014, 016, 018, 005, 011, 013, 023", "014, 011, 016, 018, 013, 013, 015", "022, 013, 008, 011, 017, 013, 016", "014, 009, 015, 016, 014, 019, 013", "018, 014, 013, 011, 014, 011, 019", "016, 016, 014, 010, 007, 019, 018", "017, 017, 012, 022, 012, 008, 012", "010, 012, 012, 013, 016, 017, 020", "013, 015, 018, 013, 013, 013, 015", "018, 010, 014, 015, 018, 010, 015", "012, 013, 013, 015, 017, 015, 015", "011, 009, 014, 017, 015, 021, 013", "010, 015, 017, 013, 017, 012, 016", "020, 015, 013, 014, 014, 008, 016", "013, 009, 010, 019, 017, 017, 015", "017, 013, 013, 014, 017, 012, 014", "009, 013, 016, 013, 013, 015, 021", "010, 016, 012, 019, 017, 015, 011", "008, 012, 013, 017, 020, 016, 014", "012, 016, 009, 020, 015, 013, 015", "024, 014, 007, 013, 011, 016, 015", "014, 013, 019, 009, 016, 015, 014", "010, 023, 011, 011, 014, 018, 013", "017, 014, 014, 012, 016, 017, 010", "020, 014, 008, 016, 016, 015, 011", "013, 009, 014, 017, 021, 011, 015", "016, 011, 015, 013, 016, 016, 013", "011, 014, 013, 015, 018, 011, 018", "013, 017, 014, 015, 019, 017, 005", "014, 011, 015, 008, 019, 019, 014", "010, 009, 023, 020, 008, 018, 012", "011, 017, 011, 017, 016, 011, 017", "018, 008, 014, 015, 020, 016, 009", "014, 012, 022, 015, 014, 011, 012", "013, 022, 010, 013, 012, 021, 009", "005, 018, 014, 013, 016, 017, 017", "009, 019, 012, 015, 009, 011, 025", "009, 012, 013, 014, 016, 025, 011", "012, 012, 014, 019, 017, 016, 010", "010, 012, 018, 013, 017, 015, 015" };
    int miners = 10;
    assertArrayEquals(new int[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case23() {
    String[] mines = { "012, 017, 014, 012, 017, 013, 015", "017, 019, 015, 013, 008, 014, 014", "014, 015, 017, 012, 010, 014, 018", "016, 016, 022, 011, 008, 013, 014", "014, 013, 014, 016, 018, 015, 010", "012, 018, 009, 010, 017, 015, 019", "014, 014, 011, 011, 011, 017, 022", "012, 015, 009, 014, 020, 015, 015", "018, 012, 016, 016, 013, 011, 014", "014, 014, 016, 010, 018, 017, 011", "017, 012, 007, 017, 016, 018, 013", "011, 019, 010, 014, 022, 013, 011", "010, 010, 016, 013, 016, 014, 021", "013, 014, 013, 016, 012, 016, 016", "010, 016, 018, 015, 011, 015, 015", "008, 016, 017, 016, 011, 012, 020", "014, 012, 021, 016, 012, 012, 013", "011, 019, 011, 010, 014, 019, 016", "013, 014, 013, 018, 016, 011, 015", "017, 013, 015, 010, 014, 018, 013", "013, 010, 010, 020, 019, 013, 015", "011, 011, 017, 014, 012, 014, 021", "016, 016, 016, 013, 013, 014, 012", "017, 013, 015, 015, 012, 010, 018", "015, 019, 012, 012, 019, 010, 013", "010, 015, 020, 012, 009, 017, 017", "016, 011, 019, 012, 017, 013, 012", "016, 019, 016, 015, 007, 014, 013", "016, 023, 014, 011, 008, 016, 012", "020, 011, 012, 016, 019, 012, 010", "015, 019, 014, 011, 010, 017, 014", "018, 016, 010, 016, 015, 016, 009", "014, 010, 015, 018, 017, 007, 019", "014, 015, 008, 018, 017, 013, 015", "012, 011, 016, 019, 013, 014, 015", "009, 010, 018, 014, 018, 014, 017", "013, 014, 015, 020, 015, 017, 006", "014, 014, 014, 015, 019, 014, 010", "015, 015, 013, 016, 009, 017, 015", "015, 018, 012, 014, 015, 017, 009", "016, 022, 012, 013, 013, 010, 014" };
    int miners = 198;
    assertArrayEquals(new int[] { 5, 5, 5, 5, 4, 5, 5, 5, 5, 5, 5, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 5, 4, 5, 5, 5, 5, 4, 4, 5, 4, 5 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case24() {
    String[] mines = { "012, 015, 014, 016, 016, 015, 012", "011, 018, 010, 014, 018, 016, 013", "011, 011, 010, 015, 017, 019, 017", "017, 012, 015, 009, 023, 012, 012", "012, 010, 016, 018, 013, 014, 017", "012, 016, 015, 010, 019, 015, 013", "011, 021, 013, 013, 019, 009, 014", "016, 020, 014, 007, 017, 016, 010", "016, 013, 015, 015, 012, 013, 016", "019, 018, 015, 009, 008, 015, 016", "010, 016, 009, 021, 022, 011, 011", "013, 013, 019, 014, 011, 017, 013", "013, 014, 009, 014, 017, 015, 018", "007, 014, 016, 017, 015, 012, 019", "014, 017, 014, 012, 010, 015, 018", "012, 010, 015, 013, 016, 023, 011", "020, 012, 016, 012, 009, 015, 016", "012, 010, 009, 012, 017, 019, 021", "014, 014, 018, 013, 008, 018, 015", "006, 013, 014, 015, 013, 022, 017", "010, 020, 010, 010, 023, 016, 011", "014, 013, 016, 014, 015, 013, 015", "014, 014, 014, 014, 018, 014, 012", "016, 012, 012, 019, 013, 012, 016", "015, 019, 017, 010, 015, 016, 008", "014, 009, 020, 015, 015, 016, 011", "011, 014, 013, 016, 012, 012, 022", "010, 017, 011, 015, 017, 020, 010", "011, 017, 010, 016, 015, 017, 014", "021, 015, 016, 015, 015, 007, 011", "007, 018, 018, 011, 016, 016, 014", "012, 016, 012, 010, 014, 012, 024", "013, 017, 007, 023, 015, 012, 013", "012, 017, 020, 013, 011, 015, 012", "018, 017, 017, 013, 009, 015, 011", "016, 012, 017, 011, 016, 018, 010", "011, 014, 012, 012, 024, 009, 018", "012, 017, 013, 010, 019, 013, 016", "014, 013, 007, 013, 021, 010, 022", "018, 018, 011, 011, 011, 017, 014" };
    int miners = 65;
    assertArrayEquals(new int[] { 2, 2, 2, 1, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case25() {
    String[] mines = { "019, 014, 011, 013, 014, 018, 011", "010, 014, 015, 014, 019, 010, 018", "016, 019, 012, 013, 011, 013, 016", "021, 005, 017, 016, 011, 013, 017", "014, 013, 016, 015, 013, 018, 011", "014, 012, 014, 016, 012, 011, 021", "017, 017, 006, 012, 008, 024, 016", "019, 014, 013, 010, 016, 015, 013", "014, 018, 013, 015, 016, 015, 009", "013, 022, 014, 015, 013, 010, 013", "011, 012, 011, 015, 017, 013, 021", "010, 015, 025, 010, 019, 013, 008", "011, 018, 014, 017, 011, 011, 018", "016, 012, 015, 012, 010, 014, 021", "015, 007, 011, 022, 016, 014, 015", "018, 014, 013, 016, 011, 016, 012", "017, 019, 015, 008, 011, 013, 017", "012, 016, 013, 015, 016, 017, 011", "021, 017, 013, 015, 018, 010, 006", "017, 008, 015, 016, 018, 010, 016", "019, 013, 015, 009, 015, 018, 011", "012, 015, 025, 014, 012, 016, 006", "016, 013, 016, 011, 016, 015, 013", "024, 009, 013, 010, 017, 015, 012", "017, 019, 017, 008, 009, 013, 017", "015, 014, 009, 018, 011, 015, 018", "020, 015, 013, 012, 015, 015, 010", "015, 020, 013, 013, 011, 016, 012", "012, 009, 020, 016, 015, 008, 020", "014, 009, 011, 018, 015, 012, 021", "013, 016, 014, 014, 012, 016, 015", "015, 019, 013, 015, 015, 009, 014" };
    int miners = 81;
    assertArrayEquals(new int[] { 3, 3, 2, 3, 3, 3, 3, 2, 2, 2, 3, 2, 3, 3, 3, 2, 2, 3, 2, 3, 2, 2, 3, 2, 2, 3, 2, 2, 3, 3, 3, 2 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case26() {
    String[] mines = { "019, 012, 011, 020, 008, 012, 018", "009, 012, 019, 019, 012, 014, 015", "011, 012, 018, 023, 012, 015, 009", "015, 011, 008, 012, 019, 017, 018", "022, 008, 020, 011, 012, 015, 012", "010, 018, 015, 016, 015, 018, 008", "006, 018, 018, 016, 018, 011, 013", "020, 010, 016, 010, 015, 017, 012", "008, 010, 023, 012, 016, 016, 015", "010, 014, 012, 019, 015, 014, 016", "010, 012, 014, 017, 013, 021, 013", "021, 013, 007, 013, 013, 017, 016", "018, 015, 013, 012, 013, 015, 014", "018, 013, 008, 015, 020, 011, 015", "008, 017, 009, 020, 016, 012, 018", "014, 019, 008, 016, 017, 012, 014", "021, 016, 012, 010, 013, 015, 013", "014, 012, 020, 015, 015, 012, 012", "009, 018, 015, 013, 015, 013, 017", "011, 010, 016, 015, 012, 017, 019", "018, 012, 019, 013, 010, 018, 010", "012, 012, 013, 022, 007, 014, 020", "016, 015, 009, 011, 015, 018, 016", "013, 014, 016, 017, 010, 017, 013", "012, 013, 013, 014, 014, 016, 018", "016, 017, 013, 015, 010, 014, 015", "018, 006, 015, 016, 013, 017, 015", "017, 010, 010, 013, 013, 016, 021", "017, 014, 025, 007, 012, 011, 014", "014, 012, 021, 012, 015, 014, 012", "012, 019, 016, 015, 010, 017, 011" };
    int miners = 161;
    assertArrayEquals(new int[] { 6, 5, 5, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 5, 5, 5, 5, 6, 5, 6, 5, 5, 5, 5, 5, 6, 5, 5, 5 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case27() {
    String[] mines = { "015, 010, 015, 014, 021, 014, 011", "011, 010, 021, 012, 015, 021, 010", "013, 013, 010, 016, 019, 017, 012", "020, 011, 014, 008, 015, 017, 015", "014, 011, 008, 017, 018, 016, 016", "016, 016, 017, 015, 012, 010, 014", "015, 014, 020, 015, 012, 014, 010", "013, 009, 016, 017, 014, 014, 017", "017, 013, 014, 009, 013, 018, 016", "015, 011, 013, 020, 014, 015, 012", "010, 015, 020, 014, 020, 012, 009", "011, 015, 016, 014, 011, 014, 019", "017, 016, 012, 017, 013, 014, 011", "020, 011, 017, 008, 017, 016, 011", "020, 018, 014, 010, 015, 017, 006", "008, 020, 013, 015, 009, 015, 020", "010, 019, 013, 013, 012, 018, 015", "016, 016, 021, 007, 016, 012, 012", "018, 012, 012, 017, 012, 009, 020", "011, 012, 016, 018, 019, 009, 015", "016, 012, 015, 016, 008, 019, 014", "010, 016, 012, 021, 013, 019, 009", "017, 011, 013, 015, 016, 013, 015", "013, 012, 017, 014, 013, 018, 013", "011, 013, 013, 016, 015, 011, 021", "016, 017, 015, 013, 013, 014, 012", "016, 015, 011, 016, 021, 011, 010", "019, 012, 012, 012, 010, 022, 013", "014, 018, 010, 017, 009, 016, 016", "009, 010, 017, 017, 015, 012, 020", "011, 015, 017, 017, 014, 009, 017", "015, 011, 020, 015, 014, 011, 014", "014, 017, 011, 009, 004, 021, 024", "009, 019, 015, 015, 017, 010, 015" };
    int miners = 197;
    assertArrayEquals(new int[] { 6, 5, 6, 6, 6, 6, 5, 6, 6, 6, 5, 6, 6, 5, 5, 6, 6, 6, 6, 6, 6, 5, 6, 6, 6, 6, 5, 6, 6, 6, 6, 6, 6, 6 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case28() {
    String[] mines = { "016, 015, 017, 016, 011, 015, 010", "013, 011, 018, 014, 015, 010, 019", "012, 016, 011, 015, 012, 022, 012", "011, 015, 027, 016, 014, 007, 010", "006, 014, 016, 013, 016, 016, 019", "017, 012, 015, 013, 017, 013, 013", "014, 013, 014, 014, 012, 018, 015", "011, 016, 016, 013, 016, 015, 013", "014, 016, 012, 015, 016, 013, 014", "015, 014, 012, 018, 012, 015, 014", "011, 017, 016, 014, 016, 012, 014", "015, 018, 015, 016, 010, 014, 012", "014, 018, 014, 014, 021, 009, 010", "016, 017, 014, 015, 012, 018, 008", "021, 012, 014, 022, 014, 007, 010", "010, 013, 016, 019, 012, 016, 014", "009, 019, 011, 014, 018, 014, 015", "013, 012, 012, 014, 019, 013, 017", "014, 008, 016, 014, 017, 018, 013", "017, 015, 012, 016, 013, 012, 015", "018, 015, 017, 013, 013, 016, 008", "016, 014, 019, 013, 015, 013, 010", "016, 013, 013, 017, 009, 016, 016", "011, 011, 019, 016, 015, 013, 015", "014, 011, 014, 016, 017, 014, 014", "013, 015, 008, 017, 025, 011, 011", "008, 013, 021, 013, 012, 018, 015", "017, 013, 011, 015, 019, 012, 013", "008, 016, 015, 016, 015, 012, 018", "013, 018, 014, 011, 016, 012, 016", "005, 019, 015, 012, 016, 020, 013", "017, 016, 014, 010, 015, 015, 013", "011, 019, 016, 011, 011, 015, 017", "014, 015, 007, 016, 017, 009, 022", "008, 015, 015, 016, 018, 012, 016", "014, 018, 014, 016, 013, 009, 016", "013, 021, 015, 013, 012, 017, 009", "012, 014, 016, 016, 014, 015, 013", "011, 020, 015, 014, 018, 008, 014", "017, 021, 008, 015, 011, 013, 015", "015, 015, 014, 014, 013, 013, 016", "013, 019, 009, 017, 016, 015, 011", "006, 013, 016, 022, 013, 013, 017", "013, 012, 011, 018, 019, 011, 016", "015, 009, 015, 010, 014, 019, 018", "009, 015, 019, 014, 010, 017, 016" };
    int miners = 235;
    assertArrayEquals(new int[] { 5, 6, 5, 5, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 5, 5, 5, 5, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 5 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case29() {
    String[] mines = { "014, 019, 011, 014, 010, 017, 015", "011, 014, 016, 015, 011, 013, 020", "023, 017, 012, 014, 009, 013, 012", "012, 016, 014, 009, 012, 025, 012", "015, 011, 014, 020, 009, 015, 016", "010, 020, 020, 014, 012, 015, 009", "019, 015, 017, 015, 013, 011, 010", "018, 010, 013, 014, 016, 016, 013", "015, 015, 010, 015, 019, 016, 010" };
    int miners = 47;
    assertArrayEquals(new int[] { 5, 6, 5, 5, 6, 5, 5, 5, 5 }, goldmine.getAllocation(mines, miners));
  }

  @Test
  public void case30() {
    String[] mines = { "015, 020, 014, 017, 011, 010, 013", "012, 017, 013, 008, 012, 020, 018", "018, 014, 010, 009, 014, 016, 019", "015, 017, 009, 011, 015, 020, 013", "016, 014, 014, 018, 009, 018, 011", "023, 015, 010, 010, 009, 019, 014" };
    int miners = 14;
    assertArrayEquals(new int[] { 2, 3, 2, 3, 2, 2 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case31() {
    String[] mines = { "013, 016, 023, 014, 011, 014, 009", "019, 008, 010, 018, 013, 018, 014", "018, 011, 019, 010, 016, 008, 018" };
    int miners = 4;
    assertArrayEquals(new int[] { 1, 2, 1 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case32() {
    String[] mines = { "008, 014, 010, 012, 014, 021, 021", "014, 016, 010, 016, 018, 011, 015", "012, 017, 009, 014, 016, 019, 013", "018, 019, 012, 011, 014, 016, 010", "011, 018, 012, 014, 009, 023, 013", "013, 015, 013, 017, 009, 013, 020", "014, 021, 014, 012, 009, 015, 015", "019, 016, 008, 012, 021, 006, 018", "013, 008, 021, 019, 015, 008, 016", "013, 007, 020, 016, 018, 013, 013", "019, 010, 011, 018, 011, 016, 015", "012, 011, 014, 013, 018, 015, 017" };
    int miners = 42;
    assertArrayEquals(new int[] { 4, 3, 4, 3, 4, 4, 3, 3, 3, 3, 4, 4 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case33() {
    String[] mines = { "014, 016, 013, 009, 015, 018, 015", "016, 016, 013, 006, 018, 016, 015", "012, 018, 012, 010, 014, 017, 017", "008, 017, 010, 012, 021, 012, 020", "019, 012, 014, 016, 017, 012, 010", "011, 011, 017, 019, 014, 015, 013", "023, 016, 008, 008, 017, 013, 015", "021, 014, 011, 014, 009, 015, 016", "014, 017, 016, 013, 009, 018, 013", "014, 019, 012, 015, 012, 015, 013", "014, 016, 009, 021, 018, 010, 012", "014, 016, 017, 009, 015, 017, 012", "014, 014, 018, 010, 017, 011, 016", "018, 011, 018, 019, 015, 006, 013", "017, 018, 009, 017, 010, 016, 013", "016, 015, 017, 016, 010, 009, 017", "019, 017, 017, 010, 014, 011, 012", "011, 020, 018, 009, 012, 010, 020", "016, 012, 013, 013, 013, 015, 018", "017, 016, 011, 015, 015, 010, 016", "014, 017, 016, 019, 016, 009, 009", "014, 015, 016, 015, 014, 010, 016", "017, 019, 013, 011, 016, 009, 015", "013, 014, 015, 017, 012, 015, 014", "019, 015, 017, 009, 013, 013, 014", "011, 013, 006, 021, 016, 020, 013", "011, 019, 010, 014, 012, 014, 020", "013, 010, 014, 020, 017, 012, 014", "013, 017, 019, 011, 008, 014, 018", "012, 012, 016, 020, 009, 015, 016", "014, 014, 012, 014, 016, 016, 014", "014, 008, 016, 023, 017, 013, 009", "010, 015, 016, 011, 016, 015, 017", "012, 013, 013, 013, 019, 012, 018", "013, 013, 016, 016, 016, 015, 011", "014, 008, 015, 012, 022, 014, 015", "013, 014, 021, 011, 011, 016, 014", "008, 013, 015, 018, 016, 014, 016", "014, 019, 016, 011, 011, 014, 015", "014, 017, 011, 013, 017, 011, 017", "014, 014, 012, 019, 012, 013, 016", "016, 010, 016, 009, 014, 018, 017", "014, 010, 019, 013, 015, 015, 014", "010, 016, 013, 011, 016, 014, 020", "012, 015, 017, 021, 011, 011, 013", "013, 013, 022, 015, 012, 013, 012" };
    int miners = 33;
    assertArrayEquals(new int[] { 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case34() {
    String[] mines = { "009, 014, 007, 018, 022, 017, 013", "023, 011, 013, 016, 015, 011, 011", "017, 013, 009, 019, 013, 015, 014", "012, 015, 009, 017, 018, 017, 012", "017, 008, 018, 017, 014, 015, 011", "006, 011, 016, 020, 014, 018, 015", "010, 012, 015, 020, 016, 014, 013" };
    int miners = 31;
    assertArrayEquals(new int[] { 5, 4, 5, 4, 4, 5, 4 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case35() {
    String[] mines = { "023, 008, 010, 015, 022, 013, 009", "008, 024, 012, 009, 018, 015, 014", "011, 012, 014, 020, 016, 010, 017", "012, 017, 014, 021, 012, 015, 009", "018, 013, 010, 016, 011, 017, 015", "015, 010, 012, 016, 025, 014, 008" };
    int miners = 18;
    assertArrayEquals(new int[] { 3, 3, 3, 3, 3, 3 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case36() {
    String[] mines = { "018, 013, 008, 017, 014, 013, 017", "016, 011, 017, 013, 012, 014, 017", "017, 016, 016, 009, 014, 021, 007", "016, 014, 016, 016, 015, 008, 015", "017, 013, 015, 010, 011, 019, 015", "019, 018, 011, 010, 017, 013, 012", "016, 011, 011, 017, 012, 014, 019", "012, 013, 018, 021, 012, 010, 014", "015, 013, 016, 011, 015, 014, 016", "012, 013, 017, 018, 009, 018, 013", "016, 016, 011, 016, 011, 011, 019", "013, 014, 016, 016, 016, 011, 014", "014, 018, 011, 017, 021, 012, 007", "015, 008, 019, 011, 011, 023, 013", "013, 011, 009, 014, 019, 016, 018", "016, 014, 010, 023, 017, 005, 015", "012, 013, 018, 012, 014, 015, 016", "014, 020, 011, 015, 016, 012, 012", "013, 019, 013, 016, 011, 013, 015", "017, 016, 008, 022, 009, 011, 017", "007, 012, 019, 017, 021, 012, 012", "016, 011, 015, 013, 016, 015, 014", "012, 010, 012, 019, 018, 011, 018", "012, 011, 019, 016, 013, 010, 019", "011, 015, 022, 015, 016, 013, 008", "022, 016, 015, 009, 013, 008, 017", "013, 017, 007, 017, 013, 023, 010", "015, 013, 018, 011, 017, 014, 012", "022, 008, 018, 011, 014, 014, 013", "014, 018, 011, 013, 023, 010, 011", "015, 012, 018, 015, 010, 015, 015", "015, 013, 016, 014, 014, 019, 009", "015, 011, 017, 017, 016, 010, 014", "017, 018, 013, 015, 017, 006, 014", "020, 012, 013, 014, 014, 012, 015", "018, 018, 013, 013, 010, 012, 016", "016, 008, 012, 010, 018, 018, 018", "012, 012, 019, 013, 014, 010, 020", "020, 013, 009, 015, 012, 015, 016", "012, 013, 015, 018, 012, 016, 014", "009, 020, 015, 016, 014, 012, 014" };
    int miners = 237;
    assertArrayEquals(new int[] { 6, 6, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 6, 6, 6, 6, 5, 6, 6, 5, 6, 6, 6, 5, 6, 5, 5, 6, 5, 6, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case37() {
    String[] mines = { "015, 019, 010, 014, 009, 014, 019", "019, 005, 024, 013, 017, 012, 010", "007, 014, 011, 019, 018, 013, 018", "010, 021, 016, 012, 017, 015, 009", "016, 015, 017, 016, 013, 012, 011", "006, 018, 018, 013, 011, 020, 014", "018, 013, 019, 009, 013, 012, 016", "019, 010, 014, 012, 020, 013, 012", "011, 016, 012, 012, 016, 017, 016", "012, 013, 016, 012, 014, 012, 021", "019, 010, 012, 013, 012, 016, 018" };
    int miners = 12;
    assertArrayEquals(new int[] { 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case38() {
    String[] mines = { "011, 017, 013, 017, 015, 012, 015", "010, 014, 010, 023, 014, 013, 016", "021, 011, 018, 007, 009, 018, 016", "011, 015, 019, 013, 015, 013, 014", "019, 011, 015, 012, 016, 013, 014", "018, 011, 010, 016, 010, 016, 019", "016, 018, 012, 015, 014, 012, 013", "016, 019, 018, 013, 014, 014, 006", "017, 018, 011, 010, 013, 017, 014", "012, 007, 014, 014, 014, 022, 017", "015, 015, 012, 016, 021, 008, 013" };
    int miners = 9;
    assertArrayEquals(new int[] { 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case39() {
    String[] mines = { "019, 011, 017, 018, 014, 009, 012", "017, 014, 011, 012, 013, 018, 015", "012, 016, 016, 014, 014, 016, 012", "016, 013, 015, 014, 012, 012, 018", "017, 008, 020, 016, 013, 013, 013", "020, 010, 015, 018, 012, 013, 012", "009, 023, 017, 011, 009, 019, 012", "019, 013, 011, 006, 016, 009, 026", "008, 013, 017, 013, 012, 020, 017", "016, 014, 009, 014, 013, 010, 024", "006, 016, 015, 012, 018, 021, 012", "018, 014, 016, 015, 008, 015, 014", "009, 017, 017, 021, 012, 013, 011", "016, 017, 014, 013, 014, 011, 015", "011, 016, 011, 014, 020, 009, 019", "017, 018, 018, 006, 011, 015, 015", "013, 014, 011, 021, 017, 007, 017", "011, 014, 018, 014, 012, 022, 009", "012, 012, 012, 012, 022, 014, 016" };
    int miners = 57;
    assertArrayEquals(new int[] { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case40() {
    String[] mines = { "008, 014, 017, 013, 015, 011, 022", "025, 019, 012, 007, 012, 009, 016", "011, 008, 011, 019, 016, 014, 021", "019, 009, 015, 013, 009, 014, 021", "015, 014, 008, 017, 024, 011, 011", "015, 013, 012, 011, 016, 011, 022", "014, 016, 010, 019, 008, 020, 013", "011, 017, 018, 018, 012, 011, 013", "017, 018, 010, 012, 009, 018, 016", "013, 009, 015, 012, 019, 017, 015", "017, 013, 016, 014, 016, 009, 015", "013, 012, 015, 014, 017, 016, 013", "013, 017, 010, 014, 013, 007, 026", "012, 018, 013, 014, 020, 009, 014", "016, 018, 012, 007, 018, 013, 016" };
    int miners = 39;
    assertArrayEquals(new int[] { 3, 2, 3, 3, 3, 3, 3, 2, 2, 3, 2, 3, 3, 2, 2 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case41() {
    String[] mines = { "016, 017, 016, 014, 014, 015, 008", "020, 014, 015, 014, 013, 011, 013", "014, 017, 020, 012, 010, 016, 011", "010, 017, 014, 014, 017, 012, 016" };
    int miners = 24;
    assertArrayEquals(new int[] { 6, 6, 6, 6 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case42() {
    String[] mines = { "016, 009, 013, 014, 016, 016, 016", "013, 012, 015, 015, 012, 011, 022", "018, 010, 016, 011, 014, 013, 018", "018, 019, 012, 012, 013, 011, 015", "019, 012, 014, 007, 018, 016, 014", "022, 008, 012, 013, 014, 014, 017", "012, 014, 010, 017, 022, 014, 011", "017, 012, 014, 017, 012, 009, 019", "016, 017, 012, 014, 011, 012, 018", "014, 016, 014, 012, 014, 019, 011", "011, 011, 008, 021, 019, 016, 014", "011, 014, 021, 007, 022, 010, 015", "015, 013, 014, 012, 012, 014, 020", "009, 015, 016, 015, 020, 015, 010", "008, 012, 016, 015, 016, 013, 020", "017, 017, 016, 013, 012, 010, 015", "020, 014, 014, 023, 009, 006, 014", "018, 012, 018, 016, 008, 018, 010", "021, 009, 018, 012, 011, 016, 013", "017, 003, 015, 011, 024, 016, 014", "017, 014, 012, 015, 015, 017, 010", "013, 014, 015, 015, 012, 019, 012" };
    int miners = 24;
    assertArrayEquals(new int[] { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case43() {
    String[] mines = { "013, 017, 014, 009, 016, 013, 018", "016, 017, 011, 011, 012, 016, 017", "021, 014, 013, 008, 015, 016, 013", "013, 011, 017, 011, 020, 013, 015", "014, 010, 013, 018, 018, 018, 009", "011, 019, 014, 012, 013, 014, 017", "021, 012, 018, 014, 016, 009, 010", "017, 015, 008, 015, 011, 014, 020", "013, 013, 012, 016, 019, 018, 009", "017, 017, 010, 016, 013, 013, 014" };
    int miners = 31;
    assertArrayEquals(new int[] { 3, 3, 3, 3, 3, 3, 3, 4, 3, 3 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case44() {
    String[] mines = { "009, 016, 016, 017, 015, 013, 014", "013, 018, 012, 019, 010, 017, 011", "011, 013, 019, 020, 017, 010, 010", "018, 010, 015, 015, 014, 014, 014", "020, 015, 010, 016, 016, 011, 012", "014, 013, 017, 013, 021, 012, 010", "017, 016, 016, 008, 015, 012, 016", "020, 008, 013, 017, 014, 011, 017", "016, 012, 018, 016, 014, 013, 011", "011, 017, 017, 020, 012, 011, 012", "013, 015, 013, 019, 010, 012, 018", "014, 008, 012, 022, 024, 011, 009", "012, 017, 015, 015, 020, 013, 008", "013, 016, 011, 013, 021, 012, 014", "014, 012, 013, 013, 016, 018, 014", "016, 016, 010, 013, 014, 014, 017", "010, 014, 017, 012, 005, 022, 020", "010, 007, 014, 013, 015, 019, 022", "017, 009, 018, 014, 013, 016, 013", "016, 018, 018, 014, 008, 012, 014", "021, 006, 017, 014, 015, 016, 011", "016, 016, 010, 014, 017, 012, 015", "015, 014, 015, 009, 019, 010, 018", "013, 010, 021, 009, 018, 016, 013", "016, 014, 017, 009, 013, 015, 016", "016, 014, 013, 015, 016, 016, 010", "006, 022, 009, 015, 023, 011, 014" };
    int miners = 57;
    assertArrayEquals(new int[] { 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case45() {
    String[] mines = { "009, 008, 017, 013, 019, 019, 015", "010, 019, 019, 007, 017, 015, 013", "010, 015, 015, 017, 019, 013, 011" };
    int miners = 11;
    assertArrayEquals(new int[] { 4, 4, 3 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case46() {
    String[] mines = { "015, 015, 020, 014, 012, 012, 012", "014, 009, 018, 015, 020, 011, 013", "013, 018, 009, 014, 014, 018, 014", "008, 014, 022, 013, 010, 015, 018", "010, 014, 017, 019, 012, 013, 015", "017, 014, 014, 017, 011, 013, 014", "016, 018, 010, 015, 017, 012, 012", "016, 011, 014, 021, 012, 012, 014" };
    int miners = 19;
    assertArrayEquals(new int[] { 2, 3, 3, 2, 3, 2, 2, 2 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case47() {
    String[] mines = { "012, 015, 021, 010, 011, 021, 010", "014, 009, 018, 021, 011, 016, 011", "008, 012, 019, 016, 017, 012, 016", "014, 014, 023, 016, 012, 014, 007", "024, 015, 017, 011, 013, 009, 011", "014, 011, 017, 017, 013, 015, 013", "006, 018, 015, 017, 013, 014, 017", "017, 019, 015, 009, 014, 014, 012", "014, 015, 016, 017, 016, 012, 010", "013, 017, 017, 015, 010, 008, 020", "017, 015, 008, 012, 016, 016, 016", "016, 012, 020, 014, 013, 009, 016", "016, 011, 011, 015, 018, 014, 015", "009, 013, 015, 020, 014, 017, 012", "009, 015, 018, 012, 012, 019, 015", "013, 011, 013, 016, 018, 015, 014", "008, 019, 020, 013, 018, 008, 014", "018, 016, 010, 011, 014, 015, 016", "013, 017, 011, 007, 017, 014, 021", "019, 019, 016, 020, 007, 008, 011", "020, 013, 014, 019, 009, 015, 010", "009, 014, 014, 014, 016, 011, 022", "014, 014, 018, 010, 016, 018, 010", "010, 013, 017, 009, 018, 017, 016", "014, 021, 009, 009, 011, 028, 008", "012, 019, 019, 017, 014, 010, 009" };
    int miners = 156;
    assertArrayEquals(new int[] { 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case48() {
    String[] mines = { "018, 015, 021, 011, 015, 007, 013", "024, 018, 009, 014, 011, 011, 013", "013, 011, 017, 013, 014, 016, 016" };
    int miners = 13;
    assertArrayEquals(new int[] { 4, 4, 5 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case49() {
    String[] mines = { "011, 013, 018, 018, 010, 012, 018", "015, 011, 014, 020, 018, 012, 010" };
    int miners = 1;
    assertArrayEquals(new int[] { 1, 0 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case50() {
    String[] mines = { "010, 019, 014, 015, 019, 011, 012", "011, 014, 012, 017, 017, 012, 017", "015, 008, 018, 011, 017, 012, 019", "015, 020, 012, 016, 014, 013, 010", "014, 021, 013, 015, 011, 017, 009", "016, 014, 015, 012, 013, 018, 012", "018, 012, 019, 014, 014, 012, 011", "014, 011, 019, 016, 015, 009, 016", "011, 011, 017, 013, 019, 014, 015", "020, 016, 012, 017, 011, 011, 013", "015, 011, 013, 014, 017, 014, 016", "012, 017, 011, 015, 017, 012, 016", "009, 019, 024, 014, 014, 007, 013", "006, 012, 020, 019, 011, 018, 014", "010, 016, 016, 017, 014, 009, 018", "009, 021, 005, 020, 011, 021, 013", "012, 014, 014, 015, 015, 017, 013", "013, 015, 013, 015, 014, 018, 012", "011, 017, 011, 021, 013, 011, 016", "007, 022, 016, 013, 018, 011, 013", "010, 016, 013, 020, 017, 016, 008", "011, 025, 013, 013, 014, 009, 015", "015, 011, 017, 012, 018, 016, 011", "017, 018, 007, 013, 018, 011, 016", "019, 018, 013, 011, 007, 017, 015", "021, 009, 016, 019, 014, 008, 013", "015, 013, 012, 014, 018, 009, 019" };
    int miners = 52;
    assertArrayEquals(new int[] { 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 1, 2, 2 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case51() {
    String[] mines = { "016, 013, 013, 017, 009, 014, 018", "015, 013, 014, 014, 014, 012, 018", "010, 014, 010, 014, 018, 014, 020", "018, 013, 011, 018, 014, 014, 012", "013, 013, 014, 016, 015, 010, 019", "014, 017, 018, 014, 014, 013, 010", "009, 015, 012, 013, 014, 019, 018", "008, 017, 007, 017, 017, 012, 022", "019, 009, 017, 015, 007, 012, 021", "012, 017, 014, 009, 015, 021, 012", "008, 019, 016, 012, 016, 021, 008", "010, 012, 019, 014, 015, 014, 016", "015, 016, 013, 014, 013, 019, 010", "016, 011, 014, 024, 011, 012, 012", "017, 010, 015, 016, 009, 013, 020", "009, 017, 016, 008, 021, 014, 015", "015, 012, 016, 015, 012, 016, 014", "012, 016, 014, 017, 017, 015, 009", "018, 013, 015, 013, 008, 018, 015", "008, 012, 014, 017, 018, 019, 012", "011, 018, 015, 015, 014, 014, 013", "009, 016, 011, 014, 009, 015, 026", "014, 010, 017, 014, 014, 016, 015", "017, 013, 014, 015, 011, 015, 015", "018, 014, 013, 018, 011, 011, 015", "015, 023, 013, 013, 014, 014, 008", "016, 015, 016, 010, 011, 018, 014", "016, 012, 020, 015, 011, 014, 012", "013, 016, 014, 013, 014, 013, 017", "013, 015, 013, 016, 017, 014, 012", "018, 014, 006, 017, 015, 021, 009", "020, 012, 011, 015, 011, 011, 020", "014, 015, 011, 012, 018, 016, 014", "012, 016, 011, 016, 016, 012, 017", "013, 014, 012, 017, 011, 017, 016", "010, 012, 017, 015, 022, 011, 013", "017, 013, 013, 012, 011, 017, 017", "015, 010, 013, 010, 017, 015, 020", "012, 017, 016, 012, 016, 013, 014" };
    int miners = 82;
    assertArrayEquals(new int[] { 2, 2, 3, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 3, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case52() {
    String[] mines = { "011, 014, 016, 012, 017, 013, 017", "015, 011, 017, 017, 016, 011, 013", "012, 016, 019, 010, 016, 016, 011", "012, 018, 019, 011, 016, 011, 013", "014, 019, 018, 013, 009, 014, 013", "018, 008, 016, 012, 019, 017, 010", "009, 010, 014, 018, 018, 019, 012", "018, 015, 008, 011, 013, 020, 015", "012, 012, 015, 018, 015, 016, 012" };
    int miners = 54;
    assertArrayEquals(new int[] { 6, 6, 6, 6, 6, 6, 6, 6, 6 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case53() {
    String[] mines = { "014, 016, 015, 012, 016, 011, 016", "018, 015, 012, 016, 012, 014, 013", "010, 012, 016, 015, 016, 016, 015", "014, 018, 013, 016, 011, 014, 014", "012, 009, 011, 018, 017, 020, 013", "016, 008, 020, 011, 017, 014, 014", "015, 016, 015, 020, 013, 013, 008", "013, 013, 011, 014, 014, 017, 018" };
    int miners = 33;
    assertArrayEquals(new int[] { 4, 4, 4, 4, 4, 4, 4, 5 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case54() {
    String[] mines = { "017, 009, 012, 019, 006, 020, 017", "014, 015, 019, 015, 004, 016, 017", "010, 009, 018, 018, 009, 013, 023", "015, 015, 017, 015, 007, 018, 013", "018, 018, 010, 011, 010, 018, 015", "016, 024, 015, 014, 013, 012, 006", "017, 013, 013, 017, 011, 022, 007", "016, 013, 014, 015, 014, 014, 014", "011, 013, 012, 013, 018, 016, 017", "011, 014, 014, 014, 013, 022, 012", "017, 015, 013, 015, 011, 015, 014", "013, 020, 015, 011, 015, 015, 011", "009, 020, 010, 010, 025, 011, 015", "016, 021, 013, 011, 014, 012, 013", "019, 011, 019, 014, 016, 012, 009", "017, 013, 013, 013, 013, 011, 020", "010, 021, 009, 016, 013, 008, 023", "019, 013, 009, 021, 014, 016, 008", "014, 017, 015, 015, 014, 015, 010", "012, 015, 011, 017, 015, 018, 012", "019, 007, 020, 016, 014, 013, 011", "013, 013, 015, 013, 019, 011, 016", "016, 013, 015, 014, 013, 017, 012", "020, 018, 013, 015, 014, 010, 010", "014, 022, 017, 007, 010, 015, 015", "012, 011, 012, 011, 028, 011, 015", "013, 013, 015, 017, 014, 011, 017", "014, 022, 011, 008, 014, 012, 019", "020, 011, 011, 016, 015, 014, 013", "012, 013, 015, 013, 014, 020, 013", "015, 012, 014, 021, 017, 013, 008", "016, 010, 018, 015, 016, 011, 014", "013, 012, 009, 010, 019, 025, 012", "015, 014, 008, 016, 017, 013, 017", "015, 028, 007, 011, 016, 013, 010", "011, 019, 012, 010, 017, 014, 017", "015, 019, 012, 013, 019, 014, 008", "013, 012, 021, 023, 010, 010, 011", "013, 013, 016, 009, 018, 018, 013", "011, 020, 014, 016, 012, 017, 010", "011, 013, 019, 015, 018, 009, 015", "013, 015, 013, 015, 014, 014, 016", "010, 022, 017, 013, 014, 009, 015", "018, 012, 013, 014, 012, 013, 018", "020, 012, 021, 013, 012, 011, 011", "014, 025, 012, 010, 016, 010, 013", "013, 012, 017, 013, 018, 015, 012" };
    int miners = 94;
    assertArrayEquals(new int[] { 2, 2, 2, 2, 2, 1, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 3, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case55() {
    String[] mines = { "015, 017, 018, 012, 008, 014, 016", "015, 014, 014, 016, 007, 014, 020", "013, 013, 010, 014, 017, 013, 020", "014, 011, 012, 014, 010, 021, 018", "020, 009, 016, 011, 011, 020, 013", "019, 007, 019, 016, 018, 011, 010", "018, 017, 014, 006, 016, 017, 012", "016, 012, 016, 015, 018, 014, 009", "008, 016, 017, 011, 018, 008, 022", "018, 012, 017, 011, 016, 012, 014", "016, 017, 012, 013, 017, 016, 009", "015, 013, 011, 010, 017, 019, 015", "015, 016, 020, 008, 012, 017, 012", "014, 014, 018, 016, 009, 017, 012", "014, 009, 017, 019, 015, 016, 010", "016, 011, 013, 014, 014, 019, 013", "021, 010, 015, 010, 012, 016, 016", "019, 015, 014, 014, 012, 015, 011", "014, 013, 010, 016, 019, 010, 018", "010, 011, 018, 013, 018, 016, 014", "010, 018, 015, 017, 014, 013, 013", "016, 010, 015, 013, 013, 013, 020", "015, 016, 014, 013, 009, 022, 011", "012, 012, 018, 014, 019, 012, 013", "014, 016, 012, 007, 023, 011, 017", "017, 013, 009, 020, 015, 009, 017", "015, 013, 014, 017, 013, 014, 014", "014, 011, 008, 015, 018, 019, 015", "018, 010, 011, 016, 015, 013, 017", "015, 014, 015, 014, 009, 014, 019", "016, 012, 016, 015, 016, 008, 017", "013, 015, 015, 014, 010, 021, 012", "020, 017, 012, 008, 016, 015, 012", "013, 019, 011, 010, 014, 016, 017", "016, 014, 007, 017, 016, 018, 012", "014, 012, 010, 024, 012, 019, 009", "014, 010, 018, 018, 017, 010, 013", "019, 014, 014, 010, 017, 012, 014", "011, 012, 012, 019, 015, 013, 018", "013, 017, 010, 015, 014, 016, 015", "010, 016, 014, 017, 015, 016, 012", "012, 016, 013, 016, 017, 010, 016", "015, 016, 014, 018, 015, 010, 012", "019, 021, 008, 017, 012, 008, 015", "016, 015, 019, 011, 013, 018, 008", "024, 011, 014, 018, 013, 012, 008", "009, 013, 020, 014, 020, 011, 013" };
    int miners = 36;
    assertArrayEquals(new int[] { 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case56() {
    String[] mines = { "015, 014, 025, 017, 013, 009, 007", "013, 013, 013, 013, 010, 020, 018", "008, 014, 010, 017, 017, 023, 011", "014, 017, 014, 009, 016, 015, 015", "021, 016, 014, 013, 011, 012, 013", "014, 017, 017, 008, 013, 019, 012", "008, 016, 011, 013, 016, 019, 017", "018, 013, 018, 010, 014, 013, 014", "011, 013, 018, 015, 011, 019, 013", "010, 016, 014, 017, 013, 015, 015", "011, 018, 021, 019, 010, 008, 013", "010, 013, 009, 014, 021, 014, 019", "018, 020, 011, 016, 013, 011, 011", "021, 011, 010, 021, 016, 009, 012", "018, 016, 015, 013, 015, 012, 011", "019, 013, 012, 015, 012, 015, 014", "011, 019, 014, 014, 014, 016, 012", "008, 018, 017, 014, 016, 015, 012", "011, 016, 012, 014, 015, 018, 014", "018, 016, 017, 014, 008, 017, 010", "019, 017, 007, 013, 013, 016, 015", "017, 021, 009, 010, 016, 015, 012", "014, 011, 016, 015, 014, 009, 021", "012, 019, 010, 014, 013, 018, 014", "012, 013, 013, 014, 014, 011, 023", "015, 015, 009, 016, 019, 011, 015", "016, 012, 013, 016, 016, 013, 014", "010, 019, 013, 017, 015, 014, 012", "017, 009, 014, 020, 009, 016, 015", "016, 013, 009, 013, 015, 015, 019", "019, 009, 013, 019, 015, 013, 012", "010, 012, 016, 018, 019, 014, 011" };
    int miners = 18;
    assertArrayEquals(new int[] { 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case57() {
    String[] mines = { "008, 018, 019, 014, 016, 013, 012", "012, 016, 017, 011, 016, 014, 014", "011, 013, 012, 016, 014, 016, 018", "017, 013, 012, 017, 015, 007, 019", "018, 009, 014, 011, 018, 015, 015", "019, 005, 006, 016, 023, 015, 016", "012, 012, 015, 016, 019, 015, 011", "012, 009, 013, 012, 021, 012, 021", "014, 013, 014, 013, 016, 016, 014", "016, 013, 015, 012, 016, 017, 011", "012, 016, 014, 016, 010, 023, 009", "020, 010, 017, 019, 014, 009, 011", "017, 018, 014, 011, 013, 016, 011", "012, 019, 016, 012, 017, 012, 012", "017, 007, 015, 013, 012, 022, 014", "016, 011, 012, 015, 015, 020, 011", "015, 015, 007, 018, 016, 020, 009", "011, 012, 013, 015, 015, 015, 019", "011, 019, 016, 012, 013, 016, 013" };
    int miners = 27;
    assertArrayEquals(new int[] { 1, 1, 2, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case58() {
    String[] mines = { "019, 013, 021, 015, 007, 014, 011", "009, 019, 016, 015, 017, 012, 012", "019, 015, 014, 009, 014, 017, 012", "015, 014, 009, 011, 016, 017, 018", "018, 011, 017, 012, 016, 011, 015", "012, 009, 010, 017, 019, 016, 017", "019, 011, 010, 009, 015, 018, 018", "013, 007, 013, 013, 019, 017, 018", "010, 010, 014, 014, 017, 019, 016", "016, 017, 008, 018, 013, 009, 019", "017, 019, 007, 014, 014, 014, 015", "010, 018, 010, 013, 010, 016, 023", "019, 017, 014, 010, 016, 014, 010", "007, 021, 007, 019, 017, 014, 015", "010, 017, 018, 010, 018, 015, 012", "011, 009, 016, 014, 019, 013, 018", "012, 021, 012, 014, 016, 015, 010", "011, 016, 020, 017, 010, 013, 013", "011, 011, 016, 013, 019, 019, 011", "015, 009, 016, 016, 014, 019, 011", "014, 016, 016, 014, 014, 016, 010", "007, 014, 015, 021, 015, 016, 012", "019, 014, 012, 012, 016, 012, 015", "017, 008, 010, 012, 014, 013, 026", "014, 014, 011, 015, 014, 014, 018", "017, 012, 019, 013, 016, 012, 011", "016, 008, 012, 014, 010, 020, 020", "013, 016, 020, 014, 012, 013, 012", "008, 020, 012, 019, 020, 010, 011", "014, 008, 012, 015, 022, 017, 012", "013, 012, 014, 019, 014, 014, 014", "013, 011, 019, 016, 007, 017, 017", "014, 028, 011, 013, 011, 010, 013", "011, 012, 016, 013, 016, 013, 019", "014, 011, 015, 017, 014, 015, 014", "017, 015, 010, 016, 013, 012, 017" };
    int miners = 2;
    assertArrayEquals(new int[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case59() {
    String[] mines = { "013, 012, 013, 014, 007, 020, 021", "016, 016, 012, 017, 014, 016, 009", "013, 013, 014, 017, 016, 010, 017", "014, 012, 016, 013, 017, 014, 014", "015, 012, 012, 014, 020, 009, 018", "011, 013, 011, 015, 019, 015, 016", "015, 014, 016, 015, 014, 013, 013", "016, 010, 014, 021, 012, 014, 013", "016, 013, 018, 014, 008, 018, 013", "007, 016, 018, 010, 011, 019, 019", "012, 013, 015, 013, 013, 021, 013", "013, 009, 015, 011, 018, 018, 016", "014, 011, 016, 012, 017, 017, 013", "010, 012, 018, 008, 017, 022, 013", "012, 016, 012, 017, 013, 011, 019", "012, 023, 016, 012, 009, 017, 011", "015, 015, 015, 013, 018, 011, 013", "010, 009, 020, 014, 021, 013, 013", "015, 014, 012, 014, 014, 012, 019", "009, 021, 018, 013, 019, 008, 012", "018, 015, 009, 015, 013, 011, 019", "018, 016, 014, 013, 015, 010, 014", "015, 011, 016, 015, 009, 016, 018", "013, 023, 012, 019, 011, 011, 011", "016, 016, 017, 015, 010, 017, 009", "013, 009, 009, 013, 015, 023, 018", "011, 017, 009, 015, 017, 016, 015", "011, 016, 012, 013, 014, 016, 018", "010, 015, 015, 014, 017, 012, 017", "021, 018, 010, 013, 013, 013, 012", "016, 014, 016, 011, 010, 014, 019", "015, 020, 012, 015, 007, 020, 011", "017, 015, 011, 014, 014, 011, 018", "013, 022, 010, 009, 014, 018, 014", "014, 009, 021, 017, 012, 018, 009", "013, 018, 012, 014, 012, 023, 008", "015, 020, 014, 015, 013, 011, 012", "009, 017, 017, 009, 011, 015, 022" };
    int miners = 186;
    assertArrayEquals(new int[] { 5, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 5, 5, 5, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case60() {
    String[] mines = { "017, 014, 019, 015, 008, 018, 009", "008, 023, 014, 016, 011, 018, 010", "010, 013, 013, 015, 012, 015, 022", "011, 011, 019, 013, 014, 013, 019", "014, 015, 013, 009, 011, 016, 022", "007, 012, 016, 010, 020, 015, 020" };
    int miners = 9;
    assertArrayEquals(new int[] { 1, 1, 2, 2, 1, 2 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case61() {
    String[] mines = { "016, 017, 012, 017, 015, 013, 010", "013, 017, 016, 012, 014, 012, 016", "014, 013, 009, 015, 013, 018, 018", "015, 013, 013, 013, 014, 019, 013", "013, 006, 017, 015, 023, 016, 010", "010, 019, 012, 016, 014, 017, 012", "018, 013, 011, 017, 015, 012, 014", "009, 011, 016, 021, 013, 020, 010", "015, 008, 017, 012, 011, 019, 018", "011, 015, 013, 014, 014, 014, 019" };
    int miners = 46;
    assertArrayEquals(new int[] { 4, 5, 5, 5, 4, 4, 5, 4, 5, 5 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case62() {
    String[] mines = { "017, 012, 019, 012, 011, 020, 009", "013, 012, 012, 021, 021, 013, 008", "020, 015, 012, 016, 010, 010, 017", "007, 016, 015, 019, 016, 012, 015", "015, 018, 009, 013, 018, 013, 014", "014, 018, 011, 016, 019, 012, 010", "011, 016, 011, 011, 021, 014, 016", "012, 012, 011, 014, 014, 022, 015", "010, 016, 014, 019, 011, 013, 017", "010, 015, 018, 012, 016, 015, 014", "014, 019, 018, 008, 015, 012, 014", "017, 009, 015, 015, 011, 018, 015", "014, 011, 021, 008, 011, 022, 013", "012, 010, 015, 022, 008, 016, 017", "013, 013, 012, 016, 017, 014, 015", "015, 019, 013, 009, 015, 018, 011", "022, 014, 013, 016, 009, 010, 016", "015, 013, 013, 017, 014, 013, 015" };
    int miners = 38;
    assertArrayEquals(new int[] { 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case63() {
    String[] mines = { "016, 019, 015, 016, 010, 011, 013", "011, 014, 012, 014, 015, 017, 017", "012, 012, 011, 015, 020, 014, 016", "015, 015, 020, 013, 013, 012, 012", "011, 005, 014, 020, 016, 016, 018", "019, 015, 008, 011, 013, 016, 018", "015, 016, 015, 009, 010, 016, 019", "016, 012, 016, 009, 014, 022, 011", "015, 021, 020, 010, 012, 014, 008", "015, 016, 013, 018, 012, 008, 018", "014, 017, 015, 012, 020, 012, 010" };
    int miners = 45;
    assertArrayEquals(new int[] { 4, 4, 4, 4, 4, 4, 5, 4, 4, 4, 4 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case64() {
    String[] mines = { "013, 016, 011, 018, 014, 017, 011", "014, 008, 013, 014, 019, 018, 014", "016, 018, 014, 013, 015, 010, 014", "014, 015, 016, 011, 013, 013, 018", "016, 013, 010, 011, 013, 011, 026", "015, 018, 009, 018, 012, 017, 011", "014, 013, 014, 013, 014, 019, 013", "017, 024, 013, 013, 013, 008, 012", "017, 006, 014, 015, 022, 011, 015", "005, 017, 016, 016, 012, 013, 021", "009, 020, 009, 020, 014, 017, 011", "013, 014, 014, 022, 015, 012, 010", "025, 008, 012, 007, 020, 012, 016", "012, 018, 014, 012, 013, 016, 015", "017, 009, 016, 015, 016, 015, 012", "013, 016, 017, 016, 017, 011, 010", "016, 014, 011, 018, 012, 013, 016", "015, 012, 014, 013, 015, 007, 024", "024, 017, 008, 013, 013, 008, 017", "014, 011, 015, 015, 013, 020, 012", "013, 014, 016, 012, 019, 011, 015" };
    int miners = 89;
    assertArrayEquals(new int[] { 4, 4, 4, 5, 5, 4, 4, 4, 4, 5, 4, 4, 4, 5, 4, 4, 4, 5, 4, 4, 4 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case65() {
    String[] mines = { "009, 019, 017, 017, 015, 006, 017", "020, 018, 009, 013, 005, 014, 021", "012, 014, 016, 018, 012, 010, 018", "013, 010, 011, 016, 014, 024, 012", "020, 009, 015, 014, 014, 015, 013", "015, 014, 013, 018, 017, 015, 008", "016, 017, 014, 014, 012, 012, 015", "009, 013, 018, 016, 013, 020, 011", "017, 015, 016, 015, 012, 014, 011", "013, 013, 014, 017, 011, 017, 015", "019, 016, 011, 015, 012, 013, 014", "013, 010, 016, 012, 020, 013, 016", "008, 016, 013, 009, 016, 018, 020", "010, 017, 014, 016, 014, 012, 017", "016, 012, 016, 014, 017, 015, 010", "013, 015, 013, 014, 013, 014, 018", "009, 018, 016, 014, 021, 009, 013", "020, 006, 010, 018, 016, 016, 014", "015, 009, 015, 019, 015, 015, 012", "011, 018, 018, 011, 011, 020, 011", "019, 013, 016, 011, 014, 010, 017", "016, 009, 014, 011, 013, 018, 019", "017, 015, 015, 018, 011, 015, 009", "016, 010, 015, 018, 016, 011, 014", "009, 013, 011, 011, 016, 016, 024", "008, 018, 020, 017, 010, 010, 017", "015, 012, 010, 013, 016, 020, 014", "013, 014, 008, 014, 025, 014, 012", "016, 014, 010, 013, 019, 016, 012", "011, 019, 008, 015, 018, 014, 015", "016, 013, 022, 010, 018, 007, 014", "014, 015, 017, 017, 011, 014, 012", "011, 010, 018, 013, 013, 019, 016", "008, 014, 016, 019, 015, 020, 008", "019, 009, 016, 019, 011, 009, 017", "022, 010, 014, 011, 014, 013, 016", "010, 013, 014, 010, 015, 021, 017" };
    int miners = 75;
    assertArrayEquals(new int[] { 2, 1, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case66() {
    String[] mines = { "016, 010, 016, 015, 020, 014, 009" };
    int miners = 5;
    assertArrayEquals(new int[] { 5 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case67() {
    String[] mines = { "014, 014, 015, 010, 020, 013, 014", "009, 015, 013, 014, 016, 018, 015", "014, 016, 015, 011, 019, 016, 009", "021, 017, 013, 009, 018, 011, 011", "015, 012, 013, 018, 014, 012, 016", "012, 013, 020, 013, 018, 010, 014", "017, 019, 016, 008, 012, 013, 015", "012, 009, 013, 015, 010, 017, 024", "015, 011, 016, 023, 013, 009, 013", "013, 012, 014, 015, 019, 013, 014", "011, 016, 014, 016, 014, 019, 010", "012, 012, 017, 016, 013, 012, 018", "008, 013, 019, 022, 014, 014, 010", "012, 014, 014, 017, 011, 016, 016", "010, 014, 016, 017, 010, 016, 017", "013, 014, 015, 011, 014, 015, 018", "018, 013, 014, 016, 015, 015, 009", "017, 012, 013, 012, 016, 013, 017", "018, 009, 019, 014, 015, 014, 011", "008, 015, 017, 015, 013, 018, 014", "014, 016, 020, 011, 013, 012, 014", "010, 010, 015, 013, 021, 014, 017", "015, 017, 011, 007, 009, 021, 020", "024, 016, 017, 012, 007, 015, 009", "015, 015, 022, 010, 011, 014, 013", "018, 012, 019, 010, 015, 011, 015", "015, 008, 019, 018, 015, 013, 012", "013, 021, 014, 014, 011, 013, 014", "020, 012, 011, 017, 015, 013, 012", "014, 017, 009, 015, 016, 018, 011", "014, 013, 018, 012, 013, 017, 013", "018, 022, 015, 009, 015, 013, 008", "013, 017, 012, 016, 016, 016, 010", "018, 018, 015, 009, 012, 014, 014", "014, 016, 016, 014, 012, 015, 013", "012, 016, 009, 019, 018, 015, 011", "013, 020, 013, 010, 015, 014, 015", "014, 016, 015, 009, 014, 019, 013", "015, 014, 015, 011, 017, 008, 020", "014, 013, 012, 015, 019, 013, 014", "014, 015, 015, 016, 016, 007, 017", "015, 012, 013, 013, 014, 011, 022", "013, 013, 014, 013, 016, 011, 020", "009, 018, 014, 020, 008, 014, 017", "012, 016, 018, 015, 015, 011, 013", "008, 014, 010, 019, 021, 017, 011", "018, 012, 012, 013, 014, 015, 016", "008, 014, 020, 012, 014, 015, 017", "012, 012, 014, 011, 020, 020, 011" };
    int miners = 128;
    assertArrayEquals(new int[] { 3, 3, 3, 2, 3, 2, 2, 3, 2, 3, 3, 3, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 3, 2, 2, 2, 3, 2, 2, 3, 2, 2, 3, 2, 2, 3, 2, 3, 3, 3, 2, 3, 3, 3, 2, 3, 3, 3, 3 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case68() {
    String[] mines = { "018, 012, 018, 012, 010, 015, 015", "010, 013, 020, 014, 016, 010, 017", "016, 011, 017, 012, 020, 010, 014", "013, 016, 018, 013, 013, 016, 011", "013, 009, 019, 008, 013, 019, 019", "011, 019, 016, 010, 012, 017, 015", "016, 014, 018, 013, 010, 012, 017", "013, 015, 014, 016, 017, 015, 010", "012, 016, 013, 013, 014, 016, 016", "009, 010, 016, 012, 014, 024, 015", "015, 017, 014, 018, 015, 008, 013", "013, 011, 013, 023, 008, 016, 016", "023, 011, 013, 015, 017, 011, 010", "013, 013, 015, 015, 016, 015, 013", "014, 011, 011, 011, 018, 020, 015", "010, 012, 016, 013, 018, 015, 016", "015, 006, 009, 012, 024, 016, 018", "013, 015, 014, 015, 015, 008, 020", "014, 014, 010, 017, 017, 017, 011", "017, 018, 014, 013, 010, 018, 010", "015, 015, 014, 016, 017, 016, 007", "012, 014, 014, 019, 015, 014, 012", "022, 015, 014, 011, 018, 008, 012", "015, 014, 012, 017, 013, 016, 013", "012, 009, 021, 015, 011, 011, 021", "014, 012, 014, 017, 020, 014, 009", "014, 013, 013, 020, 015, 015, 010", "009, 018, 014, 014, 013, 019, 013", "009, 011, 017, 011, 019, 018, 015", "019, 014, 014, 012, 012, 013, 016", "016, 011, 010, 015, 018, 010, 020", "018, 012, 016, 009, 013, 017, 015", "015, 017, 011, 018, 016, 010, 013", "015, 015, 012, 015, 008, 019, 016", "010, 016, 018, 007, 014, 018, 017", "012, 016, 019, 012, 013, 016, 012", "012, 016, 011, 019, 014, 014, 014", "016, 014, 018, 008, 013, 020, 011", "015, 016, 015, 012, 013, 015, 014", "013, 017, 020, 016, 012, 010, 012", "011, 013, 010, 020, 014, 020, 012", "015, 019, 016, 011, 015, 015, 009", "016, 017, 013, 009, 018, 012, 015", "012, 008, 016, 027, 012, 009, 016", "016, 014, 011, 016, 009, 022, 012", "013, 015, 011, 018, 014, 012, 017", "017, 016, 021, 013, 014, 009, 010", "025, 012, 013, 012, 013, 014, 011", "010, 017, 013, 023, 017, 009, 011" };
    int miners = 187;
    assertArrayEquals(new int[] { 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 3, 4, 4, 3, 3, 3 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case69() {
    String[] mines = { "100, 000, 000, 000, 000, 000, 000", "100, 000, 000, 000, 000, 000, 000" };
    int miners = 6;
    assertArrayEquals(new int[] { 6, 0 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case70() {
    String[] mines = { "050, 050, 000, 000, 000, 000, 000", "000, 050, 050, 000, 000, 000, 000", "000, 000, 050, 050, 000, 000, 000", "000, 000, 000, 050, 050, 000, 000", "000, 000, 000, 000, 050, 050, 000" };
    int miners = 17;
    assertArrayEquals(new int[] { 3, 2, 3, 4, 5 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case71() {
    String[] mines = { "000, 000, 000, 000, 000, 000, 100", "000, 000, 000, 000, 000, 100, 000" };
    int miners = 6;
    assertArrayEquals(new int[] { 5, 1 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case72() {
    String[] mines = {};
    int miners = 290;
    assertArrayEquals(new int[] { 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5 }, goldmine.getAllocation(mines, miners));
  }

  //@Test
  public void case73() {
    String[] mines = { "075, 025, 000, 000, 000, 000, 000", "000, 020, 080, 000, 000, 000, 000", "000, 000, 000, 000, 000, 050, 050", "100, 000, 000, 000, 000, 000, 000", "000, 075, 025, 000, 000, 000, 000", "000, 000, 000, 000, 090, 010, 000", "050, 050, 000, 000, 000, 000, 000", "000, 000, 075, 025, 000, 000, 000", "080, 020, 000, 000, 000, 000, 000", "000, 000, 000, 000, 000, 090, 010", "000, 000, 000, 000, 080, 020, 000", "000, 000, 000, 080, 020, 000, 000", "025, 075, 000, 000, 000, 000, 000", "000, 000, 100, 000, 000, 000, 000", "000, 000, 000, 000, 100, 000, 000", "000, 000, 000, 000, 075, 025, 000", "000, 000, 000, 090, 010, 000, 000", "000, 090, 010, 000, 000, 000, 000", "000, 000, 000, 000, 010, 090, 000", "000, 000, 000, 100, 000, 000, 000", "010, 090, 000, 000, 000, 000, 000", "000, 000, 000, 000, 000, 020, 080", "000, 000, 000, 000, 000, 100, 000", "000, 000, 000, 025, 075, 000, 000", "000, 080, 020, 000, 000, 000, 000", "000, 000, 010, 090, 000, 000, 000", "020, 080, 000, 000, 000, 000, 000", "000, 000, 000, 075, 025, 000, 000", "000, 000, 000, 000, 000, 075, 025", "000, 000, 050, 050, 000, 000, 000", "090, 010, 000, 000, 000, 000, 000", "000, 000, 000, 010, 090, 000, 000", "000, 050, 050, 000, 000, 000, 000", "000, 025, 075, 000, 000, 000, 000", "000, 000, 090, 010, 000, 000, 000", "000, 000, 000, 000, 025, 075, 000", "000, 000, 000, 000, 020, 080, 000", "000, 000, 000, 000, 000, 000, 100", "000, 000, 020, 080, 000, 000, 000", "000, 100, 000, 000, 000, 000, 000", "000, 000, 000, 000, 000, 025, 075", "000, 000, 025, 075, 000, 000, 000", "000, 000, 000, 050, 050, 000, 000", "000, 000, 000, 000, 050, 050, 000", "000, 000, 000, 020, 080, 000, 000", "000, 000, 000, 100, 000, 000, 000", "000, 000, 000, 000, 000, 010, 090", "000, 010, 090, 000, 000, 000, 000", "000, 000, 080, 020, 000, 000, 000", "000, 000, 000, 000, 000, 080, 020" };
    int miners = 150;
    assertArrayEquals(new int[] { 1, 2, 5, 0, 1, 4, 1, 2, 0, 5, 4, 3, 1, 2, 4, 4, 3, 1, 5, 3, 1, 5, 5, 4, 1, 3, 1, 3, 5, 3, 0, 4, 2, 2, 2, 5, 5, 6, 3, 1, 5, 3, 4, 4, 4, 3, 6, 2, 2, 5 }, goldmine.getAllocation(mines, miners));
  }

}
