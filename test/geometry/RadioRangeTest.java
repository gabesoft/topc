package topc.test.geometry;

import junit.framework.*;
import org.junit.Test;
import static org.junit.Assert.*;
import topc.geometry.*;

public class RadioRangeTest {
    double DELTA = 1.0e-09;
    RadioRange radiorange = new RadioRange();

    @Test
    public void case1() {
        int[] X = { 0 };
        int[] Y = { 0 };
        int[] R = { 5 };
        int Z = 10;
        assertEquals(0.5, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.5);
    }

    @Test
    public void case2() {
        int[] X = { -28 };
        int[] Y = { -49 };
        int[] R = { 7 };
        int Z = 965;
        assertEquals(0.9854922279792746, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.9854922279792746);
    }

    @Test
    public void case3() {
        int[] X = { -187730043, 932334096, 59236807, -602044448, 441157147, 569003535, 563472630, 493784941, -928345136, -198534684, -507361726, -486699261, -705601684, -671249417, -79879427, 71698248, 146683444, 414416326, 53196305, -666818573, 178619454, -893182413, 224302710, 296990194, -885921154, -173521881, -493092068, 900325848, -353242967, -631482448, 112982750, 553248219, 264762102, -318102799, -836641673, -812311860, -73259832, 609869565, 650010687, 155243096, -107417345, 634247427, -841502473, -651719520, -958664893, 480384188, -691415372, 36346544, 706329659, 126652235, 44403422, -263265167, -349491074, 120258505, 485027199, -240466308, -456782932, 192953958, -261803363, -198063552, 980391799, 997148607, 417112854, -333017353, -945493557, 371446553, 251150037, -960076588, -360362805, -305175580, 208353048, -437834549, -420355623, -668454094, 180494692, 755143595, 249998094, 537726369, 343336414, 495586169, 35446018, 131243302, 501744441, 739753520, -876687692, 560013605, -443087342, 455209428, 333669368, 398118304, -695213876, 527566904, -463103162, -317355625, 641069703, -947785900, -532490870, -963111776, -727898154, 748858912 };
        int[] Y = { 452827103, 247175647, 11753377, -611873763, -531081305, 859586805, -868286674, -876539858, 304963335, 990345765, -859353631, -475065113, -574709927, 131112520, -846074893, 464742988, -41360301, 899849149, -266820064, -251052777, 226747686, 876712903, -350309643, 131456902, -799664596, 453822371, -617483392, 755895436, -72097080, 199834107, -619495741, -922106677, 229012084, 419002428, 38711443, 293733516, 633211140, -65526196, -776215532, -491310115, -23818472, 792447417, 726536324, -686011537, -140383515, -569321731, -402939093, -125768005, -18416939, 127783325, -67341991, -322587512, -296995968, -536590267, 437613161, -206640690, -825549222, 102733497, -399947312, 55751657, 527107031, -152726436, -821534503, 267030010, -528297582, -897079824, -521362885, 1225411, 460297398, 596603062, -270748768, 211858545, -654848212, -353416243, 955853430, -447642704, 739273996, -118039293, 583896289, -253276293, 632398992, 560349797, 222539806, 677153439, -804423594, -285780470, 782032960, 23986706, -812231058, 344193048, 491603558, 956077657, -97237599, -644202406, -311702606, 645844112, 47834815, -802896183, 472801824, 658244534 };
        int[] R = { 4, 7, 4, 4, 5, 1, 8, 4, 5, 7, 8, 3, 5, 5, 9, 5, 8, 5, 6, 7, 7, 8, 10, 6, 10, 6, 3, 4, 5, 1, 5, 8, 9, 8, 2, 3, 1, 9, 8, 5, 8, 6, 9, 2, 2, 9, 9, 2, 6, 4, 8, 2, 4, 9, 7, 5, 5, 2, 1, 9, 2, 5, 6, 10, 4, 9, 4, 4, 10, 1, 10, 9, 8, 10, 2, 2, 9, 10, 3, 4, 6, 10, 5, 1, 9, 3, 5, 5, 4, 5, 5, 5, 1, 10, 6, 7, 1, 1, 10, 2 };
        int Z = 1000000000;
        assertEquals(0.999999094, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.999999094);
    }

    @Test
    public void case4() {
        int[] X = { 39, -8, 30, -78 };
        int[] Y = { -22, -85, 70, 27 };
        int[] R = { 5, 4, 10, 8 };
        int Z = 118;
        assertEquals(0.7086172212326564, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.7086172212326564);
    }

    @Test
    public void case5() {
        int[] X = { -30, -56, 11, 13, -16 };
        int[] Y = { 84, 44, 61, -72, -45 };
        int[] R = { 2, 10, 4, 5, 10 };
        int Z = 423;
        assertEquals(0.8883354458869681, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.8883354458869681);
    }

    @Test
    public void case6() {
        int[] X = { -48, -36, -36, -79, -15, -67, -53, 62, 16 };
        int[] Y = { 56, -42, -50, -10, 23, 71, 22, -89, 17 };
        int[] R = { 7, 9, 10, 2, 3, 4, 4, 9, 1 };
        int Z = 752;
        assertEquals(0.9106941552074388, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.9106941552074388);
    }

    @Test
    public void case7() {
        int[] X = { 1, -90, -91, -37, 75, 65, -99 };
        int[] Y = { 42, -41, -87, -33, -52, -12, 98 };
        int[] R = { 1, 1, 2, 2, 1, 10, 9 };
        int Z = 684;
        assertEquals(0.9239766081871345, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.9239766081871345);
    }

    @Test
    public void case8() {
        int[] X = { -83, 61, -100, 31, -31, 6, -34, -41, -20, 38 };
        int[] Y = { 37, 68, -80, 17, -89, -84, 93, -100, -82, -25 };
        int[] R = { 3, 6, 2, 7, 5, 3, 8, 7, 8, 5 };
        int Z = 792;
        assertEquals(0.9181744870376192, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.9181744870376192);
    }

    @Test
    public void case9() {
        int[] X = { -98, -39, -79, 98, -68 };
        int[] Y = { 43, 42, -56, -65, 68 };
        int[] R = { 5, 7, 10, 2, 3 };
        int Z = 708;
        assertEquals(0.9390059620106431, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.9390059620106431);
    }

    @Test
    public void case10() {
        int[] X = { 80, -26, -30, -49, 64, 22, -82 };
        int[] Y = { 96, -3, -46, -82, 82, -48, -6 };
        int[] R = { 5, 3, 7, 2, 5, 9, 9 };
        int Z = 692;
        assertEquals(0.9044557720502782, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.9044557720502782);
    }

    @Test
    public void case11() {
        int[] X = { -53, -36 };
        int[] Y = { -52, 79 };
        int[] R = { 6, 9 };
        int Z = 171;
        assertEquals(0.8387934617639397, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.8387934617639397);
    }

    @Test
    public void case12() {
        int[] X = { -54, -73, 89, 43, -39 };
        int[] Y = { -42, -68, -73, 0, 38 };
        int[] R = { 7, 4, 6, 5, 9 };
        int Z = 1053;
        assertEquals(0.9454790830902675, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.9454790830902675);
    }

    @Test
    public void case13() {
        int[] X = { 0 };
        int[] Y = { 0 };
        int[] R = { 10 };
        int Z = 10;
        assertEquals(0.0, radiorange.RadiusProbability(X, Y, R, Z), DELTA);
    }

    @Test
    public void case14() {
        int[] X = { -86, 88, -35, -91, -92, 71, -80 };
        int[] Y = { 51, -30, 100, 57, 86, -41, 9 };
        int[] R = { 5, 2, 4, 3, 7, 4, 4 };
        int Z = 175;
        assertEquals(0.7549943747982781, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.7549943747982781);
    }

    @Test
    public void case15() {
        int[] X = { 543, -69, 841, 38, 575, -337, 389, 350 };
        int[] Y = { 802, -412, 317, 615, -506, -28, -311, -563 };
        int[] R = { 37, 76, 38, 96, 59, 91, 28, 77 };
        int Z = 10874;
        assertEquals(0.9335527047944012, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.9335527047944012);
    }

    @Test
    public void case16() {
        int[] X = { -786, -257, 98, 747, 821, -628, 190, -1, 798, 920, -148, 197, -805, 45, -668, -614 };
        int[] Y = { 636, -851, -407, -684, -635, -824, -8, 250, 385, -486, -685, -64, 586, 632, -600, -87 };
        int[] R = { 82, 68, 98, 87, 33, 49, 100, 93, 70, 34, 78, 67, 17, 23, 76, 90 };
        int Z = 4500;
        assertEquals(0.7868959596749187, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.7868959596749187);
    }

    @Test
    public void case17() {
        int[] X = { 625, -701, 735, -140, 933, 684, 196, -213, 197, -27, 647, -389, 111, 714, 441, -212, 444, -617, -722 };
        int[] Y = { 128, 178, -997, 676, -848, -620, -212, -481, 467, 255, 83, -862, -452, 589, 865, -206, 654, 495, 138 };
        int[] R = { 2, 11, 8, 99, 32, 40, 98, 81, 66, 78, 69, 19, 10, 7, 87, 100, 60, 87, 25 };
        int Z = 8713;
        assertEquals(0.8974981280813711, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.8974981280813711);
    }

    @Test
    public void case18() {
        int[] X = { 710, -977, 312, -621, 200, -160, 557, -988, -959, 335, 642, -35, 603, -697 };
        int[] Y = { -46, -38, -682, -548, 356, 750, -151, 5, -580, 802, 852, -772, -441, -508 };
        int[] R = { 62, 6, 38, 85, 95, 92, 100, 37, 79, 54, 19, 36, 76, 34 };
        int Z = 8799;
        assertEquals(0.9043276520885769, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.9043276520885769);
    }

    @Test
    public void case19() {
        int[] X = { 126, -269, 794, -517, -472 };
        int[] Y = { -522, -843, 761, -342, 762 };
        int[] R = { 44, 59, 96, 15, 69 };
        int Z = 5630;
        assertEquals(0.9201664422629772, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.9201664422629772);
    }

    @Test
    public void case20() {
        int[] X = { -196, 450, 79, -220, -916, 991, -451, 462, -58, -353, -500, 783, 816, 511 };
        int[] Y = { 188, 681, -234, -330, -14, 991, -969, 347, -458, -940, 454, -28, 767, -620 };
        int[] R = { 64, 31, 60, 49, 65, 100, 1, 98, 33, 66, 52, 45, 69, 2 };
        int Z = 1484;
        assertEquals(0.22007657635156566, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.22007657635156566);
    }

    @Test
    public void case21() {
        int[] X = { 411, -815, 707, 843, 768, 222, -211, 435, -648, -72, 986, 529, -65, -403, 10, -261, -967, -265, 101 };
        int[] Y = { 908, -855, -800, -665, -198, 345, 358, 178, 799, 278, 675, 725, -400, 702, 365, -463, 51, 782, -763 };
        int[] R = { 27, 58, 75, 95, 46, 61, 68, 98, 98, 8, 86, 35, 39, 67, 35, 25, 50, 81, 90 };
        int Z = 1609;
        assertEquals(0.4685323257563685, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.4685323257563685);
    }

    @Test
    public void case22() {
        int[] X = { -505, 952, 540, 911, 976, -407, 494, -561, -874, 542, -865, -474, -766, -492, 303 };
        int[] Y = { -634, -974, -938, 17, 264, -933, -968, -669, -959, 170, 675, -176, 625, -977, -52 };
        int[] R = { 42, 78, 65, 23, 43, 73, 99, 33, 49, 1, 25, 57, 42, 24, 10 };
        int Z = 2725;
        assertEquals(0.7306682163436382, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.7306682163436382);
    }

    @Test
    public void case23() {
        int[] X = { -625, -928, -287, 222 };
        int[] Y = { 0, -160, 715, 802 };
        int[] R = { 40, 4, 23, 71 };
        int Z = 8488;
        assertEquals(0.9712879216343417, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.9712879216343417);
    }

    @Test
    public void case24() {
        int[] X = { 10 };
        int[] Y = { 10 };
        int[] R = { 10 };
        int Z = 10;
        assertEquals(0.4142135623730951, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.4142135623730951);
    }

    @Test
    public void case25() {
        int[] X = { 466, -76, -695, 141, -464, -287, 864, 903, 386, 907, -185, 279 };
        int[] Y = { 560, 208, -797, -352, -376, 338, -868, 508, -166, 267, -746, -924 };
        int[] R = { 24, 28, 7, 40, 51, 67, 96, 81, 31, 36, 34, 83 };
        int Z = 4915;
        assertEquals(0.8262116380214163, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.8262116380214163);
    }

    @Test
    public void case26() {
        int[] X = { 967, -886, 158, -952, -867, 427, -470, -426, 881, -699, -274, 770, -34, -549, 981 };
        int[] Y = { 973, 365, -730, -122, -390, 478, -991, -922, -652, 819, -863, 478, 75, -751, -950 };
        int[] R = { 555, 386, 398, 914, 755, 976, 157, 721, 679, 475, 604, 713, 121, 598, 600 };
        int Z = 5069;
        assertEquals(0.6122313797769419, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.6122313797769419);
    }

    @Test
    public void case27() {
        int[] X = { -625, -853, -577, -650, -678, 17 };
        int[] Y = { -230, 303, -635, 39, -586, -634 };
        int[] R = { 662, 664, 503, 11, 264, 268 };
        int Z = 10662;
        assertEquals(0.8531944874590603, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.8531944874590603);
    }

    @Test
    public void case28() {
        int[] X = { 922, -906, 67, 657, -725, -399, 412, 189, -18, -753, 365, -611, 991, 710, -951, 843 };
        int[] Y = { -245, -128, -619, 279, 819, -905, 165, 401, 321, -880, -881, 798, 661, 394, -923, -174 };
        int[] R = { 691, 410, 821, 646, 231, 811, 181, 279, 736, 921, 97, 413, 821, 192, 885, 888 };
        int Z = 7848;
        assertEquals(0.7183656968612059, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.7183656968612059);
    }

    @Test
    public void case29() {
        int[] X = { 577, 320, -356, -961, -5, -687, 111, 159, -523, -717, -16, 576, 388 };
        int[] Y = { 267, 851, -226, -40, -476, -513, -51, -846, -254, -858, -460, 808, 258 };
        int[] R = { 955, 429, 70, 564, 63, 130, 686, 779, 935, 24, 106, 969, 905 };
        int Z = 5217;
        assertEquals(0.6240578339832076, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.6240578339832076);
    }

    @Test
    public void case30() {
        int[] X = { 662, 456, -49, -565, 144, -209, 189, 509, -757, -488 };
        int[] Y = { 209, 927, -615, -949, -738, -810, 527, -930, 57, 869 };
        int[] R = { 731, 732, 918, 374, 694, 59, 10, 93, 175, 419 };
        int Z = 5579;
        assertEquals(0.683619791134932, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.683619791134932);
    }

    @Test
    public void case31() {
        int[] X = { -632, 2, 963, 814, -457, 359, 751, -411, 345, 929, 673, -193, -745, 692, 159, 722, -360, -470, -952 };
        int[] Y = { 18, -866, -290, -342, -940, 704, 216, 745, -906, -821, -222, -348, 150, -48, -720, -904, 97, -806, 455 };
        int[] R = { 65, 81, 74, 49, 75, 53, 21, 74, 27, 33, 53, 34, 44, 73, 77, 75, 49, 72, 83 };
        int Z = 8616;
        assertEquals(0.9055673570817372, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.9055673570817372);
    }

    @Test
    public void case32() {
        int[] X = { 870, 503, -478, -434, -724, -472, 455, -243, 273, -501, 981, -406, -743, -330, -811, -661, -26, 47, -430, 636, 917, 398, -204, 901, -557, 513, -355, 168, -432, 510, 753, -614, 23, -353, 213, -297, 787, -881 };
        int[] Y = { -25, 849, 564, -500, 970, 16, -547, 335, -387, -458, 680, -244, -800, 402, 926, 266, -445, -913, -856, -927, 772, 918, -850, 999, 581, -26, 958, 844, -501, 723, -218, 757, -484, 671, 773, -855, 611, 552 };
        int[] R = { 18, 69, 37, 80, 62, 33, 82, 97, 69, 57, 17, 9, 70, 73, 37, 62, 46, 8, 98, 5, 69, 92, 78, 95, 92, 11, 72, 24, 10, 59, 45, 27, 80, 33, 59, 93, 17, 92 };
        int Z = 10403;
        assertEquals(0.8920084412382384, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.8920084412382384);
    }

    @Test
    public void case33() {
        int[] X = { -400, -704, -503, -230, 205, -382, -874, 483, 176, 310, -694, -640, 864, -790, 962, -576, 979, 391, 792, -485, -333, -518, 254, 794, -943, -113, -413, 817, -441, 886, -146, -453, 430, -296, 155, -599, -647, 74, -808, -21, -42, 76, -268, -421, -499, -491 };
        int[] Y = { 457, -459, 478, -799, 536, 812, -203, -155, 444, -451, -692, -631, -420, 48, -738, 944, -172, 772, -848, 975, -347, 638, 362, -251, 349, 673, 920, 380, -736, 638, -347, 48, 364, 861, -79, 666, 310, -357, 476, -860, 691, 556, -526, 640, -54, -116 };
        int[] R = { 95, 93, 60, 64, 62, 94, 3, 45, 33, 9, 38, 87, 72, 13, 76, 88, 41, 6, 53, 74, 77, 53, 16, 37, 58, 42, 23, 96, 81, 99, 59, 28, 92, 18, 91, 53, 63, 93, 49, 95, 54, 38, 34, 25, 50, 9 };
        int Z = 6140;
        assertEquals(0.8047421749412423, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.8047421749412423);
    }

    @Test
    public void case34() {
        int[] X = { -160, 200, -258, 727, -934, -700, -807, 588, -575, -125, -317, 650, 772, -299, -829, -403, 398, 590, 593, -5, -619, -834, 19, 958, 910, 537, 595, -686, -897, 624, -336, -404, -629, -772, -382, 128, -863, -116, 74, 857, -847, -590, -270, 497, 642, 273 };
        int[] Y = { -837, 92, 51, -67, 21, -124, -849, 145, 314, -286, 396, 982, 532, -904, 288, -842, -544, 970, -178, 409, 924, 82, -463, -384, 920, 317, 926, 362, -466, 321, -132, 258, -477, -651, 956, -854, 282, 650, -543, -212, 83, -468, 208, -466, -786, 499 };
        int[] R = { 79, 2, 7, 60, 71, 51, 55, 81, 42, 88, 70, 6, 34, 59, 84, 38, 98, 98, 21, 61, 38, 94, 24, 80, 99, 28, 71, 13, 93, 39, 63, 23, 92, 21, 83, 14, 23, 89, 46, 64, 77, 15, 22, 10, 73, 57 };
        int Z = 9457;
        assertEquals(0.8759753244960187, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.8759753244960187);
    }

    @Test
    public void case35() {
        int[] X = { 11, -11, 0, 0 };
        int[] Y = { 0, 0, 11, -11 };
        int[] R = { 10, 10, 10, 10 };
        int Z = 31;
        assertEquals(0.3548387096774194, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.3548387096774194);
    }

    @Test
    public void case36() {
        int[] X = { -193, 424, 203, -128, -163, -917, -622, 334, 630, -573, -822, 980, 116, 530, -676, 921, 274, -731, -610, -253, -314, 911, 921, -808, 123, -115, -759 };
        int[] Y = { -155, -898, 132, -331, -822, 777, 463, -101, -850, -575, 350, -384, -425, -228, -833, 15, -242, 54, -175, -807, -371, -238, -350, -931, -754, -339, -381 };
        int[] R = { 98, 30, 4, 73, 87, 50, 38, 74, 68, 93, 23, 53, 33, 82, 79, 63, 55, 3, 46, 99, 96, 13, 14, 27, 15, 33, 48 };
        int Z = 5359;
        assertEquals(0.7999809015544048, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.7999809015544048);
    }

    @Test
    public void case37() {
        int[] X = { 849, -212, 684, -108, -337, 699, -825, -225, 370, -436, 852, 417, -771, -291, -328, -771, -239, 544, 409, 733, -159, -89, 872, 365, -229, 654, 850, -635, 177, -279, 742, 63, 723, -283, -259, 257, -137, -92, -41, 632, 949, -732, 45, 798, -672, 800, -818, 464, 159, 52, -453, 527, 36, -980, 767, -37, 586, -893, 515, -926, 147, 671, 277, 886, -572, 545, 627, -996, 70, 430, 276, -932, -617, -874, -204, -700, -213, 6, -195, 927, 519, 172, -923, 499, 523, -520, 467, -350, -966 };
        int[] Y = { 597, 713, 901, -356, -106, -178, 700, -884, -223, -730, -489, -30, 741, 149, -272, -4, 664, -855, 334, 161, -142, 163, -727, 714, -543, -361, -385, 730, -270, 215, 684, 100, 318, 912, 855, 782, 103, 839, 682, -470, 375, -946, 293, 885, 243, 104, -701, 965, 849, 360, 329, -391, 86, -643, -162, 372, 323, -297, -372, -179, 662, -923, -869, -761, -452, 802, -262, -594, -802, 186, 38, 882, -255, 359, 740, 312, -202, 144, -811, 860, 25, 425, -543, 15, -636, -379, 449, -106, 128 };
        int[] R = { 52, 40, 22, 32, 38, 54, 79, 98, 94, 80, 11, 91, 38, 79, 19, 66, 16, 4, 31, 49, 89, 68, 7, 34, 54, 52, 42, 19, 6, 51, 82, 9, 90, 55, 40, 80, 60, 71, 29, 54, 50, 39, 44, 87, 17, 15, 52, 32, 18, 34, 81, 58, 2, 39, 43, 7, 42, 84, 77, 99, 86, 58, 8, 28, 64, 47, 7, 24, 17, 35, 29, 66, 73, 24, 4, 41, 38, 7, 73, 56, 93, 5, 13, 46, 95, 56, 52, 36, 91 };
        int Z = 3817;
        assertEquals(0.674092653652672, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.674092653652672);
    }

    @Test
    public void case38() {
        int[] X = { 78, -614, 264, 848, 867, 248, -935, 238, -163, 691, 571, 339, 922, 184, -45, 948, -512, -815, -662, -395, -167, -101, -74, -814, -912, 868, -920, -357, -539, 698, -124, 87, -896, 794, 945, 467, 211, -594, -907, -212, 912, 681, 666, 362, -961, -478, 394, -101, 848, 538, 773, -594, 262, -268, -286, -366, 250, -409, -466, -811, 521, -891, 234, 896, -887, -564, -127, -333, -416, 247, 463, -280, -350, 319, 841, -622, 490, 968, 195, 186, 986, 121, 287, -882, -437, -95, -431, 302, -445, -978, 132, -337 };
        int[] Y = { 803, 35, 857, -459, 661, 334, 726, -32, 33, -752, 884, -937, -55, 994, -894, -189, -325, 73, 827, 94, -804, 817, -24, -762, -666, -213, -947, -257, -443, 260, -272, -723, -365, -159, -710, -59, -373, -422, 724, 145, 76, 9, 197, 405, -208, -668, -806, 457, 567, -742, -561, -479, -677, -20, -464, 862, 214, -253, 828, -743, -13, -586, -180, -369, -40, 714, -603, 915, -474, 751, 481, 168, -173, -798, 460, -107, -330, -983, 426, -638, -152, -757, 616, 415, -296, 408, -468, -162, -378, 331, -880, 1 };
        int[] R = { 44, 94, 3, 10, 28, 35, 52, 34, 26, 23, 31, 54, 52, 27, 39, 4, 7, 11, 14, 91, 44, 79, 94, 31, 26, 72, 15, 82, 4, 89, 52, 47, 82, 6, 8, 10, 41, 59, 95, 18, 82, 25, 72, 85, 52, 10, 88, 10, 72, 53, 52, 16, 31, 45, 98, 9, 68, 12, 90, 71, 1, 93, 17, 34, 99, 25, 95, 39, 83, 89, 8, 16, 66, 31, 52, 69, 40, 39, 78, 12, 92, 81, 79, 74, 25, 76, 82, 92, 87, 23, 15, 39 };
        int Z = 7281;
        assertEquals(0.8146280432114696, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.8146280432114696);
    }

    @Test
    public void case39() {
        int[] X = { -991, -58, -501, -235, 90, 117, -60, -927, 565, 47, 912, -453, -933, -707, 441, 934, -592, 934, 504, 273, -154 };
        int[] Y = { 136, 6, 785, -617, 818, -453, 42, -253, 789, -84, 505, -785, -458, -297, -263, 811, 355, 152, -768, -42, -988 };
        int[] R = { 30, 64, 22, 97, 94, 93, 29, 2, 16, 95, 14, 5, 46, 24, 52, 28, 87, 71, 61, 59, 20 };
        int Z = 5225;
        assertEquals(0.7941164197411774, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.7941164197411774);
    }

    @Test
    public void case40() {
        int[] X = { -507, -562, -235, 930, -812, -951, -6, 369, 45, -907, 437, -463, -269, -749, 606, -218, -949, -934, 286, 305, -581, 328, -143, -78, 288, -955, 833, -963, -874, -146, -589, 282, 834, 100, 769, 597, -41, 317, 1, 63, 69, 706, -507, -693, -759, 859, -894, -264 };
        int[] Y = { -46, 537, 150, -545, 439, 66, -256, 730, -219, -607, -793, -105, 518, -279, 485, -519, -979, -727, 569, -10, 823, 138, 277, 784, 994, 912, -760, 408, -361, -760, 612, 448, 23, -409, -827, -600, 566, -108, 296, -29, -353, 145, -648, 772, -932, -926, 810, -823 };
        int[] R = { 15, 70, 29, 96, 93, 58, 67, 75, 42, 74, 8, 81, 28, 53, 42, 97, 60, 40, 69, 29, 37, 81, 29, 33, 90, 3, 96, 44, 86, 71, 2, 52, 41, 30, 99, 85, 39, 65, 59, 81, 39, 18, 13, 18, 71, 55, 66, 82 };
        int Z = 3684;
        assertEquals(0.6220831765599505, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.6220831765599505);
    }

    @Test
    public void case41() {
        int[] X = { -577, 735, -691, -368, 766, -272, -807, -283, -960, 35, -353, 853, -319, -368, 364, 682, -987, -464, -38, -614, -365, -463, 157, 975, 446, 962, 306, -533, 116, -348, 568, -111, 136, 922, 788, -359, 110, -324, -257, -74, 380, 192, -540, 310, 625, -828, 69, -436, -204, -761, -272, 834, -632, 30, -528, -282, -831, 283, 889, -718, -322, 85, -864, 978, -569, 439, 548, 604, 121, -760 };
        int[] Y = { -429, -246, -897, -10, -502, 679, -963, 596, 285, -274, 1, 767, -987, -109, 695, 136, 291, -763, -601, 352, -191, -307, -485, -361, -166, -4, -38, -97, 522, -512, 766, -720, 29, -314, 636, 113, 387, -362, 13, -21, -738, -37, 177, -491, -31, 605, -341, 233, -187, -381, -903, -30, 605, -541, -495, 178, -279, 390, -40, 846, 574, 248, -465, 977, -718, 164, -542, -981, 277, 835 };
        int[] R = { 92, 74, 39, 68, 17, 26, 42, 38, 7, 36, 17, 88, 35, 17, 24, 15, 25, 64, 29, 17, 31, 40, 45, 42, 73, 19, 95, 13, 21, 30, 7, 64, 3, 97, 83, 71, 22, 24, 8, 80, 60, 24, 67, 46, 93, 42, 60, 17, 5, 88, 33, 88, 79, 30, 29, 4, 48, 24, 16, 20, 5, 74, 83, 59, 70, 65, 29, 43, 40, 88 };
        int Z = 4103;
        assertEquals(0.6583426538801727, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.6583426538801727);
    }

    @Test
    public void case42() {
        int[] X = { -462, 892, 500, 862, 551, 506, 184, -675, 656, 373, 64, 771, 156, 437, -433, -777, 283, -893, -625, 992, 528, 543, -977, -976, 638, -925, 961, -742, 1000, -614, -441, 17, -439, -887, 664, 929, 756, -284, -69, -54, -297, -99, 54, -755, -399, 866, -138, 254, 793, -21, -399, -28, -112, 577, -952, -269, 300, -886, -900, -788, 388, -520, -226, 485, 295, 856, -146, 539, 886, 821, 437, -775, 148, -471, 991, 418, -291, 596, 401, 227, -967, 81, -657, -752, -426, 69, -42, 980, -194, -619, -88, -254, 974, -587, -310, 762, -277, 770, -152, 165 };
        int[] Y = { -784, 511, -459, 707, 320, -838, 52, 478, 321, 781, 950, -598, -765, 850, 579, -876, -630, -879, 567, -741, -601, -986, -50, 749, -909, 693, -142, -774, 348, -515, -17, 980, 467, -425, -133, -612, 125, -457, 751, 928, 116, 897, -601, 165, 673, -256, 761, 27, -784, -952, -308, 341, -541, 990, -695, 330, 918, -68, 276, 538, -294, 18, -720, 973, 188, -801, 558, 310, 321, 79, 286, -516, 15, -413, -198, -930, 435, -237, 684, -37, -204, -748, 671, 550, -427, 6, 418, -918, -486, -414, -971, -558, -981, -249, 75, -916, -125, 421, -101, 477 };
        int[] R = { 21, 45, 1, 18, 43, 52, 87, 35, 5, 59, 12, 67, 44, 96, 5, 17, 32, 81, 73, 52, 67, 25, 23, 56, 54, 71, 98, 12, 94, 54, 98, 14, 98, 98, 83, 92, 49, 69, 27, 5, 79, 90, 71, 74, 86, 75, 90, 69, 8, 14, 72, 74, 91, 94, 82, 96, 16, 79, 7, 9, 85, 4, 74, 34, 53, 56, 26, 53, 76, 4, 57, 6, 93, 80, 31, 30, 54, 72, 98, 13, 86, 69, 39, 28, 14, 20, 23, 81, 98, 82, 89, 34, 85, 14, 68, 90, 21, 45, 94, 48 };
        int Z = 3664;
        assertEquals(0.6129524453198452, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.6129524453198452);
    }

    @Test
    public void case43() {
        int[] X = { 33, 10, -785, -97, 83, -856, 467, 737, 918, -933, 539, -307, -297, 60, 55, 719, -688, 567, 349, -380, 270, 298, -607, -895, 493, -640, -957, 678, 565, 885, 935, -89, -21, 785, -10, 804, -781, 708, -517, 603, -428, 732, -880, 19, 146, -755, 197, 83, 880, -589, -724, 552, -875, 892, -552, 90, 117, -435, 230, 131, -48, 838, 109, 153, -479, -259, 515, -707, 761, -470, 163, -672, 72, 657, 251, -59, 53, 925, 508, -842, 201, -880, -292, -105, 564, -745, -516, -387, -213, 272, -212, -835, -609, -118, 218, 483, -441, 825, 638, 475 };
        int[] Y = { -886, -309, 325, 370, -121, 74, -354, -289, -48, -459, 748, 65, -995, 611, -510, 214, 995, -177, 601, -239, -880, -435, -912, -576, 823, -607, 666, 759, 253, 983, -836, 229, -410, -530, 333, -112, 772, 135, 272, -715, -435, -664, 374, 141, 172, -771, 10, -527, -786, 812, -826, -331, 471, 352, 558, -527, 77, -164, 994, -459, 119, 863, 919, -240, -447, 823, 665, 941, 690, -259, 739, 311, -358, 649, 781, 898, 337, -720, 840, -340, -391, 940, -386, -263, 553, 704, 999, 488, -179, -88, -244, -241, -435, 216, -301, -251, -98, -819, -451, -941 };
        int[] R = { 79, 7, 68, 25, 83, 99, 10, 96, 30, 45, 65, 80, 60, 78, 69, 33, 42, 38, 69, 10, 9, 25, 25, 18, 98, 89, 41, 3, 16, 80, 58, 94, 86, 26, 71, 68, 24, 80, 64, 53, 76, 80, 85, 35, 58, 5, 67, 51, 94, 88, 60, 3, 12, 36, 72, 61, 76, 12, 16, 92, 92, 73, 85, 29, 98, 55, 97, 73, 86, 60, 26, 61, 91, 62, 47, 48, 66, 14, 50, 60, 53, 9, 14, 16, 97, 85, 76, 72, 48, 91, 63, 91, 16, 100, 20, 65, 6, 16, 38, 92 };
        int Z = 6754;
        assertEquals(0.7976938205662389, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.7976938205662389);
    }

    @Test
    public void case44() {
        int[] X = { 421, 351, 904, -60, 200, 768, -248, 850, -8, -550, 305, -532, -912, 870, -949, 127, 513, 828, 292, 353, -834, -14, 736, -48, 463, 952, 607, 593, 109, 910, -846, 808, 897, -845, -212, 61, 699, 508, -320, -558, -846, -931, 372, 350, 56, 229, 678, 641, -361, 142, -373, 308, 660, -576, -373, 142, -332, -360, 976, 565, 350, -624, 210, 291, -439, 834, -17, 954, 649, 36, -662, -620, -631, 768, 69, 328, -817, -137, -596, -288, 553, 227, 955, 938, 710, 4, 843, 746, 984, 770, -537, 853, 430, 761, -109, -442, 171, 922, 540, -418 };
        int[] Y = { 523, -2, 426, -218, 642, 842, 467, -913, 375, -303, 412, 526, -104, -88, 997, -584, -308, 264, -715, 833, -160, 916, 750, -905, -190, 989, 643, -876, -651, -80, -851, 546, 321, 893, 673, -82, 781, 841, 205, 344, -332, -688, -846, 411, -909, -524, 227, 918, 260, -584, 917, -145, 43, 917, 110, 333, -282, 107, 966, 3, 391, -12, -978, 856, 121, -240, -485, 805, -752, 156, -671, 685, 892, 770, 692, -801, -681, 80, -433, -275, -65, 662, 590, 459, -877, 894, -795, 499, 751, -923, 732, 905, 536, 760, 611, 904, 549, -916, -722, 170 };
        int[] R = { 20, 38, 82, 64, 97, 90, 35, 49, 65, 75, 18, 68, 66, 79, 16, 46, 71, 44, 16, 13, 86, 10, 95, 57, 91, 92, 44, 82, 19, 14, 6, 90, 3, 39, 54, 52, 81, 88, 100, 45, 62, 17, 64, 79, 95, 31, 24, 18, 74, 92, 30, 59, 1, 77, 15, 43, 20, 58, 24, 90, 24, 82, 80, 78, 72, 33, 29, 52, 72, 80, 48, 33, 97, 11, 64, 43, 41, 87, 12, 66, 30, 94, 24, 31, 70, 90, 25, 89, 48, 49, 78, 23, 82, 9, 100, 53, 41, 81, 57, 12 };
        int Z = 4407;
        assertEquals(0.6790236395783866, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.6790236395783866);
    }

    @Test
    public void case45() {
        int[] X = { -84, -485, 147, -883, 920, -363, -411, 686, -68, 995, -680, 770, -796, 371, -718, 601, 105, 611, 759, 842, -844, 529, -430, 600, -619, 375, 786, -315, 806, -44, 554, -326, 421, -292, -810, 548, 719, -287, 981, -26, 171, 277, -236, 229, 968, 256, 298, -871, -899, 589, 677, -741, 594, 615, 294, 554, -734, 494, -113, 392, -376, -292, -920, -83, 705, -215, -879, -158, 363, 737, 104, 504, 811, 188, -410, 695, 919, 840, 839, -656, -665, -615, 517, 706, 927, -918, 422, 249, -108, -537, -397, -684, -908, 844, 827, 670, 750, 726, -438, 527 };
        int[] Y = { -564, 84, -556, 599, -460, -563, -57, 863, 150, 91, 585, 159, -426, 291, -315, 918, -953, -555, -716, -552, -980, -723, -51, -693, -672, 178, -926, -592, 912, -905, -81, -796, 203, -922, -194, 785, -278, 901, 473, 530, -758, 402, 426, -724, 256, 255, -830, -751, -91, 642, 836, 839, 623, 132, -713, 932, 441, -843, -707, 896, 574, 681, 891, -436, -794, -647, 193, 122, -606, 292, 987, -479, -627, 986, 268, 677, 721, -936, -788, 283, 829, -590, 415, 217, 36, 29, 804, -141, -900, 454, 697, -390, 487, -718, -386, -236, -621, 926, -609, -437 };
        int[] R = { 84, 63, 24, 49, 15, 5, 20, 96, 42, 23, 75, 37, 58, 18, 26, 26, 78, 2, 3, 99, 58, 1, 44, 34, 68, 76, 50, 15, 13, 45, 92, 49, 59, 15, 49, 73, 19, 68, 69, 60, 42, 95, 96, 51, 12, 73, 77, 41, 75, 31, 39, 32, 31, 82, 17, 50, 9, 66, 65, 21, 63, 8, 21, 21, 23, 21, 46, 93, 40, 14, 5, 34, 8, 52, 84, 71, 25, 12, 11, 51, 43, 49, 82, 25, 82, 50, 75, 90, 15, 91, 62, 29, 98, 35, 50, 72, 55, 95, 65, 95 };
        int Z = 7538;
        assertEquals(0.8348735318415759, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.8348735318415759);
    }

    @Test
    public void case46() {
        int[] X = { 100 };
        int[] Y = { 100 };
        int[] R = { 1 };
        int Z = 10;
        assertEquals(1.0, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 1.0);
    }

    @Test
    public void case47() {
        int[] X = { 365, 699, -153, 246, -574, 684, 981, 813, 208, -772, 129, -487, -442, 905, -693, -671, 814, 4, -749, -203, -593, -321, -54, 316, -898, -964, 671, 834, 648, -818, -357, 778, -548, -517, -723, -1000, -297, 580, -143, 995, 674, 758, 97, -147, -401, -465, 834, -618, -24, 57, -545, -443, -66, -575, -299, -632, 908, 698, 51, 130, 190, 209, 218, -785, 652, 369, -589, 729, 525, -937, 944, 177, 337, -235, 410, 841, -341, 314, 567, -181, 322, -415, -52, 947, 828, 782, 831, -311, 524, -557, -292, 534, 137, 572, -328, 613, -993, -250, -552, -694 };
        int[] Y = { 460, 840, -124, 459, -76, 581, -102, -381, 344, -635, 85, -321, 656, -504, -458, -276, -362, 209, 336, -824, 373, -161, 210, 405, -876, 916, 668, 729, -497, 220, -119, 564, 682, 658, -130, -119, -887, 668, -203, -30, -183, 38, -181, -864, -690, -13, 650, 982, -39, 38, 811, -52, 819, -173, -174, -790, 148, -899, 977, -388, 226, 856, -669, -207, -857, -258, -784, -54, 721, 314, -121, 943, 313, 670, -983, 645, 839, 775, 718, 906, 607, -622, -163, -684, 283, -159, -482, 54, 322, 83, 471, 203, -610, -197, -649, -282, 646, 337, 960, 73 };
        int[] R = { 7, 82, 59, 83, 17, 67, 17, 77, 73, 62, 37, 88, 46, 89, 20, 58, 3, 89, 43, 60, 90, 35, 35, 1, 13, 27, 36, 22, 63, 91, 1, 70, 72, 11, 4, 41, 29, 72, 17, 53, 33, 5, 40, 30, 45, 11, 39, 99, 52, 82, 59, 93, 16, 45, 94, 81, 24, 29, 2, 86, 71, 54, 7, 95, 16, 62, 35, 96, 34, 3, 48, 66, 59, 39, 48, 3, 2, 86, 2, 53, 19, 60, 45, 87, 56, 90, 67, 79, 18, 20, 17, 41, 26, 23, 35, 93, 85, 69, 41, 70 };
        int Z = 4475;
        assertEquals(0.7042151787204479, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.7042151787204479);
    }

    @Test
    public void case48() {
        int[] X = { 7915, 3833, 9551, -6850, 7876, 3084, -1773, -2004, 6803, 2747, -4652, -5432, 4396, 8152, -1339, -7132, 7027, 2427, -5454, -2957, -9713, -1018, 9266, 2385, 2635, 7408, 4345, 3534, 5552, -3209, -5164, -8303, -2383, 9848, 1084, 2245, 9925, -3362, -7364, -6336, -3037, 8365, 8740, 6122, 5741, -2261, 749, -4174, -2372, 2048, -7905, 5332, -8635, 8097, 6599, 8155, -332, 8097, -9496, -5521, -4628, -8299, -502, -8510, 7573, -8489, 5930, -3305, 4672, -2721, 7991, -905, 8474, -630, 4299, 5363, 5011, -6461, 8291, 9467, 7687, -1339, 2854, -338, -8203, 8796, -6093, 7752, -1939, 3613, 4533, -7322, -5873, 6137, 9832, -1105, 5716, 2213, -9247, -7174 };
        int[] Y = { -7769, -5800, -8906, 9506, 1934, -8161, 4252, -8169, 343, -5367, 2066, 9851, 9997, 8509, -6772, 7771, -4887, 9480, 8202, 5716, -4261, 8760, 1516, 9716, -2312, -4191, 3713, -5396, -7183, 2951, -1743, 9574, 5372, 2580, 195, -4787, -4329, -4047, -1553, 8783, -2082, -1480, -7015, 9504, -1859, -9232, 5334, 2390, 1094, -6436, 4344, 6825, 5848, -5597, -7872, -3424, -8433, -5748, 2860, 1802, -9863, 9401, -1996, 6981, -7840, 5459, 5718, -1936, -5314, -2203, 2991, 3138, 1610, -7950, -5215, -268, -1864, -1352, 3617, 8029, -3908, 3641, 7930, -4428, -4188, 7507, 3336, -9682, 1687, 495, 9541, -4136, -2590, 7422, -5980, 7664, 16, -1670, 9039, 2267 };
        int[] R = { 2, 1, 1, 6, 7, 5, 3, 5, 8, 3, 7, 10, 2, 9, 5, 4, 8, 7, 8, 9, 8, 3, 5, 7, 5, 5, 4, 8, 6, 5, 4, 7, 7, 6, 4, 4, 2, 6, 10, 9, 1, 7, 8, 2, 5, 4, 7, 4, 10, 6, 2, 10, 10, 8, 8, 5, 4, 3, 4, 9, 9, 7, 6, 6, 4, 1, 1, 5, 7, 10, 4, 9, 6, 3, 2, 2, 7, 8, 5, 8, 5, 8, 9, 5, 5, 6, 1, 1, 1, 4, 9, 9, 2, 6, 4, 5, 7, 4, 1, 5 };
        int Z = 19586;
        assertEquals(0.9478973905119819, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.9478973905119819);
    }

    @Test
    public void case49() {
        int[] X = { 1097, 2635, 6677, 5586, 9535, 7953, 7861, 9420, 6419, 9846, 8381, 8833, -6470, -5484, -1321, 9603, -5001, 6313, -5946, -8830, -5755, -3522, 711, 6080, -3947, 2858, -3258, -7198, -4102, 6155, 7897, 8920, -9074, 5655, 7131, 1577, 2345, 9739, 1277, -1264, -4979, 8631, -6892, -1200, 667, -7496, 3112, -2540, -2727, -8283, 2679, 5980, 8195, -9159, 3693, -5775, 5624, 7987, -2391, -4589, 7621, 1621, 657, -5075, 3435, -6479, 5374, -2216, -334, -5198, -2876, -3778, 6457, 1015, 3109, -2984, -9847, -2541, -9846, -7125, 2052, 473, 8219, -3153, -4064, -3659, 402, -6519, 1358, 7864, 5296, 7356, 6531, -7803, 8592, -736, 687, -1307, 3899, 8538 };
        int[] Y = { -4968, 7061, 711, 4386, 3271, 9775, -5254, 4787, -8105, -9241, -753, 577, -1185, 1425, 7423, 6285, -3238, -8840, 9083, -8178, -7633, -919, -6160, -5750, 1531, 3118, 6045, -3725, 6658, 4473, -6192, 7550, 6260, 4459, 692, -7695, 2745, -3369, 6477, 4247, -5188, 1371, -2139, -9542, 2404, 3956, 6929, 9105, -8973, -9610, 8357, 147, -6997, 1084, 2635, -2561, 4855, 133, -1186, 7949, -5847, -3264, -4489, 8123, -7011, 4206, -6115, 7548, 8949, -8744, 5043, -1563, -7394, 9049, -3529, 3248, -8903, -4310, 8882, 7932, 2321, -3417, -7570, -3706, -676, -9180, 5911, -7774, -3517, 2963, 3819, 8581, -3802, -8271, -7480, 733, 9419, 394, 6194, 4584 };
        int[] R = { 10, 4, 4, 3, 4, 10, 1, 7, 10, 9, 3, 6, 1, 9, 7, 1, 4, 9, 8, 9, 8, 2, 4, 4, 5, 5, 6, 2, 8, 9, 9, 7, 2, 4, 10, 7, 4, 2, 4, 5, 2, 8, 10, 2, 9, 8, 4, 2, 6, 2, 3, 6, 5, 6, 9, 9, 2, 7, 3, 9, 5, 3, 6, 9, 6, 7, 5, 1, 8, 10, 5, 9, 8, 7, 2, 6, 4, 6, 9, 10, 9, 1, 5, 5, 8, 5, 6, 2, 1, 8, 10, 6, 10, 7, 4, 7, 3, 10, 8, 2 };
        int Z = 18497;
        assertEquals(0.939274449351804, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.939274449351804);
    }

    @Test
    public void case50() {
        int[] X = { -2383, -3215, 9815, 8055, -3146, -3248, -5504, -4185, 8523, 8161, 9124, 3324, -1466, -2329, 3953, -8996, 6806, 3415, 3551, 9068, 689, -1538, -9712, -805, 1003, -5237, -7562, 8333, -6816, -784, 1966, -9263, -4148, -7550, 5227, 5476, 1091, -3187, 3816, -1194, -5115, -7104, 8228, 2783, -8256, 6891, 5505, 71, -9910, 8431, 6397, -2130, 920, -9369, -1467, -1712, -8073, -338, -5331, 2422, -7768, -5965, -5466, -4003, -5815, -1590, 7419, 9699, -2274, -4153, 709, 2482, 5760, -6161, -7020, 6834, -8975, 9138, -992, -894, 6654, -97, -9441, -2411, -1020, 7615, 4587, -1590, 3995, -2516, 8492, 6881, -3227, 2985, 237, 2105, -8521, -963, 3076, -755 };
        int[] Y = { 2095, -6905, 9545, 8109, 9483, 5632, -1053, 6519, -9610, -9579, 4462, 7817, 4964, 3102, -4311, -4295, 4384, -4167, 1852, 8546, 3979, -386, -8848, -391, 6410, -9382, 2732, 6012, 8135, 6816, -5128, 8852, 3388, 4518, 7452, 8732, -9399, -8620, -6024, 7781, 60, -6541, -6518, -488, -3824, -7098, 9493, 621, -2203, -278, -360, 2163, -9208, 8004, -873, -9822, -5104, -5883, 1072, 7352, 5833, 6007, 3634, -9286, 2846, -6571, 9653, -4044, -1675, -5169, -9990, 5639, 3510, -7793, 8972, 1636, 2830, -1209, 5350, 2302, 2215, 3560, -8686, -2885, -2889, 3987, 5202, -9051, 2226, -5452, 5224, -8160, -6889, 4519, 2020, 2591, 6772, -8262, -6993, -6897 };
        int[] R = { 1, 2, 10, 6, 10, 3, 5, 9, 6, 10, 1, 10, 5, 4, 5, 10, 10, 9, 6, 5, 3, 10, 7, 10, 10, 7, 3, 5, 5, 1, 4, 5, 2, 4, 2, 4, 6, 9, 2, 3, 8, 4, 3, 4, 8, 7, 5, 7, 8, 2, 3, 2, 4, 2, 1, 3, 8, 3, 10, 4, 6, 3, 1, 9, 8, 4, 2, 4, 2, 6, 8, 2, 9, 10, 7, 6, 9, 2, 4, 8, 5, 7, 9, 8, 10, 2, 3, 7, 6, 2, 3, 1, 4, 3, 10, 2, 6, 3, 7, 10 };
        int Z = 11134;
        assertEquals(0.9203392218413512, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.9203392218413512);
    }

    @Test
    public void case51() {
        int[] X = { 2902, 1509, -8723, -2054, 1509, -5135, -9039, -4889, -90, -5053, -1363, 4017, -8405, 2327, 7751, -9673, -3104, -222, 142, -1864, -5344, -3629, 3725, -9737, -1951, -2829, -2183, -2990, 1244, 9939, -5305, 1804, 2950, -235, 5382, 5824, 1256, 5108, -9050, -954, 1790, 6473, 1708, -6719, 6938, 4104, 8425, 1730, 92, -6626, -6223, 6200, 4059, 4618, 9388, -6267, 1513, 7308, -3281, -8332, -2840, -4619, -501, -5877, 471, 7146, 7109, 5253, 6810, -5355, 7601, 8453, 4361, -4492, 865, -1097, -7417, 7129, -4222, -9590, -6586, 3545, -1159, 4861, -826, -5245, 1838, -8619, -536, 5999, 7013, 6187, -4969, -3425, -7399, -6041, 827, 7678, -541, -2113 };
        int[] Y = { -3833, -872, -3212, 4028, 2601, -6230, -9280, -5121, -6810, 4517, 1559, 349, 2301, 6531, 2722, 4210, 8159, 4384, 5652, 6198, 9517, 23, 5922, -4122, -3689, -9097, 1354, 871, -8551, 7577, 8203, 9987, -9028, -9889, -3861, 5090, -9593, -4331, 1336, -9325, 9250, 3510, -8946, -5337, -2861, -927, -6859, -9582, -6362, 2722, 7714, 4679, 5083, 3900, -8541, 4680, 3803, 9472, -2570, -3482, 9881, -8652, -6401, -5861, 9861, -4064, -8553, -5959, 8831, -3290, 5241, -6240, 6160, 5029, 1598, -6319, 3998, -374, 5361, -5319, -5897, 3873, 282, -241, 1848, 8641, 2579, -9370, -1670, 9627, 3988, 6905, 3072, 1621, -4593, 4732, 8480, 7096, -595, 1110 };
        int[] R = { 2, 2, 8, 6, 7, 10, 6, 4, 5, 6, 2, 1, 6, 8, 10, 6, 5, 2, 5, 2, 7, 4, 4, 1, 6, 4, 9, 2, 5, 2, 3, 8, 3, 2, 3, 1, 1, 10, 6, 7, 7, 8, 10, 2, 7, 9, 8, 1, 10, 4, 2, 8, 7, 7, 8, 3, 2, 6, 4, 6, 7, 8, 5, 1, 1, 10, 4, 3, 1, 9, 2, 8, 8, 1, 9, 5, 9, 8, 7, 10, 3, 1, 7, 10, 9, 4, 4, 1, 1, 9, 8, 9, 9, 3, 9, 9, 4, 2, 4, 4 };
        int Z = 18962;
        assertEquals(0.9457493392452543, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.9457493392452543);
    }

    @Test
    public void case52() {
        int[] X = { -2370, 3391, -8238, -6008, 8664, -977, -8834, -5163, -1710, 5911, -1812, 6833, 3968, 5231, 300, -9239, 2998, -1191, 5612, -8643, -4275, 5753, -6624, 3909, -4257, -8772, -2861, 9835, 5784, -1772, 8662, -9833, 4719, 3974, -380, -5685, -3315, -8842, -5589, -9352, 4728, -6994, 4806, 6576, 2973, 7752, 437, 4372, 9688, 6565, 962, -5802, -5844, 5294, 630, -2358, -4926, 5105, 6180, -1400, 1107, 2944, -7815, 7779, 5662, -8649, -7672, 3058, -1250, -7106, -5155, 9398, 8816, 891, 7262, 7385, -1442, -2070, 7645, 7838, 5270, -2088, 3093, 8615, 5657, 8383, -5184, -1971, 3360, 1151, -6232, 2226, 9944, -8010, -5223, -3052, -4491, -4513, 2445, 4086 };
        int[] Y = { 9927, -9992, -3484, 1266, -6982, -9624, -2032, 3045, -7225, 641, -9060, 4019, 9914, -3293, 2738, -1538, -3083, -8853, 6729, 4489, 3615, -9082, 7041, 9780, 4259, 6712, 6272, -7949, -342, 9622, -777, -7903, 4847, 426, -7953, -6364, 106, 9372, -8650, 2490, 649, -7307, 1011, 4185, -7575, 6592, -7124, -2211, -2327, 4624, 8631, 2925, -7512, -6962, 2525, 149, -811, -1175, -3789, 5334, -1324, -793, -8577, -2576, 6720, 2262, -9268, 6245, -8563, -4019, 4816, -5341, 1623, 9607, 4034, 7854, 9023, -5964, 2729, -8503, -6820, 6957, -7030, -2865, 9644, 7759, 2131, 2243, 694, -245, -7869, 2243, -7825, -5569, 8906, -1081, 6993, 1811, -4475, 1772 };
        int[] R = { 2, 9, 3, 7, 4, 5, 3, 3, 5, 3, 10, 7, 8, 7, 9, 4, 8, 3, 9, 7, 9, 7, 6, 7, 10, 9, 5, 5, 5, 4, 3, 6, 3, 8, 4, 8, 4, 8, 2, 8, 3, 1, 4, 10, 7, 5, 5, 5, 7, 3, 3, 5, 2, 9, 3, 1, 9, 9, 7, 3, 5, 10, 1, 7, 9, 6, 6, 2, 4, 7, 1, 6, 9, 6, 7, 5, 10, 2, 1, 8, 6, 4, 5, 7, 4, 7, 9, 2, 8, 6, 7, 2, 7, 9, 10, 5, 4, 5, 8, 7 };
        int Z = 19947;
        assertEquals(0.9448935797462458, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.9448935797462458);
    }

    @Test
    public void case53() {
        int[] X = { -7857, -136, 2513, 9744, 8084, 6615, 9484, 258, -443, 2692, -3847, 7458, 1288, -8768, 7336, -4647, 9446, -6952, -5657, 981, 6184, -1002, -2843, -3078, 3479, -7470, 7702, 3679, -1354, 9274, -1086, 6039, -9783, -4647, -2921, -257, -4302, -6929, 3599, -1510, -5776, 5483, 4985, 3546, 2686, 7186, -7819, -6461, 8372, 5197, -8894, -1475, 7793, -2498, -9490, -627, -5145, 901, -7430, -8627, -7267, -4967, 1194, -4844, -4694, -1937, -7653, -8941, -3975, -8995, -7605, -9809, -6811, 3959, -5157, 5436, 555, -745, 3988, 3474, -7789, -4427, 981, -1965, 5885, 9500, -2738, 6240, 2175, 4869, -6020, 2991, 1785, 483, -1484, -6613, 446, -5792, -6565, 8542 };
        int[] Y = { -1952, -5939, -585, 4240, -5613, -1170, 491, -9288, 8977, 207, 4806, -811, 1096, -8838, -6518, -110, 7578, -3161, -1464, -2001, -8667, 867, -8412, 3591, -2082, 8928, 2777, -3219, 8500, 2613, -1593, 4567, -929, -9492, -8365, 1628, -6822, 7267, -3729, 4779, 5735, -3778, -5602, -4543, 2289, -1277, 957, 5212, 5729, -7517, -8354, 2202, -2718, -1487, -2483, -4416, -2129, 8888, -8427, -2912, 1664, 5677, -1111, -7745, -8829, -2011, -5484, 3436, 5839, 6807, 3347, -8698, 1573, -4287, 3173, -714, -2466, 9617, 9438, 2574, -3700, -6527, -955, 7386, 8123, -7273, 6493, -6947, -4635, -9144, 9511, -4803, 7328, 7711, 3938, 7189, 4869, -6822, -5836, -4775 };
        int[] R = { 10, 2, 1, 10, 8, 1, 1, 2, 2, 9, 8, 7, 4, 6, 4, 9, 2, 5, 9, 9, 1, 4, 1, 8, 6, 4, 1, 8, 2, 10, 4, 3, 2, 6, 5, 1, 7, 5, 5, 8, 4, 2, 7, 9, 9, 10, 9, 3, 7, 10, 1, 9, 3, 1, 9, 8, 6, 9, 6, 9, 1, 1, 2, 4, 6, 6, 4, 2, 2, 10, 10, 7, 3, 8, 5, 2, 7, 6, 4, 5, 5, 4, 6, 7, 6, 4, 6, 1, 4, 1, 2, 4, 3, 3, 9, 9, 10, 5, 2, 1 };
        int Z = 13922;
        assertEquals(0.9309648041938965, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.9309648041938965);
    }

    @Test
    public void case54() {
        int[] X = { 88, 324, -1591, -3941, -9527, 7350, 1963, 808, 2730, 7655, -1458, 8039, 3009, -6561, -6570, -3388, -4336, 1175, 7290, -6885, 9790, -1545, 5962, 8765, -3269, -8238, 3645, 5944, -5398, 7511, -1154, 1862, -5690, 2495, -312, 1952, -3613, 4011, -6930, 424, -273, 6005, -6018, -1650, 5531, -5540, -2217, 3254, 2598, -1964, 5129, -5169, 9573, 475, -3034, -7780, 640, -9383, -6812, 9152, 2351, -107, 4252, -3554, 9111, 2996, -1593, -5140, 8423, -8746, 8672, 5842, -1389, -7049, 8415, 1622, 3050, -7492, -6170, -7388, 8723, -1677, 8548, 2559, -4589, 9506, 9988, -4731, -2729, -656, 137, -2987, -6166, 2646, 2604, -8694, -416, -2720, 8267, 8092 };
        int[] Y = { 9820, -8275, 5101, 2262, -5863, -51, -7355, -266, -5676, 6934, 4025, 684, -7077, -5563, -1919, 9279, -2329, 2624, 1636, 6339, 9963, -3499, 1587, -2994, -7758, 6621, 6634, -7303, 2866, 132, -8678, -7602, 8042, -9517, -6192, -8256, -4403, 5629, -6599, 5410, 9630, -7218, -413, -1051, -8465, -221, 1673, -9229, -8050, 1550, 7836, 2552, 2639, -386, 7883, -5752, -7827, -5932, 7489, 3677, 9246, 5254, -2801, 2792, -5384, 7249, -5227, 6537, -7982, 9261, -3799, -6612, -9060, -3102, -1683, -4660, 2836, -4006, 5474, -7566, -2218, -6234, 4614, 7468, -1852, 1695, -3898, -9434, 3007, 585, -1473, 7778, 7316, 2103, 738, -5804, 5561, -1480, 5887, -6007 };
        int[] R = { 4, 9, 2, 3, 5, 10, 2, 3, 8, 6, 3, 9, 5, 10, 1, 4, 2, 10, 4, 8, 2, 7, 10, 9, 1, 9, 10, 2, 5, 8, 5, 1, 9, 7, 5, 3, 6, 8, 7, 3, 3, 10, 3, 9, 1, 3, 2, 3, 4, 7, 2, 5, 3, 1, 5, 5, 1, 4, 6, 8, 4, 1, 8, 2, 7, 4, 6, 2, 1, 2, 6, 5, 3, 8, 3, 4, 2, 6, 8, 5, 2, 9, 1, 6, 2, 5, 10, 2, 10, 6, 1, 3, 6, 10, 6, 2, 3, 1, 5, 3 };
        int Z = 17062;
        assertEquals(0.9447494348549121, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.9447494348549121);
    }

    @Test
    public void case55() {
        int[] X = { 3356, -9485, 8329, 2406, -4018, 3692, 7846, 9554, -6738, 5137, 7311, -7292, 3969, -2221, 6280, -6810, 2690, -2124, -9362, 6195, -3635, 3738, -3208, -9676, 327, -1046, 2117, -486, 1201, 3813, -8122, -354, -7995, 3987, 9167, -2893, 2227, 6440, 1000, 6460, 2006, 1122, -6922, -2366, -4315, 7763, 7880, -5406, 1673, 5388, -2812, -5799, 5990, 1552, -510, -9397, 6597, 7718, 2127, -3800, 8420, -1036, -757, -4331, -9073, -6507, 9078, -8002, -6701, 3135, 8645, 806, -3050, -918, -765, -4855, 7359, -7642, 4492, 3782, 1690, -7606, -3672, 7992, -5160, -9742, -3658, -1204, -1228, 4042, 8998, -2257, -5867, -7708, 2949, 6080, 2857, -7564, -370, 9060 };
        int[] Y = { -6681, 1493, 426, 9204, -6977, -4727, -4300, 5566, 9040, -3762, -5841, -8785, 5685, -7385, -2981, -2664, 7402, 2158, -9012, -1639, -7844, -5198, 5507, 5546, -5115, -8692, 228, -1811, -4902, -3046, 6718, 8624, -2025, -4104, -5379, -9183, -3188, -7523, 6223, 6478, -2376, 4452, -3724, 9596, 5459, -7588, 510, 8454, 9150, 5730, 458, 8830, 1451, 4500, 9422, -1169, -8305, -6560, -2963, 1734, 954, -2755, -6612, 5079, -5924, -1368, 6800, 2186, 7630, 8083, -9822, 1005, -5952, 1233, 5878, 9494, -3368, 454, 5615, -6819, -8499, -8999, 9465, -5707, 8950, -5223, 5199, -7976, -5951, -1143, -3255, -1896, -3963, -8760, -1119, -3273, -4844, -7075, -5615, -3559 };
        int[] R = { 1, 8, 2, 3, 3, 8, 6, 9, 5, 9, 2, 5, 4, 7, 6, 4, 3, 3, 2, 4, 5, 2, 9, 7, 5, 7, 5, 2, 5, 1, 2, 5, 1, 3, 7, 3, 2, 4, 3, 8, 4, 4, 3, 7, 2, 8, 2, 4, 3, 5, 8, 7, 9, 6, 3, 3, 5, 9, 7, 9, 2, 10, 5, 2, 4, 3, 4, 7, 6, 6, 4, 9, 1, 8, 7, 2, 6, 8, 8, 10, 5, 7, 6, 3, 4, 10, 7, 8, 9, 3, 6, 10, 4, 2, 1, 7, 4, 6, 3, 9 };
        int Z = 15919;
        assertEquals(0.9401514941595932, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.9401514941595932);
    }

    @Test
    public void case56() {
        int[] X = { 1678, -6153, 858, 1661, -9143, 4441, -4241, 4227, 3373, 4745, -6520, -2377, -5127, 9626, -2992, -2295, 5114, -4804, -9795, -6725, -6471, -3018, -8331, -5089, -7463, -8894, 146, 7632, 4251, 3414, -9662, 4071, 7394, -3984, 6419, 8282, -2952, -5760, 701, 4065, -2839, 4305, -6386, -9338, 272, 8959, -617, -6867, 2983, -7356, 3717, 3371, 9094, 9031, -2136, -117, -8211, -7961, -7437, 6312, -1127, 8722, -9378, 1913, 8597, -1763, 7064, 60, -5343, 9189, 3264, 2453, -4806, 8229, -8790, -1031, 888, 3819, 7499, 2626, -7158, -9487, 601, -2536, 9717, 4501, -2109, 7692, -9526, -1315, 1538, 9311, 3178, -2691, -9940, -8929, 1864, 2397, 9040, 567 };
        int[] Y = { -8816, 4973, 4181, 9997, -9663, -3100, 4737, 4705, -6619, -748, 3792, -4735, 8091, -9202, 5302, 9123, 5916, -7199, 8917, -4882, -9586, -857, -1471, 3316, -4037, -6807, -3741, 4564, -830, 2199, 5692, -2406, 6496, -3862, -7879, 5070, -8883, 1786, -2568, 602, -246, -5512, 1107, -7977, 5999, -227, 2576, 4377, 3317, 6641, 9140, -8659, 8717, -1612, -7706, -8968, 1780, 4096, 6713, 5904, 4406, -4402, 921, -8211, -9175, -6512, 7641, -9573, 7774, -877, -4478, 4509, 6482, 9146, -2835, -5906, 2258, -5302, 2323, -8497, 522, 1969, -2336, 6678, 3805, 6667, -9558, 4540, -1938, 9233, -9813, -2014, 8684, -7408, 2987, -3583, -3069, -3829, -9252, 6594 };
        int[] R = { 7, 10, 9, 1, 9, 10, 1, 9, 9, 9, 4, 10, 10, 3, 3, 3, 7, 10, 9, 5, 4, 7, 10, 7, 4, 10, 4, 5, 7, 3, 5, 5, 4, 6, 5, 3, 5, 7, 1, 3, 8, 6, 4, 7, 9, 7, 10, 7, 6, 10, 2, 2, 8, 3, 10, 2, 2, 3, 8, 1, 7, 2, 7, 1, 7, 2, 5, 1, 10, 5, 6, 7, 3, 9, 6, 1, 5, 5, 9, 3, 6, 10, 6, 5, 3, 5, 6, 6, 9, 3, 8, 5, 7, 5, 7, 3, 8, 1, 6, 7 };
        int Z = 13679;
        assertEquals(0.9185982126963548, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.9185982126963548);
    }

    @Test
    public void case57() {
        int[] X = { 1000000000 };
        int[] Y = { 1000000000 };
        int[] R = { 1000000000 };
        int Z = 1000000000;
        assertEquals(0.41421356237309503, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.41421356237309503);
    }

    @Test
    public void case58() {
        int[] X = { 8094, 3785, 5706, 1827, 1786, 5487, 946, -5224, 2281, -2578, 6927, -8086, -6043, -2250, 2535, 3970, 6118, 1553, 3781, -8613, 4152, -7376, 6424, 9485, -5527, -8184, 2835, -9638, 754, 8151, 5098, 6075, 2034, 4118, 2086, 2460, 65, -2414, 3514, -7353, 5041, 1494, 1804, 7832, 6255, 6927, -261, 3646, -1708, 9189, -2652, 1111, 2562, 286, 6504, -6196, -4253, 498, 978, -773, -5391, 742, -1781, -9026, 4310, 8363, 940, -759, -4079, 1736, -841, -3205, 6700, -3308, 3111, -8147, -2861, -6312, 4356, -8131, 4630, 7786, -7047, 1231, 1747, -2786, -1978, 9840, 1851, -8514, 8309, -6701, 6628, -5811, 508, 1806, 1513, 2866, -294, 763 };
        int[] Y = { 9223, 6788, 1697, 2035, 1933, 1747, 9367, -1410, -2539, 9135, 3319, 9265, -2690, 3392, -7307, -6106, -8784, -8808, -1678, -7266, -2470, -3852, 8540, 9988, 4640, -5205, 2219, -3871, -8757, 8974, -3576, 3670, 9051, 6078, 5478, 5419, -2356, 1941, -6691, -3052, -2128, -1448, -5962, -335, -4739, -1860, -5466, -2833, 165, -7404, 3332, 4669, 3172, -7662, -9617, 2273, 2207, 6092, 118, -3967, 7894, 4251, -4594, -33, 7073, 1481, 259, 7172, -4918, 4373, -7706, 6279, 1445, 239, -2034, -7500, 3270, -3286, -9914, -3702, -1835, 9549, 3492, -7684, 2633, -2944, 9782, -2408, 4830, -4948, 90, -6791, 5276, 1224, -5555, 5412, -1188, -563, 1680, 4169 };
        int[] R = { 9, 1, 2, 7, 9, 4, 5, 6, 6, 9, 1, 1, 5, 4, 3, 1, 6, 6, 10, 1, 9, 4, 7, 2, 7, 4, 5, 5, 10, 2, 7, 9, 5, 1, 7, 3, 6, 1, 8, 1, 1, 1, 3, 5, 6, 5, 8, 3, 2, 7, 3, 1, 2, 1, 2, 8, 5, 8, 2, 4, 10, 1, 2, 4, 1, 9, 6, 6, 1, 6, 8, 2, 8, 10, 8, 5, 7, 7, 7, 10, 5, 9, 10, 6, 9, 3, 6, 5, 1, 7, 9, 10, 9, 2, 5, 9, 2, 2, 6, 5 };
        int Z = 12539;
        assertEquals(0.9208271757483409, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.9208271757483409);
    }

    @Test
    public void case59() {
        int[] X = { -9416, -4641, 4707, 6409, 4907, 6014, 3072, 7910, -9236, 1716, -6280, -4423, -2732, -2274, 2970, 6833, 6422, 7816, -6958, 8532, -1022, 7404, -7047, 3311, -496, 3648, 1175, 2883, -7044, 3936, -1644, 3477, -4399, -1352, 6596, -5379, -5508, -3869, -252, -994, -3286, -8604, -3792, 526, 7722, -1927, 8467, 9590, 8854, 6379, -825, -5224, 5619, -9966, 8431, -7700, -6681, -9414, 8869, -2386, -6559, -8114, -2953, -8969, -8644, 8335, -8185, 7959, 4809, -1832, -9964, -7113, -6914, 9275, 7545, 4529, 9211, -207, -344, -3970, 6682, 614, -6943, 9748, 7577, -7149, 2190, 6341, -1866, -7043, 9434, 5673, 4214, 806, 7214, -4626, 9240, -9840, 3813, 90 };
        int[] Y = { -3325, -7, 3658, -5698, 4121, -6014, -5391, -4355, -8646, -5243, 2096, -833, 6187, 8596, -1338, 3547, 7004, -178, 2061, -7264, -773, -1894, 7122, 6849, -2489, 3784, -3038, -5920, -5289, 1382, 3201, 2369, 9564, 1944, -1659, -8885, 4643, -9677, 7028, 8611, -9695, 5181, 8090, 3035, -6695, -2164, 9348, -2257, 317, -1613, 5566, 5488, 1276, 1974, 2767, -9978, -5137, 6272, -7338, 8763, 3725, -5006, 7618, 4140, -3621, -989, 6250, 9396, 2720, -7987, -5191, -9028, 5280, 4632, 4607, -7728, -5400, -4640, 2153, -2030, -5611, 4961, 576, -1544, -8963, 941, -9653, -4480, 6348, 8629, 3585, -2522, -168, -4160, 7020, 8096, -1368, 4490, -649, -6319 };
        int[] R = { 64, 51, 36, 12, 6, 23, 79, 31, 19, 63, 65, 12, 57, 56, 25, 62, 51, 85, 75, 54, 25, 86, 34, 64, 37, 58, 66, 13, 78, 50, 80, 41, 52, 15, 4, 9, 89, 83, 91, 60, 45, 55, 71, 53, 10, 47, 14, 12, 83, 89, 17, 60, 74, 50, 23, 62, 59, 41, 27, 36, 42, 58, 28, 93, 73, 32, 53, 13, 14, 43, 72, 10, 97, 94, 14, 58, 40, 27, 69, 75, 67, 37, 34, 92, 86, 56, 6, 96, 96, 32, 84, 37, 89, 11, 81, 13, 94, 33, 26, 59 };
        int Z = 18418;
        assertEquals(0.6767507421636207, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.6767507421636207);
    }

    @Test
    public void case60() {
        int[] X = { 7960, 6061, 1495, -2215, 1277, -5945, -3640, 9642, -5232, -2351, 5533, 3281, -937, 2831, 9385, -6546, -9685, -9074, -3255, -8318, -2215, 7163, 7225, 818, 9010, -2426, -4210, 6674, 9746, -9767, 3131, -8633, -9997, -6154, 8994, 9943, 1970, -301, 3909, 2729, 5367, -8540, -3020, 6881, 6876, 2974, -4038, 4981, -9312, -8366, -7763, -1672, -6491, 5, -4171, -5476, -8969, 193, 306, 5832, 4800, -9348, -1491, 3952, 6541, -1266, 2782, 5115, -7069, 1830, 8934, -1855, 2399, -2047, -201, -2045, -8843, -3839, -5720, 2216, 2265, 8722, -8578, -6478, 1113, -7964, 5613, -105, -1867, 2874, 2189, 8148, 6312, 3523, 1935, -7529, 1378, 326, 2243, 6680 };
        int[] Y = { 5111, 4482, 5541, 892, 8898, 1633, -8687, -4276, 2846, -9188, 5696, -61, -4045, 8109, -7192, 724, -1589, -6263, 1951, -6695, -2000, 3014, 9187, 7843, -7247, 8973, -5904, 1094, -9421, 8396, 7228, -2151, 6483, -8104, -6647, -1441, -5283, 412, -3903, -8660, -6364, 5170, 7744, -4374, 8704, -5934, 2967, 5826, 7577, -42, -884, -2871, -8096, 1714, 2617, 5305, 163, 3405, -8897, -6151, 1627, 4609, 2327, -6203, -6521, -5206, 9886, 4650, -2439, -2137, 8896, -6194, -74, 6967, 8457, 8728, -7359, -6837, 4849, -668, -1441, -9853, 6109, 1464, 3023, -5761, 3201, 2057, -2631, 3324, -4298, -4409, 6466, -2421, 6442, -4841, 1120, -287, -1352, -6855 };
        int[] R = { 87, 5, 85, 38, 49, 99, 68, 7, 98, 46, 59, 89, 81, 41, 61, 67, 11, 38, 72, 89, 70, 4, 54, 1, 28, 44, 37, 34, 71, 24, 97, 9, 81, 34, 46, 29, 84, 13, 87, 82, 10, 45, 70, 90, 37, 82, 56, 47, 19, 79, 87, 40, 82, 92, 41, 61, 35, 29, 94, 58, 52, 43, 66, 84, 76, 12, 13, 59, 76, 99, 92, 38, 44, 14, 27, 32, 95, 35, 79, 66, 65, 17, 5, 99, 9, 97, 59, 43, 25, 5, 52, 29, 47, 18, 12, 74, 81, 24, 84, 8 };
        int Z = 13942;
        assertEquals(0.467694726729157, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.467694726729157);
    }

    @Test
    public void case61() {
        int[] X = { -822, -7999, -942, -1843, 9696, -1649, 4215, -716, 4657, 146, -4335, 4042, 2055, -7899, -3699, 7980, 5167, 60, 6573, 6073, 8838, 3236, -4765, 4950, 9848, 4287, 6851, 4497, -9318, 754, -4736, 9695, -6870, -8169, -2737, -9711, 3041, -5705, -7977, -9386, -5752, 4165, -4159, 3666, 3215, 9730, -5312, 8932, 257, -5623, -2419, 6726, -437, -5424, -3085, -8397, -639, -3597, -2301, -1510, 3840, -4546, 1742, -2411, -577, 6072, 6605, -9536, 6306, 7614, 1926, -9307, -9650, 599, -2323, 9626, 4428, 6394, -8728, -8169, -8998, 4460, -9195, 3722, 1112, 4891, 8425, 8840, -9259, 2183, -2626, 8825, -7058, 4302, -6181, 7249, 8868, -2937, 7861, -3562 };
        int[] Y = { 9075, 5247, 4808, 6652, 4603, 7807, 642, -5362, -4006, 5644, 3213, -7523, -6758, -1221, 7120, -5749, 5394, -3692, 6161, 6426, -257, 7993, -3020, -758, 4098, 8293, -1451, 470, 6275, -3905, 7554, -666, 1728, 5307, 6861, 8652, -8123, -175, -2157, 9248, -8414, -3565, 4434, -9152, -6807, 5182, -3789, 8387, -2364, -3405, -7583, -8501, 859, 9006, -688, -349, 6872, 45, 107, 2013, 3332, -2353, -4122, -2638, 7669, -7869, -258, -3114, 6123, -5212, -371, 6992, 1632, 8548, 8391, 9733, -9914, 9924, 6061, 2679, -9684, -59, -9074, -3216, -5292, 3086, 6146, 3985, -350, 597, 6330, 1542, -5652, 1357, 5106, 5442, -6741, -6889, 9753, -2089 };
        int[] R = { 89, 11, 80, 95, 65, 55, 55, 41, 31, 93, 1, 46, 88, 54, 58, 60, 27, 49, 46, 21, 41, 17, 72, 21, 10, 42, 92, 96, 60, 1, 65, 48, 11, 45, 43, 27, 99, 97, 67, 81, 90, 20, 79, 29, 73, 36, 40, 99, 36, 85, 72, 77, 54, 95, 97, 63, 36, 88, 11, 95, 41, 75, 95, 51, 19, 37, 78, 70, 33, 96, 50, 74, 15, 80, 54, 39, 68, 45, 90, 3, 82, 61, 79, 35, 55, 75, 49, 42, 15, 59, 88, 55, 34, 82, 57, 4, 18, 34, 73, 3 };
        int Z = 12222;
        assertEquals(0.48545281597268325, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.48545281597268325);
    }

    @Test
    public void case62() {
        int[] X = { 7231, -6735, 1531, -3962, -1762, 2025, 4299, -7866, -7495, 332, 1946, 8680, -2858, 1932, -4275, 107, -5687, -317, -8922, -9900, -6886, -8853, 2394, 4216, 8, -9625, -6405, 2710, 86, 8616, -6594, -6946, -7724, -578, 3699, 9487, 3481, -2848, -6136, 6843, 2691, 9178, -6929, 9438, -6530, -2455, 7855, 7562, 8821, -4381, 775, -4182, -3285, -1209, 6252, 6645, 5598, -9118, 7710, 619, 7686, 9520, 3553, -4355, 7379, -4892, 2603, -3488, -7184, -6388, -3828, 3457, -9934, 3030, -2207, 4039, -6724, 8670, -2797, 3729, 1760, 9409, 8775, -2409, 9753, 1550, 3987, 3006, 7581, 2641, 764, -1838, -2395, -8845, 4611, 6448, 2273, 2892, 1989, -241 };
        int[] Y = { 6256, -5322, -7878, 5241, -6521, -7404, -6719, 5853, -1907, -6464, 8349, 3968, 925, -4906, 3240, -5735, -8019, 1895, -1541, -3512, -7175, -6426, 1236, -5165, -8054, -740, 5619, -261, -1568, -1615, -1393, -5383, -9485, 7466, 6572, -1245, 1893, 9798, 1028, 8431, 7670, 7642, 3879, -910, -4149, -1334, -954, -7112, -6154, 3622, 5554, -7551, 3616, -2735, 3389, 5884, -1415, 5425, -2507, 1819, 9940, 4355, 3108, -3489, -6043, -3065, -1977, 1202, -122, -1316, -6181, 5649, 1804, -5047, 8488, -3124, 2178, -398, 8946, 5626, -2077, -8743, -1464, -1805, -3881, 6177, -2479, -894, -3977, -751, -3887, -1969, -2433, -1350, 8413, 8524, -7824, 6701, -7211, -3032 };
        int[] R = { 19, 35, 70, 63, 74, 26, 97, 82, 1, 3, 17, 54, 43, 86, 15, 73, 53, 1, 44, 47, 61, 5, 17, 11, 96, 85, 71, 35, 26, 96, 36, 96, 31, 5, 58, 4, 82, 6, 37, 83, 9, 54, 36, 51, 39, 51, 75, 43, 3, 70, 90, 64, 74, 6, 26, 70, 42, 48, 56, 67, 43, 43, 14, 73, 99, 72, 29, 80, 77, 17, 14, 85, 70, 2, 87, 60, 4, 61, 55, 6, 82, 44, 69, 56, 1, 94, 77, 43, 41, 84, 61, 84, 26, 75, 8, 76, 98, 88, 7, 74 };
        int Z = 10263;
        assertEquals(0.5047891099014306, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.5047891099014306);
    }

    @Test
    public void case63() {
        int[] X = { 881, -2500, 156, -3503, -801, -3573, -2448, -4760, 9374, 1758, -3844, -2115, -8504, 3204, -8925, 4764, -9971, 7016, -8675, 9676, -7682, -4823, 8982, 1330, 4881, -5451, -4742, 649, 8890, -7385, 3264, 8699, -1570, 4440, -9471, 2956, -9521, -9439, 8441, -7936, 4935, -2045, -3110, -5080, 9786, 3050, 6771, -7362, -9621, -742, -9153, -7321, -3634, 8254, 9686, 5395, 1733, 6455, -3372, 79, -5078, -7285, 5956, -1267, -9685, 4667, 8944, 7510, 905, 4652, 3031, -6290, 9645, -1765, 5358, -7252, -6052, 3362, 261, 7584, 9875, -8782, 6397, -1395, -3134, 8971, 8251, 3087, 9085, -1990, -8854, -5957, -4857, 6912, -7185, -6142, -8905, -5877, -3373, -4760 };
        int[] Y = { -5476, -5908, -69, -2700, -6004, -4675, 5012, 9762, 2107, -6066, -3327, 7430, 9289, -9690, -2735, -1325, 8179, 3015, 7307, -8481, 2564, -9247, -4865, 9602, 7840, 8422, 32, 5555, -235, -3061, 9693, 2259, -2698, 8277, 2069, 4395, -2070, -4366, 3728, -6066, 1792, -4891, -1417, -1144, -6768, 6781, -9671, 7568, -5393, -2373, -4759, 5331, 1488, -5923, 4743, 20, 7554, -9438, 7515, 3860, 5866, 2900, 758, 8983, -8469, -5771, -281, -2215, 1877, 222, 2283, 5312, -6232, 965, -6410, 186, 6544, 9969, 5711, -5611, 1385, 9565, -4642, 5594, 2074, -5297, -6058, -6352, 7516, -8194, 3220, 8358, -2544, 9223, -8355, -3513, 7295, 3565, 7015, -9534 };
        int[] R = { 20, 78, 2, 22, 16, 20, 11, 17, 58, 71, 26, 15, 63, 47, 15, 98, 98, 39, 2, 19, 92, 34, 46, 89, 83, 89, 17, 45, 58, 24, 90, 29, 1, 43, 2, 68, 62, 13, 36, 71, 83, 61, 85, 97, 59, 51, 94, 8, 90, 96, 79, 33, 81, 24, 74, 15, 13, 90, 59, 22, 13, 49, 50, 66, 43, 3, 33, 5, 15, 69, 27, 49, 81, 12, 46, 92, 62, 91, 51, 3, 38, 29, 36, 71, 53, 61, 85, 65, 50, 44, 86, 15, 44, 87, 80, 38, 89, 64, 42, 56 };
        int Z = 11737;
        assertEquals(0.4962932413048948, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.4962932413048948);
    }

    @Test
    public void case64() {
        int[] X = { 667, -9812, 6366, -9320, -7711, 8620, -8924, 5188, 9612, 6370, 2676, 7149, 3576, 4766, 6804, -6757, -2822, 9712, 1398, 7072, -7536, 3344, 4049, -4401, -8416, 9705, 8679, -4422, -9846, -8259, -5537, 6278, -3741, -9705, 6100, 6405, -3546, 2251, -1517, 3413, -9582, -3182, -9971, -1593, 6792, 8623, -7025, -2845, -1968, -9141, -404, 3860, 8530, 3702, 4922, -1058, 232, -2762, -4001, 1097, 7444, 6359, 5698, 7391, -3911, 7892, -4233, 422, 21, 3888, 2318, -9446, -2422, -3831, -9800, -8295, -6805, -2789, 6015, 3406, 8868, -5319, 4128, 8020, 943, -170, -9011, 7969, -3981, 8935, -8886, 1022, 2961, -351, 6148, -9980, -6133, 1351, -2117, -5489 };
        int[] Y = { -2357, 9559, -6354, -3879, -405, -5193, 1120, -6061, 3262, 4135, -1247, 6582, -1569, -9799, -8383, -8905, 2026, 3185, 7068, 9794, -955, 7844, 3359, 7236, 1394, 8189, 7643, 3257, -3782, -3977, 8344, 5061, -3501, 9828, 7468, -200, -6765, 498, -3026, -8902, -184, 297, -1860, 8118, 6610, 1042, -7134, -6401, -5427, 4441, -8007, -2396, -3763, -7052, 628, -2287, -3043, -797, 7217, -3781, 2088, -937, 2004, 3094, -5725, 2483, 3254, 660, -7774, 4884, -3665, -1372, 1912, 2690, 2162, -4034, -2373, 6710, 4468, 2888, 8417, -5002, 250, -9766, 4453, -9662, -2898, -4826, -4281, 5017, -6146, -3931, -5102, -2896, -1522, 840, -2234, -2687, 3662, 3744 };
        int[] R = { 97, 80, 16, 64, 76, 67, 19, 89, 30, 18, 47, 79, 83, 42, 22, 73, 77, 98, 8, 76, 77, 3, 76, 79, 15, 93, 12, 99, 39, 50, 61, 35, 82, 28, 50, 57, 94, 20, 97, 75, 38, 96, 53, 72, 37, 75, 97, 66, 24, 56, 41, 52, 11, 69, 31, 77, 61, 94, 27, 52, 44, 87, 38, 77, 14, 88, 85, 60, 7, 81, 34, 96, 76, 87, 20, 65, 13, 68, 82, 36, 23, 74, 87, 85, 42, 69, 61, 55, 15, 87, 58, 10, 25, 95, 86, 91, 34, 70, 50, 93 };
        int Z = 18903;
        assertEquals(0.6306947423014233, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.6306947423014233);
    }

    @Test
    public void case65() {
        int[] X = { -3377, -9871, 3675, 9076, -3029, 2185, 741, 6930, 5638, 7654, -8256, -8374, 3610, -216, -2993, -6514, -3886, 2104, 6964, 6422, -5054, -7452, -9218, 2684, 197, 8204, 8334, 120, 294, 1123, 5087, -735, -6179, 8691, -4018, 3134, 4797, -5945, 6045, -8870, -44, 6854, 5807, 3557, -9469, -1545, -3396, -5685, -5119, -2717, 1644, 365, 9674, 1534, 7096, -4118, 9634, 7676, 1182, -2620, -6992, -7364, -7525, -1041, -9582, -5017, 2845, 8746, 3850, -9316, 1761, -9165, 6563, 7913, 231, -9474, 6856, -9769, 964, -9181, -7804, 3928, 658, -4246, 5110, 6532, -9152, -422, -4695, -5616, -1025, -4306, -3005, -3339, -7041, 7751, -6717, 6572, 6510, 2961 };
        int[] Y = { 5457, 648, 6269, 1401, -485, 6968, -2106, 9392, 6427, 2317, 6329, 9391, 2826, 2578, 6779, 2034, -7191, -6843, 4833, 5501, 6340, 7907, 4820, 5715, 2186, 6872, 9180, -3718, -2223, 2419, 3994, -3394, 9295, 6801, -638, -523, 5848, 6502, 7886, 4072, 1328, 9665, -7205, 4670, 1837, -1665, 3700, -9173, 6374, -9279, -431, 3989, 389, -9104, -3787, 9425, -5197, -8859, -5708, 3986, -2774, 5533, -1788, 1626, -2835, 6253, 2864, 623, -2891, 2606, 3981, 3950, 4356, 3737, -8494, 8688, 4453, 8821, 1083, -6562, -2431, -9343, 5214, -8549, -1850, 6940, -6422, 7168, -5855, 2998, -9707, -6695, -8064, 1480, -5962, 5222, -3013, 4767, 6688, -8490 };
        int[] R = { 100, 42, 20, 42, 53, 74, 86, 17, 86, 11, 7, 48, 12, 36, 65, 36, 98, 38, 64, 75, 81, 70, 50, 30, 33, 12, 54, 47, 92, 53, 43, 43, 94, 14, 37, 99, 40, 22, 15, 25, 32, 73, 72, 96, 61, 37, 83, 58, 26, 47, 84, 7, 68, 85, 88, 100, 96, 93, 99, 39, 45, 93, 34, 91, 6, 70, 89, 45, 91, 55, 21, 75, 79, 45, 22, 39, 33, 4, 48, 58, 2, 32, 64, 69, 16, 3, 21, 64, 95, 71, 2, 92, 63, 35, 82, 20, 56, 70, 17, 47 };
        int Z = 18753;
        assertEquals(0.6541779089368905, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.6541779089368905);
    }

    @Test
    public void case66() {
        int[] X = { 624, 9589, 2976, -4651, 6228, -8512, 9287, -8006, 1512, 6679, -9323, -1384, 5433, 6885, 4020, -914, 4525, -5656, 7222, -3159, 3523, 3317, 7024, -7470, 4497, -8365, -8280, 4834, 8480, -6847, 4471, -9302, 421, 7577, 6343, -3249, -4563, -4834, 8968, -1201, 8609, -9441, 393, -2758, 7071, -3530, -9524, 1617, 8869, -9745, -1007, 7235, -637, 7157, 7608, -4148, 9003, 5262, -20, -426, 8703, 9713, 7867, 1406, 1601, 4104, 6301, 8178, 5565, -7623, -5851, 467, 8596, 6407, -4827, 6787, -2946, -3913, -9986, -9706, -7549, -4194, -6227, 1866, -9864, -7121, 4496, 2725, -4395, -1707, -8122, -3830, -8229, -4038, 5219, 878, -8632, -8775, -9602, 7728 };
        int[] Y = { -2287, 7337, 3515, 952, -271, -8211, -4390, -538, -3019, -832, -8321, 3163, -7862, -2889, -3657, 8007, 7623, 4884, 5404, -1206, -653, 5146, 4694, -8742, -260, 7030, 2363, -7691, -3209, 8767, 3353, -6046, 3194, 3193, -8924, 5351, -5973, -6778, -7260, -9459, -6172, -7180, -7760, -9839, -7607, 1071, 6457, 3014, 9126, -9328, 2763, 8705, 6254, -481, 1001, -2112, -7507, -6786, -6319, 9472, 6309, -4884, 7661, 3495, 5184, 5914, 9660, -8842, -99, 505, 341, 9352, 4066, -5271, 3841, -6467, -6365, 3993, 327, 1889, 1390, 6696, 2420, -8041, 4859, -5778, -3320, -5205, -3425, 9928, -6298, -8494, -8824, 7766, -1053, -7899, 8537, 4571, -1209, 6713 };
        int[] R = { 4, 54, 100, 69, 75, 96, 8, 36, 23, 99, 70, 78, 74, 67, 55, 19, 14, 22, 6, 100, 99, 32, 73, 57, 5, 33, 90, 37, 88, 45, 53, 91, 98, 53, 59, 24, 48, 19, 59, 70, 17, 28, 99, 90, 46, 5, 61, 60, 26, 18, 11, 24, 49, 35, 81, 53, 67, 22, 90, 54, 66, 94, 45, 64, 46, 55, 39, 93, 73, 98, 14, 41, 77, 64, 31, 23, 68, 43, 34, 93, 60, 96, 17, 8, 30, 97, 13, 97, 18, 54, 2, 35, 47, 98, 98, 93, 5, 37, 37, 77 };
        int Z = 13791;
        assertEquals(0.5273921410402672, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.5273921410402672);
    }

    @Test
    public void case67() {
        int[] X = { 2041, -7378, -8354, -8367, 4889, -5427, -9120, -5834, 706, -7206, -2345, 1646, -7702, -5578, -3111, -5879, 7041, 1637, -8965, 5508, 2694, -5761, -6402, -6299, 370, 1376, 2024, -2236, 156, 8450, -8591, 577, -9743, 4262, -4376, 4717, 703, 1041, 5310, 5292, -4082, -9474, -768, 7989, -601, 5270, 2924, 8060, -1298, 3531, -3170, 4902, 1962, 3136, -5441, 2951, -6174, -6707, 5213, 23, -3291, 8243, -3298, -9961, 9703, 2428, 4975, -8903, -4352, -4209, 1544, 394, -1743, -5738, 3954, -6007, 2133, -4539, 1630, 3264, 1226, 6362, -3022, -3139, 8382, -8246, -7745, -7644, -7898, 8602, 1300, -176, 9937, 2101, -2451, -5057, -1057, 957, 7763, 2532 };
        int[] Y = { 4681, -7149, -495, 4071, 332, -1324, -8359, -8303, 9452, 2020, -6847, -6659, -9575, 3063, 3870, -4560, 7452, 2054, -7580, -7419, 9876, 1702, 2400, -8688, 1486, -3754, -7784, 7316, -186, -5774, -7053, -3685, 3121, -4608, 1864, -770, 1848, 2131, 4634, 6101, 2604, 6610, 2425, -9905, 5383, -7746, 8170, 9097, 7169, 3069, 6811, 2930, -7390, 2907, -6959, 300, 1020, 2108, 1915, -7135, -8770, -1891, -7389, -9308, 6850, -5748, 8374, -3398, 5896, -9945, 7471, 3496, 8234, 3014, -8696, 7447, -6107, -6561, 3561, 9131, 401, -5150, -5713, 6696, -8090, 5542, -7963, 5129, 5721, -6345, 448, -5117, 5286, 1128, 8624, 337, -7295, -9958, -7272, -6774 };
        int[] R = { 21, 46, 76, 78, 33, 84, 22, 97, 78, 45, 36, 69, 53, 83, 6, 99, 25, 54, 81, 35, 72, 97, 50, 33, 20, 26, 81, 7, 97, 76, 84, 17, 73, 59, 46, 6, 94, 20, 54, 71, 64, 90, 91, 68, 72, 48, 18, 49, 1, 50, 83, 73, 98, 84, 5, 18, 9, 37, 24, 5, 65, 8, 73, 37, 18, 71, 94, 12, 90, 100, 34, 5, 89, 25, 24, 60, 72, 42, 60, 73, 43, 95, 97, 41, 78, 1, 58, 39, 90, 81, 43, 6, 40, 68, 42, 58, 90, 88, 21, 31 };
        int Z = 13356;
        assertEquals(0.4979292558867989, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.4979292558867989);
    }

    @Test
    public void case68() {
        int[] X = { 20, -20, 0, 0 };
        int[] Y = { 0, 0, 20, -20 };
        int[] R = { 50, 50, 50, 50 };
        int Z = 100;
        assertEquals(0.3, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.3);
    }

    @Test
    public void case69() {
        int[] X = { -5952, 2099, -5, -9003, 5898, -6602, 6479, -3402, -7316, 6170, -7297, 9374, -3580, -1618, 5345, -5283, 5693, 1496, -8017, 6107, 4787, 8684, -6983, -1544, 5547, -456, -2264, 7675, 6343, -1908, -7829, -4062, 4572, -297, 8215, -8661, -9113, -5346, 508, 1472, -5683, -9977, 3915, 4869, -6943, -4102, -3967, 449, -5880, 3285, -8230, -8174, -368, 5594, -2567, 8010, -72, 7275, -7794, -7481, -8921, -1665, -9747, -3585, 3940, -1877, 9895, -1668, 5728, -3296, -6486, 8703, -2527, -2703, -8122, 6135, -1766, 2087, 993, 374, 3621, -8181, -3380, 5935, -346, -640, 1614, 4469, -5320, -5540, -9513, -2641, -553, 6027, 1479, -7558, -9731, -9694, 8823, -4377 };
        int[] Y = { 5937, -6001, -5438, 2770, 9799, 7436, -2141, 1668, -5884, -5319, 5175, 4620, 771, -9095, 1019, -8763, 645, -5585, -7390, -9000, 8822, 7577, -7591, -4736, -9098, -4073, 4010, -9177, -3005, 4375, 2821, 2058, -57, -629, 7076, -6792, -7142, 7938, 5771, 363, -2728, 218, 3128, -2597, 7666, -2314, 2266, 3954, 2014, -1927, -4211, 6065, 5245, 7164, 6676, 8041, -3042, -8299, 7653, -3382, 8947, -6885, -1147, 5694, -6500, -2251, 7419, -4220, 3397, -5836, -1068, -2713, 3213, 279, -2987, 7264, -1515, -6383, -6065, -5823, -9699, 4353, -8548, 1938, -1035, -5254, -3808, -6213, 58, -8966, 3390, 7136, -1455, -7567, 6675, 1162, 4700, 5647, 5167, 7349 };
        int[] R = { 95, 33, 4, 36, 62, 14, 89, 67, 46, 25, 76, 28, 79, 23, 100, 9, 48, 1, 100, 100, 50, 7, 96, 44, 91, 71, 28, 5, 11, 40, 87, 57, 24, 42, 92, 85, 55, 81, 3, 1, 5, 30, 80, 35, 5, 80, 43, 52, 32, 95, 4, 81, 1, 51, 76, 91, 21, 3, 48, 84, 95, 34, 40, 18, 76, 84, 55, 30, 64, 57, 82, 20, 87, 14, 54, 91, 45, 49, 94, 76, 43, 49, 9, 95, 100, 84, 37, 72, 39, 84, 55, 33, 18, 47, 50, 45, 30, 4, 26, 93 };
        int Z = 14762;
        assertEquals(0.5483671199581538, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.5483671199581538);
    }

    @Test
    public void case70() {
        int[] X = { 256685, 683474, 878631, -572462, 555235, 596755, -305275, -68688, -833288, 632468, 782759, -944256, 883972, -855998, 334233, 692664, 521928, -858423, -182610, 824708, -73792, -33671, -562490, 171866, 222195, -873396, -128452, 226539, 604347, 916286, -255032, -47996, -503585, -696018, -855803, 461038, 460686, -827162, 634069, -974452, 321861, 898217, -183997, -981236, -725792, 763922, 543469, 757785, -236836, 770248, -493027, -22233, -762994, 13887, 366921, 771826, -354686, -657594, 794797, 882526, 91848, -19912, -976865, 237868, -268497, -306339, -757901, 752236, -214965, 436456, -791461, -789168, -396822, 240328, 641089, -749206, 287799, -405252, 102312, 996865, -169735, 650833, 668775, -485529, 206190, -984126, 167264, -180796, 775554, 792703, 543977, 186578, 866525, 614939, 271949, 858147, -433506, -406319, -949047, 23018 };
        int[] Y = { 850831, 671386, 817437, -619179, -791805, 46630, -990790, -686057, 343538, 863150, -431298, -575671, -748775, -522582, 910837, 890056, 71243, 298261, 450622, -518668, -847822, 96707, -798507, 251422, -120757, 794531, -835868, -453857, -870691, -837961, -40538, 61694, -326456, -555960, 314394, 538003, 639926, 37824, 454472, -617476, -922319, -645784, -819207, -379827, -113078, 508423, -464303, -820897, 967072, 604835, 969983, 962181, -814547, 85340, 326250, 362747, -151821, -525254, -663671, 179423, -159866, -967365, 776463, -451926, 202115, 543499, -236597, 300505, 61181, 357160, 607161, -154499, 765438, -248508, 140331, 724356, 115777, 961366, 516979, 154273, -507051, -891192, -240449, -831790, 577542, -207562, -945857, -462183, 78813, -140401, -657121, 556341, -74976, 702138, -967998, -829549, 591182, -774195, 430935, -133261 };
        int[] R = { 39, 44, 93, 97, 86, 49, 52, 18, 1, 74, 93, 94, 34, 95, 24, 98, 30, 48, 62, 63, 91, 93, 2, 88, 3, 75, 74, 99, 100, 4, 8, 38, 100, 1, 35, 37, 49, 38, 54, 2, 12, 98, 47, 45, 92, 70, 94, 73, 69, 55, 35, 59, 100, 37, 47, 2, 63, 20, 100, 14, 75, 60, 52, 26, 12, 38, 62, 12, 27, 15, 13, 38, 65, 59, 34, 56, 80, 79, 29, 48, 86, 15, 59, 85, 51, 5, 38, 66, 76, 90, 79, 2, 1, 82, 28, 12, 71, 89, 75, 98 };
        int Z = 1790791;
        assertEquals(0.9940752438447591, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.9940752438447591);
    }

    @Test
    public void case71() {
        int[] X = { -581656958, -38908208, -672137682, -662924748, -252482211, -300894524, -694751908, 164639185, 734794652, 111029653, -358496402, -458498985, -151664591, -463341650, -957094493, 232263625, -138415350, -933560131, -234418631, 363636160, -564517641, -114397915, -277808630, 847425754, -509116722, -907390766, 531049382, -322919617, 315150963, -882961085, 79420057, 516029614, -91429251, 880904795, -898590977, -812748725, 909071639, -427410874, 911216449, 51999905, -938324743, -140462648, 30313129, 4604451, -954676241, 322742255, -855306600, -956964415, -140877967, 125100087, 934926517, -355093914, 717511806, 735911133, -762374124, 754094133, -304850770, 22589344, -62971753, 533144345, 767275685, 609293355, 547174823, 274350844, 109159685, -727521733, 189816097, 445633419, 570153143, -241088864, -527004651, 738258841, 742256131, 19535674, -493074688, -380424941, 261082974, 440481719, 113525126, -348826941, -966799849, 971803721, -863997029, 916460202, 156530753, -471710146, -5248416, 515390826, -528366233, 257765139, 940122874, -986824002, -332941083, 861979999, -994654638, -521667374, 139671966, 970586785, -468457297, 142851875 };
        int[] Y = { -897112405, -308523454, 529563716, 502381722, 63873488, 931887224, -103369649, -57718563, 51049652, 735293296, -835538209, -859675129, 455464472, 683911878, -569825252, -401426173, 146358482, 221814831, 238896615, -438884854, -336859768, 306766464, -994516010, -729056503, -989216297, 91269951, -573826822, 504997388, -486239701, -658245771, 720705727, 228035318, 622137924, -248019114, 26563056, 163804641, 910192400, 656168595, -540088841, -802790425, -702091250, 206575996, -550038165, -10242072, -752999004, 944859173, 580676140, 45801646, 475260994, 916364957, 980724728, 570279582, 255773412, -648141890, 316705981, 177683744, 50025398, -999748010, -948349479, 341374137, -383510633, 880085920, 164160508, -872033546, -219708325, -993761906, -721084454, -943866534, 495522371, 625236473, -747973446, 683541937, -39696311, -103095115, -398312736, -541910626, 583218915, 451042851, -200400465, -239317278, 963991252, 325574552, -502153378, 366966279, 566482217, -662420455, 795122969, -817487214, -881768691, 675381424, 70084288, -914421151, 344321304, 253198980, -541056751, -817346914, -430628150, -42640061, -117395259, -635489985 };
        int[] R = { 25448, 10441, 65847, 64770, 89185, 69414, 404, 57877, 68098, 81828, 55657, 52386, 90232, 76808, 71943, 11536, 57162, 70925, 49659, 13913, 19890, 12926, 78268, 48041, 50746, 34684, 62276, 46005, 57379, 52262, 39834, 82826, 79054, 5680, 63948, 68239, 75093, 64351, 26115, 59542, 62530, 98123, 11928, 52762, 74930, 222, 80649, 48443, 87498, 46659, 62355, 7387, 59585, 40622, 55428, 10330, 91657, 17703, 72686, 49035, 86316, 12519, 48213, 65370, 18198, 12160, 33608, 9642, 92862, 76074, 69184, 55391, 74196, 97463, 24504, 65477, 97684, 5153, 13919, 85182, 51811, 92625, 92568, 27747, 49598, 64347, 54428, 41255, 98402, 27113, 90289, 1069, 39631, 38501, 66438, 74180, 67012, 16397, 174, 59873 };
        int Z = 1000000000;
        assertEquals(0.9917621639755959, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.9917621639755959);
    }

    @Test
    public void case72() {
        int[] X = { -767627401, -506778943, -55533078, -351237097, -85911808, -49152621, 750721911, 382984066, -47684194, -474207805, -141852292, 542170441, -541408470, -671753374, -260475180, -269588729, -294645013, 892859074, -516347442, -117640080, -655105831, 94744758, 385712274, -127985929, 264869610, 632236052, -740057243, 863822779, 975611389, -12710733, -749578363, -969221858, 911183488, -246917820, -663726163, 882306534, -531350602, 429692443, -307296470, -55492052, -864904815, 683920691, 567167304, 591460477, 935835976, -483897968, 738987026, 434670421, -872749818, 782734151, 898662496, 707824329, 347124684, -52108680, 252744206, 79103588, 647845190, -427643785, 15800456, -462823893, -328308180, 342083477, 104874394, 422498427, 163374847, -366616547, 575305970, 49599501, -916990355, 429368162, 61825268, -139899934, 976528738, -629715660, 144197043, 796481980, -891777768, -244833136, -620352063, -679309083, -725080496, -550796960, -825399213, -75333473, 554620997, -617156836, 865689739, -31149430, -29633197, 687064025, 458437351, -498851817, 327144169, -51899988, -263532870, 583739496, -482167408, -994032540, 734932917, -902472542 };
        int[] Y = { -426584001, 611032886, -981718855, 839524924, -8080114, 890215000, 715167661, -374281646, 985268124, 842324416, -862423414, 942447068, -413116722, 504673796, -710878327, -142636260, 631808422, -134768774, -248367816, 329912036, 58431708, 280514458, 461710206, 668427553, 933494093, -253328384, -789332234, -993024681, -837287766, -55531302, 757361167, 538144773, 951836708, 855213219, 352239954, -161685163, 257768643, -36787385, 96995725, 871489886, 920999614, 531440031, 25626429, 617813511, -874679542, 263596641, 871512375, 726243005, -179687670, -876069961, 471614185, -795115640, 184987452, -153894385, 242150670, -17505702, 2718894, 725998486, 925926799, -743775874, -869673164, -137679755, 661630283, -417050974, -297895336, 225761930, -35908765, 351408703, -705296949, 207912103, -383203712, 110597903, 626879893, 119300639, 885441093, 205929384, -722965381, -201332502, -60048253, -78429970, -616537119, 979969465, -325069471, -578374810, 689197609, 830330393, 11704719, 15872990, 335073746, -43907657, 850766496, -680661803, -298478889, -810843894, -352894135, 716470733, -193465765, 474393491, -732851073, -253934363 };
        int[] R = { 71570, 64758, 82712, 92643, 9408, 55702, 93609, 99507, 45684, 17620, 30700, 12180, 71017, 92503, 60410, 66258, 86809, 4304, 93401, 80944, 94521, 80487, 28550, 60287, 37039, 38394, 11877, 88112, 23049, 46241, 53147, 94618, 27350, 52211, 87260, 53109, 7912, 97221, 52615, 69948, 14840, 83314, 82127, 2208, 75817, 42536, 68466, 78977, 63192, 61866, 76272, 57712, 42353, 4821, 17999, 95743, 43214, 46227, 83854, 82615, 8819, 53352, 77232, 36168, 21914, 80844, 5629, 29826, 78064, 58243, 99773, 92903, 41557, 98251, 11463, 33725, 57139, 79928, 12701, 20330, 58145, 5324, 78041, 16849, 26496, 12391, 12591, 86061, 74970, 12796, 68675, 83788, 82500, 45907, 36308, 4413, 26750, 41936, 50590, 4813 };
        int Z = 1000000000;
        assertEquals(0.9915470292534703, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.9915470292534703);
    }

    @Test
    public void case73() {
        int[] X = { 218916603, 328353330, -559954944, -532734532, -689581345, -38826260, -812018193, -747387472, 766804011, -888333678, -621995122, -8137323, -124959440, -167101914, -380172850, -894186345, 21328958, -267017735, -733210002, 946671098, 579270594, -694206851, 684070741, 558068754, -118356365, -812766652, 261302004, -371348649, -626693413, -628167746, -824389234, -605955715, 597410119, 279518447, 525242072, -458444174, -64203256, 348317805, 446761700, 51665102, 205305344, -157985906, -242884792, -705385147, -67785117, -876444467, 708423337, -590408897, -60406339, -341486283, -801149597, 395193784, 952581481, -466143204, -502414502, 669493954, 939789123, -26843548, -356814414, -52252118, 918297941, -21806590, -968645829, -637587440, -187175540, -319733287, -779004179, 706194344, -310955014, -688477902, 395178561, 226122069, -37968068, -370157952, 690227020, -671898367, -908655718, -940278946, -158436799, 758870068, 409456462, -186453829, -646046779, -625079008, -917502074, -622887662, 524045118, -352681027, 954491703, 809312022, -850281758, -105760037, -27431700, 488755375, -328938076, -236513546, -31261504, -779371534, -315615548, -486826430 };
        int[] Y = { -423040159, 250830964, -958723824, 361614817, 178867324, 262966956, -357169935, -640602911, 119798684, -275502842, -82016436, -39647652, 934983764, 643102579, 75986081, -188749640, 92159454, 298627870, -43092595, -669131512, -536202234, -103625355, -5858169, 130490158, 726102906, -426909967, 770525743, -626429992, 285576805, 513657879, 104494286, 713105480, -994504478, 100053372, -377008745, 964589701, -406316060, 659099502, -664959676, 390347436, -48099013, -904214632, -283815022, 81683323, -505209901, 635987422, 150265075, 806357929, 65858960, -887399334, 233145247, -61111392, 772720444, 904151890, -362316907, 386291763, 964273082, 934073385, 526183726, -522512640, 316130618, 641097814, -360109317, -463681599, -911416106, 573868691, -55586321, 489055367, 355190976, 823535947, 392739289, -980440157, 352850457, 457616828, -487819311, -762944164, -991145884, 122861975, -556530428, -482256186, -790140861, -317540593, 691104959, -231583009, -52319569, -468836525, -117463018, -654587582, 68822930, -54380366, 944850232, -213108523, -73882860, 992284024, 775030426, -803392529, 383181439, -115931176, 927529081, 825615040 };
        int[] R = { 65850, 51566, 40216, 45221, 44601, 27799, 75051, 83885, 48563, 55417, 42480, 15148, 79947, 67356, 27618, 79160, 54207, 27994, 8803, 84634, 68204, 1332, 72275, 49643, 50807, 19805, 52394, 96241, 66698, 83786, 61246, 32547, 35351, 1461, 77768, 96303, 29259, 52818, 96540, 94173, 24586, 55371, 9321, 4532, 22727, 53290, 83691, 76933, 81283, 8845, 77918, 65838, 10177, 50192, 15480, 77335, 86349, 84225, 73575, 53046, 84362, 34820, 1944, 36064, 52633, 96063, 32366, 98243, 65232, 45257, 92416, 89817, 628, 1736, 94348, 39706, 71377, 94391, 16638, 52659, 3235, 10908, 18496, 29763, 61099, 50327, 7097, 63799, 50903, 80672, 33196, 35264, 31843, 35140, 71327, 84475, 31202, 20044, 82718, 96434 };
        int Z = 1000000000;
        assertEquals(0.991190852, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.991190852);
    }

    @Test
    public void case74() {
        int[] X = { -48264235, 924355491, -945878718, -444744281, 790620094, 955804107, -605704506, -687969525, 93871288, 244624526, 634270270, 818491235, -990603472, -377094451, -369605805, 593454133, -316483735, 119983205, 227786854, -282746527, 348120864, -862607112, -352573007, 728636777, -415214849, -411038400, 362117529, 359983909, 119471560, 961940082, -502203320, 759463761, 925720192, -786082216, 149207159, -24430347, 159895730, 303669748, 142646803, -811429387, 710600535, 459863125, 157030128, 277955418, -261958101, 618095409, 647806067, -287881185, 962038843, 432066012, 995308498, -313606733, -901082880, 520189319, 502099359, 306624044, -406602845, -137934311, 291366911, 692651017, -508301582, -22519141, 393338302, -287182969, 89396435, -24172207, -880778048, 92425514, 955055422, 530623318, -944233539, -522371028, -308767239, -619502066, -76195067, 5975515, 475415861, -298153360, -43927691, -929164015, -157101663, -70545413, -143631516, -672256991, 775585761, 408358073, -892644025, 775688392, -591034440, 654061767, -559859893, 809275219, -393564648, -609062624, -692764907, -423332820, 196595567, -740262634, -656849160, -291430376 };
        int[] Y = { -467916287, -857286929, 630517549, -414487929, -733198485, -446330558, -581103333, -33366838, 215550708, 117193027, -885688808, -610698538, -886920434, -127544166, 615997149, 681237223, -118762990, 296990102, 876532179, 675865236, -632544081, -755305394, 230317923, 893348102, -136134401, -206700599, -256099684, 809140291, -873393016, -391822420, -208175353, -278336309, 316616501, -928735238, 139320795, 655395696, 431828975, 838028644, 904406029, 960531884, -446950583, -767396346, -689664328, -698586739, 218253801, 757480216, -868501509, -605883853, 463659289, 83299396, -844252271, 227361315, -854428889, -643260852, 501799412, 504408054, 328574279, 504316616, -405890098, 286328658, 145828867, -903089408, -79625398, -51964739, -896108704, 998781126, -726475582, 573991282, -996565108, 44772095, -526077576, -152147222, -526017257, 725406816, -711883546, 408567607, -908060702, 724559143, -673146629, 236003494, -616820725, -867165370, 18476122, -629233485, 510925139, -218438457, -928218437, -596687278, 879565871, 91175755, 38862275, -154194537, -663916732, -787125430, -360310269, 463867755, -962946253, 25460008, 624706130, 848979959 };
        int[] R = { 31783, 34771, 66692, 66572, 36804, 53971, 18620, 19028, 64419, 94375, 84798, 26694, 54091, 79335, 66024, 87176, 49368, 7807, 66892, 75990, 53086, 34647, 23339, 15692, 84125, 99701, 54421, 90255, 25901, 50733, 37877, 74035, 85503, 20920, 40606, 38658, 74890, 75577, 57685, 55660, 69952, 58834, 98706, 24042, 38169, 64729, 11218, 3888, 72535, 94461, 79878, 41973, 45459, 19568, 57664, 29583, 19268, 12084, 36189, 45168, 62816, 90417, 35554, 64670, 11337, 76159, 3327, 2578, 51736, 77363, 58238, 38039, 36197, 73295, 78432, 90717, 38023, 6001, 94604, 26909, 461, 90833, 68881, 62272, 10400, 26545, 91854, 46019, 54980, 44395, 91186, 34148, 34811, 43091, 15169, 46147, 19250, 18496, 48725, 87337 };
        int Z = 1000000000;
        assertEquals(0.992048858129134, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.992048858129134);
    }

    @Test
    public void case75() {
        int[] X = { -991160206, -337757209, -343539342, 123437436, 207719505, 27543315, -553479380, -994737269, 617754105, -175090139, 144492550, 805544049, -142924761, 729716348, -154747863, -272530204, 852217370, 198788903, -905920771, 121131244, -354461073, -73110658, -110109733, -403803824, 374943071, -291377765, 107148515, -198579188, 932783961, -543929458, -144607771, 85956246, -279263429, 45098207, 459487843, 151340829, -167420365, -426922077, 997332123, 857910290, -262136218, -744227169, -951242577, -324390718, -871101893, -824074716, 537296192, 865051159, -47292465, 854260175, 928895172, 25761932, 82568844, 226361988, -135926264, 157208869, -86076686, 472379923, 696758749, -626378509, -517607171, 288603012, 213000539, -723979338, 916319891, -767073314, -436356869, -794046952, 98035609, -303859388, -809713926, 337057063, 67537003, 638142583, -606207627, 184672746, -567490669, 31234514, -479446283, -40784213, 38486071, -93497589, 305725480, -698801362, 612986189, 342755670, -168761715, -23523434, -489249719, 594469, 631219817, -924304852, -363575681, -831718048, 268302280, 91304492, 237908849, 486664000, 924862977, -652428127 };
        int[] Y = { 893158820, -665581988, 674996530, -3251960, -55804147, -964736303, 894146353, 738250803, 549613228, 100743997, -20173, -977220215, -229366925, 486596061, 206898638, -249628129, -134207984, 867010700, 309348247, -530999825, -726625443, 904692712, -89809989, -731010182, 917945074, -162371433, -728835377, -860926978, -308508570, -817464912, -339063580, 467981019, 834819512, 987508787, 57770731, -361836507, 719277447, -257684322, -761989088, 153543361, 525481391, -155448469, 308022796, -65035423, 216414839, -984454928, 802109730, 881266338, 492460372, 633613354, 92316443, 187143630, 114495434, -473197680, 138555163, -261451390, 942655836, -918353323, 285791660, 719726351, 570921789, -57684918, -861649932, 862477113, 512759088, 756857760, -344056682, 269185775, 93862049, 187552991, 74157204, -896453767, -718420594, -120008024, 503228543, -506418754, 101464714, 299698203, -208087636, 169741302, 510782136, -178438608, -723116805, 165907287, 42524193, -49396066, 802464659, -986010792, -465689630, 377613861, -503302253, 895584858, -153168994, -420397967, -62491083, 82103353, 516738331, -133144745, -560682700, 909350344 };
        int[] R = { 312, 412, 1000, 325, 598, 145, 932, 580, 669, 794, 754, 275, 115, 965, 243, 110, 732, 562, 94, 817, 832, 801, 743, 516, 117, 488, 5, 170, 521, 349, 418, 833, 112, 770, 157, 62, 266, 88, 641, 934, 233, 747, 208, 699, 63, 803, 160, 795, 364, 253, 963, 547, 54, 705, 62, 522, 192, 67, 692, 713, 767, 461, 897, 879, 582, 53, 292, 848, 492, 932, 781, 76, 678, 341, 774, 741, 495, 285, 887, 210, 538, 849, 757, 943, 553, 170, 816, 96, 588, 507, 808, 355, 320, 56, 585, 901, 108, 876, 748, 951 };
        int Z = 1000000000;
        assertEquals(0.999914262, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.999914262);
    }

    @Test
    public void case76() {
        int[] X = { 214509880, 470792276, -795275121, -940316510, -121211796, -727008639, 999649430, 165680025, 330681000, -148051353, -427933386, -296567526, 262812242, -11352840, -526266952, 777366060, 21363666, 478364511, -202851482, -648603972, 652190843, 583656498, 852989961, 867096810, -784587835, 562474093, 89921400, -384096030, 226764511, -731958919, -219935723, 346324650, -315032376, 910454531, 948402889, -841947136, -639703821, 957466712, 27456509, -381397449, -692228038, 729598272, -655429514, 134883080, 214175881, 340258197, 81199685, -675410993, -216304715, -766632273, 849956734, 470334043, -739215749, 687387044, -104880628, -136265663, -717688743, 431774458, -684590946, -960344990, -138532245, -332878430, -839702387, 320996700, 299187654, -73231059, -548724735, 343837649, 823882210, -759645450, 805041894, -578387858, -614291403, -748365246, 429336207, 50165528, -861829776, -640116738, -96366088, -610055618, -901258765, 397214483, 79368132, 442956692, 624793179, 537045888, -98513254, -805082062, -978112415, 864203359, 967190252, 680349782, -149929198, 88101251, -134096311, 494365383, 86476254, -190371283, 485148353, 774127437 };
        int[] Y = { -688446471, -244809312, 279123423, 204797090, -160887743, 222233521, -688402044, -662130730, 75566176, 937142883, -300905204, 950050271, -175604486, -405742200, 478782237, 475727078, 343559315, 806704787, -475460472, 584951284, 785535033, 616942564, 562284461, 17301026, -734337982, 552545832, -238468528, -275140999, -348050365, -927342207, 565785543, -846577664, 828638383, -237060304, -369817034, -645479778, -481712746, 334321851, 246528342, -534364198, -158583139, 868625864, -294538840, 811124682, 529682769, 321938161, 699085236, 857329524, -526830982, -536855181, 768917769, -757032790, 149790007, 999660430, -295493871, 229701026, -325967364, -851128679, -947126461, -115611763, -958269311, -277310250, 458582102, -37594518, 934062310, 734577453, -461817365, -658643301, 287997591, 860442075, 897361065, -890084828, 893502699, 843834633, 108499573, -22471097, 249512674, -429156138, 139453828, 398540568, -746233063, 481528924, -329760972, -524690507, 503508662, 53766379, -327792036, 476714508, 537581066, -766956602, -985028246, -270398586, 794241754, 647668404, -18821734, -564760782, -31843347, 678137933, -891494638, -979362882 };
        int[] R = { 377, 264, 734, 766, 823, 244, 854, 243, 92, 457, 238, 338, 510, 824, 611, 618, 900, 368, 908, 635, 341, 690, 139, 41, 750, 73, 361, 740, 866, 596, 394, 594, 211, 127, 359, 386, 722, 565, 628, 165, 21, 217, 502, 882, 40, 465, 851, 291, 184, 110, 926, 524, 152, 64, 916, 901, 488, 628, 992, 705, 223, 385, 651, 786, 864, 9, 171, 585, 573, 798, 750, 945, 14, 603, 179, 405, 419, 381, 47, 602, 491, 324, 477, 642, 387, 392, 894, 226, 371, 885, 283, 594, 622, 933, 731, 485, 293, 253, 421, 218 };
        int Z = 1000000000;
        assertEquals(0.999927072, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.999927072);
    }

    @Test
    public void case77() {
        int[] X = { -452183073, -102964975, -199020064, -662516831, -123200947, 827706433, 767446245, -477680877, 376899310, -171706856, 22959367, -266411388, -950456675, 234720451, 22815999, 879216944, 782964967, 48849763, -423871057, 880929041, -596580141, -58959592, -253435996, 607618237, 745437472, 46820214, -926936592, -792416537, 810813412, 680556306, 15285452, -13661190, -246987877, -632751803, -626393902, 70447291, 927349024, 292033135, -223596416, 516153034, 531492818, -294979788, 581237559, -40855383, 967049668, 783229443, -986217648, 780585538, 564434294, -756580812, 632050892, 118834945, 513984049, -592701289, -163035805, 411647060, 376860279, -5474386, 646539528, 55181515, -472774167, 448440668, -340334298, -397230046, -347396253, -948113142, 685871669, 391363414, 477816167, 642468891, -945435380, -187896949, 465775507, -132909850, -944733814, -578420583, -731535032, -581532503, 108403809, 976637923, 985089761, 287763561, -844215505, -428366208, 515708032, -667916353, -829983758, -488471778, -754217346, -260590653, 514505703, 821491847, 865872487, 170426418, -86819606, -135109066, 776848113, 300419857, -101999602, -500644351 };
        int[] Y = { 652137518, 931367400, -876890360, 630396893, 746253514, 35091571, -729998782, -211832659, 964640476, -127696625, 234356126, 828402156, -685678320, -337300563, 857608077, 257901910, 859021972, 844383223, 314141194, 219536389, -218284015, -26186632, -963727733, -101703126, 620278369, 832344643, 492205444, 718355087, 642085164, -818078039, 598633272, -714471543, 970281966, 46083928, 738667589, -49850576, 372764632, 610267109, -314056500, 117376925, -941369988, -641485717, 168017427, 463975548, 120529160, -14828539, 63066243, -29334030, -993187555, -170287722, -46070984, -246355810, 296175507, 460360689, -421109508, 397083229, 85008244, 501087634, 103442456, 63128262, 952149477, 500683111, -512289591, -48563927, -310467808, 794881352, 144022656, 480407117, -750376434, 902946524, 371021775, 238998145, 43631405, 709055691, -410181669, -928594541, 407689817, 230063218, -811811147, -130489262, -55027858, 183850454, -819124129, -639248678, -457541732, 593502858, 547257662, 137109879, -277619491, 442995637, 175898586, -755165014, -653384182, 356084165, 968888086, 292506990, -264460394, 222966458, 993131371, 505601439 };
        int[] R = { 46, 652, 965, 708, 10, 197, 129, 854, 122, 766, 369, 708, 296, 383, 464, 478, 968, 629, 161, 407, 410, 504, 351, 805, 303, 162, 682, 27, 652, 474, 483, 50, 125, 799, 109, 487, 348, 237, 340, 469, 354, 60, 529, 649, 794, 344, 479, 114, 972, 991, 520, 381, 494, 222, 538, 149, 384, 219, 175, 387, 44, 10, 436, 168, 808, 545, 6, 155, 133, 698, 976, 487, 757, 856, 487, 903, 199, 965, 16, 522, 955, 887, 255, 449, 108, 792, 597, 843, 362, 123, 582, 405, 132, 369, 924, 292, 913, 930, 798, 398 };
        int Z = 1000000000;
        assertEquals(0.999926154, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.999926154);
    }

    @Test
    public void case78() {
        int[] X = { -460977600, 20793491, -630518351, -716618084, 584919959, -225712002, 735869046, 49873280, -308049509, 134242890, -51585658, -402516607, -554488291, 14708230, -274627508, -620458648, 37622559, -910881181, -28969803, 565918064, -483625550, -635136995, 439228905, 715070517, -914973222, -825490717, -527695910, -813989259, 580992824, 843332086, -112422554, -296258149, 810075582, 375735085, 687154948, 10484208, 585799568, -242791446, 183147833, -624823241, 512208078, 622228996, 383353990, -974604543, -969948452, -672483500, 986760071, -789965181, 28397332, -193430098, -812386122, -738849131, 849535510, -128246870, 792018893, 835837105, 55900423, -196647312, 599317063, 108633934, 694221191, -209185581, -602375437, -35365974, -869883735, -51357756, -285226733, 932971899, -624363817, 872478294, 666805235, -425642388, -871414207, 14476424, 646057909, -892513137, -756744147, -726293069, -953365833, -694925061, -990455116, 210552130, 389006058, 115476798, 57259151, 282268939, 548786844, 151802751, -182717381, 743448673, 141905888, 874087097, 442693234, -815318681, 214555562, -924341341, 109042913, -185725233, -130933852, 363935200 };
        int[] Y = { -289157123, -469806452, 59148174, 963177725, -640404733, -923157199, -47620913, 238509718, -102657168, 443922275, -416588494, 374739761, 208189793, -728713087, -861667025, -84865711, 443885134, -693800822, -176281367, -597415217, -68637650, -304029429, -22849417, 311605418, 596367545, 442719315, -976307662, 96136508, 230440423, -228653808, -622530590, -95447949, -868191683, -421965385, -298743671, -713675504, 244985724, 336156239, 412760433, -245858081, -108322058, 727116725, 358552826, 121643528, 500619182, 533617051, 516333210, -42081848, -270830126, -281514296, 188460542, 789471473, -717927440, -701281408, 478422078, -992332204, 488233238, 523890210, 395218516, 140812021, 700863783, 18987469, 156010426, -454238239, -230149259, 848930704, -435975042, -852056068, 321578950, -137106707, 205509671, -239261518, 701404193, 245561681, -113718174, -844976761, 60802773, 736811658, -630066255, 496170106, 631835139, -131341669, 541052048, 926745370, 94284273, 515148380, -45807341, -698569561, -222594333, 548866951, -183021297, 855927174, 962840649, -165669979, -341337790, 158155125, -711973603, 746015818, 830443593, -968173002 };
        int[] R = { 620, 383, 166, 315, 634, 79, 556, 968, 675, 860, 830, 973, 925, 357, 751, 574, 895, 731, 832, 685, 523, 310, 968, 127, 811, 786, 131, 404, 326, 485, 623, 297, 220, 140, 611, 853, 218, 519, 172, 892, 378, 1, 217, 303, 709, 967, 228, 604, 50, 411, 640, 572, 720, 607, 50, 530, 744, 532, 285, 70, 16, 907, 366, 235, 46, 329, 440, 616, 847, 611, 859, 576, 964, 75, 230, 672, 394, 458, 627, 443, 868, 267, 366, 940, 873, 415, 821, 617, 298, 106, 38, 313, 364, 403, 900, 762, 83, 339, 377, 281 };
        int Z = 1000000000;
        assertEquals(0.99992029, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.99992029);
    }

    @Test
    public void case79() {
        int[] X = { 0, -60, -62, -60, 63, -97 };
        int[] Y = { -72, 67, 61, -8, -32, 89 };
        int[] R = { 6, 7, 8, 7, 5, 6 };
        int Z = 918;
        assertEquals(0.9407071068962471, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.9407071068962471);
    }

    @Test
    public void case80() {
        int[] X = { -26374231, 61494847, 11326401, 72192325, 565164483, 13532683, 861519469, 1514056, -925646105, 492291362, -467223356, -420425748, -473516689, 382287994, 893748685, 654657603, 208800085, -111382988, 326863410, 161735935, 493878780, -661969257, -874041908, -219391346, 76583988, -694394555, 768370819, -632528136, -447339685, -413740815, 361373501, -113727640, -489583575, 790300073, 113718650, -560991231, -832337334, 520544740, 738960154, 358583606, 451618794, 64384193, 20314817, 166909828, 564244814, 661259226, 354081768, 348308255, 705130203, 512628681, 795677044, -983995345, -1613107, 186909972, -96992524, -261150111, 303504447, 621117284, -727479342, -496506475, 221194108, -69858824, -637785275, -271457572, -261808115, 866797038, 562738873, 538015891, 60365173, -9957948, -122935795, -705969015, 449158718, 455292215, 820146119, -320878569, 962080745, 469132457, 513937180, -795297850, 229708990, -685746809, 70436330, -61832550, 801204916, 288159201, -342898558, -55613662, 26247222, -821211690, 315220921, 740249923, 237860359, -729684038, -655005117, 232575542, -892109482, -382194678, -142085049, 93347314 };
        int[] Y = { -368334082, 572463385, -80667439, 208322624, 991499278, 805824357, -24140925, 436538217, 460489367, 718831531, 396236849, 705241299, 869729424, -103408495, 236495914, 512653501, -135811387, 21095343, 418226640, -323393488, 111468634, 421478824, 380324832, 250127197, 876755650, 661341390, -772882156, -266371537, 159051374, 211975114, -124084904, 705409992, 662261854, 476375118, -808439657, -342730765, 781502805, 55517850, 474742983, -855158189, 979636484, 329523839, -588114975, 100162926, 818191762, 995229991, 36766655, 54689312, 132178025, 632033357, -183349390, 860525972, -591490064, -979196185, 779237932, 122764387, -55886658, 363909408, -753216310, -96200690, -776210374, -218717445, -497103371, 217038246, -804471188, 569899077, 676352078, -805189126, 904017933, -39107895, -176288744, 294646633, -171709570, 581209744, -975144729, -348850305, -621357470, -121881193, -840974508, -747742237, 187991041, 485782626, -305615424, 984701614, -780389769, -745405575, -890714500, -41370268, 403640956, 839866304, 152506801, -835173495, -608800712, 892325111, 148490480, 800253622, 515257723, -53340993, -282040706, 30506503 };
        int[] R = { 825, 434, 342, 678, 995, 612, 102, 952, 978, 758, 990, 779, 720, 838, 402, 433, 879, 514, 360, 359, 569, 335, 881, 292, 938, 227, 791, 997, 188, 649, 826, 365, 82, 167, 394, 76, 130, 847, 379, 459, 604, 369, 589, 323, 558, 990, 108, 437, 856, 467, 795, 424, 801, 28, 67, 90, 606, 857, 87, 146, 857, 264, 510, 938, 782, 255, 366, 912, 102, 744, 370, 705, 464, 311, 28, 22, 300, 135, 458, 155, 953, 604, 578, 105, 983, 996, 195, 589, 205, 633, 734, 61, 896, 595, 351, 677, 201, 716, 940, 302 };
        int Z = 1000000000;
        assertEquals(0.999912948, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.999912948);
    }

    @Test
    public void case81() {
        int[] X = { -408928151, -892228106, 304792324, -782114879, 535615851, -266748466, -994854492, -220230255, 41697653, 552922436, -573820729, 973899089, 984015482, 804055038, -652279167, 165035848, -856716550, 120470677, 327173489, 53876958, -131799579, 952943387, 181430739, 281145490, 383840064, -941941263, -634705005, -118793777, -738602678, 189061684, -694640610, 9638224, 116394194, 270415094, 737727167, 11389731, -497433832, -701213525, -842539467, 607025671, 521459648, 36556678, 169839992, -627401492, -78199269, 4357222, 875593418, 881746100, -996620704, 288071649, 328969601, 308907323, -116310851, 210300711, 697512571, 37746202, -218809669, -80169579, 82169689, -149608684, 229066956, -638241546, 20477708, 949164339, 524665194, 603962635, 536697367, -532554581, -628023514, 464374890, 412698027, 102057366, 576423973, -20157356, 742314371, -671478975, 176248302, 781074408, 534740875, -213824421, 819991088, -618073571, -435689721, 862213027, 745999797, -94282028, 681225363, -642721874, -231082693, -768759351, -685161625, -649811099, -307507909, -58135936, -13640607, -606687560, -794780121, 895352858, -227905635, 999215786 };
        int[] Y = { 789186509, 837635963, -994869916, 580577560, 995753421, 904382381, 347124299, 394841326, -690111695, 349397345, -577453974, 242416704, 33362388, 307736644, 600368155, 87689808, -105482950, 712482889, 110716315, 178821828, 347430067, -639901134, 342430396, -201702927, 340236076, -588810746, -507185176, -142440497, 674029721, 654331941, -609645925, -516468892, -372380228, 667998095, 374528583, 442082632, 782540486, -121545724, -116726225, -10029326, 874348924, -79685058, -135100230, 774598018, 377335405, 936044180, -875984416, -554626560, 533981206, 583977540, -921960932, 335501147, -960560291, 534505006, 780295522, 239281524, -848407113, 888694899, -393608492, 645153648, -797255582, -610441581, -886227253, -626637348, -92725503, -33750955, 89191412, 276736913, 826298973, 832070927, 60808959, 113755293, 95351741, 745239768, -223292169, -112420484, -676623951, -398820456, -592962914, -688092370, 88589045, -405407559, -91095427, 932564870, -345902744, 376505249, 393537309, -168444128, -197743442, 977849284, 156593665, -294099716, 518164541, -101101527, -570894331, -501848579, 511037222, 542296542, -294433317, 224559758 };
        int[] R = { 4529918, 1065009, 9564120, 583579, 3841905, 8008248, 9472630, 4101700, 1692145, 9838268, 7653665, 802164, 2624390, 1753382, 6536133, 3305284, 7189908, 7637660, 6949093, 8084239, 6831558, 1314025, 83969, 385133, 1086517, 2380511, 5034137, 8036186, 9758277, 9593895, 8372249, 6804546, 3175255, 452720, 7388124, 9533512, 8460967, 9377106, 3635211, 2669464, 9215373, 1288875, 5987979, 4356114, 5558609, 2524111, 7661398, 5264868, 161771, 7126842, 5865459, 9509680, 8440867, 5949427, 9894812, 2043735, 846289, 7445301, 79921, 3120917, 9555547, 968521, 2441814, 2730802, 1421240, 2346290, 4780665, 2398558, 1723395, 932227, 7584373, 938767, 4737454, 3572351, 7811232, 296062, 6096462, 5472629, 8077281, 8774584, 5115823, 3942739, 8284263, 6073041, 9892165, 695426, 8116775, 738454, 657078, 713047, 6375722, 212625, 4197919, 8817536, 5459778, 8135510, 1163825, 240442, 534068, 5403571 };
        int Z = 1000000000;
        assertEquals(0.5021191220129484, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.5021191220129484);
    }

    @Test
    public void case82() {
        int[] X = { -425932396, -107012438, 34455564, -268604967, 391950626, -24485743, -462276649, -862428539, 250270971, 727437098, -954603406, 192065738, 890120425, 139079273, 117180171, 482585705, -318329553, 856274826, 346543477, -160348527, 258198815, 215169201, 658078978, 898916977, 385200064, -452707305, 14196406, 950546939, -868394317, -489005903, 912344869, -381203408, -266222459, -435975893, -67390735, -203776393, 781158692, 751097723, 201576041, -52620325, 981401481, -779095930, -2617026, -604947425, 671785433, -561618538, 770577644, 667321077, 885332889, 502082393, 552137745, 983345882, -829837089, -477566813, 942007365, -470705589, 740547476, 624039439, 831960740, -319208553, 27972900, 792909182, -676165391, -687867001, -268559936, 219254610, -600840887, 6510470, 494593158, 314607459, 719297129, 65042075, 740147275, 908041815, -770584733, 780886895, -960593812, 449624530, -591575396, 903290190, -179957277, 533349367, -30178000, 63992493, 581486183, 813888035, 868945709, 465660624, -420527979, 33717350, 453469159, 694703052, 945949383, 608371236, -134335466, 250176465, 339238933, 947607262, -28418377, -599220800 };
        int[] Y = { -95232415, 615720581, -997071653, -425787460, -307599997, -313745050, -979141764, -880164835, -5292037, 167648633, -852713850, -306436600, -53867283, -118918778, -118159971, -249739284, -836281120, 30086864, 946841069, -103468757, -767895489, -868026576, 130694617, 377161107, -89243834, -128130511, -815151192, -691459528, 541127328, 508853198, 381034237, 725196039, -624052346, 903184484, -211157227, -530367188, 128899756, -431122676, 851617882, -100613736, 205609876, -440368461, 515827714, -594812251, -794722649, 568758694, 862257931, -245588596, 901753990, 614752753, -7942674, 944480286, 248546412, 953985867, -36403098, 598575071, -135860205, 967806751, 23287874, -413675668, 518800804, 846283762, 981421802, 572401718, -93161791, 848603361, 37307120, -795495959, 873719317, 91050534, -656597782, 709684452, 581085491, -1694967, -92626557, 127416595, -102837704, 845002449, 770605423, 819951651, -309591346, -669904388, -19187720, -485268352, 67398525, -360578513, 265944491, -74003356, 600270522, 156436054, 343585313, -156840794, -110069359, -235715231, 124280117, 449474705, -429254602, 485802637, 437295793, -46382066 };
        int[] R = { 7389877, 6960581, 1206981, 5850721, 9739899, 7726689, 5397056, 10421, 3425014, 1833110, 5423854, 9526680, 5685760, 2264649, 8466051, 8271474, 9140598, 4181283, 3978963, 5937070, 2364519, 3453668, 2324888, 4135474, 2832761, 8127526, 5094150, 2644906, 1714868, 1476217, 7339225, 1621096, 953149, 1062558, 7471817, 693048, 8789246, 2868872, 703468, 4730611, 4701982, 8643673, 4257290, 2904093, 908321, 2723341, 3691918, 2565271, 9420975, 7670880, 8502340, 1785493, 3640899, 827227, 5920966, 6473660, 1471104, 1015115, 1634917, 5702323, 5007683, 8974142, 7323419, 5960831, 2553051, 4795235, 6653878, 3858648, 180458, 9873698, 8589259, 7398791, 8517370, 5362900, 2819236, 1942043, 8086240, 6511153, 4507313, 7507214, 6698385, 3009652, 1809058, 339283, 6353230, 7730023, 9329294, 340686, 1261489, 964211, 6043008, 6269171, 2454704, 5882778, 2230002, 5007754, 3194364, 1400231, 1382753, 3374822 };
        int Z = 1000000000;
        assertEquals(0.4921839498936061, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.4921839498936061);
    }

    @Test
    public void case83() {
        int[] X = { -564149230, 873601019, 465951905, 469283120, -19145399, -71262179, -100424933, -848508944, 33698103, 738489127, -985813632, 680452120, -758215357, 69522373, 557806576, -94479951, 726441489, -762988667, 606940229, 520477159, 722754932, 896683815, -775903239, 517829506, -962531168, -352876617, 789626714, 158352116, -67601967, 7760416, 73259660, 599880703, -922837692, -844610897, -447657510, -860896258, 661860102, -698625016, 207805538, -99881036, 30322215, -823714213, 191119099, -220307353, 62457171, 884129610, -35340845, -640450689, -699396037, -192989166, -555182348, 22498696, -516498203, -507322144, -495127295, 599673156, 912477188, -345398439, 110486405, 67350061, 498806269, -13693116, 140522691, -197358360, 991721744, -692004983, -296749303, 616462895, 140660099, 390067601, -583504572, -13753258, -265644479, -157127108, -629890197, -401590814, 28473194, -367876288, 921944089, -8914613, 955582174, -18118985, -120455982, 65578982, -610883272, 601936184, 297903694, -247918665, 679873847, 792195411, -629522943, -290976862, 314102863, 826992023, 76604152, -707261846, -241858939, -137034156, 212479064, -328463711 };
        int[] Y = { -363292430, -722782887, -251122044, 77260650, 375747326, 93276287, -620791347, -515782760, -895622654, 875973870, 31197771, -856929487, -161132899, -340404339, 49093135, 49490652, -304300652, 926098043, -742975091, -191451294, 430363815, 829025394, 521497085, -838565726, 540099289, 94379252, 150291663, -549386478, -797788736, 685036525, 263691575, -111783789, -359317069, 828447632, 746273232, -926047285, -157142861, -80308561, -952397185, 800792392, 485930235, -916309887, -698996737, 800162814, 60519889, -48700050, 72242868, 597236399, 50882024, -238884806, -298099310, 826308656, 772521123, 986398471, -825491504, -69931134, -534878860, 800159991, -9486447, 435693777, -790554851, 99250508, -497394021, -999390366, 827203646, -197947655, -255723615, 433061480, 783389883, 605679399, 59167165, -625335833, 366884261, 385470685, -730851337, 298893398, -158074643, 89236614, 947147168, -56261064, -179418504, 604686476, -130981384, -463386857, -162240613, 228285361, -597193142, -520486512, 131633371, 192964465, 579638013, 88923603, -890001770, 98214028, -266787197, 169048811, -261200166, -881347821, -663999596, -11585525 };
        int[] R = { 8833643, 2387242, 164343, 8543139, 8524789, 3167208, 5136896, 2674515, 1640759, 8101361, 7675577, 1278773, 9959225, 6599180, 4024135, 2477349, 4759398, 2238164, 4658993, 4062948, 6713257, 3707805, 2785002, 429776, 7443092, 4132825, 5127682, 1442689, 3900210, 9229561, 199250, 5250204, 4133154, 363592, 3793342, 2657942, 3530800, 8930237, 5332456, 5171558, 7031598, 5524385, 8966682, 9507174, 4639916, 2990816, 1984522, 1915665, 5228979, 6643515, 5978612, 4458588, 2867671, 8763614, 4888363, 310762, 5412790, 2532396, 4269802, 1829351, 1761956, 4469052, 7079554, 8411461, 7348995, 872896, 1069403, 3396146, 2319484, 8918210, 1084055, 9351081, 6958946, 50736, 1374607, 1598862, 5557904, 3359128, 6030878, 3303234, 2518994, 2009490, 7761821, 5386664, 3289455, 5166536, 8213778, 1218596, 7698931, 2483579, 3047946, 1977239, 9468982, 127499, 388699, 9334329, 3516746, 3974453, 2730474, 5836230 };
        int Z = 1000000000;
        assertEquals(0.4669187726410579, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.4669187726410579);
    }

    @Test
    public void case84() {
        int[] X = { -660305549, 149169380, 45167641, -410504840, 37088913, 983222300, 855285390, 976892315, -117539663, 887041966, -264910248, 456315091, 521112824, 888584765, 654620867, -870514094, 660645326, -286347471, -345856109, 43872013, -244202074, 71635974, 613210975, 716143448, 640814155, 364975919, -217358806, 358785582, 401842775, -665125636, -882024491, -223906411, 260355910, 953515492, 59622548, 841673396, 876998171, 108344793, 666870366, 73476137, -132706362, 65925276, 964775775, 941053154, 377113913, -275598546, -994334872, 506840928, 862275194, 565935509, 162776631, -930755072, 25950981, 382500300, 716104460, -853022222, -451977556, 51392344, -48691064, -488404588, -451140640, 389976088, -116024445, 257715355, 62206142, -457746443, -83776121, 117273928, 280117733, -655064803, -513299728, 550065722, 984583585, -234546968, -446419918, -164112333, 339471044, 48068777, 303421791, -991344190, -981951350, 295643415, -690108501, -27970926, -617724280, 671481134, 748671816, -948817646, -675521276, 471562756, 758832524, 724534461, 42279864, -111348118, 783420079, -416362296, -404299294, -683615253, 977439409, 917150382 };
        int[] Y = { 952170971, 431220404, -662694724, -286614540, 415919017, -312673548, 246368739, -978087816, -514843954, -339382966, -44644595, 916151815, -467750973, -395868037, -16385953, -745386778, 754166287, -374432419, 409161585, 607593364, -271740609, -704864851, -809991274, 511790660, -477421308, 475615614, 606918889, 823526146, -696567203, -224892951, 384928954, -386542789, -999403264, 408472605, -274538520, 86161805, -788849235, 769421187, -179012030, -628708444, 132385472, 31015595, 201124194, 371523285, -73935923, 463160908, -419212318, -450476472, 315711612, -679696784, -727531400, -989045616, 261917953, -967737496, 892195003, 97363321, 405802706, 321433898, 982920659, -504618297, -141889772, 73270521, -522515609, 684750379, -235212424, -280993707, -835338460, -331640811, 733538833, 538186396, -600856955, 207863371, -616444988, -466102914, -74770805, 213771290, 643533124, -482795375, 663305159, -856792308, -237025625, -713777761, -112858045, -22136851, 49829587, -29679774, -48389317, -362378910, -471873123, 821749014, -651719389, -468337214, -175078469, -166333954, -823711051, 589417565, -865944985, 133100760, -53646606, -382748969 };
        int[] R = { 8077214, 2428745, 1711799, 8982885, 2488244, 6607062, 8849898, 4361367, 7605239, 598913, 6038002, 9324630, 8635570, 4375217, 7093497, 6230392, 540512, 5943803, 7130374, 4251564, 9070066, 6547940, 7504592, 7531403, 4775973, 3121706, 8850787, 938933, 875671, 1599756, 9447834, 8952884, 6544852, 1159632, 452121, 1549448, 283045, 9302018, 8427166, 7888284, 2417282, 4465167, 9729265, 3569204, 1356735, 9339113, 9799595, 1897247, 5282915, 6929968, 6148810, 4352980, 5994260, 3653401, 4400735, 770232, 6775107, 5767873, 4225517, 7650777, 9883981, 3673350, 9120013, 6428832, 7349334, 2088485, 7978279, 7632378, 1390502, 8921797, 5520661, 6324136, 3386963, 5249925, 9893339, 4743698, 4589037, 2209285, 6640944, 2388303, 1655605, 5306105, 6741283, 7649864, 1475857, 3658369, 936447, 767315, 9426241, 7678315, 934444, 9310221, 1351665, 54456, 8255405, 1217350, 2142940, 6233683, 8849727, 6049793 };
        int Z = 1000000000;
        assertEquals(0.4392592833176793, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.4392592833176793);
    }

    @Test
    public void case85() {
        int[] X = { 289740309, 679612287, -522926395, -477635777, 32620465, -521739946, 44327273, -95232734, 62110986, -299207150, 435708647, -119924525, -686177708, -473176251, -28549816, 561791919, -652622839, 117333768, 103157544, 273384075, 258810245, -637162014, -604325810, 997114086, -948760039, 372876838, -471896976, -617334635, -370580737, 480793143, -57434558, -274969741, -136505621, 738122985, 692305763, 227957528, 511663788, 959286235, 302546998, -634942748, -957754264, -488292076, -205653656, 292758631, 48653950, -680397655, 521169544, 373694968, 200187258, -749854685, -828357720, 696125384, 695448109, -308527459, -316844646, -101818498, -803806147, -409282856, -400769993, -438210550, -180625969, -113061515, 73975599, 211987032, -451090790, -871688587, 939653929, 471986371, -928258297, 338129853, -576500390, -224734559, -735091633, -242282693, -188575256, 142834632, 799101447, -70996738, -595168984, -704788965, -97341840, -30740991, -996807876, 377130515, 135757545, 875201822, -7725072, -945080826, -733953796, -583711039, 867856761, 144246631, -834958172, -97584314, 350743494, -328903283, -231367184, -337597458, -714887990, 858273940 };
        int[] Y = { 429988340, 415419824, -685928496, 885562825, 400380521, 47444051, -48335888, -492744550, -259450406, -18453924, 245218496, -58279235, 559517836, 409793449, -110604665, 977567715, 706575858, -683339125, -458520895, -369935707, -743208521, 832171405, -461586795, -379871178, -767761172, -331231101, 598198663, -194598056, 637903383, -284638678, -577491602, -846650115, -507710284, 381604521, 803923897, 677648948, 21436340, 43709534, -687252660, -56576690, 674422168, 173026206, -629834482, -282853683, -972015768, -573794975, 829698753, -538607537, -802950683, -8672922, 524268640, -6523349, 901174930, -881244470, -326329950, 748474128, -178145305, -125889303, -289124597, -780750359, -976235348, -515680442, 627506777, 700892199, 827016390, -742364746, 100919699, -602022719, -504153687, 443038572, -126121056, -536268464, 965529388, 817278856, 923417107, 220827057, -657607256, 263135616, -495828185, 420604199, -526109289, 379162312, -469406101, 629123617, -22001281, 509076134, 968707596, -304905052, -560018718, -41407321, -425245829, -88120986, 703774585, -220483470, -315284416, 227480052, -509089321, 320939047, -292860103, 804571565 };
        int[] R = { 7257561, 6164053, 2983723, 5965157, 1508651, 405128, 2718494, 1527369, 5105389, 6642170, 7479546, 351218, 3909255, 5600532, 3204304, 7683842, 6857134, 6204127, 9802965, 4657903, 9808151, 9799369, 8567962, 1413825, 6441735, 9507009, 2425601, 9301838, 2086026, 9513519, 6679574, 9343586, 5677571, 9663296, 7825094, 7186221, 2584775, 3059940, 1229941, 7690163, 9702109, 1225839, 8041380, 3611363, 6826370, 3762035, 3811556, 6199856, 2482514, 6130873, 857758, 4807016, 5930241, 1942071, 6220840, 4888327, 1449079, 1162793, 6706516, 3535104, 676311, 3386089, 5395041, 6353882, 5565736, 3220135, 6056454, 8150510, 6280074, 9802747, 8357024, 8498534, 1028585, 6398404, 4626248, 371306, 2676790, 954156, 6571161, 7675655, 7085028, 9945271, 2482670, 5531620, 1887341, 8703510, 2936299, 3336420, 9866302, 2159166, 9387875, 3058964, 5545255, 4782916, 9412845, 3627342, 519402, 7985651, 4294204, 6799475 };
        int Z = 1000000000;
        assertEquals(0.4857351390856064, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.4857351390856064);
    }

    @Test
    public void case86() {
        int[] X = { 725606702, -582784024, -228793728, 182400135, 992537987, 996085658, 414072274, -688443096, -674290371, -133149241, 98330476, 219736319, 331819980, -861526202, -579679425, 965441248, -267301898, 979919775, -92211496, 156686252, -762482361, -444556880, 511790301, 263759524, 452463230, -438899440, -76518746, 836323542, 83919854, 910196872, -996665404, -673918114, 128896098, -465095637, -668674153, 10889785, -627070152, -460227501, 440962995, -177457478, 120895791, 149252639, 274992676, -310785971, -388458632, 875028164, 801653670, 206640399, 55300519, -856690070, -293517924, -7647538, -28059228, 911964883, -44378419, -67481156, -705779278, 67721455, -54826329, 44717192, 304522976, -385958059, 321207986, -741759121, -264334494, 952999532, 23578108, 183473202, -281038464, 225692268, -37376798, -343207447, 214939927, -428960737, -789436328, -270600280, -393423284, 52652303, 249156796, 943656131, -97893322, -776376417, -709819086, 25625121, -55287702, 21307140, -249523521, 688336930, 775443489, 439262412, -443491950, -363871828, -218937384, 404062858, 915968263, -834101825, -96891004, -987849370, 422844213, 355116702 };
        int[] Y = { 117308233, -275829123, -740938430, -536327910, -786496428, 933778089, 390485722, -919419965, -419206755, 77517287, -376234519, -201552956, 79646415, -984868322, -55393170, 685655252, 568925219, -97082220, -630683136, 678761921, -314033161, 499684294, -615222633, 166458343, 595103435, 222120758, 860627451, -149496185, 465592395, 295280847, 179382237, -251236031, 794936828, -58171104, -686761091, -695315880, -54505741, -557829488, -466620785, -556674115, 820779816, -738094883, 54984942, 326713839, -874471929, 746595610, -307963493, 802161622, 51182601, 233552991, 154814813, 591254297, 976385398, 731565283, -725887970, -62279465, 67034271, -785624114, -687965415, -495112904, -439365348, -468807863, -92056508, -702745516, -688851273, -733699155, 717683732, -52986641, 326553590, 842108020, 925307676, 156658407, 557278186, -819393868, 907136829, -512713652, 261247993, 93831016, 957523708, -201576319, -585391393, 342557420, -112745279, -702176961, -885128694, -196773136, -153705173, 360327378, -148230419, 808743315, -199260725, 254385777, -155494835, 518845927, 849826034, 611909876, 360730428, 443325258, -55044065, -765290930 };
        int[] R = { 42303555, 14580421, 3125484, 96008729, 20528318, 63452862, 59508441, 68758737, 95690461, 68251756, 24125985, 47467539, 42225075, 78511762, 60492611, 97719911, 79244910, 31854892, 63254807, 81587296, 4793492, 27681037, 69321076, 65523920, 34664687, 12646334, 91515980, 89708752, 10664905, 9323263, 29881512, 52968460, 23903684, 85523347, 1493540, 44432001, 1492560, 61001980, 13190738, 49699372, 81770087, 89833074, 97166911, 23995161, 20861188, 10175873, 21715072, 106097, 42030764, 37486230, 81693392, 99340608, 65167266, 3530819, 17380879, 52348304, 16177152, 8896859, 42057056, 26842056, 18220121, 24454919, 32326867, 94640156, 9978265, 86336758, 91588509, 63987176, 47338737, 57295598, 13686547, 81625175, 47128671, 63369809, 5620336, 67989858, 73545682, 79851759, 20612306, 68092797, 17337988, 54822049, 19949756, 35021606, 58352867, 37330635, 39886261, 27046370, 46227493, 81943316, 6404778, 16963965, 6398234, 38731644, 64120473, 68892850, 25068402, 55708981, 85396377, 24923490 };
        int Z = 1000000000;
        assertEquals(0.02774250002340731, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.02774250002340731);
    }

    @Test
    public void case87() {
        int[] X = { 582066743, -283900312, -858916007, -193368538, 481373825, 643819277, -118745074, 366572584, -321587287, 201883310, 154242286, -682961495, -250149940, 640653990, 218844553, -102278261, -22623898, -440817465, -300029053, 833411546, -553936876, -390310051, -521672365, 411332447, -646891248, -140110178, -107152118, -181714464, -69678774, -316709971, -223802047, 89434622, -510199514, 980482205, -869470800, -444147798, -848673634, -948605979, -443856839, 66122004, 825670536, 744397975, 29303855, 142641066, -600997247, -240022311, 583371978, 71225239, -564741730, -608832766, 423150255, -562652912, 739954767, -494686241, 576230023, -127076046, 767040428, 187239566, -502619167, 600359621, 494264378, -780932063, 22355220, -876240555, -461413808, 726342187, 390570238, -8904305, 505286696, -166852964, -769431500, -335933630, 722952093, -37848918, 705570184, -34220381, 183623179, 129987271, 519826100, -350624411, -196333854, 718320324, -70994403, -717429096, 788364239, -657797817, -883243778, 946784020, -369420998, 536799838, -180390538, 979858451, 386172663, -275024825, 821106256, -592271378, -555132188, -456860555, 742849039, -54924044 };
        int[] Y = { -763604419, 941525370, 558969663, -958076775, -430491388, 708414550, 65896830, 679928352, -503151430, 63100963, -433118768, 46730502, 670996751, -319410255, 530397061, -650091775, 87056161, -645882384, -37475594, -131965546, -951352124, 931365262, 233685803, 26867509, 271279499, 766127626, -450373522, -397681930, 168965538, 387732415, -91426485, -698396787, -334474041, -382057532, 800754682, 839916617, 206919527, 474388467, 87608200, -29958917, -443740802, 915802320, -461461025, 15484595, 883092789, -34821870, 146073908, -858034628, 77497827, 852497585, -754115237, -335392022, -21245142, -254156448, -311036464, 172773749, -80201907, -501407944, 107093025, 24605849, 625142259, -817221442, 792646377, 104280470, -767864583, -305945776, 206741319, -188047291, 451118287, -41872511, 726319104, 221964725, 8255036, -53216651, -92781563, 958050230, -137250220, 194172696, 8076803, -357589863, 812780285, -2953913, -157389791, -100024418, 485721298, -75695536, 61575897, -723594122, 21032931, 37695348, 707149628, 536771024, -328566312, 331845506, -734429595, 965100855, 205487362, 419247836, -11572327, 823901585 };
        int[] R = { 18718246, 99597123, 66883090, 80294144, 97257385, 90477213, 2641431, 70806669, 19804340, 92853134, 37137517, 79470320, 93631420, 73908541, 76386522, 22197733, 57368614, 8232028, 11357201, 91798210, 50183751, 28974408, 91524442, 55671115, 97029178, 10772280, 71064621, 61117859, 35077241, 94966207, 63444192, 53795487, 47079681, 30327281, 86605982, 44337065, 73320846, 89247413, 15143733, 45641537, 34616898, 52281249, 25111856, 28248317, 78706141, 1498377, 2962401, 36074754, 62246756, 66835953, 27872963, 12430507, 95810360, 19397405, 20617973, 45355890, 82686036, 44198945, 58990100, 70279628, 91681503, 22434291, 24075114, 38761183, 5277924, 10681096, 35614599, 78598769, 52444860, 3274683, 76756657, 87061757, 8072283, 1868512, 67826425, 86778423, 55883240, 70788825, 22853177, 18129995, 37624777, 3242491, 83076853, 85951488, 75156247, 56211177, 31307377, 10358634, 410122, 90297477, 80638262, 92091624, 65248119, 4713375, 83369159, 70526042, 67910822, 18983757, 1641162, 20355681 };
        int Z = 1000000000;
        assertEquals(0.02881239412694092, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.02881239412694092);
    }

    @Test
    public void case88() {
        int[] X = { -492711919, -683088334, 60698462, 35449737, 673254081, -706834738, 602426186, 485330949, -387981620, 920783281, -221447932, -873660522, 100938103, 942658309, -973389592, -583811668, 701944648, 706703387, 408714145, -969159975, 922452343, 143950183, -624364183, -574658113, -46130484, -557609156, 803171897, 536521857, -227790291, 805803573, 200936094, -519797747, -361547950, 370556560, -673686965, 704746675, 868227600, 973534190, -183010698, 62486647, -601182758, -496719600, -51365479, -13497362, 217454329, -185368361, 61432529, -26303873, -636699949, 45758928, 736576967, -759042575, 156751522, 654945411, -985801774, 421419758, -337527861, 696371895, 656413522, 225598173, -381686546, 144774628, -968648996, 571132262, -420455288, 768252212, 924945855, 466869528, -964904258, -273975952, 691763352, 242723270, 466051421, -123217261, 501480776, 848849147, -612298323, -31319104, -869734984, 891328971, 776891619, 299738879, 891908676, 636051204, 593456055, -512551672, -605422865, -167026972, 546886461, -46455581, 491576023, -636567266, -593961211, 389854372, 827886798, -606402820, -793280879, -159132243, 377782815, 247035195 };
        int[] Y = { -557726957, -108974629, 367378163, -87140461, -418762189, 667664568, -733933479, -719245266, 677150911, 644107239, -242799334, -962332479, 9168111, -426302476, -621680876, -210706149, 432924538, 195074008, 595682380, -567083678, -120843219, -629815489, 244012786, 35187742, -310676745, -131234112, 782321393, -442072647, 920064020, -30956784, 394229147, 573669082, -413860066, -479972739, -755990267, -729019723, -986837370, 436642893, 412928673, -4530205, -856158324, -129597851, 81847262, 135001928, -145078328, 396172532, -112654355, -218977514, -591101058, 241089575, 451039378, -928957519, -181460862, 521243257, 542463754, 170511306, 514054135, 594650856, 576812364, -450329033, -453160559, 261198168, -521375887, 797362044, -31642289, -164600976, 8560915, 773074770, -311675260, -489444020, -672607843, 957793800, -812580838, 635079729, -987130148, -963800249, 636943035, 858621975, 557690452, 123312219, 546951990, 924530764, -233988044, 303083744, 844439913, 104835027, 304999443, -556226087, -320106190, 212006191, 129230931, 600043397, -253321209, -777009241, 819682097, 105377110, 40751008, -627179699, 432546114, 672918712 };
        int[] R = { 75307561, 77753741, 99066493, 80307005, 92898921, 7808933, 50403640, 13005111, 51631103, 62409831, 72757801, 33378388, 90732623, 72801199, 52068708, 44053833, 83982924, 81594302, 7581848, 56181374, 34432116, 65475312, 75331814, 27699478, 47899540, 55027867, 54954885, 32962008, 37807663, 80389950, 14980742, 13115224, 10660042, 14047234, 93422228, 56075315, 74372518, 96342219, 21596777, 26003620, 58752049, 94354578, 11898359, 49484671, 19672128, 63967066, 46054855, 56171403, 98077719, 6153054, 12352776, 85026186, 71628365, 40200942, 65242016, 72044257, 95228808, 20196900, 57522616, 33036470, 53103202, 72503357, 98668045, 16279595, 86550590, 92090272, 72354909, 13439459, 40948842, 93951686, 39443079, 99700890, 40822615, 51341437, 1701912, 13011094, 67824855, 47756766, 69182496, 65902573, 6426172, 34051624, 3445111, 78054536, 26768917, 68687126, 2615144, 21997724, 41400377, 60137759, 7550545, 94503578, 32641115, 6218590, 63299525, 71708056, 50825213, 35654433, 85147515, 91774055 };
        int Z = 1000000000;
        assertEquals(0.010620990140069798, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.010620990140069798);
    }

    @Test
    public void case89() {
        int[] X = { -408445632, 61222410, -446910839, -396393431, 165818468, -402065230, 94161577, 81502265, 327120114, -125816542, 779709932, 184892026, -183850752, -970658067, 401040116, 96334473, 537224712, 121388757, 845337873, -955777186, -21587472, 346841968, 111543357, 203414455, 95283882, -277802238, 205851443, 161491185, 232245273, -468511711, 504711325, 442771136, -722403067, 731104296, 934458436, 431413634, 897240251, 629344021, 59116188, -152479786, 14505827, 881910240, -745492644, -462575819, -28067029, 611023305, -348450068, 279747100, 322987041, 343626782, 550249231, -771040448, 258328726, -161305796, -938175652, -176877694, 596583961, -878071457, -102189357, 172330874, 124251159, -515551095, 542181327, 248587069, 658665945, 827646554, 219770622, 508921010, 851587823, 648060617, -836528742, -447477661, -883726244, 627705661, -371229101, 821204696, -435907068, -673214195, 837086694, -695773118, -514015115, 557184167, 974623026, -64401439, 441364690, -173523383, -537400367, -416038842, -799066516, 964591274, -696297393, -370808584, -827584467, 815325564, -965824042, 12940151, 739551060, -918657602, -341262202, 97933994 };
        int[] Y = { 695521097, 913036678, 892458422, 211597135, -225336376, -566853261, 814500731, -758870938, -834200977, -11789065, -790327891, -984896884, -152402597, 96569389, -739129880, -276291691, 318477115, -225121501, 370920242, 607493182, 612907045, 222923095, -817040996, 627042035, -261023241, -156299699, 221109380, -433746436, 749783775, 867176777, 429851916, -628597338, 37829544, -811780923, -142953829, -857522759, 151169609, 888301357, -767272594, -471968932, -6690846, 784679675, 621981567, 453828557, -453774643, -713195350, 316990156, -336988298, 900544235, 616085841, -273076033, -651875291, 259087160, 244972601, -908036393, -759688296, 345210163, -847560173, -467826788, 191473425, -474910418, -510260698, 951494170, 999236628, -848534571, -748052821, -941447421, -398372599, 792621113, -931927042, -212803087, 320417452, 941016016, 377721334, -321882708, -35476942, 178896241, 441210053, -392986636, 687461523, -908285503, -68164517, -540475163, 607816566, 962398671, -738786489, -936391654, 585731363, 932214273, -991283181, -237680164, 903406461, -425014117, 251999524, -490095903, 912038313, -80008099, 805663391, 299256300, 658612246 };
        int[] R = { 5739921, 49915090, 89373084, 94647928, 14151737, 75104447, 77088304, 46366010, 91073498, 20887839, 52979345, 28753662, 164316, 8902160, 97846420, 25178433, 6035029, 49845945, 95695540, 48647285, 41823346, 60250206, 52061397, 74347798, 92969390, 57724789, 47347414, 92225691, 23721099, 58476013, 6397015, 81977371, 8391102, 48286451, 76625298, 22542838, 75907249, 6229953, 21425200, 19497098, 27117791, 74404544, 767111, 79798458, 83306703, 98613531, 4976891, 41858083, 975827, 53188782, 43021719, 42799172, 13438987, 95083116, 17146969, 6408376, 5324256, 17010734, 51150418, 29045354, 75486747, 10063785, 11022724, 36394200, 10866587, 40164373, 58937038, 86773835, 46394325, 80362237, 6270933, 26028468, 7283132, 59554395, 5826925, 43106187, 58167925, 63320167, 37480621, 11660103, 69025300, 80502340, 54459274, 82464287, 28101807, 24122594, 41389014, 33426062, 93649680, 45055784, 14987767, 69136426, 7635920, 78526842, 5530625, 18502506, 18691214, 16984014, 57792692, 17601890 };
        int Z = 1000000000;
        assertEquals(0.10003332932229847, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.10003332932229847);
    }

    @Test
    public void case90() {
        int[] X = { 14, 75, 97, 10 };
        int[] Y = { -65, -43, -29, 59 };
        int[] R = { 10, 2, 4, 4 };
        int Z = 769;
        assertEquals(0.9575433762834742, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.9575433762834742);
    }

    @Test
    public void case91() {
        int[] X = { 539127599, -741504348, 122133655, 593870972, 934322511, 77110297, -754642567, -504981888, 405056815, 930966554, 16092459, 428218493, -661991296, -869715237, -237269212, -351243538, 130197941, -963974991, 615018871, -236068465, -766008030, 749948699, 60528279, -453959613, 809444447, 514929606, -318865548, -443639956, 35959330, -955918922, -701134107, 902141708, -252426699, 788696352, 128995369, -269303305, -190459932, 120686703, 126698944, 274122368, -664605190, -319229359, -437232781, -816843936, -76224507, 451453362, -932441672, -313723369, -72228122, -52313940, 832217245, -653775952, 45901956, -978698097, -54141678, -666293354, -894388793, 702217607, 748392027, 657330038, 144340753, -159524210, -314894824, -114167149, -280700008, 145895499, 45647396, 988110785, 426650460, -969182962, 72145699, -52055360, 473515381, -150672418, 125850863, 751556650, 621818564, -904523104, -236844794, -28869041, 742720404, -482978409, 826952346, 732433506, -290414428, -439427651, 42125489, 34127326, -98272332, -590064632, -845318554, 51863874, 105218495, 108883213, 827593584, -564640800, -165033149, -63714494, -371224756, -950621008 };
        int[] Y = { -202797175, 876715665, 734048025, -760563535, -948159089, 908959907, -544765801, 965647468, 917210758, 549596648, 64799290, 20151035, -14373010, 74334288, -732529883, -47236949, -120036662, -32766076, -539828312, 538921398, 143957776, 986497750, -261221438, 896256936, -879192253, -480785598, -412607385, -26340335, -289834870, 812578161, 830662628, -810208165, 341316785, 362333039, 488820205, -74165204, -54168448, -26534265, 865324526, -198854789, -73677493, 541024674, -33093373, 913265274, -520555987, 197809349, 290691252, -6950611, 556024462, -365669488, 123054440, 530139001, 500497646, -345129128, 37013530, -962855303, 76140657, -596975901, -923761340, -284678627, 88600962, -648052294, 195538198, -11300250, 729319264, -796407327, -669320785, 734629301, -440768657, -240673310, 328775054, -588473210, -412441297, -514149742, 548206639, 633036316, -133832699, -868616169, -641124222, 80933558, 961918866, -780366252, 761436275, 653574434, -299786688, -679987118, -950292711, -33477453, 306425792, 551452997, 51488271, -343956385, -170610629, 367208223, 797521680, 887211045, -883031728, 243196548, -35089201, 699189288 };
        int[] R = { 96051435, 31692761, 68470341, 98860499, 52669442, 54464148, 14110860, 59095235, 54607698, 65563858, 66244019, 58612322, 2569524, 62716757, 96449647, 25696505, 27805664, 16174223, 37431358, 25327345, 16832359, 77158755, 37284243, 52380440, 97252404, 32997145, 96848444, 84857959, 82284482, 48554084, 72250203, 78335916, 80246844, 40720543, 77196415, 32916286, 47701042, 43823626, 44527872, 54825091, 9387484, 10771891, 13437413, 64473359, 26004999, 9887059, 42686216, 53810663, 26061282, 80117573, 31654359, 95409992, 9792679, 68938601, 47790431, 7045082, 1935745, 97155226, 91903040, 36736578, 45709310, 64153242, 15072494, 25956153, 57390137, 44785260, 11388790, 57607530, 88608885, 55916662, 12432621, 50512720, 19204904, 25870033, 67502431, 45209902, 88273443, 10188646, 99020564, 66851076, 42822570, 30674922, 14777420, 52615248, 52129875, 62567850, 59660329, 6581971, 12239428, 4079720, 43318549, 57948737, 20749313, 58391042, 36421241, 30655801, 55692653, 326383, 88263331, 44301537 };
        int Z = 1000000000;
        assertEquals(0.0005236020537022277, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.0005236020537022277);
    }

    @Test
    public void case92() {
        int[] X = { 675596974, 67875338, 778745634, -806353579, -134683611, 80354318, 918207338, 777462529, 64329170, 279064845, -551208850, 897837049, 663540437, 105352698, -250149329, -565338240, 967876209, 63090476, -759116744, -511050518, 607586005, -85661132, 525225922, 417566809, 777849905, -343871497, 909237853, -840606231, 397196791, 980378713, -948519598, -278125131, 883963238, -368050356, -63176015, 241913044, 323022064, 49071717, 43214191, 437803078, -15786533, 2639203, -728415829, 202835383, 494237070, -477991448, 286480109, 64185182, -949848540, 518556035, 16369120, -536302930, -940559610, 40155523, 757045881, -362386958, -112149530, -402889508, 913304304, 671210687, 493971694, -407847103, -757835068, -803411503, 609300532, 573224517, -934952971, 817577190, 547418447, -416835442, 188207668, -929813095, 996764915, 845955265, 790943847, 22643299, 518884441, 917883697, 607555396, -836919470, 895779091, 547558287, 372187786, -411277348, 75384542, -929103268, -607335189, -121498470, -896651673, 219202029, -189652395, -677543768, 377368438, -837772698, -169239017, -54296114, -789868862, -748266522, -672022585, 786695589 };
        int[] Y = { -840173013, -716032046, 279747927, -756641013, -657500606, 569027827, 922721078, -408206190, 694515414, 137529703, -478220117, -781288893, -351229281, 135178335, 394131992, 623175347, 342705488, -386845914, -881770618, -503885723, 971846322, 91456931, 172001498, 47173267, 450674716, 582787697, -934077851, -49500166, -598664711, -161075350, 811585133, -932134416, 828490799, 481776744, -314983609, -954565347, 58576016, 33913682, 398201752, 949610781, 823338983, -777771301, -748991420, -747756672, -716982676, 45485541, -398115427, -535374784, -1632993, 641900349, 855330349, -603446532, 495004326, 849516587, 423479871, -742082546, -184042197, -709268394, 52158021, -985722456, 218373441, -2741213, 566377015, 695611448, 407783879, -884626610, -786493846, -882053300, -830466063, -27220603, -383213607, 205797495, -994189703, -205322129, -224607308, 373037483, 779801643, 911985971, 913894694, -914188665, 650141923, 289825507, 991921123, 423166647, -755965046, -928849472, 72206752, -411467165, 902229210, 670293241, -512866586, 422333620, -271625774, -491363239, 794433363, -212231747, 909399885, -586243761, 378968768, -428740899 };
        int[] R = { 12314013, 10106725, 79145176, 37037119, 97270046, 43128694, 8466282, 99499256, 12434342, 78759525, 78852126, 77817281, 74606602, 1185746, 23001863, 46232376, 35505337, 14365103, 84269197, 82455053, 24949713, 49017297, 79546692, 86865951, 3590905, 18306805, 40703312, 82559673, 27717214, 69444211, 70009841, 40031226, 79550935, 1671368, 77068344, 29337332, 44800061, 85534626, 28836587, 57234402, 16810502, 7688712, 35051682, 43933455, 8874457, 58053544, 42682183, 96896146, 24934998, 79467731, 31867550, 2401062, 28485028, 63930594, 89267012, 84592284, 82237398, 29970323, 67151957, 9954611, 51930885, 89678149, 2502188, 83998171, 91349516, 32086884, 13335503, 88665928, 70137861, 94688441, 45900329, 86948362, 2377153, 33468362, 83398168, 63767961, 44038257, 26080350, 13180458, 21489606, 5548081, 45048008, 23890667, 34033108, 8978601, 13157678, 71141743, 91215998, 95644352, 90810051, 53686961, 91588, 80488199, 8705500, 84089758, 24354066, 40792383, 49941612, 13019993, 10930243 };
        int Z = 1000000000;
        assertEquals(0.0, radiorange.RadiusProbability(X, Y, R, Z), DELTA);
    }

    @Test
    public void case93() {
        int[] X = { 103510871, 260602246, -673433914, 309962677, 82775512, -988103913, -742555541, -781330572, -493967228, 825397607, 227458709, 769989511, -270652690, -735169042, 438732446, 143895476, 554092739, -722431571, 41105167, 653483999, -48684432, 322391163, -252569819, 113204653, -399896041, -115796226, 5895565, -342291592, 26240985, -299064359, 914730388, -712249457, 847457557, -401382487, 319591629, -864959757, 548970752, -864548743, -143589008, 253110326, -768872010, 23356153, -812241352, -756348540, -148141087, -155972122, 203405442, 89243662, -155418960, -791942077, -398008990, 695803005, 696769107, 453553020, -390621497, 236359517, 780602607, 786777437, -330396124, 283842649, 156087936, 246441393, -160552704, -262872731, -826311205, -790982254, -416749348, 876332644, -899653360, -806392923, -741581719, 302284717, -7500818, -820060992, -337220837, -668950507, 248751119, 852802152, 251076955, 725275489, -23006043, 6741062, -855559355, -258306554, -770508432, 898003924, 812484626, -739307184, 141867148, 10398740, 220820877, 824913114, 447257501, -878875820, -498422856, 480755323, -972925405, 666216999, -75602799, -436213826 };
        int[] Y = { -841739385, 63234089, -387022744, -179242161, 66942155, 713010587, 721506503, 609851382, -920671673, -719614813, 945394864, -498072490, 540382875, -599321380, 941329396, -19645966, 74785663, -142325497, -737937682, 695731008, -363724914, 797675577, -799181648, 106511773, -748770515, 696496911, -879013076, 317518354, -211375243, -740414332, -657407648, 493322481, 695456708, -46518071, 662248345, -943306935, 3507027, -963721030, 853542178, -80091058, 601392097, -1510778, 823673724, 752317476, 88385219, -892786313, 957824814, 183018885, -874273126, 939192264, -676818745, 267527437, -181030771, -40563509, 6513978, 194434703, -749758891, -940827602, -220007321, 460997934, 890909593, 759218116, -592409394, 207048634, -24290311, -708236697, 733772804, -86467536, -59528955, 654409231, -247685613, -378981716, 897305769, -423393471, -865470749, 130738338, 943208359, 162663808, 832193454, 707332979, -368469693, 262625529, -96366518, 722078779, 476124111, -926971115, 77848297, 573770581, 478278502, -797499864, -586588164, 657678653, -670711009, -770446983, -190054902, 64420936, 598382345, -513283446, 676139531, -555677044 };
        int[] R = { 16882943, 35164514, 28589721, 47247595, 93633699, 54876655, 74918017, 24428554, 4557061, 24934234, 20694159, 43661578, 5688790, 30889164, 25974454, 28916151, 51231625, 48937789, 84336968, 93802880, 79234105, 48757905, 52327476, 30132803, 28320724, 18127275, 77398021, 56976608, 6005854, 85591418, 61756603, 22888796, 20755932, 90346323, 70136390, 66905982, 97739329, 97570758, 91334535, 54812741, 75021344, 64545045, 50990670, 33226485, 95434208, 76965123, 62142635, 99182184, 78419264, 46479603, 92985063, 57653368, 47753859, 97828890, 87786170, 76074582, 68472517, 65184190, 33051189, 74478370, 3291960, 94807791, 49883517, 24047891, 37670465, 72536259, 43470224, 35409793, 22623368, 34804758, 42738885, 50161063, 51866154, 93729554, 83387547, 99816713, 23211029, 98046534, 51515248, 1630292, 44526136, 44500310, 59283659, 92279994, 94845551, 99586180, 20870928, 15834419, 17286722, 6438468, 90312788, 20578681, 1246259, 92712657, 44626571, 91433075, 17765267, 40613146, 79359220, 40388634 };
        int Z = 1000000000;
        assertEquals(0.0, radiorange.RadiusProbability(X, Y, R, Z), DELTA);
    }

    @Test
    public void case94() {
        int[] X = { -321150303, 488439262, -545924531, -659639385, 23747712, -28681741, -233509545, -338020795, -892938961, -378532022, 138731646, 62627180, -110808348, 461434295, 339690695, -575211134, -452309696, -733940872, -632979984, -64280920, -29846479, 640894992, -348138221, 6133293, -105170655, -869714009, 593251927, -219006371, -800771816, 103529883, 800111922, -653819862, -447424120, 103172197, 338890052, 442164509, -260415779, -632092557, -61975286, -702147535, 727923873, -116080952, -209235440, -877752429, 868044344, 2986119, -217572391, 625610591, 602115778, 597916969, -748752260, 309742361, 975657332, -470238392, 137609829, -909811269, 596763824, -39225855, 66012251, 668522874, 603293303, -307245569, -885864037, -338378559, 514155302, 281501998, 681409714, 124591954, 238111985, 399732371, -472248981, -93771870, -40468567, -580044777, 755008717, -598086477, -625109351, 31684067, -690704559, 851469556, -11390861, -172800131, 576732267, -54900328, -449771494, -43082419, -616692693, 696065988, -122368368, -321191141, 377194768, 88195458, 677126017, 218310215, -47491213, 277723145, 907784033, -456715358, 452948069, -4393258 };
        int[] Y = { -966248385, 677256393, 184329967, -92618691, 501949499, -184075420, 185603804, 586481094, -97183111, -83076750, 579603788, 56072752, -516355879, -676936827, -24403795, -577056220, 728805762, -278625965, 332667700, 219834064, 490087197, 418794174, -381213070, 390937175, -515099285, 475586859, 392362883, 287123600, -896964076, -583055419, -645390511, 617052759, 266940604, -139848355, -119439734, -286741857, 468624611, -137734285, 563327652, 180750215, 560234449, 25646362, 40513038, 713832448, -129346742, -711361339, 309515858, -853966234, 929125530, -28581120, -58529715, 363124903, 873375362, 376992006, 587079712, -220162658, -66595648, 99911491, 263611691, -44585800, -963148160, 872728395, -789393944, 701636834, 573025570, 472117446, -750573639, 11225964, -41134245, -765684722, 798476545, -628044471, 936689108, -972180879, 99248964, -298291940, 477746525, -40093849, -750231316, 690692651, 176981345, -659844878, 703085153, -404020338, 59288811, 77466063, -860585147, 575353902, 138499205, -555124115, 269334167, 5178000, 876952743, -866737515, 787002534, 507990005, -572756615, 744055217, -838905724, 725093875 };
        int[] R = { 22813324, 2559940, 13508953, 35914825, 13103181, 88862856, 38221787, 4118740, 41430343, 93345902, 94383263, 10764510, 99278311, 99561264, 57845202, 28747407, 44833114, 24582718, 8447821, 31835649, 34529236, 68954178, 48335881, 59802205, 36789062, 44907451, 88160327, 28211139, 45499360, 13254202, 31438382, 68312683, 68330493, 44947334, 56743859, 81433674, 86326542, 94965645, 85552413, 27756884, 88311547, 79935676, 38521393, 87589857, 32013291, 48882946, 16337263, 76846404, 25982015, 77301435, 61198404, 60511251, 46255613, 62050636, 72829807, 35561026, 6958086, 60990133, 63772164, 52457445, 26760686, 95210545, 73286480, 95091178, 92674231, 30030338, 29041203, 79000772, 24995983, 67109968, 6757655, 65823881, 99561995, 97795399, 5930089, 31575285, 46678344, 22267351, 8421688, 72660359, 52085138, 22136443, 85687961, 50857102, 84187078, 58517767, 86418127, 91145164, 19507899, 2706642, 96118960, 98784936, 50433539, 69405439, 46392465, 43107769, 51952129, 75433668, 74624892, 76948111 };
        int Z = 1000000000;
        assertEquals(0.0, radiorange.RadiusProbability(X, Y, R, Z), DELTA);
    }

    @Test
    public void case95() {
        int[] X = { -105871303, -913775925, -169043311, -84348755, -862580205, 386534930, -805431927, 240328467, 384185172, -378160784, 140097921, -766558175, -98262012, -628957665, 900152057, 689406622, -387577985, 695115428, -5787903, 533776610, -124432398, 505120130, 952518109, 70154070, 671530066, -24150980, 107606862, -38187022, -515808768, -654315511, 190306917, -127016891, -799421032, -134506198, 159145565, 378609751, 293627055, -65958641, 481694832, 287881151, 436943920, -964852885, 955257640, 455452366, 227733656, 592059940, -158522717, 848441829, -98758213, 468185392, 356263542, 393998095, 583041377, -748552114, 448585801, -70477460, -200981749, -135113212, 595919314, 332338505, 552849808, -94209896, -348507984, -521832628, 778116106, 410202683, -689329516, 489302953, 116673867, 42139809, -126804685, -155822098, -463968, 189058531, -881500888, -272552605, 298311835, -998239575, -161930580, -799118725, 362606575, -779459041, 866038540, -176823336, -359133414, 105521137, 184096770, 371273595, 404794899, 485976729, -934245517, -425679190, -977808190, 584409879, 796507320, -932301809, 445366364, 63566338, -833039197, 146633664 };
        int[] Y = { -311869174, 383143417, -366014391, -533043037, 167265492, -909621431, 630065453, -39101068, -611735738, -600128765, 7039549, 419873305, 96707776, 616327171, 576345671, 974435937, 720148345, 384180789, -817029073, -562004733, -788759945, -938321929, 511959491, 879215394, 453450298, -236970993, -864291086, -617928469, 992800295, -743262188, -702249183, 309877165, -632826539, -66109324, 463798134, 286666531, 952256575, -523899830, 907444164, 440427648, -734975737, 673900663, -186759293, 265298392, -231117479, 601221908, 431291412, 60796897, -457673380, 366489916, -755020280, 879062301, 583177614, 24009273, -511110062, 704032593, 846868272, 550385329, -374795095, -65703506, -676760654, -391795590, 283057194, -24686370, -432015064, 367234796, 749365442, 599344905, 354291935, -528197541, -645340163, -964004150, -167712451, -378352352, 182589552, 936474, 668530335, -819918626, 550357260, -397350812, -940813990, 874440375, 863399059, -580271549, -802172167, -935609344, 45731931, 792237117, -266519324, -608468283, 172194389, -160975436, 854653176, -644828608, 678015411, -92415467, 659281381, -866557894, -293157475, 445404140 };
        int[] R = { 7814887, 81013486, 47874680, 6063172, 33143332, 92628150, 19507556, 52179010, 15733974, 27975839, 1287887, 87928363, 89896950, 62263323, 81169440, 97066479, 95673737, 25998048, 54593268, 26205501, 20693820, 47008735, 97551257, 79975202, 66380930, 16625503, 55171995, 59538406, 63454946, 576136, 59900755, 23786184, 34105973, 7775434, 29849355, 19765656, 52919936, 1873262, 71944665, 21170261, 82365453, 73232552, 61614975, 24778754, 88012226, 42784415, 21845232, 36202315, 21298814, 28954851, 62407815, 41992634, 28479938, 12475423, 21967835, 94860867, 29100925, 29656181, 6915624, 45072222, 82748668, 66816378, 68858406, 16854640, 27108164, 51224112, 36620296, 80028099, 53097374, 8564960, 1198359, 35462826, 34313863, 62813333, 12757931, 74842441, 58114099, 34603162, 11044755, 79412913, 16074364, 73452569, 21405546, 44554301, 85927992, 95889732, 39415167, 67545268, 25545912, 98847143, 12617490, 60810932, 65663520, 81475895, 77665571, 92771683, 32700006, 66802218, 25316133, 38313731 };
        int Z = 1000000000;
        assertEquals(0.047971889630840155, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.047971889630840155);
    }

    @Test
    public void case96() {
        int[] X = { -746474257, 327242103, -469230574, -81102843, 748009979, 120818965, 592089931, -330007049, 750743284, -850173877, -577589262, 732317633, -376917601, 30230331, 611664362, -479210866, -25268455, -438232758, 324230573, 244073841, 710715582, -421402705, 88324271, -190856005, -237622584, -184140090, 505888715, -674594780, 523503608, 135069387, 682780638, 345822942, -273249577, -907580831, -8424009, 374753410, -369063831, -726977811, -547565868, -148972011, -811380051, 452916651, -102086179, 905107790, -389885604, -613274111, 654457430, 485748042, -448185462, 377703511, 250016251, -28265416, 401129389, 928984539, -525593397, 586400062, -263585005, -211791275, -871860851, 843777326, 9592594, 39445403, -121181197, -444273385, 623555026, -878492485, -279466524, -345167713, -367033835, -481807523, 57141509, -934633388, -812557005, 538914053, -115840080, 651197018, 692259168, 789482699, -68352221, -87839732, -760765688, 417994878, -578122825, 573344479, -889831197, -690300246, -975875941, -120215574, 623874649, 177883509, -894337359, 865147404, -519722948, 105069599, 445935248, 132498770, 864274257, 99449502, -166172593, 92586450 };
        int[] Y = { -580462337, 855492850, 112853037, -49803931, 339870758, -328958769, -56767966, -673320997, 406285336, -17082437, -676332636, 911437875, -552591210, -835520329, 388714065, -627283947, -563509828, 230547388, 163517928, 265606905, 508038759, -590113157, -493704554, -846330348, 746857458, 604726828, -718026701, -816313340, 232084786, -989381714, 284973154, 295007962, -804475165, -377362201, 658423023, -323898134, 942567488, -436301214, -29961798, 41294639, -998560702, 52525702, -14702523, -839721667, -225705418, 867586161, 3318101, -211677909, 540665826, 628302714, -937041925, -70583337, 718728492, -20914161, 789516114, 83058607, 708230267, 62213278, 709456061, 969720100, 436071032, -298356405, 704933091, 99698754, 804107133, 149720473, 532718669, 473274822, 727188362, -705170159, -556397783, 9813997, 776329430, 840077194, 826478575, 125979677, -352136261, 406971449, -786886751, -155184621, -234671670, 37175647, 525208905, 871353853, 857155807, -474134450, -69785485, -383214347, 261008431, 36933113, -885605188, -55069321, -439765226, 147327153, 968710973, -522678567, 459933223, -675805689, -70304683, 90055748 };
        int[] R = { 28716263, 16706553, 46046788, 51018101, 53171354, 29261136, 49649370, 14179786, 5069030, 39098836, 54183146, 90674218, 2011627, 9252468, 80932020, 41776854, 23809591, 28259173, 20945184, 45036917, 30770949, 96140104, 53452266, 43220525, 55994318, 29257955, 80879006, 78815355, 28933850, 23451108, 58792199, 10166464, 40157660, 57355339, 61184564, 93329014, 86616474, 63350286, 60025151, 44201855, 2449121, 14208296, 34876072, 56977100, 75977115, 68324443, 51270305, 52303057, 96583616, 24731840, 97339973, 79870916, 20871943, 50792238, 23091440, 76866261, 80050192, 3970446, 8197967, 61500393, 27421553, 66990166, 71666857, 67579213, 76861856, 85367772, 13424578, 15994681, 48718057, 73449728, 60196535, 3683530, 87658023, 47588958, 60660629, 16151489, 15913401, 11930933, 68454545, 12497016, 89179124, 65794517, 92367931, 10051067, 69103106, 15459371, 39433679, 1669649, 71946168, 47631645, 63170041, 99367720, 67138162, 87353249, 19463284, 44000017, 72721021, 32887861, 59994697, 73955429 };
        int Z = 1000000000;
        assertEquals(0.0, radiorange.RadiusProbability(X, Y, R, Z), DELTA);
    }

    @Test
    public void case97() {
        int[] X = { -987162775, 665372598, 778897534, -990043685, -53957029, -409677813, -597481669, 211056575, 710122880, -86417195, 109520566, -310658156, 8413757, -400355757, 18939438, -532614598, -377784710, 908840349, -261705477, -554950637, -108503390, 869846674, 673072547, 618866087, 338546475, -699968621, -629505491, -97443319, -464022111, -953453755, 721275222, 341580117, -389088255, -108258528, -1820852, 671488947, -480353969, 373858363, -474755223, 389138295, -403040440, 966401448, -952250046, 375497887, 414160196, 751750061, -667536347, 87011702, 48783350, -559934688, 858479396, -865961154, 625275609, 344776233, -937576676, 618365237, 675537797, 78195754, 501127804, 896576353, -635161637, -903239772, -446689298, -64355294, 185521704, -398593206, -560746325, -235350817, -209406584, 991085473, -166557931, 45149437, -899250102, -174916278, -282071541, 20698613, 424851752, -924963871, 914189860, 219530052, 318641854, -848745372, 735193972, -917926466, -516739593, 796616524, -223495355, -230425960, 817627506, 375639715, 181867576, 869448580, -172793068, -183293086, 636247968, -891727199, -20946396, -686794355, -677085113, 553257277 };
        int[] Y = { 366249112, 582154937, -44156114, 565006277, -922955843, -813999022, 189500674, -416575455, -330376404, 301793023, 2691679, -626546901, 786509146, -632294797, 770578430, -214968025, 240458582, 579088362, 314736567, -998914671, 937256984, -195032183, -201394000, -194084108, -63992533, -203427483, -541913708, 942838642, 143315639, -349566174, -465718219, -755754318, -214173515, -695824206, 183970025, -766602493, 212685276, -953017376, 278275021, 798366035, 495494969, 408951766, -831767902, -70864238, -631956553, 446526672, -984964611, 508884281, -389640023, 580564563, -751963717, -547353412, -13834438, 83760976, -499988624, -634377014, 883920529, -885408624, 100151895, -248321033, -81735981, 682299574, -749645050, 118355072, -248408695, 565411475, -751119398, -670054112, 318168381, 909579649, 488458453, -518673307, 292318150, -793100120, -65387500, 977094847, 441301566, 66340427, 555610984, -182748042, -588647842, -509424799, -565957112, -957237429, 638326707, -407315206, 115806447, -351680495, -35103151, 505627350, -891234476, -100130486, -847149326, 375999011, -56199121, -911812696, -11939277, -837130557, -158265467, 167054590 };
        int[] R = { 218734126, 426886151, 923377336, 334540574, 205391018, 127574185, 595181526, 240494169, 124871154, 100808876, 340984821, 868621983, 288563779, 441115307, 53674379, 135713106, 460102574, 282189743, 243506122, 516301696, 693453150, 7835172, 13665013, 557908780, 134105373, 850795571, 988321524, 292370840, 350196264, 7892467, 88963015, 568930389, 434778617, 864856702, 755987315, 640169634, 992430886, 203685192, 880663802, 969818392, 157010419, 74164974, 690956726, 445574198, 515280281, 597147456, 433803655, 975382854, 731853550, 677309777, 344200901, 277823051, 537661300, 357865913, 835731831, 671766672, 61177836, 824053354, 964137512, 411374099, 831945820, 53100526, 832820840, 119240788, 770473579, 588808154, 759410422, 615420817, 792493345, 640074223, 437755560, 949503763, 714239197, 128712285, 247594312, 82035829, 578376093, 681397967, 909935034, 162745994, 211224095, 254135935, 440569045, 748885394, 612001847, 276300875, 420652065, 673179682, 952870580, 237305928, 937070133, 637332751, 142922805, 769890972, 756573538, 913396384, 211215477, 515983959, 528817200, 856225173 };
        int Z = 1000000000;
        assertEquals(0.0, radiorange.RadiusProbability(X, Y, R, Z), DELTA);
    }

    @Test
    public void case98() {
        int[] X = { -742518976, 983716892, -876588768, 897103573, -851334986, 860629182, 186773459, 172441489, -70568465, 116495131, -472569921, 471214403, 500368255, 684765431, 669446716, -960971673, -701017535, -954681069, -171459322, 900062045, -300077558, -465581622, -444775861, -261234818, 625640337, 740247196, -161721836, 498230410, -178056006, -353311732, -731706582, 111984766, -816521031, 715363126, -623483184, 715807368, 933665459, 410411759, 819412101, -746302000, 901892880, 395779048, -550527147, -578221161, -929521653, -428602228, 950849006, 946468704, 312285537, 460383096, 834806062, -711845817, -210095806, 999429193, -646420506, -179593051, 84796740, -316960809, 321897911, -216423394, -531747571, 765164151, -38128970, -954999320, 931013745, -138699582, -444089232, -386807679, 677835682, -536209299, -984484418, -577602280, 143690803, -409637754, 642261414, -569524631, 271086770, -509121915, 603870697, -364662956, 732020004, -153220601, -58940644, -682810628, 631297861, 913548867, -934822278, 390096144, -238230590, -396618149, 278311400, -907017342, 5864269, 711130265, -585293199, 997135762, 284188467, -198455145, 395417352, 932421792 };
        int[] Y = { -100285700, -347530198, 42154513, -818653766, -389876594, -13393460, 886447403, -70102518, -41582766, 59595699, -562058712, 796705521, -912120533, 41892645, -728942793, -39285804, 672801449, 421885532, 124442344, 700373773, -160843920, -887539641, 339210743, -497152056, 443907650, 860185828, -465995571, 852213541, -357084721, 538170341, 720936977, -620288715, 964272147, -813727096, -135229899, -160582492, 80384455, -48397850, -858280646, -505421415, -102297661, 160671010, 580047652, 798925689, 612023445, 875676241, 619584882, -579215201, 390655557, 230120582, -759559518, 526991983, 291341560, 817088233, -973456094, -156843208, -393149597, 349079695, 35431478, 762845976, -42650475, -832931699, -839519880, -98608739, 510121903, 461093600, -571948749, -814658102, 415991770, -717945223, -659288690, 170234326, -44819004, -878151890, 372352112, 432738113, 837069143, -77237944, 530333064, 611797167, 209608713, 15169095, 766009059, 497364125, -166606238, 276481400, -942614134, 730849569, 818546101, -772716328, 955032031, -310933508, 323640606, 173722903, -269050843, -599461345, 563443546, 112733372, -296973990, 216486140 };
        int[] R = { 825406847, 492967541, 289475158, 620537333, 939683268, 20324727, 460486825, 610745722, 334358891, 85719506, 506676642, 141907275, 143690301, 817610150, 786524802, 319847260, 58297956, 960247707, 26337284, 179865152, 450800484, 625798629, 658524710, 14244031, 92945421, 771258082, 48729341, 389919411, 233871931, 265215481, 853499640, 59278778, 758183022, 142974797, 532332462, 550382641, 15815875, 992819287, 13644715, 202691117, 931055144, 520321356, 344598391, 74745444, 337931505, 131123192, 247109055, 248745812, 943887250, 273446339, 428610963, 394687733, 751761319, 87135672, 261448115, 844706740, 710910105, 310177455, 234626150, 944782036, 575392936, 88125789, 856577165, 186092309, 83616937, 241425978, 736474949, 951949163, 86761616, 750119663, 7156631, 17816760, 270441018, 351755021, 945078555, 460888874, 482878213, 192187610, 709634685, 279281814, 318150300, 138245648, 673969547, 69911618, 77897671, 787934013, 914618357, 641324128, 98111468, 1760859, 438622515, 526020755, 942402999, 147716031, 712113063, 878536288, 389142008, 301104363, 683001802, 475903624 };
        int Z = 1000000000;
        assertEquals(0.0, radiorange.RadiusProbability(X, Y, R, Z), DELTA);
    }

    @Test
    public void case99() {
        int[] X = { 90624073, -30677281, 441808757, -49207864, 683052987, -185420785, 53335913, 259104676, -290035951, -742388740, -37810340, -908313389, -79212808, -364154744, 879536591, 579460899, -37820553, -66095179, 268664027, 191985332, 797796351, -579446662, 624635611, -880281105, -884245103, -452059405, -160771850, 332094803, 253002443, -86190983, 323895962, -807732405, -128306415, 841345826, 694163335, -201203809, -115769982, -48124657, -324234517, -507593509, -256108313, -983051417, -25058416, 361897530, 716428476, -115632600, 966256749, -254557307, 649708943, -49082667, -834266998, 540864671, 883453301, 542958927, 369911443, -121200145, 715238059, -895416274, -124430489, 723390042, 557918670, -586216111, -467420354, 176287643, -789192904, -166034282, -328173140, 426013234, -295888280, 124346966, -872040952, 144335832, 54831380, -32608192, 2098616, 577669897, -300053583, 789225412, -857175779, -737119588, -43399718, 974861291, 462569176, -288232007, 74879394, 276773532, 510642438, 239232063, -165894178, 449768396, -732871197, -433042789, 43840654, -652915070, 892813964, 104934177, -998221235, -12819248, 38219055, 71764219 };
        int[] Y = { -566146582, -912535149, 474679824, -347295545, -128640174, 661083150, 677018589, 746952504, 21426847, -179424738, 347451293, 702970846, 69187092, 658979292, 869357703, 73020950, 931797617, 217326011, -842356018, -899567796, 214201852, 685023916, 359809592, 317112391, 389393054, -147993603, 485928754, -82516874, 271787251, -515038347, -177272384, 281681946, -426131749, -220580148, -63629513, 92000311, -385831597, -21568159, -914033354, -979393982, 540250389, -892787109, -830868387, -433811342, -421832856, -96316945, -536908985, -560691595, 729523202, -84044853, 753936041, 923500435, 658102099, 590441534, 136265499, 580594567, 402255807, 555211384, -153718365, 40812539, -790388768, 27172815, 220161083, 142854839, -74168860, 595353354, -107977564, 672905246, -168955091, 43247822, -538215002, -686769186, -97224064, -878627711, 83519648, 679010005, 761602442, -906238876, -999079938, 636480517, -981026115, -753870053, -455720368, -560116049, -542638432, 782412403, -227206259, 726356951, 563678511, 280405461, 81973972, -78655636, 370630993, 530372646, -886504580, -295476081, -251203387, 514083434, -328637786, 184115567 };
        int[] R = { 677563355, 966527971, 657162361, 757285967, 288225912, 236035665, 934232646, 851904424, 546053033, 67154460, 204135290, 628027005, 879086280, 282790926, 324119772, 102233626, 120201790, 854492418, 324460910, 6706371, 21345582, 472453344, 579269772, 125065322, 374315832, 93353206, 684505431, 702953619, 20069041, 868620998, 279262543, 550148747, 835148969, 936424903, 307434714, 123374880, 24976920, 94183711, 827795656, 571029952, 13854522, 884447297, 51573309, 892940801, 19754575, 375693080, 847690778, 139956364, 230185498, 24668039, 146662735, 104047431, 497121382, 578448858, 81629104, 871437213, 524318416, 766134534, 426907183, 396903808, 634755532, 706169725, 947052555, 322420852, 495110980, 107003620, 298312083, 520087899, 201187330, 978624090, 943634202, 215041851, 863071387, 995207510, 960499003, 882825961, 370900590, 808189780, 22782324, 453602439, 832857818, 21961410, 557649869, 182495551, 452926620, 639278972, 53932764, 829761387, 257929858, 480839946, 226665194, 892685389, 39526023, 26234100, 67622592, 534637002, 133237719, 218451026, 54724900, 334425048 };
        int Z = 1000000000;
        assertEquals(0.0, radiorange.RadiusProbability(X, Y, R, Z), DELTA);
    }

    @Test
    public void case100() {
        int[] X = { 109961210, 483075810, 603317029, -499391365, 124304819, 882813186, -497940933, -423998247, -474839417, 160060756, 649610755, 149337038, -911293808, 977268051, -178407934, 619130466, 47918444, 195924994, -376810375, -434337804, 500557202, 161414569, 56554162, -358331284, -911080915, 717598999, -531210489, -759212586, -631986503, 700714297, 896003685, 951279935, -127083746, 300190311, -547553996, 857525669, 756711812, -751642041, 604353054, 49692261, 333398074, 928641992, -339260005, -159629213, -129367921, -634157298, 32704626, -674326444, -290191223, 368715201, 414077577, -590889125, -97697460, -541604425, 157537198, 70000836, -63620653, 60576543, -244046466, -226643520, -933065620, 103818702, -3787113, 830591326, 457694608, 131723555, 278063749, -747594281, 770176553, -930328078, 733011745, -123681731, 556520803, 52029411, 404464030, 26498011, -844506458, 8332603, 908461859, 142271907, 743263164, -90445004, -554157204, -249604477, 979754345, 104563861, 885294177, 66947549, 412503867, 94898602, -102682600, 859530256, 251713326, 500515337, 411819496, -231364358, 474331768, 28925927, 864881356, 205339081 };
        int[] Y = { 163495666, -114950850, 390664890, 343121176, 153391714, -325169362, 559416392, 55779726, -905078831, -823821257, -904115015, -324497340, 229511331, 259452107, 484470025, -644061094, 774694131, 549271888, 940910344, -821044132, -330412842, -202892726, 183429465, -553475305, 520000223, 257922975, -284998530, 655078373, 788359937, 461418901, 379321668, -773312008, -717008292, -24407527, -67493313, -604737048, 696697860, 140251742, -918818581, 821151974, 923539963, 715450395, 366527973, 575564707, 137575601, 280234225, -847496310, 375945775, -81162836, -74939590, -98321314, -251595012, 339822766, -380179207, -790606509, -549976503, 985438839, 627717671, -488472019, 359371074, -945298693, -142944888, -398184240, -209815957, -771760320, -480519579, 816948540, -222649870, 976477699, 267929005, -656676613, 186263386, -935848760, -846598616, 869779789, 50368397, -698091343, 312906191, -269753010, -428139013, 659994050, 616627672, -493289537, -338746602, -294622973, 941884152, 129613822, 445931390, 647161303, 342299713, 351016049, 37052281, -143530457, 145382974, 725196975, 307313151, 187213288, 567166321, -615734719, -855302769 };
        int[] R = { 217621239, 649703275, 714173633, 347235061, 630367168, 160105023, 265213996, 130044823, 305151382, 607513709, 499502269, 656167431, 852698174, 536554551, 705274823, 996228631, 739029377, 703174152, 409512099, 464226352, 129212494, 716825251, 701933730, 168942134, 493282427, 121616404, 849444960, 961533499, 880045681, 557264082, 724407545, 950183271, 206967356, 438581177, 149934683, 689850875, 451202551, 415148678, 819895698, 756353932, 22662387, 319397966, 412521362, 875360560, 708468869, 970312537, 724105542, 447498245, 526003040, 133617641, 764240948, 507731885, 702959243, 318691029, 676674018, 48758021, 440307432, 378635329, 10291520, 172869464, 935899410, 587215416, 123052734, 142866766, 25796592, 125503768, 685233992, 329515494, 540652446, 505129689, 85869426, 563314832, 677044007, 350907139, 291191743, 385512875, 321219675, 15297284, 685527471, 847222714, 1431276, 449768418, 207470950, 556906870, 768459446, 884144967, 458181243, 61283229, 262780296, 320989114, 86669044, 51196057, 908204529, 62238129, 46579174, 786517472, 187741896, 731813166, 116032965, 728394341 };
        int Z = 1000000000;
        assertEquals(0.0, radiorange.RadiusProbability(X, Y, R, Z), DELTA);
    }

    @Test
    public void case101() {
        int[] X = { -462, 294, -696, 697 };
        int[] Y = { 999999971, -998616339, -551604469, -999999948 };
        int[] R = { 999998034, 2, 22073, 284703363 };
        int Z = 5411;
        assertEquals(0.3579745161359311, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.3579745161359311);
    }

    @Test
    public void case102() {
        int[] X = { 10, 13, -13, -12, 12, -10, 7 };
        int[] Y = { 999999979, 996507752, -999999995, -999999188, 999997516, -999233062, 999999994 };
        int[] R = { 999998819, 5148, 999999987, 999477222, 38872, 940579439, 999922709 };
        int Z = 76;
        assertEquals(0.10526315789473684, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.10526315789473684);
    }

    @Test
    public void case103() {
        int[] X = { 0, -60, -62, -60, 63, -97 };
        int[] Y = { -72, 67, 61, -8, -32, 89 };
        int[] R = { 6, 7, 8, 7, 5, 6 };
        int Z = 918;
        assertEquals(0.9407071068962471, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.9407071068962471);
    }

    @Test
    public void case104() {
        int[] X = { -8289, -1407, 5289, 1460, 9719, 6546, 2054, 9823, -4285, -8133, -3642, 78, 3668, 1691, -7318, 8964, 3333, 6154, 7103, 6493, -5980, 3246, 2293, 2603, -4131, 4783, 2451, -7002, 338, -5045, 6735, 3943, 5985, 6107, -5940, -8593, 5026, -6944, 5425, 3657, 9954, -5201, 8073, 6059, -7648, 5617, -7192, 6345, 3651, 8303, -2048, 1509, -2092, 5729, -8802, -3229, 865, 6141, -23, 2149, -5812, 1610, -8045, -1679, 7066, 318, 52, -2341, 5246, 6909, 1724, -2603, -3230, -7602, -4702, 2131, -5348, -562, 2752, 3587, -7987, -9378, -2512, 4420, -8062, 6794, 2946, 3265, 2997, -7710, 7241, -3922, -9750, 6005, -9064, 5460, -4089, 5767, 1532, -2642 };
        int[] Y = { -3198, -5888, -9317, -6457, 5728, -4652, -1412, -1002, -2658, -8427, 7874, 1900, -762, 3138, 1732, -5083, 2435, 5597, -4652, 2918, 6942, 996, 7387, -6803, 954, 4330, 458, 3881, 7551, -8500, 9715, -4075, 3638, -639, -5820, 3315, -6300, 9632, 5694, 6074, 4009, -429, -4150, -3519, -9982, -8902, 6203, 2889, 240, -9940, 6678, 2860, 9195, 3566, 8176, -5353, -5719, -3132, 676, 7506, -3942, -3693, -3742, -2733, 1964, 6646, 2029, -4809, -127, 4082, 9972, -5317, -6507, -1196, 7764, -5787, -1772, -9122, 9212, 2771, -2480, 946, -2714, -2271, 2983, -175, -1306, 86, 2218, 1772, 6247, 2361, -8221, 9534, 1115, -7629, -4985, 4827, 5503, 2119 };
        int[] R = { 39, 4, 38, 6, 13, 19, 14, 24, 33, 6, 22, 23, 18, 31, 36, 4, 34, 29, 23, 14, 23, 13, 32, 41, 34, 22, 4, 17, 11, 12, 20, 10, 5, 31, 14, 29, 8, 4, 30, 31, 11, 7, 14, 39, 24, 28, 26, 23, 30, 12, 18, 5, 32, 41, 14, 24, 17, 35, 27, 38, 35, 37, 20, 7, 32, 22, 37, 33, 31, 12, 15, 39, 19, 16, 23, 1, 6, 14, 40, 25, 4, 22, 32, 7, 23, 8, 28, 12, 22, 1, 5, 34, 9, 39, 6, 15, 19, 23, 3, 9 };
        int Z = 100000;
        assertEquals(0.965944540192068, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.965944540192068);
    }

    @Test
    public void case105() {
        int[] X = { 1000000000 };
        int[] Y = { 1000000000 };
        int[] R = { 1000000000 };
        int Z = 1000000000;
        assertEquals(0.41421356237309503, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.41421356237309503);
    }

    @Test
    public void case106() {
        int[] X = { 10, 20, 30 };
        int[] Y = { 10, 20, 30 };
        int[] R = { 1, 1, 1 };
        int Z = 100;
        assertEquals(0.94, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.94);
    }

    @Test
    public void case107() {
        int[] X = { -655932840, 23428906, 742543226, 627165320, 322298331, 3588877, 457629921, 474701251, -782202278, 645031490, 257974765, 531271522, -411318650, 966487628, 145065515, -872416774, -636724939, 19493382, 287227675, 562677951, -968593321, 59631197, -899673196, -892867032, -441357351, 210457827, -12932006, 101481847, -934921819, 92142592, 13992060, 215870673, -96540542, -151122727, 837815537, -423474061, 702363479, -491990768, -924122439, -539811745, -865745154, 220189552, -384371091, 728110920, 846395997, -497073814, 752111695, -582707912, 397913720, 319587288, 169041437, 507186042, 227825436, -1103144, -969935003, 67994665, -717904778, 268703644, 295268955, -996377639, 323044695, -419237907, -316806262, -954077448, 751106972, -287503208, 529858810, -545558999, 248032212, 621507413, 932262143, -196701130, 845763922, -214110727, -656872696, 581465639, -396543498, 614859009, -601660110, 323667989, 860361898, -140702605, 210295359, -177185378, -925290270, -668393887, 164415741, -587945485, 514107314, -976118882, -327964024, -933870809, -390348222, 59237797, -674983921, -405085598, 380827490, -943269, -554499224, 700062359 };
        int[] Y = { -284241321, -933582853, 18912648, 641716200, 440250599, 57345828, 587501843, 513328987, 253368367, -773684447, 119593339, 397510848, 550635971, 999023478, -53508399, -73043839, -121860539, 686921976, -916667413, -952525276, 984134919, 475669915, 268755200, -476892805, -302759812, 239648889, 57073451, -255599960, 22654624, 29312828, -89856664, -560992423, -181368419, 693131636, 837198497, -818467675, 931671197, -147207421, -430746632, 342249092, 583766839, 687575817, 523475890, 466766790, -775461949, 453817858, -52811901, 653803307, -298378847, 56440430, -490456424, -895554919, 938525307, 908029829, -747817332, 493250629, -979540083, 875680805, -484377896, -127572208, -99933569, 336808066, -761772463, -928108004, -939203146, 623198392, -966082121, -100359007, 578023585, 871467368, -197186745, -614278152, 343990183, -586952149, -15752959, -552032503, 321533173, -189334523, 542951557, -361115027, 449660121, 46111061, -378524493, 704753140, 740934656, -952290637, -315283537, 602316927, 24429048, -453851642, -512499338, 328942041, -38132890, 186848263, -929485745, 78800444, 64358534, 905237221, -37468151, 633758432 };
        int[] R = { 988534, 177447, 880711, 706643, 155756, 361887, 275480, 180669, 161968, 946737, 443100, 223826, 867943, 334184, 633632, 290364, 357622, 927178, 193684, 931507, 131689, 218505, 300980, 78094, 690551, 367574, 867317, 588604, 800816, 570393, 397446, 600227, 924057, 448029, 427976, 26558, 203534, 618238, 353968, 610466, 891853, 522710, 361537, 535719, 498399, 470538, 353793, 89402, 5695, 102003, 622649, 854167, 173610, 323462, 398480, 419361, 577963, 493582, 627251, 601656, 365434, 369809, 238129, 774382, 755985, 695643, 206932, 357449, 73775, 383552, 539019, 368281, 677662, 59388, 909019, 655864, 470579, 227567, 239231, 333435, 986794, 909212, 711768, 184477, 477908, 377530, 37634, 953932, 492089, 23957, 316498, 810953, 512970, 249327, 994759, 292048, 896361, 901237, 563732, 584989 };
        int Z = 1000000000;
        assertEquals(0.9287789812409688, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.9287789812409688);
    }

    @Test
    public void case108() {
        int[] X = { 0, 1, 6 };
        int[] Y = { 0, 0, 0 };
        int[] R = { 100, 1, 1 };
        int Z = 10;
        assertEquals(0.0, radiorange.RadiusProbability(X, Y, R, Z), DELTA);
    }

    @Test
    public void case109() {
        int[] X = { 1000000000, 1000000000, 100000000, -1000000000, -190000000, 12412 };
        int[] Y = { 1000000000, -1000000000, 100000000, 190000000, -90000000, 1000000000 };
        int[] R = { 1000000000, 9999, 123123, 12312323, 51352352, 900000000 };
        int Z = 1000000000;
        assertEquals(0.10000000007702887, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.10000000007702887);
    }

    @Test
    public void case110() {
        int[] X = { 1000000000 };
        int[] Y = { 0 };
        int[] R = { 1000 };
        int Z = 1000000000;
        assertEquals(0.999999, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.999999);
    }

    @Test
    public void case111() {
        int[] X = { 1, 2, 10 };
        int[] Y = { 0, 0, 0 };
        int[] R = { 1, 1, 1 };
        int Z = 20;
        assertEquals(0.75, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.75);
    }

    @Test
    public void case112() {
        int[] X = { -425297327, -888713524, -1418514, -341111519, -354189098, -339631584, -44120753, -623653530, -664989058, -828992137, -731529084, -204698506, -259985194, -657581788, -641039396, -676331498, 27788493, -435640006, -660494391, -262873716, -472631752, -956237548, 51021153, 51039522, -579742899, -397693235, -890296866, -346362455, -266958806, -518574393, -490651107, -37165071, -851253682, -370378970, -432057824, -762080685, -215909348, -76641452, -349164403, -126802902, -247071651, -719786115, -98257361, -816580268, -714181187, -335268846, -281501325, -886610509, 4397643, 27201864, 47169002, -560850768, -501836037, -495611240, -94677045, -843935563, -542835930, -856960449, 18032496, -387735888, -556519418, 50365, -390410026, -277382763, -76251075 };
        int[] Y = { -971159023, -710305393, -453255397, -654424920, -288779252, -549212561, -89227326, -507338793, -711320849, -96790052, 21620239, -352804836, -890339418, -309679695, -9230658, -568798128, -480156256, -111561305, -194453295, 52881138, -628783537, -877156641, -826009331, -378524253, -576105301, -581005475, -885545607, -129283926, -23842642, -160247416, -78698267, -405155217, -834164008, -616343635, -198042017, -507011326, -541141078, -519578757, -446630723, -905409645, -223268052, -358466169, -680117736, -274997767, -968027030, -849417016, -756558003, -447990738, -738447119, -575414758, -289219715, 40600527, -232640428, -469625923, -948906100, -879285858, -555921493, -112020268, -579614301, 58099970, -221965040, -870697751, -601253712, -478495868, -72674526 };
        int[] R = { 11373276, 27320389, 25357781, 52591654, 76167808, 76512683, 50930204, 3623371, 13225277, 93603769, 60557729, 40130650, 2218580, 76094214, 46289926, 6427006, 29328555, 78984494, 51484244, 5286308, 92043340, 94840911, 21633398, 13604219, 1112038, 94790540, 52412605, 32664954, 22201929, 98485644, 35176028, 72377432, 98910444, 67185658, 99836908, 1211027, 68029801, 10907140, 2385639, 41260780, 45707773, 23789534, 88828206, 65597927, 63836170, 90651967, 51180677, 87774797, 24720791, 38679521, 7138324, 27717292, 26909644, 12194307, 77161190, 43513556, 24761209, 66428904, 32619628, 18069850, 12585358, 89810519, 93741560, 85699351, 26462627 };
        int Z = 765976153;
        assertEquals(0.18794197629909765, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.18794197629909765);
    }

    @Test
    public void case113() {
        int[] X = { 0, 0, 0 };
        int[] Y = { 10, 20, 30 };
        int[] R = { 15, 1, 5 };
        int Z = 100;
        assertEquals(0.65, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.65);
    }

    @Test
    public void case114() {
        int[] X = { 0, 1000 };
        int[] Y = { 0, 1000 };
        int[] R = { 1000000000, 100 };
        int Z = 1000000000;
        assertEquals(0.0, radiorange.RadiusProbability(X, Y, R, Z), DELTA);
    }

    @Test
    public void case115() {
        int[] X = { 6 };
        int[] Y = { 8 };
        int[] R = { 6 };
        int Z = 5;
        assertEquals(0.8, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.8);
    }

    @Test
    public void case116() {
        int[] X = { 10, 15 };
        int[] Y = { 0, 0 };
        int[] R = { 1, 1 };
        int Z = 1;
        assertEquals(1.0, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 1.0);
    }

    @Test
    public void case117() {
        int[] X = { 10, 9, 20 };
        int[] Y = { 0, 0, 0 };
        int[] R = { 5, 2, 5 };
        int Z = 100;
        assertEquals(0.8, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.8);
    }

    @Test
    public void case118() {
        int[] X = { 5, 6 };
        int[] Y = { 0, 0 };
        int[] R = { 1, 3 };
        int Z = 100;
        assertEquals(0.94, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.94);
    }

    @Test
    public void case119() {
        int[] X = { 1, 10 };
        int[] Y = { 0, 0 };
        int[] R = { 1, 1 };
        int Z = 3;
        assertEquals(0.3333333333333333, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.3333333333333333);
    }

    @Test
    public void case120() {
        int[] X = { 0, 0, 0, 0 };
        int[] Y = { 0, 0, 6, 0 };
        int[] R = { 3, 4, 1, 9 };
        int Z = 8;
        assertEquals(0.0, radiorange.RadiusProbability(X, Y, R, Z), DELTA);
    }

    @Test
    public void case121() {
        int[] X = { 11, 5, 13 };
        int[] Y = { 0, 0, 0 };
        int[] R = { 10, 3, 4 };
        int Z = 30;
        assertEquals(0.3333333333333333, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.3333333333333333);
    }

    @Test
    public void case122() {
        int[] X = { -333591235, -213792338, -676102628, 43349804, -48743937, -996380174, 20924606, -182737714, -720898070, -849593207, -438908315, -279651547, -859079106, -429168809, -761887535, -471911353, -34715361, -53740154, 44425322, -808324273, -949747436, -665169150, -671720519, -713111587, -95735158, -896659460, -66925844, -13491821, -290777775, -986297239, -393173163, -370109545, 3597340, -650134654, -663851286, -667301866, -217431037, -580032700, -533294140, -322403395, 7060482, -48301073, -284492894, -850413248, -880034696, -284351607, -145158299, -314692395, -29116757, -737578662, -6759789, 7972791, -841464767, -37659280, -620053802, -702235738, -407413049, -579088358, -897933444, -614721948 };
        int[] Y = { 63757232, -219838879, -733812077, -938409778, -453458788, -354867391, -815994927, -862770352, -918515807, -783873423, -903888545, 67451667, -469376769, -841099268, -703378930, -982293019, -22730505, -852127917, -216493964, -701336905, -483195055, -40870199, -836203928, -626976479, -281035048, -207975658, -400994168, -286723877, -829114149, -148281641, -463935052, -407047868, -571041620, -134292982, -5200238, -82149155, -169779421, -360482412, -285045494, -787934004, -582050278, -863195459, -435465270, -61284261, -462537743, -770216272, -970854974, -614067080, -412301559, -99810818, -185096793, -522866891, -114271926, -889267174, -615134863, 72768328, -166163552, -135658788, -874355233, -614375542 };
        int[] R = { 17110666, 72866707, 45729223, 91307376, 66270898, 12996550, 3450086, 88491078, 56185511, 45075822, 14835008, 99431053, 52206750, 76919542, 9765932, 49053571, 58909679, 53047884, 48270565, 30247848, 37904283, 11375717, 73674509, 74794563, 86347202, 68674997, 74185510, 85682138, 22902570, 93257145, 88591385, 12638652, 34992317, 79940719, 83378354, 52990073, 12007945, 74984666, 95811104, 90635878, 60676800, 14598017, 36912759, 91281436, 28205112, 92025839, 29312304, 15414263, 38669802, 69273138, 94959269, 2877849, 84211957, 12994910, 71283608, 80287591, 82650778, 69467146, 14706603, 40797961 };
        int Z = 30699821;
        assertEquals(0.0, radiorange.RadiusProbability(X, Y, R, Z), DELTA);
    }

    @Test
    public void case123() {
        int[] X = { 0, 0 };
        int[] Y = { 2, 5 };
        int[] R = { 1, 1 };
        int Z = 10;
        assertEquals(0.6, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.6);
    }

    @Test
    public void case124() {
        int[] X = { 11345370, -46487851, -17310051, -19649668, -5187682, 62569335, 41088591, -53546058, 59471488, 40703346, 91805378, 3675830, 64628072, 14510146, -46454502, -52244441, -67635128, -20714571, 52632279, -24996576, 40007811, -30406514, -46285582, -2228102, 69116907, -83488234, -30888740, 9070142, -73293235, -94342020, -59759500, -78966360, 59556159, -69874316, -80852805, 72162013, -45627210, -92347308, 20417033, -30357651, -77718090, -65930943, 92870359, -97934339, -36210585, 73487592, 34210484, 49366572, -36320771, 86281822 };
        int[] Y = { 48044905, -41688552, 66649064, -66551499, 58460889, 79192081, -89144967, -4628312, 66774599, 35594714, 89758760, -19939385, 54322264, -50429987, -86419232, 14292839, -61925188, 84826079, 89572927, -61698326, 56886037, -92508998, -14034399, 28378651, 47977820, 79336226, -55593971, 76926483, -77413238, -77491906, 3017248, 14907749, 93612262, 47420900, 16042281, 84215594, 88951041, 56559371, -37315792, 75111247, 12679221, 17884718, -5440916, 59808070, 94745593, -67734119, -79209686, -55426579, 98008427, -44387396 };
        int[] R = { 2369732, 7062658, 4838923, 2098481, 6192604, 3225789, 2015081, 1963979, 5933790, 6485928, 8924117, 7436375, 2475167, 8220648, 9678828, 5403159, 7396615, 4880482, 5148778, 7041226, 3761486, 8939879, 2923765, 6705135, 653770, 1420382, 3082132, 1775699, 8536906, 8646792, 9240698, 5431669, 78797, 5373261, 4012237, 371957, 2851408, 8513956, 5771592, 673383, 1672578, 8132941, 4046827, 3678180, 7673020, 6577397, 6699279, 5332629, 8327477, 1267860 };
        int Z = 100000000;
        assertEquals(0.1443243204510189, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.1443243204510189);
    }

    @Test
    public void case125() {
        int[] X = { 732984953, -852456290 };
        int[] Y = { -271621159, -61238098 };
        int[] R = { 682954198, 220244633 };
        int Z = 692754560;
        assertEquals(0.14253168256017296, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.14253168256017296);
    }

    @Test
    public void case126() {
        int[] X = { 4, 2, 6 };
        int[] Y = { 0, 0, 0 };
        int[] R = { 3, 1, 1 };
        int Z = 10;
        assertEquals(0.4, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.4);
    }

    @Test
    public void case127() {
        int[] X = { 0, 0, 0 };
        int[] Y = { 10, 14, 18 };
        int[] R = { 10, 1, 1 };
        int Z = 30;
        assertEquals(0.3333333333333333, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.3333333333333333);
    }

    @Test
    public void case128() {
        int[] X = { 131072 };
        int[] Y = { 0 };
        int[] R = { 1 };
        int Z = 1;
        assertEquals(1.0, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 1.0);
    }

    @Test
    public void case129() {
        int[] X = { 0, 10 };
        int[] Y = { 0, 0 };
        int[] R = { 1, 1 };
        int Z = 20;
        assertEquals(0.85, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.85);
    }

    @Test
    public void case130() {
        int[] X = { 1, 20 };
        int[] Y = { 1, 20 };
        int[] R = { 1, 1 };
        int Z = 1;
        assertEquals(0.41421356237309515, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.41421356237309515);
    }

    @Test
    public void case131() {
        int[] X = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
        int[] Y = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
        int[] R = {};
        int Z = 100000;
        assertEquals(0.9889, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.9889);
    }

    @Test
    public void case132() {
        int[] X = { 100, 90, 110 };
        int[] Y = { 0, 0, 0 };
        int[] R = { 50, 1, 1 };
        int Z = 1000;
        assertEquals(0.9, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.9);
    }

    @Test
    public void case133() {
        int[] X = { 10, 12 };
        int[] Y = { 0, 0 };
        int[] R = { 10, 2 };
        int Z = 100;
        assertEquals(0.8, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.8);
    }

    @Test
    public void case134() {
        int[] X = { 5, 15 };
        int[] Y = { 0, 0 };
        int[] R = { 1, 1 };
        int Z = 10;
        assertEquals(0.8, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.8);
    }

    @Test
    public void case135() {
        int[] X = { 10, 20, 30, 40, 50, 60, 70 };
        int[] Y = { 10, 20, 30, 40, 50, 60, 70 };
        int[] R = { 1, 1, 1, 1, 1, 1, 1 };
        int Z = 1000;
        assertEquals(0.986, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.986);
    }

    @Test
    public void case136() {
        int[] X = { 42, 18468, 6335, 26501, 19170, 15725, 11479, 29359, 26963, 24465, 5706, 28146, 23282, 16828, 9962, 492, 2996, 11943, 4828, 5437, 32392, 14605, 3903, 154, 293, 12383, 17422, 18717, 19719, 19896, 5448, 21727, 14772, 11539, 1870, 19913, 25668, 26300, 17036, 9895, 28704, 23812, 31323, 30334, 17674, 4665, 15142, 7712, 28254, 6869 };
        int[] Y = { 25548, 27645, 32663, 32758, 20038, 12860, 8724, 9742, 27530, 779, 12317, 3036, 22191, 1843, 289, 30107, 9041, 8943, 19265, 22649, 27447, 23806, 15891, 6730, 24371, 15351, 15007, 31102, 24394, 3549, 19630, 12624, 24085, 19955, 18757, 11841, 4967, 7377, 13932, 26309, 16945, 32440, 24627, 11324, 5538, 21539, 16119, 2083, 22930, 16542 };
        int[] R = { 4834, 31116, 4640, 29659, 22705, 9931, 13978, 2307, 31674, 22387, 5022, 28746, 26925, 19073, 6271, 5830, 26778, 15574, 5098, 16513, 23987, 13291, 9162, 18637, 22356, 24768, 23656, 15575, 4032, 12053, 27351, 1151, 16942, 21725, 13967, 3431, 31108, 30192, 18008, 11338, 15458, 12288, 27754, 10384, 14946, 8910, 32210, 9759, 24222, 18589 };
        int Z = 160203213;
        assertEquals(0.9995518543570147, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.9995518543570147);
    }

    @Test
    public void case137() {
        int[] X = { 10000000 };
        int[] Y = { 0 };
        int[] R = { 100 };
        int Z = 10000000;
        assertEquals(0.99999, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.99999);
    }

    @Test
    public void case138() {
        int[] X = { -358075476, -636042500, -146771689, -162620436, -177555667, -532114653, -920000900, -465505653, -700016967, -967322851, -447650967, -371322187, -524354097, -339575529, -400150507, -31296448, -677626436, -218782735, 20401480, 64818297, -156776665, -988745534, -520563229, -781257826, -999459960, -576262061, -293654442, 9067108, -335929686, -562351968, -985722839, -973779088, -560099281, -347885987, -86882441, -783919905, -39275254, -848817555, -323786644, -190462527, -869291771, -540917910, -704760116, -728757353, -389607366, 39825186, -315528850, -544168997, -817446756, -700669930, -907199558, -838437514, -494388371, 17371899, -759902415, -370969014, -30968120, -119007173, -223617820, -563470168, -801048809, -668177037, -682051847, -806438696, -80430949 };
        int[] Y = { -941166532, -451520487, -370937069, -489162285, -162551537, -608822810, -932496107, -981578663, -964465577, -771965218, -556197788, 11910404, -575420302, -54066788, -896621078, -991723160, -630964171, -76408054, -450878523, -590555093, -332820379, -107140119, -535635260, -212149626, -211204800, -655788466, -392176657, -514318903, -383868941, -491067614, -747598338, 53486805, -829273053, 32960415, -798979362, -692936286, -450697882, -993710377, -432157390, -523303239, -302101303, -431101137, -158782002, -614963015, -236564918, -528622626, -919359173, -356306988, -789735843, -977190287, -530504392, -605709999, -633833622, -490122168, -735572427, -373847799, -339837109, -398068713, -162503464, -887837972, -637018928, -592790680, -32267398, -931666820, -537848515 };
        int[] R = { 45968090, 44492729, 64483120, 5688288, 54805766, 52385168, 91502658, 53958623, 9640592, 7016189, 93942740, 20177594, 45690834, 81314138, 72742427, 69218712, 5574714, 13788151, 49186847, 54251088, 35370955, 67432344, 7294012, 22500849, 73790619, 85922036, 70865827, 32963388, 74230356, 94932789, 50707672, 56342310, 36096949, 26550909, 84926516, 82692953, 42886161, 89167197, 97208931, 47419570, 40594380, 86589277, 20595429, 75678403, 65597667, 29891449, 14103950, 29826385, 48892260, 51654817, 28820744, 95682004, 54835440, 90834742, 29061710, 77159420, 6608190, 65608594, 43132464, 98751528, 45653912, 57944958, 5613524, 46989039, 78199389 };
        int Z = 884421878;
        assertEquals(0.2102167069496659, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.2102167069496659);
    }

    @Test
    public void case139() {
        int[] X = { 5, 5 };
        int[] Y = { 5, 5 };
        int[] R = { 1, 2 };
        int Z = 10;
        assertEquals(0.6, radiorange.RadiusProbability(X, Y, R, Z), DELTA * 0.6);
    }

    @Test
    public void case140() {
        int[] X = { 685981, 260546, 795347, 981200, 669534 };
        int[] Y = { 878985, 678785, 365177, 106805, 447544 };
        int[] R = { 806986, 727902, 648421, 402201, 685948 };
        int Z = 255410;
        assertEquals(0.0, radiorange.RadiusProbability(X, Y, R, Z), DELTA);
    }

}
