package topc.test.dynamic;

import junit.framework.*;
import org.junit.Test;
import static org.junit.Assert.*;
import topc.dynamic.*;

public class ScoringSystemsTest {
    ScoringSystems scoringsystems = new ScoringSystems();

    @Test
    public void case1() {
        int[] c = { 1, 2 };
        int[] s = { 2, 3 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case2() {
        int[] c = { 1, 2 };
        int[] s = { 2, 2 };
        assertEquals("Not Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case3() {
        int[] c = { 30, 50, 20 };
        int[] s = { 49, 50, 1 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case4() {
        int[] c = { 250, 500, 1000 };
        int[] s = { 300, 600, 900 };
        assertEquals("Not Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case5() {
        int[] c = { 6, 6, 6, 6, 6, 8, 8, 8, 8, 8 };
        int[] s = { 5, 5, 5, 5, 5, 7, 7, 7, 7, 7 };
        assertEquals("Not Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case6() {
        int[] c = { 1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000 };
        int[] s = { 1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case7() {
        int[] c = { 10, 20, 31 };
        int[] s = { 10, 20, 29 };
        assertEquals("Not Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case8() {
        int[] c = { 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000 };
        int[] s = { 9999, 9999, 9999, 9999, 9999, 9999, 9999, 9999, 9999, 9999, 9999, 9999, 9999, 9999, 9999, 9999, 9999, 9999, 9999, 9999, 9999, 9999, 9999, 9999, 9999, 9999, 9999, 9999, 9999, 9999, 9999, 9999, 9999, 9999, 9999, 9999, 9999, 9999, 9999, 9999, 9999, 9999, 9999, 9999, 9999, 9999, 9999, 9999, 9999, 9999 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case9() {
        int[] c = { 3047, 9971, 7566, 5047, 11, 1842, 5895, 8824, 8121, 5357, 2196, 2220, 1319, 2835, 7814, 1916, 7293, 3266, 5088, 8996, 5260, 4167, 4064, 6411, 806, 6805, 1689, 6109, 3072, 4621, 8317, 5657, 4464, 8492, 3010, 9847, 2303, 4601, 2836, 8592, 9197, 102, 1965, 2715, 7263, 9114, 1737, 4947, 6093 };
        int[] s = { 3134, 4552, 8098, 9251, 4883, 6627, 9142, 769, 9635, 1371, 4144, 9243, 1579, 4062, 1522, 8278, 5400, 5434, 7630, 2379, 1580, 561, 1088, 7289, 1082, 6516, 3638, 4390, 7460, 1306, 3901, 2695, 2141, 6765, 1686, 4211, 2628, 6798, 6530, 1328, 9207, 5143, 9831, 6628, 497, 4331, 2169, 8962, 5851 };
        assertEquals("Not Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case10() {
        int[] c = { 6187, 1, 4154, 5947, 3930, 8005, 8819, 4610, 987, 9450, 5978, 9271, 8438, 3303, 8562, 5763, 195, 9754, 3724, 5217, 8709, 8509, 2523, 3462, 8434, 4905, 6469, 1923, 6744, 7081 };
        int[] s = { 2880, 9729, 974, 2966, 6038, 7273, 3418, 6728, 140, 7007, 6478, 4692, 51, 983, 5519, 2323, 4325, 9185, 6655, 8885, 1178, 2488, 7738, 179, 6119, 9654, 3329, 5249, 567, 6140 };
        assertEquals("Not Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case11() {
        int[] c = { 7876, 6320, 1993, 9716, 7950, 6666, 5765, 712, 8670, 9705, 4279, 349, 613, 7952, 1794, 9571, 7556, 8723, 8053, 1367, 2563, 1687, 42, 9979, 5896, 4026, 7276, 7198, 1642, 3367, 7716, 1361, 9806, 6857, 9001, 4526, 7522, 6883, 2838, 3787, 7846, 5939, 2400, 1595, 4600, 6163, 8272, 8381, 654, 8809 };
        int[] s = { 548, 2224, 588, 2134, 2756, 306, 1295, 6705, 5267, 5409, 7177, 9783, 5210, 5209, 5335, 6176, 8227, 7384, 1144, 5292, 457, 8715, 8546, 1754, 5248, 7493, 7413, 6445, 8724, 8852, 5577, 9300, 6927, 1791, 5653, 2196, 8637, 1883, 6964, 8464, 9160, 5990, 4941, 8670, 4429, 2039, 9825, 3124, 5593, 926 };
        assertEquals("Not Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case12() {
        int[] c = { 4566, 9590, 1713, 3774, 9100, 9795, 546, 6611, 859, 1301, 1227, 3888, 2156, 6588, 3292, 6410, 5976, 3411, 174, 3909, 4068, 7242, 3848, 1566, 9186, 8811, 8017, 567, 5513, 4193, 4120, 4926, 6261, 3254, 8697, 67, 9812, 4067, 2561, 9214, 1459, 9509, 5508, 7116, 2195, 9453, 8843, 6770, 4608, 8775 };
        int[] s = { 7743, 2066, 659, 39, 2919, 2540, 9072, 7132, 3575, 9411, 6393, 2820, 2348, 4460, 416, 5090, 3963, 5849, 132, 7116, 959, 982, 2566, 3073, 9630, 6002, 9476, 9812, 869, 4436, 4444, 5823, 3462, 6595, 4256, 5154, 5405, 3821, 2562, 4954, 8333, 2390, 4195, 921, 8660, 8569, 4849, 9276, 7387, 8998 };
        assertEquals("Not Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case13() {
        int[] c = { 1611, 4634, 4601, 2160, 5319, 9761, 9300, 8273, 765, 2729, 8880, 986, 7376, 1974, 7304, 155, 2760, 6112, 6438, 7010, 9406, 761, 6545, 5270, 2307, 2020, 7494, 2236, 7392, 9508, 9905, 2311, 2120, 26, 658, 2293 };
        int[] s = { 1455, 4240, 4221, 2082, 5778, 9083, 8972, 7958, 880, 3408, 7968, 1301, 7101, 1585, 6718, 89, 3539, 6219, 6286, 6348, 9045, 667, 6313, 5478, 2957, 1873, 7442, 2097, 7191, 9049, 9895, 3398, 1916, 51, 446, 2551 };
        assertEquals("Not Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case14() {
        int[] c = { 3459, 2202, 9859, 3871, 912, 4854, 9526, 9934, 4884, 1018, 3699, 5448, 4615, 2522, 3020, 3485, 4196, 4732, 4899, 6878, 9053, 9939 };
        int[] s = { 1979, 1062, 9506, 5662, 624, 6038, 8764, 9674, 6865, 890, 4923, 7415, 5971, 1065, 1233, 2473, 5896, 5987, 6937, 7751, 8026, 9974 };
        assertEquals("Not Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case15() {
        int[] c = { 8072, 8529, 2023, 5588, 2338, 368, 8390, 2384, 2565, 2043 };
        int[] s = { 8026, 8684, 2706, 7327, 6265, 2676, 8647, 6725, 7315, 6025 };
        assertEquals("Not Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case16() {
        int[] c = { 3563, 2581, 21, 7444, 2554, 328, 2117, 7152, 4083, 1377, 3114, 4983, 6074, 2909, 4533, 582, 8463, 6309, 103, 1294, 8758, 8928, 3402, 8937, 901, 1469, 405, 9175, 7995, 4371, 9443, 3713, 1667, 1947, 4964, 4716, 3781, 8191, 5199, 4313, 5700, 8950, 8272, 8461, 8921, 995, 1198, 7925, 5130, 4189 };
        int[] s = { 3107, 2422, 42, 5981, 1965, 110, 1828, 5936, 3459, 1277, 2901, 4880, 5897, 2495, 4602, 549, 8054, 5912, 58, 1249, 8267, 8600, 3039, 8681, 561, 1437, 334, 8943, 6615, 4375, 9100, 3112, 1522, 1769, 4785, 4767, 3416, 6984, 5235, 4368, 5561, 8882, 7417, 7791, 8316, 1161, 1220, 6606, 5153, 3897 };
        assertEquals("Not Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case17() {
        int[] c = { 8292, 4163, 3719, 7789, 3725, 260, 9408, 7381, 304, 9605, 7847, 8539, 2142, 5175, 9190, 8404, 5773, 7231, 5867, 4514, 133, 951, 5999, 1927, 5307, 6116, 2431, 8442, 6437, 1469, 7934, 4623, 7266, 6758, 8341, 9680, 3033, 4931, 4104, 3151, 2486, 7169, 9640, 7759, 6911, 875, 4493, 4613, 2713, 1536 };
        int[] s = { 8168, 3256, 2311, 7858, 2557, 367, 9578, 7632, 382, 9750, 7937, 9164, 1439, 4530, 9459, 8730, 4632, 6954, 4654, 3330, 214, 394, 4685, 1387, 4589, 5336, 1684, 9113, 5336, 905, 8030, 4029, 7301, 5527, 8344, 9879, 2286, 4269, 3124, 2298, 1978, 6075, 9867, 7815, 6007, 394, 3293, 4020, 2092, 1022 };
        assertEquals("Not Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case18() {
        int[] c = { 9322, 5323, 325, 3963, 3820, 6899, 4624, 6964, 3236, 8575, 3057, 9176, 4091, 8504, 4994, 4796, 9545, 7715, 5878, 2160, 5768, 2777, 8773, 5897, 9412, 7409, 3347, 2307, 562, 9509, 5574, 5538, 7470, 7043, 5099, 1223, 8614, 503, 1182, 2170, 5902, 1443, 1492, 4270, 4798, 2650, 2348, 1535, 5575, 7921 };
        int[] s = { 9211, 4770, 803, 3850, 3749, 6740, 4465, 7154, 2774, 8128, 2511, 9108, 4057, 8052, 4748, 4578, 9777, 7723, 6358, 1495, 6306, 2386, 8948, 6413, 9440, 7185, 2874, 1722, 964, 9442, 5714, 5123, 7403, 7184, 4756, 1246, 8423, 935, 1023, 1653, 6730, 1282, 1458, 4363, 4613, 2185, 1770, 1467, 5983, 8040 };
        assertEquals("Not Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case19() {
        int[] c = { 1442, 3065, 2252, 8188, 883, 6767, 6088, 4959, 3902, 3078, 7408, 824, 2689, 6273 };
        int[] s = { 1442, 3065, 2252, 8188, 883, 6767, 6088, 4959, 3902, 3078, 7408, 824, 2689, 6273 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case20() {
        int[] c = { 638, 294, 7743, 3510, 7631, 4584, 4887, 7068, 7362, 6962, 6309, 7119, 72, 4139, 6757, 866, 6132, 2344, 8036, 1617, 694, 498, 6310, 4607, 1190 };
        int[] s = { 638, 294, 7743, 3510, 7631, 4584, 4887, 7068, 7362, 6962, 6309, 7119, 72, 4139, 6757, 866, 6132, 2344, 8036, 1617, 694, 498, 6310, 4607, 1190 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case21() {
        int[] c = { 198, 5938, 2822, 102, 5959, 2347, 1558, 7699, 4446, 583, 9062, 5318, 7727, 2634, 9184, 2382, 2460, 7102, 1001, 7420, 2228, 1776, 5251, 5996, 8657, 2247, 9326, 1570, 2847, 3853, 9013, 4952, 4957, 6179, 2906, 713, 3510, 2407, 6004, 177, 7840, 6751, 601, 6741, 7967, 5110, 3390, 4837 };
        int[] s = { 198, 5938, 2822, 102, 5959, 2347, 1558, 7699, 4446, 583, 9062, 5318, 7727, 2634, 9184, 2382, 2460, 7102, 1001, 7420, 2228, 1776, 5251, 5996, 8657, 2247, 9326, 1570, 2847, 3853, 9013, 4952, 4957, 6179, 2906, 713, 3510, 2407, 6004, 177, 7840, 6751, 601, 6741, 7967, 5110, 3390, 4837 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case22() {
        int[] c = { 7625, 6298, 7305, 2274, 1229, 5129, 5183, 5559, 6482, 2786, 9344, 3360, 5370, 2586, 6050, 5319, 8049, 5027, 734, 156, 8997, 7329, 8095, 2243, 2807, 4395, 2352, 4253, 7321, 8975, 5646, 9678, 2023, 5587, 6565, 3159, 1595, 3741, 7519, 9526, 768, 3379, 4435, 7845, 4827, 2028, 8395, 8421, 961, 7634 };
        int[] s = { 7625, 6298, 7305, 2274, 1229, 5129, 5183, 5559, 6482, 2786, 9344, 3360, 5370, 2586, 6050, 5319, 8049, 5027, 734, 156, 8997, 7329, 8095, 2243, 2807, 4395, 2352, 4253, 7321, 8975, 5646, 9678, 2023, 5587, 6565, 3159, 1595, 3741, 7519, 9526, 768, 3379, 4435, 7845, 4827, 2028, 8395, 8421, 961, 7634 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case23() {
        int[] c = { 7644, 6664, 7917, 4846, 4361, 3589, 4039, 3636, 737, 9026, 8115, 8934, 4848, 7953, 7581, 5602, 3076, 81, 1492, 5657, 3912, 8851, 6292, 400, 6549, 6346, 7569, 9943, 9670, 1386, 4160, 5343, 5450, 9045, 9660, 1662, 4951, 1254, 8084, 8004, 6003, 115, 8926, 5568, 6042, 3335, 8520, 5712, 7814, 5423 };
        int[] s = { 7644, 6664, 7917, 4846, 4361, 3589, 4039, 3636, 737, 9026, 8115, 8934, 4848, 7953, 7581, 5602, 3076, 81, 1492, 5657, 3912, 8851, 6292, 400, 6549, 6346, 7569, 9943, 9670, 1386, 4160, 5343, 5450, 9045, 9660, 1662, 4951, 1254, 8084, 8004, 6003, 115, 8926, 5568, 6042, 3335, 8520, 5712, 7814, 5423 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case24() {
        int[] c = { 8918, 5171, 4855, 3379, 2914, 4822, 8531, 9531, 7518, 8669, 9099, 2712, 436, 8122, 3498, 9932, 5251, 6741, 1762, 4935, 1350, 5232, 3428, 7714, 3706, 3240, 7112, 9663, 71, 4639, 1936, 415, 9895, 2471, 9278, 8375, 7309, 3944, 9396, 2712, 5900, 9744, 5667, 6143, 7032, 9582, 6280, 6492, 6240, 1292 };
        int[] s = { 8918, 5171, 4855, 3379, 2914, 4822, 8531, 9531, 7518, 8669, 9099, 2712, 436, 8122, 3498, 9932, 5251, 6741, 1762, 4935, 1350, 5232, 3428, 7714, 3706, 3240, 7112, 9663, 71, 4639, 1936, 415, 9895, 2471, 9278, 8375, 7309, 3944, 9396, 2712, 5900, 9744, 5667, 6143, 7032, 9582, 6280, 6492, 6240, 1292 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case25() {
        int[] c = { 8573, 4399, 9121, 681, 6976, 8393, 2045, 1553, 5660, 685, 6520, 5900, 8468, 2946, 7844, 6753, 2201, 9466, 51, 7241, 8618, 9184, 635, 5773, 6190, 6479, 6108, 3698, 8586, 2398, 9601, 1876, 9549, 4350, 9954, 6531, 971, 810, 584, 9256, 5198, 5991, 9844, 145, 8464, 6287, 6663, 2023, 7179, 3557 };
        int[] s = { 4287, 2200, 4561, 341, 3488, 4197, 1023, 777, 2830, 343, 3260, 2950, 4234, 1473, 3922, 3377, 1101, 4733, 26, 3621, 4309, 4592, 318, 2887, 3095, 3240, 3054, 1849, 4293, 1199, 4801, 938, 4775, 2175, 4977, 3266, 486, 405, 292, 4628, 2599, 2996, 4922, 73, 4232, 3144, 3332, 1012, 3590, 1779 };
        assertEquals("Not Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case26() {
        int[] c = { 6283, 1649, 5645, 5846, 2432, 8074, 5338, 6045, 9549, 5217, 5267, 1170, 3181, 8608, 853, 3425, 7386, 6363, 5151, 399, 7261, 5326, 8042, 2692, 5572, 5987, 6538, 2846, 7687, 5968, 8922, 6814, 6378, 5264, 4821, 9235, 2851, 5309, 3648, 606, 3638, 8669, 1162, 8212, 1618, 1118, 9634, 5539, 7950, 3902 };
        int[] s = { 3142, 825, 2823, 2923, 1216, 4037, 2669, 3023, 4775, 2609, 2634, 585, 1591, 4304, 427, 1713, 3693, 3182, 2576, 200, 3631, 2663, 4021, 1346, 2786, 2994, 3269, 1423, 3844, 2984, 4461, 3407, 3189, 2632, 2411, 4618, 1426, 2655, 1824, 303, 1819, 4335, 581, 4106, 809, 559, 4817, 2770, 3975, 1951 };
        assertEquals("Not Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case27() {
        int[] c = { 5087, 7410, 8306, 3855, 2015, 2228, 1850, 6826, 8786, 4840, 5295, 6690, 9853, 4090, 4401, 6810, 8415, 8887, 9772, 3096, 8925, 19, 6430, 893, 8569, 27, 4682, 3373, 8707, 4314, 7296, 7333, 1010, 3519, 1866, 6431, 2757, 4788, 3249, 8024, 2570, 1075, 6996, 4203, 9832, 7785, 4213, 6623, 3027, 8025 };
        int[] s = { 2544, 3705, 4153, 1928, 1008, 1114, 925, 3413, 4393, 2420, 2648, 3345, 4927, 2045, 2201, 3405, 4208, 4444, 4886, 1548, 4463, 10, 3215, 447, 4285, 14, 2341, 1687, 4354, 2157, 3648, 3667, 505, 1760, 933, 3216, 1379, 2394, 1625, 4012, 1285, 538, 3498, 2102, 4916, 3893, 2107, 3312, 1514, 4013 };
        assertEquals("Not Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case28() {
        int[] c = { 2522, 3022, 1510, 1762, 2522, 4534, 2018, 1514, 1510, 1510, 1766, 4286, 3022, 2522, 1262, 4538, 3026, 4034, 1510, 3026, 1262, 254, 506, 4786, 1010, 1010, 3778, 4030, 1010, 3778, 1612, 1762, 2014, 3782, 2270, 1006, 1006, 2270, 4286, 2518, 2522, 1258, 4534, 2270, 1510, 3022, 3778, 758, 1762, 4286 };
        int[] s = { 5044, 6044, 3020, 3524, 5044, 9068, 4036, 3028, 3020, 3020, 3532, 8572, 6044, 5044, 2524, 9076, 6052, 8068, 3020, 6052, 2524, 508, 1012, 9572, 2020, 2020, 7556, 8060, 2020, 7556, 3220, 3524, 4028, 7564, 4540, 2012, 2012, 4540, 8572, 5036, 5044, 2516, 9068, 4540, 3020, 6044, 7556, 1516, 3524, 8572 };
        assertEquals("Not Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case29() {
        int[] c = { 2944, 3532, 4120, 2348, 1372, 4120, 2936, 2356, 1760, 2348, 584, 1180, 3532, 2348, 592, 592, 584, 2944, 3532, 1760, 3532, 2348, 2944, 4, 4700, 2348, 4708, 1172, 3524, 1180, 1768, 2936, 1760, 584, 584, 3524, 4120, 1172, 592, 4, 2348, 3524, 4, 4120, 1768, 4112, 1760, 4708, 1760, 4700 };
        int[] s = { 5888, 7064, 8240, 4696, 2752, 8240, 5872, 4712, 3520, 4696, 1168, 2360, 7064, 4696, 1184, 1184, 1168, 5888, 7064, 3520, 7064, 4696, 5888, 8, 9400, 4696, 9416, 2344, 7048, 2360, 3536, 5872, 3520, 1168, 1168, 7048, 8240, 2344, 1184, 8, 4696, 7048, 8, 8240, 3536, 8224, 3520, 9416, 3520, 9400 };
        assertEquals("Not Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case30() {
        int[] c = { 2570, 1035, 520, 3085, 4640, 3610, 3610, 1035, 2580, 1035, 2580, 1550, 5, 2065, 1540, 510, 3610, 4115, 2055, 1540, 2065, 3085, 2055, 3085, 2055, 520, 1035, 2065, 3610, 3085, 2310, 4640, 1035, 1540, 520, 5, 2580, 5, 2055, 1540, 3085, 4630, 520, 2055, 5, 4125, 4125, 4115, 5, 4630 };
        int[] s = { 3084, 1242, 624, 3702, 5568, 4332, 4332, 1242, 3096, 1242, 3096, 1860, 6, 2478, 1848, 612, 4332, 4938, 2466, 1848, 2478, 3702, 2466, 3702, 2466, 624, 1242, 2478, 4332, 3702, 2766, 5568, 1242, 1848, 624, 6, 3096, 6, 2466, 1848, 3702, 5556, 624, 2466, 6, 4950, 4950, 4938, 6, 5556 };
        assertEquals("Not Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case31() {
        int[] c = { 5579, 805, 3199, 4781, 3983, 791, 2387, 5593, 3997, 3199, 2401, 791, 791, 3983, 6391, 3997, 1603, 3997, 1603, 1589, 4795, 3185, 3997, 3997, 3983, 4795, 6377, 805, 3983, 3199, 1603, 3185, 2387, 805, 6377, 3983, 805, 5579, 1939, 3185, 4795, 4781, 3997, 5579, 1603, 3983, 3199, 805, 5593, 1603 };
        int[] s = { 7173, 1035, 4113, 6147, 5121, 1017, 3069, 7191, 5139, 4113, 3087, 1017, 1017, 5121, 8217, 5139, 2061, 5139, 2061, 2043, 6165, 4095, 5139, 5139, 5121, 6165, 8199, 1035, 5121, 4113, 2061, 4095, 3069, 1035, 8199, 5121, 1035, 7173, 2502, 4095, 6165, 6147, 5139, 7173, 2061, 5121, 4113, 1035, 7191, 2061 };
        assertEquals("Not Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case32() {
        int[] c = { 3680, 2105, 5255, 5245, 1570, 520, 5770, 1045, 3670, 5245, 530, 2630, 2095, 4730, 2095, 2105, 4195, 1045, 5770, 4720, 1580, 5255, 2105, 1045, 530, 5245, 3145, 5255, 520, 4195, 3670, 3680, 5245, 4730, 5780, 4720, 5255, 4195, 4205, 2630, 4195, 520, 2105, 1580, 5255, 5780, 5, 4450, 3155, 4205 };
        int[] s = { 5152, 2947, 7357, 7343, 2198, 728, 8078, 1463, 5138, 7343, 742, 3682, 2933, 6622, 2933, 2947, 5873, 1463, 8078, 6608, 2212, 7357, 2947, 1463, 742, 7343, 4403, 7357, 728, 5873, 5138, 5152, 7343, 6622, 8092, 6608, 7357, 5873, 5887, 3682, 5873, 728, 2947, 2212, 7357, 8092, 7, 6223, 4417, 5887 };
        assertEquals("Not Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case33() {
        int[] c = { 1028, 616, 208, 1238, 204, 1650, 1234, 616, 1650, 414, 1028, 414, 1650, 2058, 1234, 1852, 512, 1444, 1646, 826, 2058, 414, 2062, 1032, 410, 1646, 1032, 1650, 620, 620, 1650, 1440, 2058, 826, 1440, 1234, 208, 1234, 1440, 822, 620, 2062, 826, 822, 1444, 1234, 1856, 620, 1032, 204 };
        int[] s = { 1542, 924, 312, 1857, 306, 2475, 1851, 924, 2475, 621, 1542, 621, 2475, 3087, 1851, 2778, 765, 2166, 2469, 1239, 3087, 621, 3093, 1548, 615, 2469, 1548, 2475, 930, 930, 2475, 2160, 3087, 1239, 2160, 1851, 312, 1851, 2160, 1233, 930, 3093, 1239, 1233, 2166, 1851, 2784, 930, 1548, 306 };
        assertEquals("Not Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case34() {
        int[] c = { 3856, 8112, 5720, 7181, 8380, 932, 3590, 4654, 2659, 3060, 7449, 5853, 1462, 4257, 9178, 5853, 799, 5851, 1329, 2661, 9178, 1065, 1996, 5984, 1065, 3326, 4255, 2526, 4920, 5853, 6782, 5452, 981, 3324, 4122, 8511, 2661, 1730, 7048, 1196, 1464, 1331, 1329, 5587, 4257, 3592, 2661, 7580, 2393, 5188 };
        int[] s = { 3856, 8112, 5720, 7181, 8380, 932, 3590, 4654, 2659, 3060, 7449, 5853, 1462, 4257, 9178, 5853, 799, 5851, 1329, 2661, 9178, 1065, 1996, 5984, 1065, 3326, 4255, 2526, 4920, 5853, 6782, 5452, 980, 3324, 4122, 8511, 2661, 1730, 7048, 1196, 1464, 1331, 1329, 5587, 4257, 3592, 2661, 7580, 2393, 5188 };
        assertEquals("Not Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case35() {
        int[] c = { 5691, 3507, 5697, 3507, 2187, 2193, 2187, 3069, 6573, 3, 1749, 3507, 4377, 6282, 1311, 5697, 7443, 7443, 1755, 3, 3507, 2193, 1311, 5691, 7005, 1749, 1755, 873, 2187, 3945, 3945, 7443, 5259, 441, 6573, 1755, 3945, 7449, 7443, 1311, 6135, 6129, 1755, 7443, 4383, 2187, 1311, 1317, 1755, 873 };
        int[] s = { 7588, 4676, 7596, 4676, 2916, 2924, 2916, 4092, 8764, 4, 2332, 4676, 5836, 8372, 1748, 7596, 9924, 9924, 2340, 4, 4676, 2924, 1748, 7588, 9340, 2332, 2340, 1164, 2916, 5260, 5260, 9924, 7012, 588, 8764, 2340, 5260, 9932, 9924, 1748, 8180, 8172, 2340, 9924, 5844, 2916, 1748, 1756, 2340, 1164 };
        assertEquals("Not Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case36() {
        int[] c = { 2796, 1604, 4004, 8804, 1196, 3604, 6004, 3204, 6396, 4396, 5604, 1204, 7996, 9604, 4804, 804, 7596, 5996, 9196, 8600, 2404, 4404, 5196, 7196, 4396, 7604, 7596, 3196, 3196, 7204, 5596, 9604, 8004, 5196, 4, 5204, 1604, 6396, 5196, 6004, 8804, 6404, 8396, 7604, 3196, 3996, 7596, 3996, 9204, 1204 };
        int[] s = { 699, 401, 1001, 2201, 299, 901, 1501, 801, 1599, 1099, 1401, 301, 1999, 2401, 1201, 201, 1899, 1499, 2299, 2149, 601, 1101, 1299, 1799, 1099, 1901, 1899, 799, 799, 1801, 1399, 2401, 2001, 1299, 1, 1301, 401, 1599, 1299, 1501, 2201, 1601, 2099, 1901, 799, 999, 1899, 999, 2301, 301 };
        assertEquals("Not Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case37() {
        int[] c = { 4406, 1858, 4642, 4174, 1626, 6266, 234, 230, 1162, 3250, 8350, 2, 5338, 9282, 4874, 9510, 9282, 9510, 1854, 9046, 8586, 2786, 3714, 9742, 8350, 7658, 6030, 4178, 4638, 5434, 698, 8122, 9050, 1854, 7890, 2554, 5102, 462, 1854, 7190, 8118, 6498, 3942, 8814, 9978, 3942, 9742, 8122, 3246, 7890 };
        int[] s = { 2203, 929, 2321, 2087, 813, 3133, 117, 115, 581, 1625, 4175, 1, 2669, 4641, 2437, 4755, 4641, 4755, 927, 4523, 4293, 1393, 1857, 4871, 4175, 3829, 3015, 2089, 2319, 2718, 349, 4061, 4525, 927, 3945, 1277, 2551, 231, 927, 3595, 4059, 3249, 1971, 4407, 4989, 1971, 4871, 4061, 1623, 3945 };
        assertEquals("Not Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case38() {
        int[] c = { 5244, 2100, 520, 4196, 5236, 2616, 3140, 4720, 1568, 2100, 5236, 3664, 3664, 4720, 2092, 5244, 4392, 2624, 3140, 2092, 3148, 1052, 520, 2616, 2616, 520, 3672, 3664, 3148, 3664, 528, 4196, 4720, 520, 2092, 4196, 3664, 4196, 4188, 4712, 1576, 1052, 4, 520, 4188, 4720, 3148, 5244, 1044, 3664 };
        int[] s = { 9177, 3675, 910, 7343, 9163, 4578, 5495, 8260, 2744, 3675, 9163, 6412, 6412, 8260, 3661, 9177, 7679, 4592, 5495, 3661, 5509, 1841, 910, 4578, 4578, 910, 6426, 6412, 5509, 6412, 924, 7343, 8260, 910, 3661, 7343, 6412, 7343, 7329, 8246, 2758, 1841, 7, 910, 7329, 8260, 5509, 9177, 1827, 6412 };
        assertEquals("Not Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case39() {
        int[] c = { 3714, 7410, 4332, 8658, 4320, 4320, 6186, 2478, 3702, 8658, 5556, 4938, 8028, 8040, 4950, 8658, 8040, 6186, 3096, 6792, 624, 4938, 7410, 1860, 4950, 9276, 7422, 8028, 4320, 9276, 4320, 8646, 6186, 3084, 3702, 1848, 8646, 1242, 1848, 1242, 5568, 9882, 4320, 9276, 918, 9882, 3084, 3714, 9264, 5568 };
        int[] s = { 2476, 4940, 2888, 5772, 2880, 2880, 4124, 1652, 2468, 5772, 3704, 3292, 5352, 5360, 3300, 5772, 5360, 4124, 2064, 4528, 416, 3292, 4940, 1240, 3300, 6184, 4948, 5352, 2880, 6184, 2880, 5764, 4124, 2056, 2468, 1232, 5764, 828, 1232, 828, 3712, 6588, 2880, 6184, 608, 6588, 2056, 2476, 6176, 3712 };
        assertEquals("Not Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case40() {
        int[] c = { 2305, 8045, 8620, 9195, 1145, 4595, 9770, 7470, 570, 5745, 2870, 4605, 4030, 5170, 3455, 9195, 8055, 9780, 4605, 2880, 7480, 4605, 3455, 1720, 8875, 8045, 1145, 1145, 5755, 9205, 8045, 5755, 2880, 2880, 570, 8055, 570, 8630, 8045, 7470, 2880, 4020, 8055, 2880, 9205, 7470, 6895, 1730, 3455, 9780 };
        int[] s = { 1383, 4827, 5172, 5517, 687, 2757, 5862, 4482, 342, 3447, 1722, 2763, 2418, 3102, 2073, 5517, 4833, 5868, 2763, 1728, 4488, 2763, 2073, 1032, 5322, 4827, 687, 687, 3453, 5523, 4827, 3453, 1728, 1728, 342, 4833, 342, 5178, 4827, 4482, 1728, 2412, 4833, 1728, 5523, 4482, 4137, 1038, 2073, 5868 };
        assertEquals("Not Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case41() {
        int[] c = { 1790, 8044, 1190, 4170, 6260, 4766, 1190, 4770, 7154, 3872, 8048, 8942, 4170, 8048, 9832, 8048, 598, 2, 3872, 6856, 892, 7150, 4770, 5962, 5362, 1786, 2978, 7252, 5366, 7150, 4174, 8048, 8346, 4170, 3876, 8044, 4770, 9832, 1488, 8048, 3876, 1786, 7750, 6256, 7448, 5362, 4468, 594, 296, 2084 };
        int[] s = { 1790, 8044, 1190, 4170, 6260, 4766, 1190, 4770, 7154, 3872, 8048, 8942, 4170, 8048, 9832, 8048, 598, 2, 3872, 6856, 892, 7150, 4770, 5962, 5362, 1786, 2978, 7250, 5366, 7150, 4174, 8048, 8346, 4170, 3876, 8044, 4770, 9832, 1488, 8048, 3876, 1786, 7750, 6256, 7448, 5362, 4468, 594, 296, 2084 };
        assertEquals("Not Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case42() {
        int[] c = { 4176, 2984, 1188, 6560, 2380, 2976, 592, 2388, 3580, 2984, 4764, 1792, 2976, 4764, 1188, 5360, 2984, 2388, 4, 4764, 6560, 6552, 4764, 4168, 2976, 3580, 2388, 6560, 600, 592, 3572, 1984, 4772, 4176, 4176, 592, 3572, 3572, 1188, 5360, 3580, 2984, 3580, 5360, 5956, 5368, 2388, 4, 4168, 4772 };
        int[] s = { 5220, 3730, 1485, 8200, 2975, 3720, 740, 2985, 4475, 3730, 5955, 2240, 3720, 5955, 1485, 6700, 3730, 2985, 5, 5955, 8200, 8190, 5955, 5210, 3720, 4475, 2985, 8200, 750, 740, 4465, 2485, 5965, 5220, 5220, 740, 4465, 4465, 1485, 6700, 4475, 3730, 4475, 6700, 7445, 6710, 2985, 5, 5210, 5965 };
        assertEquals("Not Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case43() {
        int[] c = { 7632, 1092, 4140, 7414, 1742, 9154, 7414, 6638, 3704, 2182, 4140, 7414, 4798, 5452, 5452, 2178, 8504, 5452, 4580, 9808, 1960, 3922, 1960, 6324, 6756, 8500, 216, 9158, 656, 5888, 8936, 7628, 5230, 870, 1088, 8282, 4576, 5230, 5234, 1746, 6974, 6760, 6102, 438, 6320, 6542, 5670, 9594, 1528, 870 };
        int[] s = { 3816, 546, 2070, 3707, 871, 4577, 3707, 3320, 1852, 1091, 2070, 3707, 2399, 2726, 2726, 1089, 4252, 2726, 2290, 4904, 980, 1961, 980, 3162, 3378, 4250, 108, 4579, 328, 2944, 4468, 3814, 2615, 435, 544, 4141, 2288, 2615, 2617, 873, 3487, 3380, 3051, 219, 3160, 3271, 2835, 4797, 764, 435 };
        assertEquals("Not Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case44() {
        int[] c = { 1526, 1272, 256, 506, 606, 1776, 1018, 1268, 1776, 1776, 1522, 1776, 1526, 256, 1272, 1018, 506, 506, 1526, 1522, 1268, 760, 252, 1780, 1780, 252, 764, 1268, 764, 1780, 1014, 1522, 1018, 1018, 760, 1526, 1776, 1272, 510, 256, 1522, 510, 510, 1780, 2, 252, 1268, 1018, 1272, 1776 };
        int[] s = { 4578, 3816, 768, 1518, 1824, 5328, 3054, 3804, 5328, 5328, 4566, 5328, 4578, 768, 3816, 3054, 1518, 1518, 4578, 4566, 3804, 2280, 756, 5340, 5340, 756, 2292, 3804, 2292, 5340, 3042, 4566, 3054, 3054, 2280, 4578, 5328, 3816, 1530, 768, 4566, 1530, 1530, 5340, 6, 756, 3804, 3054, 3816, 5328 };
        assertEquals("Not Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case45() {
        int[] c = { 7070, 5890, 4730, 4730, 9450, 7090, 4730, 8250, 3530, 9430, 4730, 2350, 8270, 4710, 2370, 9430, 3550, 1170, 4710, 8270, 4710, 4710, 1170, 8270, 4730, 1170, 1170, 1170, 9430, 2350, 4710, 3550, 1190, 9430, 9450, 3530, 3530, 8250, 9450, 1190, 9450, 7090, 1190, 4730, 1170, 1190, 10, 10, 5890, 490 };
        int[] s = { 4949, 4123, 3311, 3311, 6615, 4963, 3311, 5775, 2471, 6601, 3311, 1645, 5789, 3297, 1659, 6601, 2485, 819, 3297, 5789, 3297, 3297, 819, 5789, 3311, 819, 819, 819, 6601, 1645, 3297, 2485, 833, 6601, 6615, 2471, 2471, 5775, 6615, 833, 6615, 4963, 833, 3311, 819, 833, 7, 7, 4123, 350 };
        assertEquals("Not Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case46() {
        int[] c = { 1769, 1771, 521, 3185, 2007, 1889, 1889, 1889, 1533, 1889, 2595, 473, 2123, 2597, 1297, 473, 2713, 827, 3185, 1299, 2007, 3305, 707, 1889, 2833, 707, 353, 1297, 2477, 707, 2005, 353, 3185, 3067, 589, 2715, 2361, 589, 2243, 353, 2713, 1417, 589, 2241, 1063, 2595, 2597, 2125, 117, 2007 };
        int[] s = { 5307, 5313, 1566, 9555, 6021, 5667, 5667, 5667, 4599, 5667, 7785, 1419, 6369, 7791, 3891, 1419, 8139, 2481, 9555, 3897, 6021, 9915, 2121, 5667, 8499, 2121, 1059, 3891, 7431, 2121, 6015, 1059, 9555, 9201, 1767, 8145, 7083, 1767, 6729, 1059, 8139, 4251, 1767, 6723, 3189, 7785, 7791, 6375, 351, 6021 };
        assertEquals("Not Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case47() {
        int[] c = { 790, 2902, 4750, 1054, 3962, 1850, 2, 2110, 530, 3694, 1582, 100, 1850, 3170, 3170, 3958, 2902, 4750, 2638, 794, 1586, 2110, 530, 1582, 2906, 4754, 3170, 2, 3434, 3434, 2902, 3166, 4226, 3958, 3694, 3170, 3962, 1850, 1318, 3962, 4226, 3166, 4222, 2902, 3958, 3962, 3958, 4490, 262, 3434 };
        int[] s = { 395, 1451, 2375, 527, 1981, 925, 1, 1055, 265, 1847, 791, 49, 925, 1585, 1585, 1979, 1451, 2375, 1319, 397, 793, 1055, 265, 791, 1453, 2377, 1585, 1, 1717, 1717, 1451, 1583, 2113, 1979, 1847, 1585, 1981, 925, 659, 1981, 2113, 1583, 2111, 1451, 1979, 1981, 1979, 2245, 131, 1717 };
        assertEquals("Not Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case48() {
        int[] c = { 8603, 6895, 6608, 7469, 4585, 5747, 7469, 5173, 2303, 8316, 2289, 2863, 9576, 1428, 4011 };
        int[] s = { 6145, 4925, 4720, 5335, 3275, 4105, 5335, 3695, 1645, 5940, 1635, 2045, 6835, 1020, 2865 };
        assertEquals("Not Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case49() {
        int[] c = { 8002, 2022, 1076, 2624, 5614, 6626, 4230, 4736, 5200 };
        int[] s = { 4001, 1011, 537, 1312, 2807, 3313, 2115, 2368, 2600 };
        assertEquals("Not Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case50() {
        int[] c = { 410, 2813, 3223 };
        int[] s = { 411, 2813, 3223 };
        assertEquals("Not Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case51() {
        int[] c = { 2865, 1710, 1488, 2643 };
        int[] s = { 7640, 4568, 3968, 7048 };
        assertEquals("Not Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case52() {
        int[] c = { 8057, 8071, 6279, 8519, 1351, 4921, 5831, 7161, 2695, 8519, 903, 7623, 2233, 4039, 4921, 2681, 2233, 7175, 7175, 8057, 7161, 903, 4039, 7385, 4473, 455, 1799, 7609, 2233, 6265, 1337, 1351 };
        int[] s = { 1151, 1153, 897, 1217, 193, 703, 833, 1023, 385, 1217, 129, 1089, 319, 577, 703, 383, 319, 1025, 1025, 1151, 1023, 129, 577, 1056, 639, 65, 257, 1087, 319, 895, 191, 193 };
        assertEquals("Not Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case53() {
        int[] c = { 2556, 7497, 2817, 6561, 3753, 1395, 945, 477, 8415, 4221, 9819, 7947, 945, 1413, 3753, 8901, 7497, 2799, 6561, 4203, 5139, 5607, 3735, 945, 4671 };
        int[] s = { 1710, 4998, 1878, 4374, 2502, 930, 630, 318, 5610, 2814, 6546, 5298, 630, 942, 2502, 5934, 4998, 1866, 4374, 2802, 3426, 3738, 2490, 630, 3114 };
        assertEquals("Not Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case54() {
        int[] c = { 256, 2041, 1189, 1106, 766, 1786, 1361, 84, 2464, 1614, 84, 1529, 1786, 1956, 169, 86, 594, 851, 2039, 1276, 1019, 1529, 2240, 256, 934, 1871, 1359, 851, 594, 1786, 594 };
        int[] s = { 256, 2041, 1189, 1106, 766, 1786, 1361, 84, 2464, 1614, 84, 1529, 1786, 1956, 169, 86, 594, 851, 2039, 1276, 1019, 1529, 2241, 256, 934, 1871, 1359, 851, 594, 1786, 594 };
        assertEquals("Not Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case55() {
        int[] c = { 1710, 6000, 1920, 2470, 3325 };
        int[] s = { 684, 2400, 768, 988, 1328 };
        assertEquals("Not Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case56() {
        int[] c = { 811, 1216, 721, 1529, 404, 181, 1261, 181, 1140, 451, 91, 494, 1304, 1846, 1889 };
        int[] s = { 1622, 2432, 1442, 3058, 808, 362, 2522, 362, 2278, 902, 182, 988, 2608, 3692, 3778 };
        assertEquals("Not Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case57() {
        int[] c = { 1189, 8448, 6625, 8209, 8893, 7793, 8675 };
        int[] s = { 1189, 8449, 6625, 8209, 8893, 7793, 8675 };
        assertEquals("Not Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case58() {
        int[] c = { 723, 1086, 4722, 2901, 1449, 2538, 1092, 2538, 3264, 4359, 5805, 3264, 5085, 2175, 5805, 5085, 3, 360, 2175, 3633, 3627, 3633, 1449, 5448, 360, 1086, 360, 3270, 2175, 360, 1812, 3270, 2181, 1600, 5079, 366, 3, 1818, 2544, 1455, 3264, 3270, 3, 2175, 5085, 360, 3633, 3270, 1812, 3627 };
        int[] s = { 723, 1086, 4722, 2901, 1449, 2538, 1092, 2538, 3264, 4359, 5805, 3264, 5085, 2175, 5805, 5085, 3, 360, 2175, 3633, 3627, 3633, 1449, 5448, 360, 1086, 360, 3270, 2175, 360, 1812, 3270, 2181, 1601, 5079, 366, 3, 1818, 2544, 1455, 3264, 3270, 3, 2175, 5085, 360, 3633, 3270, 1812, 3627 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case59() {
        int[] c = { 5900, 5900, 2956, 988, 4424, 5408, 2464, 5908, 4924, 1480, 5908, 3932, 496, 7376, 4924, 4432, 4916, 6400, 7868, 1972, 5117, 5908, 4924, 4432, 4432, 7376, 6884, 7384, 7384, 7376, 496, 5908, 3940, 5416, 3940, 488, 1964, 3940, 4924, 1472, 488, 6392, 4432, 5408, 5408, 1972, 1480, 6884, 4916, 7868 };
        int[] s = { 4425, 4425, 2217, 741, 3318, 4056, 1848, 4431, 3693, 1110, 4431, 2949, 372, 5532, 3693, 3324, 3687, 4800, 5901, 1479, 3839, 4431, 3693, 3324, 3324, 5532, 5163, 5538, 5538, 5532, 372, 4431, 2955, 4062, 2955, 366, 1473, 2955, 3693, 1104, 366, 4794, 3324, 4056, 4056, 1479, 1110, 5163, 3687, 5901 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case60() {
        int[] c = { 267, 2794, 2659, 932, 3060, 3058, 2395, 1115, 3324, 400, 1730, 533, 2129, 1728, 1597, 2127, 1198, 930, 3191, 1, 3324, 2129, 1462, 1, 1198, 531, 664, 2659, 1198, 1329, 1728, 1329, 400, 2260, 1065, 1198, 1464, 2262, 3326, 1996, 2659, 134, 799, 265, 664, 398, 400, 132, 1996, 932 };
        int[] s = { 534, 5588, 5318, 1864, 6120, 6116, 4790, 2227, 6648, 800, 3460, 1066, 4258, 3456, 3194, 4254, 2396, 1860, 6382, 2, 6648, 4258, 2924, 2, 2396, 1062, 1328, 5318, 2396, 2658, 3456, 2658, 800, 4520, 2130, 2396, 2928, 4524, 6652, 3992, 5318, 268, 1598, 530, 1328, 796, 800, 264, 3992, 1864 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case61() {
        int[] c = { 6923, 3073, 777, 4627, 3087, 7, 6167, 5383, 2317, 1547, 6153, 3857, 2303, 3857, 4613, 4627, 6153, 777, 3073, 1533, 5397, 6167, 1547, 3087, 3857, 3073, 1114, 3857, 4613, 6923, 777, 3843, 3087, 5397, 6153, 3857, 1533, 1533, 7, 6167, 4613, 3073, 1547, 2303, 7, 4613, 3087, 6167, 3857, 6923 };
        int[] s = { 4945, 2195, 555, 3305, 2205, 5, 4405, 3845, 1655, 1105, 4395, 2755, 1645, 2755, 3295, 3305, 4395, 555, 2195, 1095, 3855, 4405, 1105, 2205, 2755, 2195, 797, 2755, 3295, 4945, 555, 2745, 2205, 3855, 4395, 2755, 1095, 1095, 5, 4405, 3295, 2195, 1105, 1645, 5, 3295, 2205, 4405, 2755, 4945 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case62() {
        int[] c = { 791, 3927, 3143, 5495, 1575, 7, 7049, 5495, 3913, 345, 8631, 1575, 7833, 3927, 7, 9415, 5481, 777, 5495, 3129, 1561, 7049, 1561, 9415, 791, 1575, 8617, 3913, 3129, 8631, 6279, 6265, 7847, 3143, 5481, 2345, 1561, 2345, 7833, 6265, 3129, 8631, 4711, 791, 1561, 1561, 3913, 5481, 5495, 4697 };
        int[] s = { 113, 561, 449, 785, 225, 1, 1007, 785, 559, 50, 1233, 225, 1119, 561, 1, 1345, 783, 111, 785, 447, 223, 1007, 223, 1345, 113, 225, 1231, 559, 447, 1233, 897, 895, 1121, 449, 783, 335, 223, 335, 1119, 895, 447, 1233, 673, 113, 223, 223, 559, 783, 785, 671 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case63() {
        int[] c = { 1498, 2002, 748, 2502, 2600, 1998, 2752, 1002, 2498, 998, 2248, 748, 502, 2248, 502, 2, 2502, 1498, 2248, 1498, 1502, 1498, 2752, 1998, 2502, 1248, 1002, 2002, 2502, 2252, 1502, 252, 998, 2, 748, 248, 1998, 2248, 2748, 248, 1752, 2002, 1752, 252, 748, 752, 1998, 1502, 498, 2002 };
        int[] s = { 749, 1001, 374, 1251, 1300, 999, 1376, 501, 1249, 499, 1124, 374, 251, 1124, 251, 1, 1251, 749, 1124, 749, 751, 749, 1376, 999, 1251, 624, 501, 1001, 1251, 1126, 751, 126, 499, 1, 374, 124, 999, 1124, 1374, 124, 876, 1001, 876, 126, 374, 376, 999, 751, 249, 1001 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case64() {
        int[] c = { 856, 2552, 6776, 7640, 6792, 3384, 6792, 5928, 3400, 8472, 3384, 9320, 9336, 3400, 5928, 1704, 2536, 9336, 8, 4248, 8472, 5928, 840, 856, 3384, 2552, 6776, 7640, 7624, 5944, 9320, 856, 394, 1704, 1688, 6792, 7640, 9320, 2552, 840, 5096, 1688, 1688, 856, 5944, 1704, 4232, 5944, 840, 3384 };
        int[] s = { 428, 1276, 3388, 3820, 3396, 1692, 3396, 2964, 1700, 4236, 1692, 4660, 4668, 1700, 2964, 852, 1268, 4668, 4, 2124, 4236, 2964, 420, 428, 1692, 1276, 3388, 3820, 3812, 2972, 4660, 428, 197, 852, 844, 3396, 3820, 4660, 1276, 420, 2548, 844, 844, 428, 2972, 852, 2116, 2972, 420, 1692 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case65() {
        int[] c = { 1445, 2895, 5, 5080, 2180, 2180, 8695, 2170, 3630, 4345, 2905, 1445, 2170, 6530, 2905, 7255, 1445, 2905, 720, 5795, 2170, 3630, 9430, 8695, 2895, 8705, 3620, 4355, 9430, 5805, 4355, 6520, 730, 2180, 9420, 3630, 3620, 5070, 4345, 2905, 7970, 7980, 5080, 6047, 8695, 1445, 1445, 8705, 1445, 7970 };
        int[] s = { 1445, 2895, 5, 5080, 2180, 2180, 8695, 2170, 3630, 4345, 2905, 1445, 2170, 6530, 2905, 7255, 1445, 2905, 720, 5795, 2170, 3630, 9430, 8695, 2895, 8705, 3620, 4355, 9430, 5805, 4355, 6520, 730, 2180, 9420, 3630, 3620, 5070, 4345, 2905, 7970, 7980, 5080, 6046, 8695, 1445, 1445, 8705, 1445, 7970 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case66() {
        int[] c = { 3344, 7776, 3344, 3344, 8, 7776, 3328, 3328, 8888, 2232, 2232, 8, 8, 3328, 1120, 7792, 1120, 7792, 5568, 2232, 2232, 4456, 2216, 8888, 4456, 3344, 4440, 2618, 8, 3328, 5568, 6664, 4456, 3344, 7776, 4456, 1120, 3344, 2216, 8888, 8888, 2216, 5568, 4440, 5568, 6680, 2232, 6664, 2232, 4456 };
        int[] s = { 2090, 4860, 2090, 2090, 5, 4860, 2080, 2080, 5555, 1395, 1395, 5, 5, 2080, 700, 4870, 700, 4870, 3480, 1395, 1395, 2785, 1385, 5555, 2785, 2090, 2775, 1636, 5, 2080, 3480, 4165, 2785, 2090, 4860, 2785, 700, 2090, 1385, 5555, 5555, 1385, 3480, 2775, 3480, 4175, 1395, 4165, 1395, 2785 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case67() {
        int[] c = { 3107, 1888, 1444, 445, 1999, 4330, 223, 3551, 2330, 3329, 4219, 4439, 4106, 2663, 4550, 778, 3884, 3107, 2443, 3329, 2776, 1664, 3109, 2221, 3442, 4439, 2221, 2663, 2554, 223, 554, 2663, 1999, 4663, 221, 887, 2221, 3664, 1605, 2441, 887, 4441, 776, 3884, 3773, 3886, 556, 1666, 4663, 2776 };
        int[] s = { 6214, 3776, 2888, 890, 3998, 8660, 446, 7102, 4660, 6658, 8438, 8878, 8212, 5326, 9100, 1556, 7768, 6214, 4886, 6658, 5552, 3328, 6218, 4442, 6884, 8878, 4442, 5326, 5108, 446, 1108, 5326, 3998, 9326, 442, 1774, 4442, 7328, 3207, 4882, 1774, 8882, 1552, 7768, 7546, 7772, 1112, 3332, 9326, 5552 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case68() {
        int[] c = { 4123, 1659, 8267, 5789, 4123, 8267, 5775, 4137, 7427, 5789, 5789, 1659, 7, 5301, 7, 2485, 8267, 2471, 4963, 4123, 8253, 4963, 7, 8253, 7, 819, 2471, 7441, 7, 7427, 8253, 4963, 5789, 7427, 819, 1659, 833, 1659, 8267, 2471, 7, 1659, 8253, 1659, 3297, 4949, 819, 3311, 833, 3297 };
        int[] s = { 2356, 948, 4724, 3308, 2356, 4724, 3300, 2364, 4244, 3308, 3308, 948, 4, 3029, 4, 1420, 4724, 1412, 2836, 2356, 4716, 2836, 4, 4716, 4, 468, 1412, 4252, 4, 4244, 4716, 2836, 3308, 4244, 468, 948, 476, 948, 4724, 1412, 4, 948, 4716, 948, 1884, 2828, 468, 1892, 476, 1884 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case69() {
        int[] c = { 2542, 846, 3814, 1906, 2754, 3394, 634, 4874, 3394, 4026, 1698, 638, 947, 4454, 1694, 4666, 850, 3182, 846, 4454, 1906, 3182, 2330, 3602, 426, 638, 4030, 4874, 4874, 2, 4454, 4238, 2122, 426, 3178, 1062, 1694, 634, 4238, 846, 210, 1274, 422, 2546, 4666, 210, 846, 214, 3182, 4030 };
        int[] s = { 3813, 1269, 5721, 2859, 4131, 5091, 951, 7311, 5091, 6039, 2547, 957, 1421, 6681, 2541, 6999, 1275, 4773, 1269, 6681, 2859, 4773, 3495, 5403, 639, 957, 6045, 7311, 7311, 3, 6681, 6357, 3183, 639, 4767, 1593, 2541, 951, 6357, 1269, 315, 1911, 633, 3819, 6999, 315, 1269, 321, 4773, 6045 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case70() {
        int[] c = { 6122, 1426, 1430, 818, 3058, 4383, 1630, 610, 206, 1630, 2654, 3466, 206, 6326, 1426, 2242, 2446, 3466, 814, 1022, 3466, 4490, 3674, 4078, 6530, 2450, 818, 1018, 3262, 6530, 1022, 3262, 814, 6530, 410, 3266, 1630, 5914, 6526, 3062, 4078, 1022, 3670, 5302, 6326, 818, 3266, 4898, 6526, 2246 };
        int[] s = { 9183, 2139, 2145, 1227, 4587, 6575, 2445, 915, 309, 2445, 3981, 5199, 309, 9489, 2139, 3363, 3669, 5199, 1221, 1533, 5199, 6735, 5511, 6117, 9795, 3675, 1227, 1527, 4893, 9795, 1533, 4893, 1221, 9795, 615, 4899, 2445, 8871, 9789, 4593, 6117, 1533, 5505, 7953, 9489, 1227, 4899, 7347, 9789, 3369 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case71() {
        int[] c = { 1542, 1102, 2418, 662, 3078, 218, 2862, 658, 658, 3298, 878, 2422, 218, 2858, 1982, 442, 1982, 3180, 2198, 3302, 218, 2638, 218, 1762, 1538, 3298, 1762, 662, 1538, 1322, 1318, 1098, 3082, 2198, 1322, 3078, 2202, 3302, 2638, 1542, 1318, 442, 3082, 2862, 1098, 3302, 1102, 218, 2198, 222 };
        int[] s = { 771, 551, 1209, 331, 1539, 109, 1431, 329, 329, 1649, 439, 1211, 109, 1429, 991, 221, 991, 1590, 1099, 1651, 109, 1319, 109, 881, 769, 1649, 881, 331, 769, 661, 659, 549, 1541, 1099, 661, 1539, 1101, 1651, 1319, 771, 659, 221, 1541, 1431, 549, 1651, 551, 109, 1099, 111 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case72() {
        int[] c = { 786, 7122, 4758, 6, 7134, 5550, 7914, 786, 1590, 4758, 6342, 5538, 3174, 5538, 3954, 4758, 1578, 6342, 3966, 786, 1590, 1578, 4746, 7926, 3464, 3954, 6, 1578, 3954, 6330, 6, 4746, 7122, 5538, 1590, 3966, 3162, 1578, 5550, 3954, 3966, 7134, 2370, 2382, 2382, 6330, 6, 1578, 5550, 5550 };
        int[] s = { 786, 7122, 4758, 6, 7134, 5550, 7914, 786, 1590, 4758, 6342, 5538, 3174, 5538, 3954, 4758, 1578, 6342, 3966, 786, 1590, 1578, 4746, 7926, 3463, 3954, 6, 1578, 3954, 6330, 6, 4746, 7122, 5538, 1590, 3966, 3162, 1578, 5550, 3954, 3966, 7134, 2370, 2382, 2382, 6330, 6, 1578, 5550, 5550 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case73() {
        int[] c = { 7746, 4638, 8508, 296, 1542, 1554, 5412, 2316, 1554, 6186, 780, 5412, 7746, 6186, 6, 6198, 3102, 6186, 2316, 3102, 2328, 7746, 6972, 2328, 5424, 7734, 7734, 9294, 6186, 5412, 3090, 7734, 5424, 6960, 9294, 780, 8508, 6198, 7746, 1554, 6, 3090, 1554, 5412, 6, 6972, 780, 1542, 9294, 3090 };
        int[] s = { 5164, 3092, 5672, 197, 1028, 1036, 3608, 1544, 1036, 4124, 520, 3608, 5164, 4124, 4, 4132, 2068, 4124, 1544, 2068, 1552, 5164, 4648, 1552, 3616, 5156, 5156, 6196, 4124, 3608, 2060, 5156, 3616, 4640, 6196, 520, 5672, 4132, 5164, 1036, 4, 2060, 1036, 3608, 4, 4648, 520, 1028, 6196, 2060 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case74() {
        int[] c = { 2050, 2818, 3326, 2558, 258, 770, 1026, 1282, 514, 1794, 3582, 4094, 4350, 1534, 3330, 2046, 3842, 4610, 1534, 2302, 510, 3838, 2562, 4350, 4350, 3582, 4866, 4098, 1790, 3074, 3074, 3582, 2306, 2050, 2915, 2562, 3326, 3842, 4350, 2, 3330, 2562, 1022, 258, 770, 2, 2046, 2818, 770, 254 };
        int[] s = { 1025, 1409, 1663, 1279, 129, 385, 513, 641, 257, 897, 1791, 2047, 2175, 767, 1665, 1023, 1921, 2305, 767, 1151, 255, 1919, 1281, 2175, 2175, 1791, 2433, 2049, 895, 1537, 1537, 1791, 1153, 1025, 1459, 1281, 1663, 1921, 2175, 1, 1665, 1281, 511, 129, 385, 1, 1023, 1409, 385, 127 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case75() {
        int[] c = { 1762, 880, 1766, 1766, 1178, 1472, 590, 296, 1472, 1762, 2056, 586, 296, 1472, 1766, 981, 2060, 292, 884, 2056, 1468, 2056, 586, 884, 586, 292, 1174, 1472, 2060, 590, 1762, 1468, 1468, 2056, 1178, 880, 2060, 1178, 586, 1178, 2, 2060, 1762, 1174, 590, 1468, 296, 2060, 586, 880 };
        int[] s = { 5286, 2640, 5298, 5298, 3534, 4416, 1770, 888, 4416, 5286, 6168, 1758, 888, 4416, 5298, 2942, 6180, 876, 2652, 6168, 4404, 6168, 1758, 2652, 1758, 876, 3522, 4416, 6180, 1770, 5286, 4404, 4404, 6168, 3534, 2640, 6180, 3534, 1758, 3534, 6, 6180, 5286, 3522, 1770, 4404, 888, 6180, 1758, 2640 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case76() {
        int[] c = { 2, 4482, 6158, 5322, 5878, 1122, 838, 6162, 4202, 3918, 282, 5598, 4758, 4202, 1122, 282, 1118, 5878, 6438, 3082, 2522, 6162, 278, 5878, 5042, 5882, 5322, 3638, 5882, 4762, 5598, 1118, 838, 5882, 3638, 4478, 4198, 2798, 2802, 1962, 3362, 2518, 3078, 4762, 562, 5980, 278, 5322, 278, 5318 };
        int[] s = { 3, 6723, 9237, 7983, 8817, 1683, 1257, 9243, 6303, 5877, 423, 8397, 7137, 6303, 1683, 423, 1677, 8817, 9657, 4623, 3783, 9243, 417, 8817, 7563, 8823, 7983, 5457, 8823, 7143, 8397, 1677, 1257, 8823, 5457, 6717, 6297, 4197, 4203, 2943, 5043, 3777, 4617, 7143, 843, 8968, 417, 7983, 417, 7977 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case77() {
        int[] c = { 1018, 760, 3558, 2538, 760, 3554, 3050, 2288, 2034, 2284, 2030, 2284, 3304, 506, 1780, 760, 1268, 1014, 3050, 2538, 3050, 3401, 3812, 2030, 2792, 1268, 2288, 3558, 2792, 1268, 252, 3046, 2796, 1014, 2796, 760, 2030, 510, 1522, 1272, 2792, 3300, 1780, 256, 1018, 2542, 256, 256, 3558, 1268 };
        int[] s = { 2545, 1900, 8895, 6345, 1900, 8885, 7625, 5720, 5085, 5710, 5075, 5710, 8260, 1265, 4450, 1900, 3170, 2535, 7625, 6345, 7625, 8502, 9530, 5075, 6980, 3170, 5720, 8895, 6980, 3170, 630, 7615, 6990, 2535, 6990, 1900, 5075, 1275, 3805, 3180, 6980, 8250, 4450, 640, 2545, 6355, 640, 640, 8895, 3170 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case78() {
        int[] c = { 727, 969, 1, 604, 122, 120, 122, 241, 362, 120, 846, 606, 1088, 604, 846, 848, 606, 1, 362, 243, 604, 604, 364, 969, 1088, 848, 362, 241, 362, 848, 362, 483, 969, 241, 364, 846, 405, 727, 606, 364, 241, 727 };
        int[] s = { 2908, 3876, 4, 2416, 488, 480, 488, 964, 1448, 480, 3384, 2424, 4352, 2416, 3384, 3392, 2424, 4, 1448, 972, 2416, 2416, 1456, 3876, 4352, 3392, 1448, 964, 1448, 3392, 1448, 1932, 3876, 964, 1456, 3384, 1618, 2908, 2424, 1456, 964, 2908 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case79() {
        int[] c = { 3050, 1783, 4832 };
        int[] s = { 3050, 1784, 4832 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case80() {
        int[] c = { 932, 370, 2230, 1486, 746, 1114, 2792, 3532, 1858, 1862, 1672, 2, 1862, 2978, 370, 2230, 1118, 932, 184, 1114, 3536, 263, 2420, 2044, 3908, 1862, 374, 188, 2978, 560, 1862, 560, 3160, 2234, 2974, 3718, 3532, 1672, 184 };
        int[] s = { 2330, 925, 5575, 3715, 1865, 2785, 6980, 8830, 4645, 4655, 4180, 5, 4655, 7445, 925, 5575, 2795, 2330, 460, 2785, 8840, 657, 6050, 5110, 9770, 4655, 935, 470, 7445, 1400, 4655, 1400, 7900, 5585, 7435, 9295, 8830, 4180, 460 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case81() {
        int[] c = { 2755, 4480, 3790, 3790, 1030, 1720, 2065, 2765, 3110, 3800, 1385, 1730, 5515, 1720, 1720, 1497, 3455, 6905, 4480, 6215, 1375, 1720, 4490, 3800 };
        int[] s = { 1102, 1792, 1516, 1516, 412, 688, 826, 1106, 1244, 1520, 554, 692, 2206, 688, 688, 599, 1382, 2762, 1792, 2486, 550, 688, 1796, 1520 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case82() {
        int[] c = { 3016, 8, 5032, 2024, 6560, 1000, 1016, 5048, 4024, 2528, 2008, 7552, 2008, 2528, 3520, 2528, 3032, 496, 7568, 4202, 3032, 3016 };
        int[] s = { 754, 2, 1258, 506, 1640, 250, 254, 1262, 1006, 632, 502, 1888, 502, 632, 880, 632, 758, 124, 1892, 1051, 758, 754 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case83() {
        int[] c = { 83, 42, 1615, 1639, 860, 40, 657, 40, 204, 1272, 329, 40, 944, 1149, 1436, 1475 };
        int[] s = { 415, 210, 8072, 8195, 4300, 200, 3285, 200, 1020, 6360, 1645, 200, 4720, 5745, 7180, 7375 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case84() {
        int[] c = { 6153, 5757, 1510, 1113 };
        int[] s = { 8204, 7676, 2014, 1484 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case85() {
        int[] c = { 2817, 5607, 1881, 4671, 7497, 9, 2817, 7497, 7479, 6543, 2799, 2799, 8415, 5607, 8415, 3735, 2817, 7479, 9, 3753, 2799, 8415, 9369, 8433, 3753, 6561, 1881, 1863, 1863, 4671, 4689, 945, 8433, 9351, 3753, 2799, 1881, 4689, 945, 4689, 3753, 2799, 7497, 6561, 2296, 8415, 6561, 4671 };
        int[] s = { 626, 1246, 418, 1038, 1666, 2, 626, 1666, 1662, 1454, 622, 622, 1870, 1246, 1870, 830, 626, 1662, 2, 834, 622, 1870, 2082, 1874, 834, 1458, 418, 414, 414, 1038, 1042, 210, 1874, 2078, 834, 622, 418, 1042, 210, 1042, 834, 622, 1666, 1458, 512, 1870, 1458, 1038 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case86() {
        int[] c = { 1343, 335, 897, 1343, 111, 1343, 449, 113, 1343, 897, 335, 1233, 1345, 111, 1233, 895, 785, 449, 897, 897, 895, 1343, 785, 714, 1119, 335, 113, 783, 449, 225, 1009, 1009, 225, 1343, 1231, 449, 1121, 447, 1121, 1007, 449, 225 };
        int[] s = { 4029, 1005, 2691, 4029, 333, 4029, 1347, 339, 4029, 2691, 1005, 3699, 4035, 333, 3699, 2685, 2355, 1347, 2691, 2691, 2685, 4029, 2355, 2141, 3357, 1005, 339, 2349, 1347, 675, 3027, 3027, 675, 4029, 3693, 1347, 3363, 1341, 3363, 3021, 1347, 675 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case87() {
        int[] c = { 2398, 3148, 3571, 5169, 3808, 4088, 6532, 7756, 7566, 8555, 9211, 5594, 5827, 5030, 3479, 2774, 4417, 4231, 941, 9401, 4440 };
        int[] s = { 2398, 3148, 3571, 5169, 3808, 4088, 6532, 7756, 7566, 8555, 9211, 5594, 5827, 5030, 3479, 2774, 4417, 4231, 941, 9401, 4439 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case88() {
        int[] c = { 3447, 7166 };
        int[] s = { 2406, 6367 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case89() {
        int[] c = { 573, 7614 };
        int[] s = { 1416, 8655 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case90() {
        int[] c = { 2375, 6051 };
        int[] s = { 7435, 7515 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case91() {
        int[] c = { 2560, 596 };
        int[] s = { 4730, 39 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case92() {
        int[] c = { 6829, 374 };
        int[] s = { 8926, 5555 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case93() {
        int[] c = { 5353, 7246, 405 };
        int[] s = { 1225, 3400, 1189 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case94() {
        int[] c = { 2212, 9207, 6120 };
        int[] s = { 5, 9661, 3039 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case95() {
        int[] c = { 451, 4136, 8199 };
        int[] s = { 102, 5357, 5657 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case96() {
        int[] c = { 7293, 6411, 1965 };
        int[] s = { 9847, 7814, 2836 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case97() {
        int[] c = { 4621, 1319, 1842 };
        int[] s = { 4167, 1689, 1916 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case98() {
        int[] c = { 4552, 4883, 769, 1580 };
        int[] s = { 9142, 9207, 2379, 4144 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case99() {
        int[] c = { 3134, 9635, 9251, 2169 };
        int[] s = { 2125, 8250, 7939, 402 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case100() {
        int[] c = { 689, 1480, 5008, 1578 };
        int[] s = { 1305, 2854, 7769, 3535 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case101() {
        int[] c = { 5217, 1, 987, 9754 };
        int[] s = { 2966, 195, 1178, 5249 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case102() {
        int[] c = { 5519, 567, 4692, 6119 };
        int[] s = { 6478, 51, 2488, 7273 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case103() {
        int[] c = { 8025, 3249, 6690, 5087, 6996 };
        int[] s = { 8569, 3855, 7296, 6430, 7785 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case104() {
        int[] c = { 3975, 3840, 2607, 439, 4811 };
        int[] s = { 7971, 7754, 5484, 1858, 9852 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case105() {
        int[] c = { 7543, 33, 6321, 3104, 4269 };
        int[] s = { 9014, 163, 6432, 3817, 4332 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case106() {
        int[] c = { 2353, 7781, 7657, 7099, 8582 };
        int[] s = { 3222, 6539, 5792, 5370, 7403 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case107() {
        int[] c = { 6015, 9155, 2804, 9644, 4768 };
        int[] s = { 4939, 8218, 1386, 8548, 4322 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case108() {
        int[] c = { 7205, 273, 7844, 9428, 8198, 5204 };
        int[] s = { 7772, 147, 8024, 8708, 8303, 3484 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case109() {
        int[] c = { 9246, 9063, 7668, 9574, 5155, 8284 };
        int[] s = { 9717, 9303, 7698, 9995, 5804, 8679 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case110() {
        int[] c = { 6772, 7, 6195, 6362, 86, 1470 };
        int[] s = { 7281, 6, 5785, 6807, 384, 2040 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case111() {
        int[] c = { 7367, 6097, 9721, 9133, 130, 318 };
        int[] s = { 5688, 4240, 6872, 6178, 24, 373 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

    @Test
    public void case112() {
        int[] c = { 354, 6780, 5580, 3352, 7815, 458 };
        int[] s = { 428, 7738, 6444, 3604, 8758, 495 };
        assertEquals("Equivalent", scoringsystems.isEquivalent(c, s));
    }

}
