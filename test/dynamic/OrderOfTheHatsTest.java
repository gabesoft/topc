package topc.test.dynamic;

import junit.framework.*;
import org.junit.Test;
import static org.junit.Assert.*;
import topc.dynamic.*;

public class OrderOfTheHatsTest {
  OrderOfTheHats orderofthehats = new OrderOfTheHats();

  @Test
  public void case1() {
    String[] spellChart = { "Y" };
    assertEquals(1, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case2() {
    String[] spellChart = { "NYN", "NNY", "NNN" };
    assertEquals(0, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case3() {
    String[] spellChart = { "NYN", "NNY", "YNN" };
    assertEquals(1, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case4() {
    String[] spellChart = { "NYYYYYY", "YNYYYYY", "YYNYYYY", "YYYNYYY", "YYYYNYY", "YYYYYNY", "YYYYYYN" };
    assertEquals(21, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case5() {
    String[] spellChart = { "NNNY", "YNYN", "YNNN", "YYYN" };
    assertEquals(1, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case6() {
    String[] spellChart = { "N" };
    assertEquals(0, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case7() {
    String[] spellChart = { "YYYYYYYYYYYYYYYYYYYY", "YYYYYYYYYYYYYYYYYYYY", "YYYYYYYYYYYYYYYYYYYY", "YYYYYYYYYYYYYYYYYYYY", "YYYYYYYYYYYYYYYYYYYY", "YYYYYYYYYYYYYYYYYYYY", "YYYYYYYYYYYYYYYYYYYY", "YYYYYYYYYYYYYYYYYYYY", "YYYYYYYYYYYYYYYYYYYY", "YYYYYYYYYYYYYYYYYYYY", "YYYYYYYYYYYYYYYYYYYY", "YYYYYYYYYYYYYYYYYYYY", "YYYYYYYYYYYYYYYYYYYY", "YYYYYYYYYYYYYYYYYYYY", "YYYYYYYYYYYYYYYYYYYY", "YYYYYYYYYYYYYYYYYYYY", "YYYYYYYYYYYYYYYYYYYY", "YYYYYYYYYYYYYYYYYYYY", "YYYYYYYYYYYYYYYYYYYY", "YYYYYYYYYYYYYYYYYYYY" };
    assertEquals(210, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case8() {
    String[] spellChart = { "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN" };
    assertEquals(0, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case9() {
    String[] spellChart = { "NY", "YN" };
    assertEquals(1, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case10() {
    String[] spellChart = { "YNNNNNNNNNNNNNNNNNNN", "NYNNNNNNNNNNNNNNNNNN", "NNYNNNNNNNNNNNNNNNNN", "NNNYNNNNNNNNNNNNNNNN", "NNNNYNNNNNNNNNNNNNNN", "NNNNNYNNNNNNNNNNNNNN", "NNNNNNYNNNNNNNNNNNNN", "NNNNNNNYNNNNNNNNNNNN", "NNNNNNNNYNNNNNNNNNNN", "NNNNNNNNNYNNNNNNNNNN", "NNNNNNNNNNYNNNNNNNNN", "NNNNNNNNNNNYNNNNNNNN", "NNNNNNNNNNNNYNNNNNNN", "NNNNNNNNNNNNNYNNNNNN", "NNNNNNNNNNNNNNYNNNNN", "NNNNNNNNNNNNNNNYNNNN", "NNNNNNNNNNNNNNNNYNNN", "NNNNNNNNNNNNNNNNNYNN", "NNNNNNNNNNNNNNNNNNYN", "NNNNNNNNNNNNNNNNNNNY" };
    assertEquals(20, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case11() {
    String[] spellChart = { "YYYYYYYNYYYYYYYYYYYY", "YYYYYYYNYYYYYYNYYNYY", "NNYNYYYYYYYYYNNYYYYY", "NYNYYYYYYYYYYYYYYNNY", "YYYYYYYYYYYYYYYYNYYY", "NYYYYYYYYYYYYYYYYYYY", "YYNYNNYYYNYYYYYYYYYY", "YYYYYYNYYYYYYYYYYYYY", "YYYYYYYNYYYNYYYYYYYY", "YYYYYYYYYYYYYYNYYNYY", "YYNYYYYYYYYYNYYYYYYY", "YYNYYYYYYYYYYYYNYNYY", "YYYYYYYYYYYYYNYYYYYY", "YYYYNYYYYYNYYYYYYNYY", "YYYNNYYYYYYNNYYNYYNY", "YYNYYYYYYYYYYYNYNYYY", "YYYYYYYNYYYNYYYNYYYY", "YYYYYYYYYYNYNYYYYYYY", "NYYYYNYYYNYYYYYYYYYY", "YYYYYYYYYYYNYYYYYYYY" };
    assertEquals(168, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case12() {
    String[] spellChart = { "YNNNNNNNNNNNYNNNNNNN", "NNNNYNYNNNNNYNNYNNNN", "NNNNNYNNNNNNNYYNNYNN", "NNYNNNNNNYNNNNYNNNYY", "YNNYNNNNNNNNNYNNNNNN", "NNNNNNYNNNNNYNYNNNNN", "YYNNYNNYYNNNNYNNNNNY", "NNNNYYNNYNNNNNNNNNNN", "NNNNNNNYNNNNYYNYNNYY", "NNNNNNNNNNNNNNNYNNNN", "YNYNNNNNNNNNNNNNNYNN", "YNNNYNNNNNNNNYNYYNYN", "NNNNNNNNNNNNNNNNNNNN", "NNYNYNNNYNNNYNNNNNNN", "NNYNNYNNNNYNNNNNNNNY", "NNNNNNNNYYYNNYNNNNNN", "NNYNNYNNNNNYNNNNNNNN", "NYNNNNNNNNNNNNNNNNNN", "NNYNNNYNNNNYNYNNNNNN", "NNNNNYNNYNNNNNYNNNNN" };
    assertEquals(17, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case13() {
    String[] spellChart = { "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNYNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNYNYNNNYNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NYNNNNYNNYNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNYNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN" };
    assertEquals(1, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case14() {
    String[] spellChart = { "NYYNYYNNYNNNNYNNNYNN", "NNYYNYYNNNNNNNNNNNNN", "YYYYNNNNNYNYNYYNNNNN", "NYNNNNNYYNNNNNNNNNNN", "NNNYNNNNNNNNYNNNNNNY", "NNYYNNNNNNNYYNNNNYNN", "NNNNNNNNYNNNNNYNNNYN", "NNNNNYNNNNYNNNYNYNYN", "NNNYNNNNNNNYNYNNYYYN", "NYNNNNNNYYNYNNNNNNNN", "NNNNNYNYNNYNNYNNNNYY", "NNNNNYYNNYNNNYYYNNNN", "NNNNNYNNNYNNNNYNNNNY", "NNYYNNNNNNYNNNNNYNNN", "NNNNYYNNNNYYNNNNNYNY", "NNNNYNNNNNNYNNNNNNNN", "NNNNNYYYNYNNNNYNNNNN", "NNYYNNNNNYNYNNNNNYNN", "NNYNNNNNNNNNNNNNNNYY", "NNNNYNNNNNNNNNYNNNNN" };
    assertEquals(28, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case15() {
    String[] spellChart = { "NNYNNYYNNNYNNNNNYYYN", "NNNNNNNYNNYNNNYNNNNY", "NNNYYNNNNYYNYNNNNNNY", "NYYNNYYNNNNNNNNYNNNN", "NNNNYNNYNNYNNYNYNNNN", "NNNNNNNNNYNNNNNNNYNN", "NYNYNNYNNNNNYNNNNYNN", "NNNYNNNNNNNNNYYYNNNY", "YNYYYNNNNYNYNYNNNYNN", "YNNYNNNYNYNNYNNNNNNY", "YNYNNNNNNNNYNYNYNNNN", "NNNNNNNNNYYYNNNNNNYY", "NNNNNNNYNNYNNNNNNNNN", "NNNNYNNYNNNYYNNNNNYY", "YNNNYYNNNNNNYNNNNYNN", "NNNNNNNNYYNNNNNNYNYY", "NNNNYNNYYNYNYNNNNNYN", "NNYYYNYNNNNNYNNNNNNN", "YYNNYNNNNNNNNYNNNYYY", "NYNYNYNNNNYNNNNNYYYY" };
    assertEquals(32, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case16() {
    String[] spellChart = { "NNYNNYNNNNYNNNNNNNNN", "NNNNNNYNYNNYNNNNYNNN", "NNYYYNNNNNNNNYYNNNNN", "NNNNNNNNYYNNNYNNYNNN", "NNNYYNNNNNNYYNYNYYNN", "NNNYYNNNNNYNNNNNNNNN", "NNYNNNNYNNYNNNNNNNNN", "NYNNYYNNNNYNNNNNNYYY", "NNNNNNNNNNNYNNNNNNYN", "NNNNNNYYNNYNNNNNYNNN", "NNNYNYYNNNNNYNYYNNNN", "NNNNNNNNNNNNNNNYNNNN", "NYNNYNNNNYYYNYYNNNNY", "NNNNYNNNNYNNNYYNNNNN", "NNYNNNNNNYYNYNNNNYNN", "NNNNNNNYYNNNNNNNNNNN", "NNYNNNNNNNNNNNYNYNNN", "NYNNYNNNNYNYNNNNNYNN", "NYNNNNNNNNNYNNNYNYNN", "YNNNYNNYNNNNNYNNNNNN" };
    assertEquals(24, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case17() {
    String[] spellChart = { "YYYNNYNNNYNNNYNNYNYN", "NNYNNYYYYNNNNNYNYYNN", "NNNNNYNNNYNNNNNNNNNY", "NYNNYYYNNYNNNNNNNNYN", "YNYNYNNNNNYNNNYNYNNY", "NNNNYYYNYNNYYYNNNNNN", "YNYNYYNNYYNNYNNYNYNN", "NNNNYNNNNYNYNYNNNNNN", "NYYNNNNNNNNNNNNNYYYN", "NNNYNNNYNNNYYNNYYNNY", "NNNNNNNNNNYNNYNNNYNN", "YYYNNNNYNYNNNNNNNNYN", "NNYNNNNNYNYYNYNNNNNN", "NYNYNYYNNYYNNNNNYNNN", "YYNNNNNYNNNYYNYNNNNN", "YNYNYNNNNNNNNYNNNNNN", "NNNNNYNNNNNYYNNNNYNN", "NNNNNNNNNYNNNYYNNNNN", "NYNNYNNNNYYNNNNNNNYY", "NNNNNNNNNYYYNNNNNNNY" };
    assertEquals(34, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case18() {
    String[] spellChart = { "NYNNYYYYNYNNNNNNYNYN", "NNNYNNNNNNNNYNNNNYNY", "NNYNNNYNYYYNNNNYNNYN", "NNNNNNNYYNNNNNYNNNNN", "NNYNNNNYNNYNNNYNNNNN", "YNNNNNNNNNNNNNYNNNYN", "NNNNNNYNNNNNNNNYNNNN", "NNNNNNNYNNYNNYNYYNYN", "NNYNNNYNNNNNNNNNNNNN", "YNNNNNNNNNNNYNNNNYNN", "YNYNNNYNNNNNYNNNNNNY", "NNYNYNNNNYNYNNYNYYNN", "NNNYNNYNNYYNNYNYNNYN", "YYYNYNNNYYNNNNYNNNNY", "NNNNNYNYNNNNNYNYNYYY", "NNYYNYNNNNNNNNYNNNNY", "NNYNYYNNNYNYNYYNYNNN", "NNYYYNNYNNYNNNNNNNNN", "NNNNYYNNNNNYNNNNNNYN", "YYNNNYNNNNNNNNYNNNNN" };
    assertEquals(31, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case19() {
    String[] spellChart = { "NNNYNNNYNYYNNYNNYNNN", "YYYNYYNNNNNYYNYYNYNY", "YNYYNNYYYNNNYNYYYNYN", "YYNNYNNNNYNYNNNNNNYY", "NYNNNNNYNYYNNNNNNYYY", "NNNYNYYNYNYNNYNNNYNN", "NNNNNYNNNYYNNNYNNYNY", "NYNYNNNNNNYNNYNNNYYY", "YYNYYNYNYNYYNNNNNNNN", "NNNYYYNNNYYNYNYNNYYN", "NNNNNYYNYNNNNNNYNNNY", "YYNNYNNNNNNYNYYNNYYY", "YNYYNYYNYYYNNYNNYNNY", "NYYNNNNYYNNNYYYYNYYY", "NNNNNYNYYYYNYNNYNNNY", "NYNYNNYNNNYNNNNNNNNN", "YYNYYYNNNNYNYNYNYYYY", "NNNYNNNNYNNNYYNYYNNY", "NNYNYNYNNNYYNNNNNNNY", "NNNYYNNYYNYNYNYYYNYN" };
    assertEquals(55, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case20() {
    String[] spellChart = { "NNNNNNNNYNYNNNNNNNNN", "NNNNNNNNNNNNNNNNYNYN", "NNNNNNNNNNNNNNNNNNNN", "NNNYNYNNNNNNNNNNNNNN", "NNYNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNYNNNNNNYNNYNNNNNNN", "NNNYNNNNNNNNNYNNNNNN", "NNNNNYNNNNNNNNNNNNNY", "NNYNNNNNNNYNNNNNNNNN", "NNNNNNNNNNNYNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNYNNYNNNNNNNNN", "NNNNNNYNNNNNYNYNNNNN", "NNNNNNNYNYNNNNNNNNNN", "NNNNNNYNNNNNNNNYNNNN", "NNNNYNYNNNYNNNNNNNNN", "YNNNNNYNNNNNNNNNNYNN", "NNNNNNNNNNNNNNNNYNNN" };
    assertEquals(3, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case21() {
    String[] spellChart = { "NYNYYNYNNNYNNNYNNYNY", "NNYNYNNNNNNNNYNYNYNN", "YNYYYNYYYYNYYYNNNNYY", "YNYNNYYNNYNYYYNNYNYY", "YNYYNYNNNYNYYNNYYNYY", "NYNYYNYNYYNNNNYNYYYN", "NYYNNYYYNYYNYNNYYYNN", "YNNYYNNYNNYNNNNYNYNN", "NNYNNYNYNNNNYYNNNYYN", "NNNYYNYNYNYYNNYYYYYY", "YYNNYNYNYYNNYYYYYNYY", "YYYYNNNNYYNYNNNNNYYY", "NNYNYNNNYYNNYYNNNYYN", "YNYYNYYYNNYNNYYNNYNY", "NNYNYYYYNYYYNYNNYNNY", "YNYNYNNYNYYNYYNYYYNN", "YYYNYYNNNYNYYYNNNYNN", "YYNYYYNNNNNYNNYNNNNN", "NNNNNYNNYNYNNNNNNYNN", "NNNYYYYNNYNYNNNNNNNN" };
    assertEquals(69, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case22() {
    String[] spellChart = { "YYYYYNNYYYNYNNNNYNNY", "NYNNNYYNNYNYYYNYYYYY", "NNYNNNYYNNNNNNYYYYNY", "YYNYNYYNNYYYNYNNNYYY", "NYYNNYNYNYNNNNYYYNYN", "NNNNNYYNYNNYYYYNYYYN", "YNYNYYNNNYNNNNNYNNYY", "NYYYYNYNYNNYNNYNNNNY", "YYYYNYYNNYYYNNYNNYNY", "YYYYYYNYNYNYNNNNNNYN", "NNYYYYYNNNYNNNYNNNNY", "YYNNNYNYYNYYNYYNYNYN", "NNYNYYNYYNYYNYNYNYYN", "YNYNYYNYNNNYNYNYYNYY", "NNYNNNYYYYYYYYYYYNYY", "YYYYYNYYNYYYYYNNYNNN", "NYYYYYYYYNNNNNYYNNYN", "YNNYNNNYYNYYYNYNYYYY", "YYNNYNYYYNYYNNNYYNNY", "NNYNYNYYYNYYNYNNYNNN" };
    assertEquals(79, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case23() {
    String[] spellChart = { "NNYNNNYNNYYYYYNYYNNN", "YNNYNYNNYYYNNNYYYNNY", "NNNYNNNNNNNNNNNNNYNN", "NNNYNNNYNNNYNNYNNYYY", "NNNYNNNYNNNNNNYYYNNN", "YNNNNYYNNNNYNYNNNYYN", "NNYYYYNNYNNNNNNNYNNY", "NYNNYYNNNNNYYNYNNYNN", "YNNYNNYNNNYNYYNYYYYN", "YNNNNNNYYYNNNNYNYNNY", "NNNNNNNNNNNNNNNYYNNN", "NNYYNNNNNNNYYNYNYYNN", "YNNYYNNNNNYNNYNNYYNN", "YYYNNNYYNNNNNNYNNNYY", "NNNNNNNNNNYYYYNNNNNY", "NNNNYNYYNNNNYNNNYNNN", "NYYNNYNYYNYNYYYYNNNN", "NNNYNNNYNNNYYNNNYNYN", "NYNYNNYNNNNNNYNNNNNY", "NNNYNNYNYNNNNNNNNNNY" };
    assertEquals(40, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case24() {
    String[] spellChart = { "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNYNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNYNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNYNNNNNNNNNNNNYN", "NNNNNYNNNNNNNNNNNNNN", "NNNNNNNNNNNYNNNNNNNN", "NNNNNNNNNNNNNYNNNNNN", "YNNYNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNYNNNNNNN", "NNNNNNNNNNNYNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNYNNNNNYNNNNNNNNNN", "NNNYNNNNNNNNNNNNYNNN", "NNNNNNNNNNNYNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN" };
    assertEquals(1, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case25() {
    String[] spellChart = { "NNNNNNNNYNNYNNNNYNYN", "YNNNNYYNNNYNNNNNNNNN", "NNYNNNNNNNNYNYNNNYNN", "NYNYNNNNNYNNYNNNNYYN", "NNNNYYNNNNNNNYNNNNNN", "YNNNNNNYNNNYNNNYYNNN", "YNYNNNNYNNNNNYNNNNYN", "NNYNNNYNYNNNNNYNNNNN", "NYYNNNNNYNNNNNNYNNNN", "YNYNNNYNNYNNYNNNNNNN", "NNYYNNNNNNNNNNNNNNNN", "NNNYNYNYNNNNNNYNNNNN", "NNYNYYYYNNNNYNNYNYNN", "NNNYNNYNNNNNNYYNNNYN", "NNNNYYYNYYYNNYNNNNYN", "NNYNNNYNYNNNNYNNNNNN", "NYNNNNNYNNYNNNNYNNNN", "NNNNNNYYNNYNYNNNYNYY", "YNNYNYNNNNNNNYNNNNYY", "NNNYYNNNNNNNNNYYNNYN" };
    assertEquals(28, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case26() {
    String[] spellChart = { "YYYYYYYYYYYYYYYYYYYY", "YYYYYYYYYYYYYYYYYYYY", "YYYYYYYYYYYYYYYYYYYY", "YYYYYYYYYYYYYYYYYYYY", "YYYYYYYYYYYYYYYYYYYY", "YYYYYYYYYYYYYYYYYYYY", "YYYYYYYYYYYYYYYYYYYY", "YYYYYYYYYYYYYYYYYYYY", "YYYYYYYYYYYYYYYYYYYY", "YYYYYYYYYYYYYYYYYYYY", "YYYYYYYYYYYYYYYYYYYY", "YYYYYYYYYYYYYYYYYYYY", "YYYYYYYYYYYYYYYYYYYY", "YYYYYYYYYYYYYYYYYYYY", "YYYYYYYYYYYYYYYYYYYY", "YYYYYYYYYYYYYYYYYYYY", "YYYYYYYYYYYYYYYYYYYY", "YYYYYYYYYYYYYYYYYYYY", "YYYYYYYYYYYYYYYYYYYY", "YYYNYYYYYYYYYYYYYYYY" };
    assertEquals(209, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case27() {
    String[] spellChart = { "NNYNYNNNNNNNNNNNNNYN", "NNNNNNNNNNNNNNNNNNNN", "NNYNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNYNNNNNNNNN", "NNNYNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNYYNNN", "NNNNNNNNNNNNNNNNNNNN", "YNNNYNNNNNNNNNYNNNYN", "NNNNNNNNNNNNNNNNNNNY", "NNNYNNYNNNNNNNNNNNNN", "YNNNNNNYNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNYNNNYNNNYNYYNNNNN", "NNNNNNNYNNNNNNNNYNNY", "NNYNYNNNNYNNNNNNNNNN", "NNNNNNNNNNNNYYNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "YNNNNNNNNNNNNNNNNNNN" };
    assertEquals(3, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case28() {
    String[] spellChart = { "NNNYYNYYNNNYYYNNYNNY", "NYNYNYYNYNNYNNYYNNNN", "NYYNNYNNNYNNNNNNYYNN", "YYNYYNNNYYNNYNNYNNNN", "YNNYNNNNNNYNYNNNNYNY", "YNYNYYYNNNNNNNNYNNNN", "NNYNNNNNYNNNNYNNYNYN", "NNNNNNNYYYNYNNNNNYNN", "YNNNNNNNNNNNYNNYNNNY", "NNNNNNNNYNNNYNYNNYNY", "NNNNNYNNNNNNNNNYNNYN", "NNYNYYNNNNNNNNYNNNYN", "NYNNNNYNNNNNNYNNNNYY", "YNYNYNNNNNYNYNNNNNNN", "NYNYNNYNNNNYNYNNNNNN", "NYNNNNYNNNYNNYYNNNYN", "YNNNNNNYNNNNYYNNNYYY", "YYYNYNYNNNNYNNNNNNNN", "NNYNNYNNNYYNNNNNYNNN", "YNYYNNNNYYYYNYNYNNNY" };
    assertEquals(40, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case29() {
    String[] spellChart = { "YNNNYNNNYYNNNNNNYNNN", "YNNNYNNYNNNNNYNNNYNN", "NNNYNNNYNNNNNYYNNNNN", "NNNNYNNYNNNNNNNNNNNY", "YYNYYNNNNNNNYNNNNNYN", "NNNYNNNYNNNNNNYYNYYN", "NNNNNNNNYNNNNYNYNNYN", "YYNNYNNNNNNNYNNYNNYY", "YNYYYNNYNYNNNNNNNNNN", "NNYYNNNNNNNNNNNNNYNN", "YNNNNNNYNNNNNYYYNNNY", "NNNNYNYNNNNYYNYYYYNN", "NNYNNNNYNNYNNNNNNNYN", "NNNNNNNYYNNNNNNYNNNN", "YYNYNNNNNNNNNNYNNNYN", "YNNNNNNNNNNNNNNYNNNN", "NNNYYNNNNYNNYYNNNNYN", "NNNYNNNYNYYYNYYNNYNN", "YNNNNNYNYNNNNNNNNNYN", "NNNNNNNNYNNYNNYYNYNN" };
    assertEquals(25, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case30() {
    String[] spellChart = { "YYNYNYYYYYYYYYNYYYYY", "YYYYYYYYYYYYYYYYYYYY", "YYNYYYYNYYYYYYYYYYYY", "NYYYYYYYYYYYYYYYYYYY", "YYYNYYYYYYYNYYYYYYYY", "YNYYYYYYYYYYYYYYYYYY", "YYYYYYYNNYYYYYYYYYYN", "YYYYYYNYYYYYYYYYYYYY", "YNYNYYYYYYYYYYYYYYYY", "YYNYYYYNYYYYYYYYYYNN", "NYYYNYYNYYYNYNYNYNYY", "YYYYYYYYNYYYYYNYNYYY", "YYYYYNYYYYYYYYYYYYYY", "YYYNNYYYYYYYYYNNYYYY", "YYYYYNYYNYYYYYYYYYYY", "YYNYNNYNYYYYNNYNYYYY", "NYYYYYYYYYYYYYNNYYYN", "YNYNYYNYYYYYYYYYYYYY", "YYYYYYYYNYNYYNYYYYYY", "YYYYYYYYYYYNYYYYYYNY" };
    assertEquals(160, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case31() {
    String[] spellChart = { "YNYNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNY", "YNNNNNNNNNNNNNNNNNYY", "NNYNNYNNNYNNNNNNNNNN", "NNYNNNNNYNNNNNNNNNYN", "NNNNNNNNNNYNNYNNNNNN", "NNNYNNNNYYNNNNYNNNNN", "NNNNNNNYYNNYNNNNNNNN", "YYNNNYNNNNNNYNNNNNYN", "YYNNNNNNNNNNNNNNYNNN", "NNNNNYYNNNNNNYYNNNNN", "NNNNYNNNNNNNNNYNNNNN", "NNNNNNNNNYNYNYNYYNNN", "YNNNNNNNYNNNNNNNNNNN", "NNNNYYNYNNNNNNYNNNNY", "YNNNNNNNNNYNYNNYNNNN", "NYNNNNNNNYYNNYNYYNNN", "YNNNNNNYNNNNNNNNNNNN", "NNYNNNNNNNYYYNNNNYNN", "NNNYNYYNNNNNNNNNYNNN" };
    assertEquals(18, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case32() {
    String[] spellChart = { "NNNNNNYYNNNNYNNYNYNY", "NNYNNYNNYNYNNYNYYNYN", "NNNYYYYNYNNYNNYNYYYN", "NNNYYNYNNNNNYYYNNYYN", "YNYYYYNNYYNNNNNNNYNY", "YYNNNYNNYYYYYNYYNYYY", "YNYNNNYNNYYNNNNNYYYN", "NYYNNYNNNNNNNNNNNNNY", "YNYYNNNNYNNNYNYNYNYY", "NYYYYYYYNNNNYNNNYNNN", "YNNYNNNYYYNNYNNYNNNY", "NYNYNYNYNYNNNNNYNYYN", "YYNNNYNNYNNNNYYYYYNN", "YYNNNNNYYNNYYNNNNYYN", "NYYNNNNNNNNNYNNYNNNN", "YNYNNYNNNYNYYYYNNNYN", "NNNYNNNYNNYYNYYNNYYN", "YNNYYNYNYNYYNNYYNNNN", "YNNYYYNYYYYNYNNYYNNN", "NYNNYNNNNYYYNNNNNNNN" };
    assertEquals(58, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case33() {
    String[] spellChart = { "YYYYYYYYYYYYYYYYYYYY", "YYYYYYYYYYYYYYYYYYYY", "YYYYYYYYYYYYYYYYNYYY", "YYYYYYYYYYYYYYYYYYYN", "YYYYYYYYYYYYYYYYYYYY", "YYYYYYYYYYYYYYYYYYYY", "YYYYYYYYYNYYYYYYYYYY", "YYYYYYYYYYYYYYYYYYYY", "YYYYYYYYYYYNYYNYYYYY", "YYYYYYYYYYYYYYYYYYYY", "YYYYYYYYYYYYYYYYYYYY", "YYYYYYYYYNYYYYYYYYYY", "YYYYYYYYYYYYYYYYYYYY", "YYYYYYYYYYYYYYYYYYYY", "YYYYYYYYYYYYYYYYYYYY", "YYYYYYYYYYYYYYYYYYYY", "YYYYYYYYYYYYYYYYYYYY", "YYYYYYYYYYYYYYYYYYYY", "YYYYYYYYYYYNYYYYYYYY", "YYYYYYYYYYYYYYYYYYYY" };
    assertEquals(203, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case34() {
    String[] spellChart = { "YNYYNNYY", "NYNNNNYY", "YNNNNNNN", "NYNYYNNY", "NNNYYNNN", "NNNYYNYN", "NYNYNYNN", "NNNNNNNN" };
    assertEquals(8, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case35() {
    String[] spellChart = { "NYNNYYY", "YYYYYYY", "YYNNYNY", "YYYYYYY", "YYYYYYY", "YYYNYYY", "YYYYYYY" };
    assertEquals(21, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case36() {
    String[] spellChart = { "YYYY", "NYYY", "YYYY", "YYYY" };
    assertEquals(9, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case37() {
    String[] spellChart = { "NYYYNYYYYY", "YYYYYYYYYY", "YYYYYYYYYY", "NNNYYYYYYY", "YYYYYYYYYY", "YYNYYYYYYN", "YYYYYNYYYY", "NNYNNNYYYY", "YYYYYYYYYY", "YYNYYYYYYY" };
    assertEquals(41, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case38() {
    String[] spellChart = { "YYNYYYYYYYY", "YYYYYYYYYYY", "YYYYYYYYYYY", "YYYYYYYYYYY", "YYYYYYYYYYY", "YYYYYYYYYYY", "YYYYYYYYNYN", "YYYYYYYNYYY", "YYYYYYYYYYY", "YYYYYYYYYYY", "YYYYYYYYYYY" };
    assertEquals(62, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case39() {
    String[] spellChart = { "YYYYYYYYNNYYYYYYYYY", "NYYNYYNNYYYNYYYYYNN", "YYYYYYYYYYYYYYYYYYY", "NYYYYYNYYYYYYYYYYYY", "YYYYYYYYYYYYYYYYYYY", "YYYYYYYYNYYYYYYYYYY", "YYYYYYYYYNYYNYYYNYY", "YYYNNNYYYYYYYYYYNYY", "YYYYYYNYYYYYYYYYNYY", "YYYYYYYYYYYYYYYYYYY", "YYYYYYYYYYYYYYYYYYY", "NYNNYYYYYYYYYYYYYYY", "YNNYYYYYYYYNYYYYYYY", "YNNYYYYYYYYYYYYYYYY", "YYYYYYYYYYYYYNYYYYN", "YYYYYYYYYYYYYYYYYNY", "YYYYYYNYYYYYYYYYYYY", "YYYYYYYYYYYYYYYYYYY", "YYYYYYYYYNYNYYYYYYY" };
    assertEquals(157, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case40() {
    String[] spellChart = { "NYY", "YNN", "NYN" };
    assertEquals(1, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case41() {
    String[] spellChart = { "NNNN", "NNNN", "NNNN", "NNNN" };
    assertEquals(0, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case42() {
    String[] spellChart = { "YYNNNYNYYYNNYYN", "NYNNYNNNNNNYYNY", "YNYNNNYNNNNNYNN", "YNYNYNYNYYYNNNN", "NNNYNYNYNYNNNNN", "NYNNYYNYYYNYYNY", "NYYYYNYYNNNNNYY", "YNNYNNNNYNYNYYY", "NNYNYNYYYYNNYYY", "NNNNYNNNNNYYNYN", "NYYYYNYYYYYNYNN", "NNYNNNNNNNNNNNY", "NYNNNNYNYYNNNYY", "NNNYNYYNNNNNNYY", "YNYYYNNYNNYYYNN" };
    assertEquals(34, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case43() {
    String[] spellChart = { "YNYNYYYNYY", "YYYYNYYNYY", "YYYYYYYYYY", "NYYYYYYYYY", "NYYYYNYNYN", "NYNNNYYYYN", "YYYYNNYNYN", "YYNYNYYNYY", "NNNYYNYYNY", "YNNYNYNYYY" };
    assertEquals(30, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case44() {
    String[] spellChart = { "YYYY", "YYYY", "YNNY", "YYYY" };
    assertEquals(8, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case45() {
    String[] spellChart = { "YYN", "YYN", "YYN" };
    assertEquals(3, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case46() {
    String[] spellChart = { "YNNNYYNNNYNY", "NYNNNNNNNNNY", "YNNYNYNYNYYY", "NNNNNNYYNYYY", "YNYNNYNNNNYN", "YNNYYNNNNNNN", "YNNNNYNNNNNN", "NNNNYNYNNNNY", "YNNNNNNNNYNN", "NNYNNYYNNNYN", "NNNNNNYNNNNN", "NNNNNYNNNYNN" };
    assertEquals(9, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case47() {
    String[] spellChart = { "YNYNYYYYYN", "YYYYNNYNYY", "YNNNYYNYYY", "YNNYYNYYYY", "NYNYYYYYNN", "YYNYNNYYNN", "YYYYYNYYYY", "YYYYYYNNNN", "YNYYYYYYYY", "YYYNYYYYNY" };
    assertEquals(31, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case48() {
    String[] spellChart = { "YNNNNNNNNNNYNNYY", "YNNNYNNYNNYNNYNN", "NYNNNNNNNYNNNNNN", "NNNYYYNNNNYNNNNN", "NNYNNNNNNYNNYNNN", "NNNYNNNNNNNNNYNN", "NNNNNNYNYNNNNNNN", "NNNNNNNNYNNNYNNN", "NNNNNNNNNNYNNNNN", "YNNNNNNNNNYNNNNN", "NNYNNYNNYNNYNYNN", "NYNNNNNNNNYNNNNN", "NNNNNYNNNNNNNNNN", "NNNNNNNYNNNNNNNN", "NYNNYNYYNNNNNNNN", "NNNNNNYNNNNNNNYN" };
    assertEquals(11, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case49() {
    String[] spellChart = { "NNNYYYYNY", "NYNYYYNNY", "YYNNNNYYY", "YYYNYYYYY", "NYYYYYYYY", "YYYYYYYYY", "YYYYNYYNN", "NYYYYYYYY", "YYYYYNNYY" };
    assertEquals(29, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case50() {
    String[] spellChart = { "YYYY", "YYYN", "YNNN", "NYYN" };
    assertEquals(4, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case51() {
    String[] spellChart = { "YNYNNNYNNNYNNNYNNNY", "NNNNNNNYYYNNNNNNNNN", "NYNYNYNNNNYNNYNNYNN", "NNNNNNNNNNNNYYYYYNY", "NNNNYNNNNNNYNNNYNNN", "NYNNNYYNNNNNYNNNNNY", "YNYNNNYNNYYYNYNNNYN", "YNNNNNNNYNNNNNYYNYY", "NNNYYNNNYNNNNYYNNYN", "YNNNYYYNNNYNNYNNNYN", "YNYNNNNNNNNYNNYYNNY", "NYNNNYNYNNNYYNNNNNY", "NNYNNYNNYNNYNNYNNNN", "NNYNNNNYNNNNNNYNNNN", "YYNNNNYNNNNYNNYNYYY", "NNNYNYYNNYYYYNNYNNN", "NNNNNNNNNNNYYNNNNNN", "NNNNNNYYNYNNYYYYNYN", "NNNNNNNNYYNYYNYYYNN" };
    assertEquals(40, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case52() {
    String[] spellChart = { "YNYYYYYYYNY", "NYNNYYYYYNN", "YNYYYYYYYNN", "YYYNNNYNYYN", "NYYNNYNYYNN", "YNYNYYYYYNY", "YYYNYNYNYYY", "YYYNYYYNYYY", "NYYNNYYNNYY", "NYYYNYYYNYN", "YYNYNYYYYYY" };
    assertEquals(36, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case53() {
    String[] spellChart = { "YNYYYYYYYYYYYYYYYY", "YNYNYYYYYYYYYNYYYY", "YYYYYYYNNYYNYYYYNY", "YYYYYYYYYYYYYYYYYY", "YYYYYYYYNYYYNYYNYY", "YYYYNYYYNYYYYYYYYY", "YYYYNNYYNYNYNYYYNY", "YYYYYYYNYYYNYNYYYN", "YYYNYYNYYYYYYYYYYN", "YNYYYYYNYYYNNYYYYY", "YNYYYYNYYYYYYYYYNY", "YYYYYYYYYYYYYYYYYY", "YYYYYYYYYYYYYYYYYY", "YYYYYYYNYYYNYYYYYY", "YYYYYYYYYYNYYYYNNY", "YYYYYYYYYYYYYYYYYY", "NYYYYYYYYNYYYYNYNY", "YNNYYYYYYYYYYYYNYY" };
    assertEquals(131, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case54() {
    String[] spellChart = { "NYYNNYY", "YYYNNYY", "YYYYYNN", "YNYYYYY", "YYNYYNY", "YYYYNYY", "NNYNNNY" };
    assertEquals(15, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case55() {
    String[] spellChart = { "YNYYYYYNYYNYYYNYYY", "YNNNYYNNYYYYNYYYNN", "YNNYYYNNNYYNYYNNYN", "NYNNYYNNNYYNYYNYNN", "YNNYYYNYNNNYYNNNNY", "YNNYNNYNNNYYNNYYNN", "NYNNNYYYYYNYNYNNNY", "YYNYYYYYYYYNNYYNNY", "YNYYYYNYYNYNNNYYNN", "YNNNYYYYNNNNYYNYNN", "YYNYYNNYNNNNNYNYNY", "NYYNYNYYYYNYYYYYNN", "NYYNYYNYNNNYYYNNYY", "YNYNNNNNNYYNYYYNYN", "YYNYNYNYYNNNNNYNNN", "NYYNYYYNYNNYNNNYYN", "YYYNYYYYNYYNYYNNNY", "YYYNNNYYYNNYYNYYYN" };
    assertEquals(67, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case56() {
    String[] spellChart = { "YYYYYYYYYYYY", "NYYYYYYYNNYY", "NYYYYYYYYYYY", "YNYYNNYYYYYY", "YYYYYNYYNYYN", "YYYNYYYYYYYY", "YYYNYYYYYYYN", "YYYYYYYYYYYY", "YYYYYYNYYYYY", "YYYYYYYYYYNN", "YYYYYYYNYYYN", "YYYYYYYYYYYY" };
    assertEquals(62, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case57() {
    String[] spellChart = { "YYYYYYYYYNYYYYYYYYYY", "YYYNYYNYYYYYYYYYYYYN", "YYYYYYYYYYNYYYYYYYYY", "YNYYNYYYNYYYYYYYYYYY", "YYYYYYYYYYYYYYYYYYYY", "YYYNYNYYYYYYYYYYYYYY", "NYYYYYYYYYYYYYYYYYYY", "YYYYNYYYYYYYYYYYYNYY", "YYYYYYYYYYNYYYYYNYYY", "YYYNYYYYYYYYYYYYYNNY", "YYYYYYYYYYYYYYYYYYYY", "YYYYYYYYYYYYNYYYYYYY", "YYYYYNYYYYYYYYYYYNYY", "YYYYYYYYYYNYYYYYYNYY", "YYYYNYYYYYYYYYYYYYYY", "YYYNYYYYYYYYNYYNYYNN", "YYNYYYYYYYYYYYYYYYYN", "NNYYNYYYYYYYYYYYNYNY", "YYYYYYYYNYNYYYNYYYNY", "YYYYNYYYYYYYYYYYYYYY" };
    assertEquals(171, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case58() {
    String[] spellChart = { "NYYYNNNNYYNYY", "YNNNNNNNNNNNY", "YYYYYNYYYNYNN", "YYYYNNYYYNNNY", "YYNYNYNYYNYNN", "YYYNYNYNYNYNY", "NNNYNYNNYYNYY", "NYNNYNYNNNNYN", "YYYYYYNYNNYNY", "NYYYYNYNNNYYN", "YYNYNNYYNNYNY", "NYYYYNNNNYYNN", "NYNYYYYYNNNYN" };
    assertEquals(28, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case59() {
    String[] spellChart = { "YYYYYNYNN", "NYYNYYNNY", "YNYYNYYYY", "NNYNYYYYY", "NYYNNNYNN", "YYNNYNNNY", "NNNYNYNNY", "YNNNYNYNN", "NYNNNYNNY" };
    assertEquals(15, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case60() {
    String[] spellChart = { "NNNNY", "NYNNN", "NYYNN", "YNYNN", "NYNNN" };
    assertEquals(2, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case61() {
    String[] spellChart = { "NNNN", "NNNN", "NNNY", "NNNN" };
    assertEquals(0, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case62() {
    String[] spellChart = { "NYNNNYYYYN", "YYNNYNYYNY", "YNNNNNNNNY", "YYNYNNYYYY", "NYNYYYYNNY", "YYNYYNNYYY", "NYNNYYNNNY", "NYNYNYNNNY", "YYYNNNYYNY", "YYYYNNNYNY" };
    assertEquals(20, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case63() {
    String[] spellChart = { "YYYNYYYY", "YYYNNYYY", "NYNYNNYY", "YYYYYYYY", "YYNYNYYN", "NYYYYNYN", "NNYYNYYY", "YNYNYYYY" };
    assertEquals(20, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case64() {
    String[] spellChart = { "NNNNYNYNNYNY", "YNNNNNNYNYNN", "NNYNNYYNNYYN", "YNNNNNNNNNNN", "YYNNYNNYNNYY", "NYYNNNNNNNNN", "NYYNYNNNNNNN", "NNNNNNYNNNYN", "YNYNNYNNYNNN", "YYNYYYNNNNNN", "NNNYYYNNYNNY", "YNNNNNNYYNNN" };
    assertEquals(14, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case65() {
    String[] spellChart = { "NNNNNYNNNYYNNNYNNNN", "YYNNNYNYYNNYNNYNYNN", "YYYYNNNNNNYNNNYNNYN", "YNNNNNNYYNNYNNNNYNN", "YNNYNNNYNYNYNNYYYYN", "NNNYYNNNNYYNYNNNNYN", "YYNNNNNNYYNNYNYYNYN", "NNYNNNYYNNNNYYYNNYN", "NYNNYYNYNNNYYNNYNNY", "YNYYNNNNNNNNNYNYNYN", "NNYNNNNNNNNNNNNNNNN", "NNNNNNNYYYNYNNNNNNN", "YNNNYNNNNNYYNYNNNNN", "NYNNYYYNNNNNNYNYYYN", "NYYNYNNYYYNYNNNYNNN", "NNNNYNNNYNYYYNNNYYN", "YNYNNNNNNNYNNNNNNYN", "NYNYNYYNNYYYYNNYNNN", "YNNNNYNNNYNYNYNNNYN" };
    assertEquals(34, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case66() {
    String[] spellChart = { "YYYYYYYY", "YYYYYYYY", "YYYYYYYY", "YYYYYYYY", "YYYYYYYY", "YYYYYYYY", "YYYYYYYY", "YYYYYYYY" };
    assertEquals(36, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case67() {
    String[] spellChart = { "YYYNNYYYNNYYNNYNYY", "NYNYNNYYYYYNNYNNYN", "YYNYNNNYNNNYYYYYNN", "NNYNNNNYNYYYNYNNYN", "YYNYYNNYNNYYNYYYNN", "YNNYYNNNNYNYYNYNYY", "YYYYYNYYYYYNNYNNYY", "YNYYNNNYYYNNNYNYYN", "NNYYYNNYYYNNYYYNYN", "NNYYYYNYNNYYNYNNYY", "NYNYNNNNNYYYYNYNNY", "YNYYYYNNYNNNNNYYYY", "YNYYNYNNNYNYNNNNNN", "YNNNYYYYYYNYNNYNYN", "NYYYYYNYYNNNNNNNYY", "NNYNNYNNNYYNYNNNNN", "YYNNNNNYYYYYYNYYYN", "YYYNYYYYYYYNYYNNNN" };
    assertEquals(66, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case68() {
    String[] spellChart = { "YYYYYYNYYYYYNYYYY", "NYYYYYYYYYNYYYYYY", "YYYYYNYYYYYYYYYYN", "YYYYNYYYYYYYYYYYY", "YYYYYYYYYYYYYYYYY", "YYYYYYYYYYYYYYYYY", "YYYYYNYYYNYYYYYYY", "YYYYYYYYYYYYYYYYY", "YYYYYYYYYYYYYYYYY", "YYYYYYYNNYYYYYYYY", "YYNYYYYYYYYYYNYYY", "YYYYYYYYYYYYYYYYY", "YYYYYYYYYYYYYYYYY", "YYYYYYYYYYNYYYYYY", "NYYYYYYYYYYYYNYYY", "YYYYYYYYYYYYYYYYY", "YYYYYYYYYYYNYYYYY" };
    assertEquals(137, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case69() {
    String[] spellChart = { "YYYYNNYNYYYNN", "NYYNNNNNNNYNY", "NYNYYNYYYNYNY", "NYNYNYNYYYNYY", "NYYYNYNNYNNYN", "YNYNNNYNNNYYY", "YNYYYYNNYYYYY", "NNYNNNYYYYNNY", "YNYNYYNNNNYYY", "YYYYNNYYYNYYY", "NYNNNNYNNYNNY", "NNYNNYYYYNNYN", "YYNYYYNNYYNNN" };
    assertEquals(34, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case70() {
    String[] spellChart = { "YNNYYYNYYNNNYYYNYYY", "NYNYNYNYYYYNYNNNYYN", "YNNNYNYNNYYNYYNYYNY", "YNYYYNYNYNNYNYNYNNN", "YYYYNNYYYYYYNYYYNYY", "YYYYYNYYYNYNNYYYNYY", "YYNYYNYYYNNNNNYYNYY", "NNYYNYYYNYYNNYYYNNN", "YYNYNYYYYNYNYNNYYYN", "YNYYYNNNYYNNYYYNNNY", "NNYYNYYNNYNNYYYYNYN", "YYYYNYNYYYYYNYNYYNN", "YYNYYNNNYYNYYYNYYNY", "YYYNYNNYNYNYNNYNYNN", "NYYNNYYNYYYYNNYNYNY", "YNYNNYYNYYYYYNNYYNN", "YNYNNNYNYYYNNNYNNYN", "NYNYNYNYYYNNYNNNYNY", "YNNYYNYYYYNYNNYNNYN" };
    assertEquals(82, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case71() {
    String[] spellChart = { "NY", "YN" };
    assertEquals(1, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case72() {
    String[] spellChart = { "YYNYYYYYYYYYYYYY", "YYNYYYYYYYYNYYYY", "YNYNYYNYYYYYYNYY", "YYYNYYYYYYYYYYYY", "YYYYNYYYYYYYYYYY", "YYYYYYYYYYYYYYNY", "YYYYYYYYYYYYYNYY", "YYYYYYYYYYYYYYYY", "YYYYYYYYYYYNYYYY", "YYYYYYYYYYYYYYNY", "YYYYYYYYYYYYYYYY", "YYNYYYYYYYYYYYYY", "YNYYYYYYYYYYYYYY", "YYYYYYYYYYYYYYYY", "YYYYNNYYYYNYYYYY", "NYYYYNYYYYYNYYYY" };
    assertEquals(117, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case73() {
    String[] spellChart = { "NNYNNYNYNNNYYNN", "YNYNNYNYNNYNNNY", "NYNYYNNNNNYNNYY", "YNNYYNNNYYYYYNY", "NNNNYNYNNNNNNNN", "NYNNYNNNNYNNYNN", "YYNYNNNNNNYYNYN", "NNNYNNNNNNYNYYN", "YNNYYNYNYNNYYYN", "YNNNNNYNNYYNNNY", "NYNNNNNNNNNNNYY", "YYYNYNYNNNYNNNN", "NNYYNYNNNYNNNNN", "NYNNNNYNNNYNYNN", "YNNNNNYNNYNNNYN" };
    assertEquals(24, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case74() {
    String[] spellChart = { "NNNNNYYNN", "NNNNNNNYN", "NYNNYNNNN", "YNNNYYYYN", "NNYYNNNYN", "NNNNNNNNN", "NNNNNYNNY", "NNYNNYNNN", "NNNYNNYNN" };
    assertEquals(4, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case75() {
    String[] spellChart = { "YYYYYYYYYY", "YYYYYYNNYY", "YYYYYYYYYY", "YYYYYYYNYY", "YYYNYYYYYY", "YYNYYYYYYN", "YYYYYYYYYN", "YYYYYNYYYY", "YNYYYNYYYY", "YYYYYYYYYY" };
    assertEquals(45, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case76() {
    String[] spellChart = { "YYYYY", "YYYYY", "YYNYY", "YYYYY", "YYYYY" };
    assertEquals(14, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case77() {
    String[] spellChart = { "NYNNYYYNNYNNNYNNNN", "NNNNNNNNNNNNNNNNYN", "YNNNNYYNNNYNNNNNNN", "NNNYYNNNNYNNNNNYNY", "NYNYNYNNNNYNNNNNNN", "NYNNNNNYYYYNNYNYNN", "NNNYNNNNNNYNNYYYNY", "YNNNNNNNNNNYNNNNYY", "NYNNYYNNNNNNNNNNNN", "NYYNNNNYNNYYNNNNNN", "NYNNNNNYYYNNNYYNNN", "NYNNYNYYYYNYYYNNYY", "NYYYNYNYNNNNNYNYNN", "YNYNYYNNNNNNYYYNNY", "NNYYNNNNYYNNYYNYNN", "YNYNNNYNNYNNNNYYYN", "NNYNYYNNYYNNYYNNYY", "NYNNYYNNNNNNYNYYNN" };
    assertEquals(29, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case78() {
    String[] spellChart = { "NYNYYNY", "YYYYYYY", "NNYNYYY", "YYNYYYY", "YYNYYYY", "YYYYYYY", "YYYYYYY" };
    assertEquals(22, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case79() {
    String[] spellChart = { "YNNNYYNNYN", "YYYNNNNNYN", "YNYNYYYYNY", "NNNYNYYNYY", "NYYNYYNNYY", "NNNYNNNNYY", "NYYNNYYYYY", "YNYYNYYYYY", "YYYYYYNYNN", "YNNNYNYYYN" };
    assertEquals(24, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case80() {
    String[] spellChart = { "NNN", "NYN", "NNN" };
    assertEquals(1, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case81() {
    String[] spellChart = { "YYNYNN", "YNYNNY", "YYYYNN", "NNNYNN", "NNNYNN", "YNYNYN" };
    assertEquals(5, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case82() {
    String[] spellChart = { "NNNNNNNNNN", "NNNNNNNNNN", "NNNYNNYNNN", "NNNYNNYNNN", "NNNYNNYNNN", "NNNNNNNNNN", "NNYYYYYYNN", "NNYNNNNYNN", "NNNYYYYNNN", "NNNNNNNNNN" };
    assertEquals(6, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case83() {
    String[] spellChart = { "NYYYYYY", "YNYYYYY", "YYNYYYY", "YYYNYYY", "YYYYNYY", "YYYYYNY", "YYYYYYN" };
    assertEquals(21, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case84() {
    String[] spellChart = { "Y" };
    assertEquals(1, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case85() {
    String[] spellChart = { "YYNYNN", "YNYNNY", "YYYYNN", "NNNYNN", "NNNYNN", "YNYNYN" };
    assertEquals(5, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case86() {
    String[] spellChart = { "YYYYYNNYYYNYNNNNYNNY", "NYNNNYYNNYNYYYNYYYYY", "NNYNNNYYNNYNNNYYYYNY", "YYNYNYYNNYYYNYNNNYYY", "NYYNNYNYNYNNYNYYYNYN", "NNNNNYYNYNNYYYYNYYYN", "YNYNYYNNNYNNNNNYNNYY", "NYYYYNYNYNNYNNYNNNNY", "YYYYNYYNNYYYNNYNNYNY", "YYYYYYNYNYNYNNNNNNYN", "NNYYYYYNNNYNNNYNNNNY", "YYNNNYNYYNYYNYYNYNYN", "NNYNYYNYYNYYNYNYNYYN", "YNYNYYNYNNNYNYNYYNYY", "NNYNNNYYYYYYYYYYYNYY", "YYYYYNYYNYYYYYNNYNNN", "NYYYYYYYYNNNNNYYNNYN", "YNNYNNNYYNYYYNYNYYYY", "YYNNYNYYYNYYNNNYYNNY", "NNYNYNYYYNYYNYNNYNNN" };
    assertEquals(81, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case87() {
    String[] spellChart = { "NYN", "NNY", "YNN" };
    assertEquals(1, orderofthehats.minChanged(spellChart));
  }

  @Test
  public void case88() {
    String[] spellChart = { "NNNY", "YNYN", "YNNN", "YYYN" };
    assertEquals(1, orderofthehats.minChanged(spellChart));
  }

}
