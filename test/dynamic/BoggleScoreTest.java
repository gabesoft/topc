package topc.test.dynamic;

import junit.framework.*;
import org.junit.Test;
import static org.junit.Assert.*;
import topc.dynamic.*;

public class BoggleScoreTest {
  BoggleScore bogglescore = new BoggleScore();

  @Test
  public void case1() {
    String[] grid = { "XXEY", "XXXX", "XXXX", "XXXX" };
    String[] words = { "EYE" };
    assertEquals(9L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case2() {
    String[] grid = { "XEYE", "XXXX", "XXXX", "XXXX" };
    String[] words = { "EYE" };
    assertEquals(36L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case3() {
    String[] grid = { "TEXX", "REXX", "XXXX", "XXXX" };
    String[] words = { "TREE" };
    assertEquals(32L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case4() {
    String[] grid = { "XXXX", "XSAX", "XDNX", "XXXX" };
    String[] words = { "SANDS", "SAND", "SAD", "AND" };
    assertEquals(59L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case5() {
    String[] grid = { "XXXX", "XXXX", "XXXX", "XXXX" };
    String[] words = { "X", "XX", "XXX", "XXXX", "XXXXX", "XXXXXX", "XXXXXXX", "XXXXXXXX", "XXXXXXXXX", "XXXXXXXXXX", "XXXXXXXXXXX", "XXXXXXXXXXXX", "XXXXXXXXXXXXX", "XXXXXXXXXXXXXX", "XXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" };
    assertEquals(9734704571760L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case6() {
    String[] grid = { "ABCD", "EFGH", "IJKL", "MNOP" };
    String[] words = { "ABEF", "DHCGBFAE", "FGJKL", "PONMIJKL", "ABCDGHLKPONMJIEF" };
    assertEquals(425L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case7() {
    String[] grid = { "ABAB", "BABA", "ABAB", "BABA" };
    String[] words = { "ABABABABABABABABABABABABABABABABABABABABABABABABAB", "BABABABABABABABABABABABABABABABABABABABABABABABABA", "AABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAA", "BBABBABBABBABBABBABBABBABBABBABBABBABBABBABBABBABB" };
    assertEquals(1488430080000L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case8() {
    String[] grid = { "AFJD", "BDJU", "FIEE", "KDFE" };
    String[] words = { "ABDJEIFKD", "AFJDUE" };
    assertEquals(225L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case9() {
    String[] grid = { "TREX", "XXXX", "XXXX", "XXXX" };
    String[] words = { "TREE" };
    assertEquals(0L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case10() {
    String[] grid = { "TEXX", "REXX", "XXXX", "XXXX" };
    String[] words = { "TREE", "TRE", "TR", "EE", "E", "XXXXXX", "X" };
    assertEquals(1154524L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case11() {
    String[] grid = { "OVIK", "BJUU", "UQUN", "QIHN" };
    String[] words = { "UNUNHUQHNNNUIJUNNUNUNUUIUQUBVOBUBQUIKU", "QUQJVBVUUQUBUJOJVJQUUUIJQHUNNUNUQIHIQBOBO", "UNUUKUUIUKIKUQJUUNUKIJUJUBVJUNUUNHNNUQJI", "NUIUJQBUQJUQIQUBVOJUQIUQQJIUJVIU", "UNNNHIQUHUUUNHNHUIHQIUIUQHIQUNUJUI", "QIQUQUKUVBQQIQUIHIUIUNNUUNNHQUUKUI", "UQUBJUJQUVOBJUNUIUUNUNUUUKUUUN", "UBOJQJUNUQUJUIUNNUJUJOBVJOJQUVIUQHQUHIUU", "IUQIQHIUBUBQQUBOVBQJBVOJUJIUUQUQUUNUKIKUUHIQ", "UIQIUIQHQUNHQBJUUNNUNNUUNNUUJIJUJVUU", "QIQUIUBVIJOJIVIVOBVBQJUKUKIUJUKIUI", "OVIKUKIUUUUNUNNUUQUIUUUUUNNHN", "VJQUQUNUUUNUJBVIUUUHNUUNUUNNUHUUUNU", "KUNHIUIUUUNHNUJVIKUKUKUNUIUUHUUQUQUBJI", "QUQUIQUQIUNHUUQJUBVJUHUNHNHIQUJOV", "JBJBQUIQQUJOVIVUUIVBJUIKIKUUIJBOJ", "OVJQUVOBUQBVIJUQIQIUHNUNUIUUUUKUJVIUU", "UIQBOBJVJOJOJIVIKIUUJQIHNUJUIHQIQJUI", "OBUIQUJIUUIQUQHNHUQJUQQQBOVBOJUIHNHNUN", "JIUQUUKUUIVBVIUUNUUNHNHNUNNH", "JOVIUVBJIUNUIVBQJQUIUQJBJBVJUBQUN", "NHQHNUHNUNNHQUJQUIUJIKUUUUNHUQUIQBQB", "KIKUQHUIQIUQUIUQUJOBOJVIJVUKIVUUUU", "NUNNUUVIUQBVIUUUUHNNUNHUUUNUJIVJI", "NUUKUUHUNNNUIUKUQJVBJIJIVBJUVUUJ", "JIKIJUVOVOJBUQIQIHNUN", "UKUUUNNUUNNHNHQUUKUNUNUJUIHNUHIQ", "JIUKUUUUKIUJUNUUQUUUUUIQUQUHNHQQQBOBVIJI", "HNNUNUUNNHUQIQIUNUNNUKUKIJVJOJU", "VBOBJOBVJUQUJIVJQIHQIHNNUJOJVOBOJO", "HUUNUUNUQIUUNNHIUHIQUQIQHI", "IUNHUUNHQUQUBVBOJUQIUBVOBVIUUVIJ", "UJQBOBOBUJUUUKUUIQIHNNUUQQUIUQUQUNU", "IJOVUKUUVBQQUQQUIUQJBOBUJQIQ", "OBUJBQUHNHQUQQHQIUIQUJUQUQJOBOJQQ", "UIUKIUIUUUNNUHIUHNHNUUUIUUNUHNNHNHQUIQ", "NNUUJOBVUUUUUUQUVIVUUQBVUQQQUUIVIUKI", "BQBJUBOBOJIVUJQQIUQJUUHNUNNHQBOJI", "UIJIJOVJUBUQJUUNNUNNUJOBOJBVUN", "HNNUIQIUNUUNHIQUBOVUNNHNUNUNUIJUJOVIJVOJQ", "UJVJIVJUNUUVBUIQIUIHQBJQUUIUVJUVJIJIJIKUQUN", "IUIQJBJUNUKIKUIUUIUKUKIUNHNUUNN", "BOVBJVOVJQUQUJQUQQUUUUUQUIQIUJQU", "OVIVUKUUIJUJUVJUJIUUNUIKUQHUIUIQIUHNUU", "QQUNUUKUUJVBVOBQUIUNHNHQUUKI", "NUHNUNUUVIUUNUNUUUIUBUBU", "JBOJOVOJBVIUNNHIQHQHNHIUQUQIUNNUQ", "IKUUJBOBQIUQIQQQUJBJUJIK", "UJVBOVJBQJVBUIHNUIKUUIQUQBJVUUIKIVIK", "UIUNUUQJOJIKIJBJUNHNUUUJBQHNNUUQUIU" };
    assertEquals(1206971540L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case12() {
    String[] grid = { "ZCAX", "BADJ", "MVCS", "EVBE" };
    String[] words = { "AADACAJDXJCSJADJDXAJADJDXAJXDCVV", "VVVDXAXJDVBESCJDCAVBSESBVBMVCACEBVMB", "XDXJXDXJCSJDACACACDVCDSDVMEMBMBAMVBCBSBVM", "XDSJAJCBCJCBVBEBVMVMEVEVMBACJAACZCA", "XJDCBVMBVAZBAVBVBCAZAMBMEVVE", "JDCDSJAABZBZBADVBVCADJACBVBCBEBVCA", "CJAAMEVEVACAAMBVADJDSDACZCDCACECAZACSC", "SCVCJCVVEVEMVEMEVEMEMAVBECVADAACS", "VDJSCDXADJXJCVCBCVBECVVBVBVMEMVMEVCDSE", "SDJDCSJCSDXJXDCBAZACJDXDCZCBVABCDCE", "JSJAXJSCSCVCVBVBVMVEMBCAXACDJACDJDC", "CDJADAJDJDXACBVMVVBAZAVVVM", "BSECVDXJADSEBVVCACBZADVEVBCA", "ACBZBACAXAABVDXJCVEMACZABMAADXDJDXJDS", "BVCDACACZABZBACVEMVVMBAZBZCA", "ESJXJDAMAZBZACAMAAAMVBCDJSDSBCSJXAAA", "XJCSDJCJDVCACDAJSDAAJSJAXJAABAZBAZCDSJCJADCVE", "JSCSCDAACAXDCEBVABCBACZAMA", "BMADCBVBCAXAACAVVEMACDCSECECJAAZBM", "AXAAADVVCABVDACSJSDSEBCJSEBESCSECVCVBV", "CBADVCJCSCAVBCBECSJAACJDVMVVDAA", "BZADVABAAACVBVCDAXAAVCJXADAXJXDJA", "JXDVBSCVCVVDAVEMVVBESCECVEVVEVBEB", "AJSBEBEBSDAZBACACZCABABCBAVDSCEBECDVVV", "BAZCBVVMACSJXAACESECSBECECDSE", "DAVABVBMBAMVEVDCBADCSDADVBCVAZCBACDCVM", "ACDAJCVVMAZCACACDADAAZABACDAMVBCSBSCJX", "ABVBCBZADADXDXJXJSBVMVE", "ZCADSEBECSCJAJACAVVMADCBVADCAADVVEVB", "CVCECDCAXJAXDXJDJDCADACAXDXDAAX", "AAXDCAJDADCBCDJXAXDSBCJXD", "CBCVBCEBECECVACBVCVDSJSBVMAAAZABVE", "SCDSBESDVBZCZBAMACACDJSJAJXAX", "DAACAVBSECVEVVBVAAXJDCZCAVACAADVAADXA", "ESBESEBESJXJSDAVDXDACBCAJCEB", "AAMACACVMACVCEBSCDADAVCBVCBVCBVVCJSCV", "CBSCAMVCEBSBVDCAXJCVABACVBMEVMBMVVVM", "ZBVBABCDJCJCAMBMBZCAXDVCAACBCACADAZBVC", "BVVCVMVMADSCJSCADVVMVDXDAAJXACDADSJCJ", "VMBZBAACZBMVEMEVMEVVMAAXDXAJADCDCSCV", "MBMVDCECACACDJSDVCVCSJDCAMEVVEVVEMB", "SDVDACBMVEVCECBEBVMVVBVMAMAVEMVBS", "EVMVBCESJCVEVVEVAZCAAXJSDACAZCAACBCV", "VMACVVBVCJXJSDVVVBZADXAXDCVDCDCVBZC", "AJAACACZAMVCESESBVBVEVEMBVBEBECJXA", "MEVVBACZACAVVBSCVEVMAZBVAMBCDSJAJCSJ", "AMBVVMVVMEVCADCBVVMVCAZAADAAACDACJXDV", "VBVDJDCACDXADXDCDXDJSCJCVVCEBECBVBMVEVVE", "EBCEBESBVBECBVMACDSEBVVBCBVEVEMVBSECVM", "VBEBSESBCVEVMEMVBSJCDSB" };
    assertEquals(3620356L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case13() {
    String[] grid = { "INDD", "HDAP", "VEAL", "YCWG" };
    String[] words = { "EYEHINADNHVCALWGLGWADALAEDI", "DPAAWAADDDPAPLPDNDEHECVEHNADDVD", "NANAADAEHNINAADAALWEAADAPDPDDPADADDP", "DPDDADIHDEVEYCEYEAPDAPADNHIDVHNHIN", "DAECWAWCYEYEHINIDDPDNAAEWAGAWEYCAEVC", "HDAGLGLWLGAEHDEWCEHIDALAEAPAEYEDADADAE", "GLPLADDADAECADAPDAPDALWLPLP", "LGLAAEAWAAPLAEWLAEHEWCYCWCVHDADPAPDDAP", "CAEVECEAEHNALALWLPACYCWCWLALADAPDAPLACE", "WLWLWEAGAGLPDADPDDAEHVCEWLAWCYEYV", "IHNDIDNDNDHIHDVDHDNDEADHIDADEADI", "NADVCYVHIHVYEYCYVYVEHNDNIDAPDD", "DPADVCEVDNDVDNHEAPLWLWGLPLGACYVD", "APACEDAEVYEADPACYCVCVDIDHVDAAAEV", "YVCYVDNALGLAEDECYCYEVECYEHEAEWG", "YCVDNIHIHVHNDAEAWECYVCWEYVCAWECVCWEV", "LGLAAADEWACYVDDPALWGAGWAEAWEVCA", "NDHIHEAEADANHECWLAAPADPDPLGACADDNH", "WAEYCADALGAGAANHEYCWCEWAAEYCYC", "DANDAPDPALADNALADAAGWCVDVYEAALPD", "VEDHIDIDIHIHDDDPDDDADDDAWGWCADHDAGADECWAL", "ADEWADVYCYVECVDAECWEHIHVDEHEADNIHEAAPL", "IDAEYEVEADADPAPDPLAWGAGLAPAAWGWAPDPDNI", "AADDNIDACAPAWAEVYVDVCYVCAALWCVCV", "VDDNDNDDAPALANDPLPAPDDDVYEHIHVC", "YEDALAGLALWLGAEWAPAPDADDADPAAEYCAAD", "GLPADALAPAGAWAEAWCWLPDNANIHVCYVHIDDPD", "GWECYVDEAPAECVDHDAGLPAPDPALPADPD", "WCAWAADDALALPDDAEVEVYEYEDVHNDDDI", "WCAGWLWLGACYEYVEADEAWLWCVDNAPAADANDD", "NDDNDPLPADDDANDADPLGAGWGA", "HVYEHNALAADAPDADDHDEWEAPLAEWAGWGWG", "PAGLAWCWLPDPLAAPANHIHVCEDINDNDPAA", "NADDADDHINHDIHEADPACVEHEALGAECEDNHNDALWGL", "DAEAADACVCYVEAGAWEYEHINHNDAPLWG", "EAAALPAEAEAPDDHIHEAEAWALWGWGLWLPDPADHVHD", "VYCWEAEAPLWAWLADVEYEALPANHINDDALG", "YECWEDDPDPLADHDAPDANDDINDNININHEWAAD", "HDVHEAPDDHVEADPANDAEWCEAGAEVYCA", "GWLWLWEWLWGACYVDNDDNHIHIDDALANADDD", "DDDDADDPLPAEWGWCEVDDNDPAGADADDAA", "CVHNDAADECYEYCAWCVYEYCVCYVYCWLAWC", "AEAPDDPLWAGLACYEWGWACEYVDDD", "NDAPALGWEVECWALAWEDNIDADIHVYCWC", "HNIHIDNHEYVCVEADACVHEWLGWLADIDI", "DNDPDNADDNAEAGWLGWAEYCWGLADADAGWGAW", "IDHINAPAGAADDPLADAPDPLGLPAPLADAAPAAAE", "CEACYCADANDVCALAEVEALGWCWCYEAWCVD", "CVDDPDPADPDDAAGAGAADDPLGWECYCWA", "PADNHINIHDAADEYVHNDAEYCALAGLGWLG" };
    assertEquals(8632604L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case14() {
    String[] grid = { "DSBF", "VTWO", "AYKS", "JMIR" };
    String[] words = { "AVDSDSWSOSRKYVAVDVSWSDTSDVT", "SVDTAYKSKWSIKIRKOSKIRSOSWSRKIRSWKYI", "AMKYKYKRKSRSRKOWSKIYVTWFWSWFBSVDVSVAJMJM", "SIRIKMJAYTBTBWBOSOSWKMYTYAYWSKWKWOWSRI", "SDVATVSTWFWYMIRKOKYAJYWSWSRKRSOS", "OKRKRIMIKYKIMKYWFBOSOKWTBFOKOKIYMIYAY", "AYATKMISRSWSDVTWSVYTKIKTWFOKWYWFBTDVAJ", "DSDVDVSBSWSIMATAVAVTSVAYMIMJAJYTSDTBO", "IYVTAYTATWOKOBTBSDVTBTYKMIMIKYWOKW", "YAJYMIYMAVTVAVTDSTWTKYISIKSWSKTSDSD", "TATBWBTVSTAYVTSBFBOSOBST", "JAMKIMATDTSTBOFWTVSWYWSWYWKOBFOSISWSBO", "OFBTDTVAVYWOKMATKWYJMYISOBWTDVSD", "DTVAVAYMJATAMKTSVYTVAYJYVAMATVDSBWSW", "VTYTBFBSDTBWOWKTWYJMAMYWBSBOFOF", "OFWBWSIYWSTVYTDTVAYJAYTVDTDTVAJYIMAJ", "FBFBOBFBWSWTSVDTKMIYISRKIKOKYAYMJAV", "KWSKMYISOSIKISKMAVYJYAVYAMJMKTDVYI", "WKTVTAYIRKTYTAMKWFOBTSDTBSTDTKMYW", "ATKIMJMAMATVTSDTKSOKMIYIMYJMKIYIRKWYAM", "OKTYTVSWTKRSIKYMAMAJAVSWOKMJAMYKIKSK", "MISKTWSTSBSTSBWTDTKMYKIYTSVAJYATBOFWFWTD", "OSKRSKISWBOKSOBWYAMJYJYWOBOBW", "YVTDTWTWYJYMJAMKWTVDVATATWYTKWKWSOBWYATDTSVA", "SKIKYIKRSOKRIYWSTVYKTWSRIRSOSRSWS", "SVYKIRSKWSBSBFOFWSIRIYJAVTATK", "TATWSDVTSDTYMYKIMYTVTKTWTBFWKRKRIKRKSOB", "TSTVYMKIKYJYVAVSDSDSVDVDTSBSBOSRK", "WOWSBTKYMJYIYIKSOKIRSRIRSOKISRKRIM", "JYMYKWSBSTWSWSWOBFBFWTAJAJYKMISRSR", "RIKTBSWYIYTWTWYJAMATYKOSOSISKYIYVYAMJYKOWK", "KWTKRSOKWSIRIKMJAJAJYWYWKRKSIRKWBF", "WBFOFWOWSKRKMIRKYMIYAJMAMYTDSBOKSR", "WYWKYVAYWTDVAVSWSRSWSDVAYJMJAYAM", "AYAVYVAMYIMAYKTBOWFWBWTAMJAJMIRIKO", "MYKMJATVAJMATVSVDTVAVYVYWFOSRIRSR", "TDVTSDVAYVTDVATBFBWOWSVSDTSBWTWSO", "RIKRSOKSWTYVSWBTVYMATYWTKIRSRKTVTWKTWS", "YVAVATSTBWTSDVYKOFWOKSWYTWBOFBSTV", "VTKTWTYJAVDTBSWTATDTKSRSKYVTAJAYWKOWYVYJ", "FOSWFOBWSRKSRIYMJMYTD", "WSWKIYIRKTAVSBTDTAVTDTAYAMKRSKSWYVDT", "DVTWSOFOBTVAVTAYKRSRIRIRKISWBWBWTWS", "DSVDSDTSBSBSDVYIRSIMKYMKIKIKWBSDV", "OBFOKOSOSRIYAJYJYVDVSDSWOKMJAVDV", "DTBSWTVSWYIMAVYWTVTKWYMIMYWYKSRKIMI", "OWOKOFBSVYKWSDVTKRKRIKTSWBSTWS", "RKRSISKRIKTYAYTKWOWYMKSRSKIKWOFBTKOBTK", "KWBTKWYJMJAVSDTSDSDSDTWKWY", "FBTWYKIKSOKOFOKMKRSIRKISOSOSO" };
    assertEquals(75360L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case15() {
    String[] grid = { "YSJE", "BLJQ", "LFOB", "LJRW" };
    String[] words = { "BRBWRBQJJSJSBLFJFLJRWROFLLFOWOQ", "JJFRFJEQJQJJSBSBFLYSJFBFRWBWBR", "BWRFOBWRBOBOFLLSBLBYLFBFRFORBRJFLLBYBLF", "OJLFLLFJLLLJLJORBOWBORFLFRJLLJFLOWRO", "LLFBFRWOFJOWRJOJFJEQOJLBLJFLFBFJOBQBOBOF", "LSBLLLJLBFJJLJQJSBYBFLFBLFROBOQJQJO", "JFJROFJLJOLOBJEJSBFBLBYSJOFLFJLFLYBYSY", "JSJJFORWRWROFBLORWRJLBLSLBFLFJBRO", "OFORWOWOFLFJJQEJSYBSJLOBJFLJLJRW", "JLBLLBLLJLJFLFOBRFRORJLFRWROJLJLLFJFJL", "JQBJFJJLYLBFLFBFJRWOJLJLJFLOJQJOQJEJSB", "LJLFJQEJLSYSJLOFLJSBLJQJEJEQEQBW", "FOROJFOLLFLJJEJSJJQJBJEJLJBO", "QOJFLFJLLLLFLLJEJJJBJEJSJQJLJLJSBLSJE", "BRJFOJSJFLJOJJEJQJBJQBQOBRFLFBFOJLJ", "EJLBSJQOJOWOFRJOLJBOLFBFLFJQOQJQOJOJ", "SBLJEJQJLJJOBORFLYLJEQJSBLLLFBLOLYLBSY", "JQEQJLLJOBOJSLFLLLBSJSLFRFBYSJ", "SYLJEJJEQEJJEQJQEJEQBJLSJEJQJB", "YSYSJSYSBLBYLBLJFOBQBJLFLJRJRJOQJQJ", "JOFRBJJQJEJBJFRJFOBJLORWOBWOJJSB", "QJBRFLLBLLJBQOQJEJJQJLYLSLJEQJJJE", "JORWBWOJFLBYSJJOBOFJBOWOBQBOJOFJOBJQEJ", "YLLJFLJLFBLORFBYBLLJJQOJLLFBS", "OJLBFLFLFOWBWOJBOWRWRBOBROWOLYSJQOF", "YBYBLLFLJLLJLJLJLLSJOJLJFLYSJE", "LLJJBQJLLFBLJLJBWBWBRJLJOWROJOW", "SLSJJBJFLLFOJJJSJSJEQJQEJEJFOJRJRFB", "OQJJBQOBWBWBQOFJRWRJLBFLJFLYLJSLS", "BOJLLBLYLBLSJFJJLFLLYBFLFJLBFJEJLY", "YSJLYLLLSYLYSJSBLBLFJLF", "JFJFLBYBLJLJOJOBRJFLJEQEJQBOWOWRW", "BJQEJQJJFLLJOQOFJLLFLBFLLFJBR", "SLJOJLJFLLOJEJSBLFLFROJRBOWOWBWB", "LLJLLFJLYLOBJSJSYLBLYSJSLJJEJJBJFR", "SYBLJQJEJSJEJJQJEJLSBLJFOBJSY", "LFLJOQJBWRWRWRWBWBRJFOFLLJLB", "WRBOBORBQEJLSBYLOFLLOBJLBLJFOLBLOQE", "RBOJFLBLLJOQOWOJLFLLJJJQOQJL", "JLJLLJLBSBLBLLFBSJSBLYLJEQBQBOWOL", "LLFLOFLYSYLJLJBOLYSJQJEJSYBSLOBRWORJL", "JSBSLJOJOLSYLJQJEJLYSJLBLBLJSJQJBWOJBO", "RFJEJEJBOQBQEQBROBQORFOWOLBLOBRFJFLFLJEJL", "JJBRWOFBLLJFLJRWRWBQORWOBOQBJSYBFJFJRFJ", "BWBRJOQJEQEQBRFOLYLOFBSLJJSBLFOW", "EJLSJJOLJSJSBSJEJQJEJEQEJSJQJJ", "JLFLJFROBQORBWBWBRFLJRFBLLBFRFBYLJEJJJ", "BFJFLLLYLLFLLLSLFLBYBLLJJSBSJQJEQEQ", "SJQOJQOQBWRBQOQOJLFLLLJOFRBWOLFJL", "QBRWRBJQJEJEJLYSJOJSLOJLLJRJOQB" };
    assertEquals(32574884L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case16() {
    String[] grid = { "QHZO", "VXBW", "MHVX", "JSQP" };
    String[] words = { "BXMXBVQSHVXBXPVWZXVHBHXQXHVHXMVHSMHBOWO", "VXHMSQVXBWXVHBOZXVSVPQVXMVQXHBOWXWBXPQ", "VBWBHQVXMVHXBWVWVBHVMJMHSHSQHJHJSMX", "XBZOWOBHQHXVHMXZBVXVSQXPQVPXPVSQHMSVW", "BVWVPXVXMVHXHQHQVHXHQHBOZOWOBXWBXVHBVBXV", "BHXBXVXZXVMJHBZHVHQHBXPQVSQXQVXQV", "BXPXBVXQVWVSVSQXBXQXHBZHXVWVQHQVBOWZHBOW", "SQPXWVBHVMHMXHQHQXZXQHBZX", "ZXQHZOZWOBVPVXQHMHQSQXBZOZOWXWOBHSQHXQ", "WOWZXMXZXZOWZXHMSJMHVSJSJMJMJHQ", "VXPXPVBXHVBOWZXZHZOZBOZHXHBVPQPQH", "WXQHMVXQXZWZBHXZOZBVSHQPVSMHVQHZOBO", "XQPQHSMVHZHZWZWXBHQHZWOWOBXH", "ZXBHVQHBWVPVPXVSVWXVBHZOBHSQVPXPQXW", "PVPQSQVQVWZWVHBWVQXPVHSMHVQXBXVMSQPXWBOZW", "VHVXQHZXZWOZBWVPQHQXWXPVQSM", "WBXVBXQXQHJHJSVHVWVXZOZWVXVPVPQVQSQSVXQ", "SHMHQSVWXPXBOBXVPXPXVXVWOZHVM", "QHZOBOWVWOBVHVPQSMJHSMSMHBOWXWZ", "WZOBXHBHMSHSQHJMXBXQSVPVQVXHXHXQHZHVMVHVHB", "SHMSQVHVSVBHXQHBXBWOZXHXZXMHMVHQ", "ZOZHBOBHSHSVXZOZXVXQXHVMJSHQVQPVQS", "HZXHXHSHQPQPXWVWOZHBXVHVXQXQVBXVHXZOZW", "QVHZOZHZWVHMVMHMHVXHQVXHSVHVM", "PQVWVXPVXQHQSQVSMXVSVWVHVQXQXHQHVHV", "JHXMXVBZOBWBXVXHXQVHMXMHVBXVWOZHVHVQH", "OZWOWXBHQXPQSJSVSJSMXQHQXVMJ", "HVQHQVMVMHMJHMXMVMJHQSHVXVHMJSVWOWV", "XWOZWVWOZWVWXWZOBZBHVHQSHMSHXBXVHQ", "VHBXBOBVXHVHBWOZXVXWZBVHSQVHBZHZWBHJ", "OZOWZHBXZHZWXVSQHQHJHVQSMVMSMHVHSMSMSQVSQVXQ", "HZHQXVHVHMVMVHQXPQHMVXMSJHVSMVHSMHVHV", "ZWXBOWBXHBOWOWZWXVSMXQXMVQXHVMHQH", "XBOBHXBZXBHBZXMXVHBXBXHVQXBXHQHQH", "VHXQXVHXBHSMSQSJHBZBWBXQVHXHBVHVWOZOW", "VHMSHVHQHBHVMXQVHMVHQHZOZWOBZHBO", "ZBHQHJHSQVSMJMXMVHVMXHVPQXBHBXWBHXH", "HSVSVSMJHJSVXHQSHJSVSMHJMXQXMJSQS", "QSVXVXMJSJMXHBHJHVHQPXBVHMSVBVWBXBWZBHZBWVXH", "XQVXHQXVXVXPXPQPXQXPVHJ", "MXZXVWVHQPVXBHVPVXMHMXQXVXZOBOZOZWXWVW", "OWXVWOZOBHQHVQVQHVXMXVHQHXZHX", "MJSHVHXQHXVPXBWBVBZXVMHJHJSJSMVQVHJMJ", "VHXHZOBHVHXBZHZOZOWVHXQXVQHQHBH", "WVBOBVPXPVXWZWOWVPVWVSHVXHBXVWZBOWX", "WOWOBXVPVSJHXHQVXQVHZHXVSVHBHQVBVQVXWBXV", "WXVXHZHQHZHZWBHVHVHVHSJMVXZXQH", "HXHBXQXVXBOZOZHQVMSQVBOBXMHMSHBHBXBZBO", "JHJHVQXQPXBVBZXVHVSMJSVXVWXWBHZBXB", "VPQSQXVHXBOZXVMHQXPQHQVQPXWVXMJ" };
    assertEquals(1547708L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case17() {
    String[] grid = { "ASXU", "GKQM", "ZMCD", "ZPLG" };
    String[] words = { "MGSXMCMZZMZKQSKXMDMDCGDCKASQXSQK", "LCQKCLPCGLDQCGDLGLGCM", "KAGZGKXSXSASXMCGLPZGASXMXKSQCKQMQDCMU", "UXUQMZPCMLPMGSASKCGDLCQCQSGMPMLDMCK", "ZMPMCDQDLGCDGCMXKGSXQXQCMCLGCLGC", "XUMDMCLGCMQSXSKXMUQMLCGDGLDLGD", "AKGMKCMCDGLPZZGKCPZZKAKASAGAS", "CGLPZPZMZZMQMQKAGAGSXMCGLM", "MUMCDLMGZKMQUMCKGZGSGKQMCQXKZMGMCMZPZ", "ZMPLMKSQCLGCLDMCGDQMKCMXKCKQUMCQDCQD", "PLGCGCQMDQMUMXSGKAGASGMZPMCMDQCKXQDC", "LDCGLDLGLGDGLCDQMUQMCMCDCDGL", "ZPZZZKGASQUMCDGDLCMLGCLDCQUMCMQMCPMKXQX", "QXKGMZZPLPMKMCKAGSKXQXUXUXSXQCMUMCQM", "XSGASAKAKGZPCMQMDCMQDCQSQMUQMQCD", "GKQKQMCKCMPCMGASKCDQXKCMQXKSASQXMQKCLMPL", "UXMQSQSASQKQUXUMUXUMDQMCGCDGCQCQXMX", "GZGSXUQSAKAGZPMPCMUXSXQCMUQU", "MLMGKCQCQCMUXKZKCQMXMUQSGKGKZMGSXSASGZKX", "MQMGKZPLDCPZGAGKGKMPCLCPZPLPZZPZM", "SKZMCPCQDGLGLGDQSKZMQCMQCLPZZMQMQC", "PZPZPCKZKZGMZZPCGDMUQXSXSXKG", "MLDLCDCQUXKMPZKCGLPLDQXQXQMLDMDGCPMKXK", "MGKCGDGCPMZPLGCGDCMCMCQUMXUQKCGDG", "GCQUQSASXUQMUQMQMDGLPMCGDQXQKA", "QXKQMUQMXUXKXMQUMXMUQMU", "QSXUXKXKAGAGSQSGKZGKZGKQMPMGZZ", "LPZZPCDCPZKXQUQSGKGSQSGASGSX", "PMGZGKSGSXSQKMPMZZMGKSKCGCGLPCMDCDMQK", "SKXSGAGKCMQMZZGAGKAKSXKGA", "MKMPCKCKCLCMKSGZGMLMKMCGDCQSKGA", "KXKGAKZZZPLCMZZPMGMPLPZMPCQKGAKG", "LGLDQDMDGDMDGCDMXUMUQKZMCDLMLMZZZ", "PCMPZMQXKSQDCGDCPZMPZMP", "PLDGLGLPMQUXQUMUXQDMCQDMDQDLPCMU", "QSQCLDQUMQSAGAKXUMUMDMDQXUQCMC", "CMXQDGCLDCPCKQUMXMUXMDGCQCKSAGSGSGS", "GCPMQDCQMGZPLPZMZZKXKQXQKSXKMZPZPZZM", "SAKASGKGAKAGKCKQMXQMCLDCPZPMGAKCG", "ZKZGZKXKXMDQUXUMCPMPMLPZMKZGZMQDMQDG", "GZPMZMLMCPLMCQKSGKXSXMQSQMZZKGAGA", "QCMXUXUMDMQDLGCLGDQMQSKCKZPZKAKMZZMGMQMUQ", "SGKCMDLPMZKXQCQMZKQUXQCKZPCMPZPLGLM", "LMPCMCPZMZMZZPMKCPMPMQMUMUM", "PCKXQDGCPCPCQSKAKCPCLDCDQDMCMUMU", "QDMUMCMDMDGCMQMUXMQXSASQMDMDCDGDCPZZZ", "XSXKXKZKZMZPZMZGKZPCQMPCMZZMQMLDCQSQXSA", "QSXUQCDMQXQKASQDMCGDCGLDGCPMZMCMP", "DGDLGDQUXSAGZZPMKSASAKXUQDCMKZKZGSASAK", "GASQMQSQMXKGKAKSKCQCGCDCDCKMLCMQDGCL" };
    assertEquals(228137L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case18() {
    String[] grid = { "EWSW", "CFRL", "MGHP", "FQUL" };
    String[] words = { "HPLWRHRHLUGMFGULPLHQMFQGMGFRFCWFECGFH", "LPHGRGHLSWLPLUPRFSLRGQUQMQMFEFGC", "CMQUGRGQFMFSRHPHQHLPUQUHUHUQUQFMQMCM", "SFMGMQUGFQHULUQFQULPLHUQGCFHGQGMQHL", "CGCFEWCGRHPRSRHUGFWECFCGCECGRLSRWSWEWF", "WEWEFSWECMGFMFGRWRLPHGFHUHRLRPL", "FMFCFHRWLSFRWRWEWCMFQGRFGFHPLSWLHQGQG", "EWCFRPHQHRLPULHLUHQMFMGCEWCWCGQH", "LPULPHPLWSWLWRLSWSRWRSRPUGCWSWLW", "ULHLHFRSFMCWCWFHRWCFHUHPRGQGUGCGUL", "HGRWRLSLPHLPRFRFGQFGRLSRGCECMQMFECWCMGHFRP", "RFEWSLWLPHPLUPHQHUPLSFWCWFWRWECG", "LSFHQGHLHPRWSLSWSLSWFGQMQMFWSWSFHUQ", "EFECGHQGHPRPLRWRGUQGCWRWRWSWRPLWLP", "GHRPRPHRPUPUPHULPLHQFMQFMFMFMFQMQUHLHRWRW", "LPUPRLHLHLUQULHGRGHULHRWLSFSRFWSWCMFMGFH", "LHPHPRPHFMFMFQGRGFMGFHUPRLWSLHFCFMFHLHU", "RLSLRFMFMFQGFRLRLHRGFQHUPHULPLPL", "SFMCGUGCGFGFMQMFMQMFWEFEFRWSRGHRFW", "FEFECGQMFQUGMCWCWFGCEWFGQU", "QUPLHGHFWFMCEWCMGCMQHRFMF", "RLHULPRSLSWSRWFSFSFCMQFMGRFMGMFMGU", "MCMCGFMFMGMGQHQFQGUGQFMFWRGHR", "GMCWRHLSRWEWSWRHRSRWRHLSRSFCWFMFEWRW", "QFQMCGQMFGRWSWECGCWSLSLPRWRSRPHRPL", "RLPHULUQMFGFGRHPRLPRFEWEFCMGFEWEWSLPU", "EFRHRHPUQGUPLPRWRWLHRSRFRSFGFRHLUPLPRFW", "WSWLSRSWSWEWFMGMFCFRFMCGCEFCMFQ", "LPRGFMGRHGQFGMFQUHULUPHLRLWRGFQMQGQ", "HULPLWRHLPUGFGUQMCWRPLPRFGCGQFMC", "SLWSLRWRPLWRWSRPLRWECWFHUGFGFMC", "FWFCFWEFMCWFWFSFMQUQULHLHRFGUPLS", "WLHLUGMGHPUHFMCMFMCFMGCMFQHFHU", "RWFWCMFMFGUGRWFHQFQMCMGMCFMCMFHRSRWLRFSWS", "WSFSFMFEFGUHUPHFHPRWSRLPUGFGQ", "LPLWLHLPRWLHRGQUHLHLHFECGHLRWE", "RSRGCFMFMGULUHLPHPLSFMQHLULHUGCMFR", "CFEWCFEFSRLPHFSWFHQMQFQGRHGRWSWCMCFRSW", "RGRPRWCWEFMCGCMFCWSRSWLWRLPUPL", "LHUPRHPHPLRLRPHGRPRHGFGCFCGQHUHUPLUQUGR", "FQHLPRHQMCEWFRWCGFMCFHQHGRLWSW", "QMFSFEWFWSLSRHLUGQUQUHFWRLPUHGQUQGCEFHLH", "MQUPULPUQHLHLPRHLSRPRHLHPRPLUQFGQGHPH", "FMCGFWRGULUQFQHLHPLHGFMQFGRHPUPHPRWRGCFSLR", "FGUQFQGHLUPLRLSRPUQUPLPLPLUPHFWRWF", "PLPLHLUPLSFEWECEFHULHFEWFMFWS", "FQGFQUHRHQFGFHGUGHRHFRWFHFRGHLPUHULHPLPLP", "CFGQHPLHPLHQMFQMCMFGHGQHRGRSRFSFCW", "GCFGFMQUPRLWSLHQFQGRGFHPRWFHLPHQGCG", "CEWSRHFMQUQMCEWFGMGFGQMFWSRFH" };
    assertEquals(535274L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case19() {
    String[] grid = { "GEXQ", "FHXW", "CATP", "RMBN" };
    String[] words = { "GHAHACFGEGEHCMAHGHCMAHEGFATHGHGEGHCFACAC", "CAHEGFCRATNTHXWTHFCACHATMBTXHGFG", "CFGFAFGEHXHXWQXAFCFEFEGEHXQ", "MBNPTPTHCFGEXWTWQXWTWTHTPXXXAXPXXH", "NPTPTWXPBAMACMRCACRARMBNBAMCHATXWPB", "GHGEHFHFATATNTAFEXXQXQXWXEGEHEHGHTN", "EXHCARAFEGEXHTPXXWTACHEXQXXXXQWXTBNP", "MRMTHACFCMBACFAHGFEXWPXPTAHXWP", "TAMCFEFHGFGFABTBMTXQXXE", "RARABAFAXTHTBMBNPNTXACFGEXEXXXQXWX", "GFGHCFAFGFCFEXQXWPXWTAMAFCAHTXQXACMBTA", "WXEFCHXXQXHFEXQXXXHTXWPTWPBP", "BTPXXQWXQXHEGFGFATPWTABARMCFG", "RMBMBNPTXQXHXXQXQXXHAXHEGFGEX", "GHXTPTPNTPWTAFCFARMCFGHAMARCRCATMRCF", "NPXATBNBMTMRMCMRAXEHCATHGEXWXQXQX", "EGFEXARAHFCHCHFCFGHEHAMBMBNBNTPTP", "QXXXEGFEXQWTNBMBTXPXPBMAFGFAXQXW", "FCARMBPXXHEXQXWTNBMBAXXEGHEXHF", "PWQXEFGEHGHGEXPWXQXXTAXQWPTBNBMT", "RAFGHXHXHCFEGFGEFAHAXWPBMTWTPBMRMRM", "RMBTHGFEHFAFEHGHTXXXQWXXWPTWQWT", "GHXEXEGFEFEHXHAXTMACRATMCAXTWPBMRAFH", "WXHXEGHGHGEFHXEXTMBNBMCABPXATXQXHA", "QXWTXQXHGHACAFAFCFACAHEGHFEXQX", "TAMTXXXEHGFHXHFAFGEHFGEHFGHTAFCAR", "MTABPTHGFCHAMACMAFHEFHXHGFCACFARMRATXP", "GEHTPNBTNTMBTHEFHGHXTAHTMBMRCFCHGHFEFEFAHGF", "GEFATPNPTMTMAFCFEXAMTBMBNTPBNBNPNPXPW", "QXTWXEFEXWXQXEHXHATBNTXPBNBTWPTMBAM", "TPTNTMRCRMRAXATPTWPWXEXEXEGHXHTNP", "XQXPXEXHARMCFGHTHABTHCMRCMTNPNTPTPB", "EXWXEHEGHXXTABMCRCRMRMRCMBTMBNTHTABPW", "GFATXHXXWPBTMCMRAFGFACRCMTNPTATHG", "HFEHXPXTBPXPWXQXHGEHXEXEXACABPNBTPNTNP", "ARABNPWXWXXXEGFGFHTXTPNBAXEGFCMRAFATXX", "XEHTMRMAHTPNPBNBTBNTBNPXPBMRCHFEX", "FAMRAHAFHFEXTXTBMCAFCMTPTNBNPXHFHFCF", "FGFHFGEXHAXEGHTXEHXTNBMRCMTATPXWQXQXQ", "NTXTMTWXWXEHXWPTNBATNPNPNPWXQXEXAC", "MCRACMAMBNPXXEHEFEHEXXHTABNPXXXXWQXQXHCHX", "RCAMABTXQWXEXEGFCFHCAMTBABAMBPNPXWXAXTMR", "QXXHTWXAHTATMCRAHTMAFHCMCFCR", "XEFEHXHFAFCFEXQXQWPXXXWXQWXXHTM", "TMTMRCMCMCMBPNTBTMTMBATARAFHEXEXAFACM", "MTMRCMBNBTXXXXHEXXWPNTPTWQXQXQWXE", "CMBAFHAHFCMRARMRAXWQWPXHCFCFAXWQXWX", "XQXXEHEXPTWTAFHCFHTWTXXHCFHXHXACMCF", "CFEHATWXTAFGFHGEFHFATXQXEXQWXEHTNPNTXW", "RATBNPXWXWXXWQWQXXWXXEXPTNTPW" };
    assertEquals(545518L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case20() {
    String[] grid = { "RROK", "BOXR", "TLXJ", "BMYA" };
    String[] words = { "KXJYJYAYAYXOBRROBROTLBLYXOTLBTBMYMXY", "RROOROXXJYJYJROKOXJXXMXXRXKXRXOXXOTM", "RBTBLMBTMYXMYAYXJRXRROXKOX", "RXAJXRXRJYXAXAYJAYAYJRKORXLMYMYMLBT", "RXOLBRROXJXOXJAJAYAJROORRBROXJR", "XRROOOXORBTBLXYJRJXRKXOXMYJAYXRKOORBRORXRXXXLY", "BRROXLMXJAJXRXLOBROROOROORR", "ORRBOOKOORROROXKOXORBROXRXYMTMXOBOXL", "JXROKXORXRXLTMXAJYLXJYAXRXLTOBROT", "BTORRBOOROROXXLTOXXOORXRXYAJXXOXRKRX", "RORBROROXOXRXXOKXKXJRXRORBROORRBTB", "RBRBRXLXOXMYXMXMTMLTLBOBROBLXLBLXXOOR", "JYMTMBMLBLTBRBLBTOTLYXLBOTBMBTLBOR", "OXKXROKXJAXMTOTLXKXRBRBRORBRBR", "ORKXOOXLMXRXLMLMBTMXJYJAJRXROKOKX", "JXYAJRKOKRKOROXJXRKROOLXXKOKOXLB", "ORBOBTOXRJXLTMLYAXOBRBLMLXMYXMYLBRB", "OBTBTMBTBOOXRXRJRXMTLBLOROOTBRRRBRBRROLTO", "XRKORKOXLMXAYXAXXLMLYAXRKXKOXRBRB", "OTLXKORBTOXOXJYLXXXJXAJYLBTLXLXRJXK", "JYMYAJRXXAXXLMXRXMYXMBMXRXJYMXMBTOLXJX", "RXAJXXLOOKRJAXYLMYLXLBLTMXXORRRXLYMLBOROR", "XYJYAYMBLMYXRJYMBMXXROROROORKORXRBOXY", "RBRRBTOLOBLBRORXJAYJAYLXJAXXORXKORO", "KRKOOXROXJYJYLORROXOXRBRXJXMYLYA", "LOTBRRORBTBLYJAXAXJAJYAJXAJXLMLYLB", "LTBRROBROXRKXOLTBLTBLXJXJROROKRXRX", "KRXKRXORJXMBTBLYLYJYAJYLBRO", "AJAYXXXRKORXXMXLBTMTBRXLTLOTOXA", "XXJAJRKOKRORORJAXAYMXJRJY", "RJAXMYLBTBTBMYXMBMXYXRJXJROKORORXX", "KOKXLXOTBTMXROXOXLBLTMBTOBR", "MXYMYMXXOOTLTBLBMLBROXAJYMYAXRJRJA", "TMXYXLBLMLMXJXOXLYJXRXROOXKXLXJXXRBOORKXOR", "BLXOBROXAYLXYXRXOBLXLYAXYXMBTBRXJ", "RBOXRXKOOTOROROXYLXLYXJYMBMTLBMBMTBMLTM", "TBMLTBLBLXORJXOXLBLXXRKOOLXMLOO", "XRKXOTMXAJXOBLBTLTMTORXRXRXRORORJYJXOLX", "OLBLBLXAXJRORXOOORROBROTLBLXXROORXOXJXA", "TOXLBLBMLMXLXXXJROKXOTLBLYXMTMBMTMXYLX", "YMBLTBRXKXORJXAYAYJXRXKORXRXOXLBRBT", "ROOXYAYMTMBLTMTOLBTMLTMLXOOLXMBMYMXOXJXO", "XRKXROROLOLXXROLXOORJXXRRBOT", "LMXYXXLMTORBRBRBRBOXOROXAXXKOXRXL", "XROTMYLXLBRRROBLXAXORBTBTOXXJAJRJROKRXMXL", "RXXRXJXOROKRXRKRXJYAJAJAJAXJ", "AYMYMTBMXMXOOOXXRRRBOBRROORK", "OXKXXAJXLYAXYXRJYMYXOOROXXAXAJXOR", "KRXYXLBLOOXROXRKXXXKXJAJXRXXAYLTMX", "RRXRJXOXOXLYXAXOXMBMYLBTLTMLBLMYJ" };
    assertEquals(30443417L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case21() {
    String[] grid = { "TYTN", "IRMW", "TBRQ", "VYUD" };
    String[] words = { "NWMBITYRYMRYTITVYVYVYVYUYURDQDQRB", "BRMWQUDUDQRRRRYRITYTITITIT", "TYIRYRTIYMQUBYTRTYTITIBMRRYBVBVBITIBR", "TNMYTITYTNMQMBMRTNTRRRTRTITRYTNMNWQ", "TIYMTWRRMRUYRDQWRQMNMTRTRIYTYTYTNTW", "TYTRITYTNMNMRMRWQURBVBVYTVTYTYBVBIYR", "YIBIBYRBRBRTRYMRYTITRYRTRTRTMRMYTYRMRR", "YRTNTYMNTRMBRTNMYMQRMQWNMQWQUQUBITYT", "YMRTVBMNMWTMRURRTNMWNTYMQUDRQRWQUYUB", "YRQWRRMWNMTMBYBTITYUQUDQMWQRBRMRQMRURD", "RDQRMQDUBURQRWNWRUQMTRTYTBYRQDUDRUYVB", "QRMTNMQMNTRYRYTIYRTNTYTMQRQDQRUQDQ", "DQMTMBMRTYRDRDQDUBMQUDUDUYT", "TIBRUQRRBUQWTWTWMYTMTYTYTYRMTRYTRRDR", "TRRRTRBRUBYVTBRDRUDRUDQUYRQUDRBVTY", "QMTYTWTRBVBRUYVTBRYTMYIBRQRQUBYBTY", "DRQMYIBTIYIBVBVYRMWQRDUDUQWTYMQRQWM", "UDRWRBIBYBTBRYTYITIYTRYTYTIBMQWQRWN", "WQDRUQDQURWQMTRBRRDRWRDQWRWNTMRYUD", "YVYTVBUQUBRTITYVTYVBIRBYVBUBRB", "TYRYVBRBVBYRMNMBYVTYVBYTBRYRRMTY", "YBVBIBRRDQDRBTRIBTYRMWNWRDRBVTRMWRYURY", "IRIRTVYBRMRRBMNMRITRTRYRTWT", "VTVTRMQWMRTRITVYBTYRMNMTMRBR", "YRURMNWRYTYVYURBVYVBTBVBITV", "TRTRRUYVBUBMYMQWQMNTRRMYRRDURYV", "BRBYVTIRMRRUDQDQWQMQUBMNWNMWNTRTIY", "MRUQWMWTWTMTNMRMBYVYBYRDQMTYTWTNTRTYB", "TBYBUQWNMWMQRMQWRQWQRYTITRYRTRYTMNWNW", "NTRBYBTYBRWTYTITRTYBIBVBMRDQDRUDRU", "TRBMBMNMTRMWRBVYUBVYVBVYRRTRMBMBMRTYRYRTRM", "QMRBIBYRYTVYRRMNMBUBYTRITYITVTBIRMRIBT", "UYVYBRQRDRMRTYBUDUYBRMRTYMRIRTN", "UBIYRYTMTYITYMWMWNWQDURDRRITVYBMYMTMYM", "NMRDQDRWTRRBMRYMRWTRIYTMRDUBRMTWQU", "TRTWNWRRRUDRQWNMRUDUBRYITRBRYTVTRMYI", "TMBUDQWMBRDUQMQMWRYTBTIBIRITRTYTYBYRDRWQ", "RTVTVTVTRTRMYRTNWTWQURBRBUDQMWRYUYV", "YTMQWQUYRWMRIBYRWRRRMNMRITIT", "NMWTRTRBTITVYRDURMNTRTMQRYVTRMRBRYBV", "TIRTBMYMRTRRDQUDUYRUQWTYMRQWRUDQDRBURY", "YUYTYUBIRRQDQURQDRYUQMYMRUQRYUDUDRBMBIBT", "TYRTRTIBMQWNMRTYTYMRTWMYTRRWMRRUYBMWNW", "BTBIRITVBYBUBURMRTMQRYRDQRUQUBVYRDRYT", "VYUQDUQUYRUYURUYUDQDRQWRDQDU", "NMNTMRDRUDUQRWNTYTYRTBUQURQRYRBRBMQ", "URWMNTRBVBRWQUDUQUBRRURWTMRUQWQMBTY", "YTRYMWQMBUQMTWQDUDURBYRRTRTRYTRBVTBYVYTRYR", "WQMBRYITIYITBYTIYMQUYRMBURRTITR", "DURBRRIRTVBUQRQDUYVYUYBUYRUBIYR" };
    assertEquals(3232492L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case22() {
    String[] grid = { "GFBQ", "HEGG", "ISBB", "LVII" };
    String[] words = { "IVBSISHSIIIVLVSEGHGHESILSIIIBVLVBBII", "FBGQBEGFGBIBIVLISHGHEBEBVIVIVLVILV", "GBGGGBEGHSHFGBGBISIESHEGFGEFHIHG", "BQGBFGGBFGSGFGBEGEIHSHSIIBGBEBGBVBGGBIB", "IBBIBIBGSHGFBFGEGFEBFHGEFBEGQBGBGBIBGGBG", "IIBGFBEGGBIISEGFHEGBGQBQGF", "GBSHGFGGBEIHFHEIHIHIESVBSIVLSLILI", "SLILILVBIBBIBEHFGEBFEHILSI", "EBBGBIIIIVIHEIVIBVIIBSBGFGEGFBE", "HFEHGEGBGGBBSISVIVISGQBFEBFEIHEFBGQGSIB", "EBVBIIBSLILISISGBQGBGQGBGGBBBBGEILSHG", "BVIIBGQGBSVIEBFGFEGQBQGBGGQGBISGSLVBSHSIV", "BGBGQGSGBVIBIIVBBBGFEFEGBBGQBGQBGGBGBG", "SIBGFBQGBBBIBIIBEFHFGEILISE", "GFEHILIEIEHGFBFBGEFEHSVLIHSLILSLI", "GEGSGBBIIBGFBGGBEBQGFBGBIIVIVILVLIVII", "VLSVIHSHEIVBGGBQGBVILVBGBGQBQGEGHG", "GBISVSBIISVBGBESIBBEILVISBSGFEBEGBSIEILS", "FEBSISESGBIBSIBIBSVLVBBBIBGBGQGGQGBSH", "LSGFEHFEHISESHESVSILVBGBQBGBIBBSGSIVII", "EBGQGBIBGBGBGBFBQGFEHEHGEIVI", "SBIBGBBGGSIIIIBBGEIEGBGQGQGBGBGBI", "QBGGBGGGBIVBBIBSGQGBGBGBISEBSLSEBGBIBI", "LSBIIBIIBIBISBSLVILSVLSLISBGBQGG", "IHSLILSIBGQBGBQGFHFHEGFBGSLSEGB", "HEFBFGBFGHISIBEBQBGQGFEHIVL", "SVIBEFEFBFGSEBFGEHGEBGGBIBGBGBSHG", "QGQGEHFGEBFGHIESGEBQGBIBIBIIBVBIB", "GEILSGBVSISGEGFGEILSLVIIIBVBIIIIISLIE", "IVLSEGEHGEGFBGBGEGHEFEGFGBBSVBGBGBGBGB", "GFBFHFGSEGFHGEIEGBGGGEBGBVIVIL", "BGSBIVIIBIVISBGGQGEGEFBGBIISISHSIE", "LIEIHEBVLVIESIESGESHEGFGEFEILVIVIVI", "GHSGFEGBGQGSIVBGBGQBGBBBSIVSVLI", "QGQGBEHGFGBIIVIBBGEBVIBGEBIBEIHGFBF", "HGFGHIVIEBFEFBEHFBGGBGBVSBGBVLVIBSG", "BQGBGBBEFBFEBISVBGGSHGHFGSVIBIBIB", "IEBGBIBGBBGEGGGBGGSHIVBSVLSGQGFBQBQGBIIBBI", "GFGHEBFBEHEBEHEIHGFGEBGBGGFBGGBVIL", "GFGQGQGQGGSGFHESBSILIHFEBGBBGBGFEFHI", "GEBSVSHIHFBEGFBEBGBGBIIBEFEGSIVLSVL", "BBEGFGHFBEBGBIBBVLVLVIEGFGE", "BIVLSGBGQGFBGBGBIIIBIBI", "SGSIHIEGFGGBSGQBQBEBQGBBBBVBISHFGG", "GBVIBBIIBIIBBBEIHIESIEIHILSBEFGHG", "BISEBQGBQGBIIIBBSIHFEGBFBFGHGFBGF", "VIEGEIHFBFHGHIEBFBGQBFGEGBS", "VISBGBGBGBIIBGBGSVISISISIHEBQGG", "GFGQGSIESGGBFHGEBFEHSEGSGGQGBFEIEGFHGH", "GHEBGBEGQBGBVBBGQGQGQGQBEBFGQB" };
    assertEquals(1639561980L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case23() {
    String[] grid = { "UECN", "JJZT", "CBLU", "CEAS" };
    String[] words = { "ZTUZLBECCEBZUAELTZEUJEJCELECCCBCJJJ", "ECCEAUAEALUTZTULJLJCNCTCZJ", "ZCEJEJEJUEJCJECNCECJUJUJBJCCCJZNZBCEL", "ZCNZTZLJCTLJUJCJJJCBEBJLTZJBCECBCBZLBJE", "BCBCBJEUJCCBLTUASLAECJCNCEZNC", "ECECCELSLTLJJEUEJCCBCJBLEABL", "CJEZEJCBCJJBCCJJZEZNZCNCTCTUTNZE", "UTCEZTLJLBCCCBZBJCBASLBCCCECJEJEUJ", "CZNCEUJCBZCNTNZNTCJCBCCECCJ", "BECCBJUJBZCZECJCJCELEALEBZTULSULTUSAL", "BJECJZJUJBLELZUASLZCNCJZLJJJEZLULABE", "CZNZCECNZJUEUECNTLSUAEAEBLTZJLBCB", "UTNCZEUJCJUJUJLZCZBCBASLECBEAECEASU", "ASLECELALJEJBASUTUTCEZLZTNZBCJZUSA", "ECEBJLJUJZBCBJUJJBCBLBEBAECEASLSALSLZT", "EJCCCELJBABCBJECNTUAUALEAELSAEBAELTZCZE", "TNZJEUEJECTLZCZULTLZBJCJJLTLTZLTCZLZLS", "CJZEJEJUJBJCCCCECEBECECECJLALSLBC", "EJEZLELJLTUSABJZTLSUSASASUSLZLZJZ", "CZCZJUEZNZBLJBLUZCNTLBCBEBLJCZ", "CZBZNTLJJECNCZTLSAECBAELUTCZBLEABJ", "SABCCCBLJLTCZNCEJLJEJBJECTNTUTUSUZULA", "JECTUAULBJLAECELABCCCBLSUTUSLS", "EZBCCECECBCCCCBCBJBECCJUJCJCJCELABL", "CECBLSLULUTLECEBCJBALBLEBJZEJEJEZLTCJCJJCJZ", "BZUTNCJCTCTZNTUSAELJZUTUSLELAUTUZEJBJEZEZ", "USUSAULUTCTLSLBLBJUJCJCJLUTULUSLJUJUJJJJB", "ZCNCNCJEJUEJBZJUEUJCJJCCEBC", "JCCCCBEBCELEASAEALECBECJBJ", "ZNCNTULZCZUTZEUJBALBABJUEUJCEZUASLEL", "EZCZLUABEBLEBZEUJLECBABLAEBCCJEJECJBJCNZ", "SLZLELELECJEJCJZECEZCEJLZLJJJCECNZULSLZBE", "LSALSLJEJCJCZLSAELASUTCTUAELALJBCECCJJ", "UJBJEJEUECZBCBLJZJCTULTCEUECECT", "JZUZEUEJJCECBJBJCECECBCJLJBZTNCZEU", "LSASAEBLJJUECTNCJCNTNZBCBZEZJB", "JCTCEJEJUJUEJZJUJEZBZBCBJUEJCJZEUJJJ", "CNCZCZJCZBEAULJUJJLJCNCZNCEJJCTCJ", "JCTZEJJBZNTLELZUSULEBZEJLUZNCJLZTZLABJUJB", "CTLABABJBALBCCCBLBCCJBEAECELU", "SLULEALZJBJBEALBCBLAULTLSALELECBZNTCNTU", "ECEBZJCNTNZJZECNZECTZNZNTLBJEJJ", "EJBZNTCTCTNZBECCCEBLSUTCNZJZJBL", "CCELZEJEJCBJZLAECBZCNZJBZCNCZEJJ", "CCJUJBJECZBLBZLTULJCJUJECEZBZL", "UEZLULTUZCTZNCTUSLUSABJUEZLELASLZJ", "UJEJEUJJUJUJCEAELBZEJCJCCEAELSAUA", "CECECJEJCELSAUTZUTNCNCZLABLECEBJEJC", "CBABJCJLZCJEJJBCJCJZJJEJUJBJEZCZLTNTUA", "SUASASUTLAUSLZNTNZTLALBJBCEBC" };
    assertEquals(6296499L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case24() {
    String[] grid = { "JGYG", "QMIB", "NEJU", "CNPQ" };
    String[] words = { "IGBUJQJIENJIJQJMQGJMYIJQPQJBY", "NPQJUIUIGQEPQJPUBJQUJEPJPNCNNMIG", "EJIYGMJUPJQJMQNQMYMNQGIECEPJQUPECN", "NCNNEJUJPUPUQPNPNCECNJNJQJEQJ", "YGYBJQJMGMJUIJIGJMYGBYBYIECEJMNNJBJIMEJQ", "IBGYMNCEQENCEIBIGYGQGQGIYMYGJGJM", "QPQJPUIMJBYGYBIBGIGYGIMEQNEPEMGIMJPNE", "NECNCECEIUBUPJIEJMENPJBJMJQJ", "ENPQJBJBIMIMNMIYBIYBIECEMEIUQUJMNNJB", "NEMJMIGYGYBUQJEPUQUIJNNNNNEMNCN", "NEMYGIYGJMGMGIGYMGYGMENNNECNEPNPJIEMI", "QPNNNCNEQMEPUBUBGBGYMNMIGIG", "JBJQPUIJBUPUIGYBGYIYMNCNNEQ", "MJQENEQGIBYGMEQEMJQNQMIEPJNCNJIUP", "GIGMEPNNMQGQGIEQJQMQJMIYMJMNN", "ECNNCNNNCNQGIGBJMIYMIJIJNENENNC", "JPQUQJQJQPUPQUJIUPQJBGIEJPNENCNMIGB", "ENEQMJMIEMJQGJMQGJMNQNEMNQMGJGMQ", "EQEIBJQPNNEMNQNCNNCNJPEPEIGYGBJQUIE", "JNCEJMJMEMYBJBUPNEIECNCEMEMIJQUIEIB", "IUPQPQUPUBUIEPUJQUQUPUPEMENENNMIME", "NJUPNCECEPUBJPENJEPJUQJEMIGYIBJBIG", "IMENNJBIGJGMIUIGYGIMNNNCNNQJG", "IENPECEPQJQJQJMNMQNEPNPUPQUJUPUBI", "JMIEJEPUJNPQUIGYIGMEMGMYMJBGYIGYG", "GIYGYMJQGMGMYGMJGJQECNEMIBGBIGM", "QGIEJIGYGYMGQNEJEIJEMYGIGIYBYGIUJIEJQJIEJNN", "QPUPQJIGBGYBIMGMGQMIGYGYMJQNENEMJMNMN", "UJBJIGBUJUBYGYGIEJMYGQEIJPEIJQUIMJMQEQJ", "ENCNCNENECNQNCNNCENNCEIGY", "QGIUPJUJMQEMECNCNEIUQPECEJMGYIG", "MNCEIJUPEIGYIGQMQMJNJQPUPQUQ", "UQUQUQPUBGBJQJEIGYMJNPNEQNCN", "UBYMENMENMEJNEJEIUPJQJUQJPNNMIUBYGI", "IGIYGIBIGYBUIGIYGBJMJMNQNENEMJGQMG", "BJUPJUBJPNEMJQMEJEPJBYGJMQMJQUJMJQUPE", "YMGMJQEQGJGJMYGIYMYMQMEMGIYMQMIMYGMGIYGB", "NPUQPNJBGBGYBUBJIGIENNCNCNMJ", "EJUPJIUQPUPEPUJMJGMJMEJPUQPEPJQ", "QJUPQPUBGYMYGIEPJUI", "JIJBUQPUQUBIGQNECENEPEIEPJQJPJBIB", "GIBUJQUBGIJIYBIUBGIUJPEPJEMNNEPUJIG", "IJMGYMNNJPJMQMEIMIBUBGIGYIUBYMJQMENNPNJBUI", "PEQNMJQNNJUBYMIMQGYGBJBJBIGYGYIYBUIUPJ", "YMJPQPJNNQGYIJBJBGBJMGIGYGBIUIYBG", "EJNEQEQJGIUPEIGQJQMIMJMJQGIBJUBUBG", "JBJQUPNNCNEIMJBIECECEIMNEQGIENCNNJBJENMJM", "GYBGYBGIJUQUIJBGYBGYMQEJEPU", "IYIGIEIBYGIUIJMYIBUBJUJNNEPQPUJBIMJ", "ECEPQUBYGYMQEIEMNMGYBUBGBUJENQNNNCNENEP" };
    assertEquals(531023L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case25() {
    String[] grid = { "XFUZ", "HKEB", "NVVR", "IOND" };
    String[] words = { "VNIONHFEBZUEZUFEFKHKXHVEUFEBUZU", "XHVHKFHXKFKVNONRDRNOVEBEBUFXFEUBZ", "HXFKHVNHNHFKHNVNONOVHFHNKVEZUKXKNHNKUZ", "RDRNVNIVNOVNIVNOVHNKNVKUFEVEFEVBR", "FUBRBEUFKHNONRVBRNDVOVKXKU", "OIVHFEVONVDVDREKXHXKXKVKUEFXKERNVRVK", "ZUEVOVKUBUEKXKVNVBZBVRERBVBZUEUZBZUERVVVNON", "ONONHFEKXFUZUEUKEZUEFXKFUBUEF", "VNREBUZUBVDVONINKERBEUFHXFUBZUF", "ZUBVNDVVKUKUEZUKFUEVONVEUEFUEVOVEFXF", "DNOVVONVNDRDNOVBZEVINVHKFKXHKHKVKVIOINV", "FXKXKHVVEVVNHNHNKNINOVBERBZBRVBEVO", "FHFKFEFHXKUKEBVVNRNREVERVDRBEBVKNKU", "FXKFXHKXKVNOVOVERBZUFHVIOIVNVON", "XHVNDNOIOVHNIVHFKUBZBVKXHX", "NOVEZBUEUBUBVBEUEVHNVINIONKXKXK", "DRBEKHVNDRBUZEFUZBVNDNREVKFKEVBUFEFHF", "ONDNVKNKXFKXKHVINKEBREBRDNVVONIONRBRDRDNR", "ERBEFUFXHVEVNOVEVNRBERBUFHNOVVEVNVNRBVOVKV", "INKHVINHVNONVOVEFEKUFUFXKVONVREK", "HKXFXFKFEZEFKFHNKHFHFXFXKFXFXKNINO", "FHVVNVKNKVIONOIOVNONOVKEVNDRBV", "IOVVBUFEZBZBVDREZBEVVNVBRVKVKHNKHFXHVN", "FEVKFXKUZUBEZUBEZEVEKVKVEFHXHNKUBUZEFXHF", "UBZBUZEUZBZEKEKVRDNVEZBZERNRVVHKXKVKF", "HNIOVDRBVDNVEZEBZUZEZEZEFHFKFXK", "OIONVINKNVVKHNVIVNVNOVONDVDNDREVOVKXKHFE", "VEKFHXKVNIONINHXHXKEVVVIONKHKXKUEBEZ", "BUBEUEVKEREUZERBUKUBRNVBZUBUKUFX", "INIOINIVHFUBUBEFUKVVNVBVNVVOVRDNR", "DRNOIVEFXFXKFKXKFKVHVVRNRDVOIOVEZ", "ZBERNVNIOVRNVNVOIONVIVHNVNH", "INIOVDVKUEFXHVINIOIVINHVHXFK", "VEVIVOVKVEFXHFUEFXHVVRDNVRNOVONI", "XKXKNINHFKEBUBZBZUZBRDNDNRND", "VBZEKNINKNIOVERVVNHXFHXHNOINKEUKHNI", "VONHNVKVRVEVNVIONVBZBRNREFUKVBEZEVVIV", "RNDVRVKFXFUEREZEBRVKVVEVRVDVEKHXHFHFKNOVKVV", "XKNHXHFUFXHVOVVKVOVEUFKNHVERBRDN", "NDVDNVNKXHNVIVKNKVVDVRD", "NHVNVNIVKHKNINIVIVIOIVKUZEVRB", "DRBRDRNDVOIVIVVOVRNDNVNDNVHX", "KEBVVNVEUEVONDRNRNRBZUKVKXHXKEUEKVEKV", "NVHNVVVNINHVVNRNVNVIOVNVNRNDNRDRVKH", "BVDNDNVIVNKHKVEREUFXHNIONONKU", "ONVNREUKUFKFKFUZEVINVHXHFKEVBVBEBERV", "REVKVKFKXKVHXFXHXHVNVEFKEKERVVHXHFKVVNIN", "KNHVINIVKFHKEREBVDVBEVONKVIVNVEVNDNV", "DRNONDVONKUFKEKUKVVKVEZEVEFHXFUKEKUK", "NOINHFXHNIOIVOIVHXHFEKUKEFKVBZEFUFXHXF" };
    assertEquals(1583294L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case26() {
    String[] grid = { "RSFG", "FCEG", "XFUX", "YONM" };
    String[] words = { "YFUFFFUCSFRSFCFCXCFESEXEUCUNMXECFGUFNX", "CECFRFXOUXNMXEUGECRCSESRSFGGUONXUFUOXFFFEGGEX", "FSFSRCSFSFGEGEXGGEGEUGFEUCFNFUFON", "GFEXGUMXNOXFOFEGESRCSFGEUGGFGECF", "GGEUOXFCFFFEGGEGFCSFFFCFOXCRCXYXOYONUN", "GEFGFCESFCFCFFFUXMXGGEFOUCUGFSRCSEG", "ESEFEFGXEGEFFFFRSEFYOXYONFEGECF", "XUNUCRCRSCSFFFFEGESESFRSRSFSEGEGF", "MNMUCXYOUFXFRSFGEGGEFFRCUMXESFFXYONU", "FXYXFRSEFXYFYXFCUGXEXGXEGGEUGX", "OFCFNXGGFESFSEGEUOYXFFCRCRFRCXONFX", "FRCEXNMUOUFYXYOUXUCSEXGGEFYONUNUFUMNUCXF", "CFEXGUNMXUGEUMNUEFESECFSCSFESFRCFGG", "OXYXCRCFEGUCRSCSESRCSEFGEFCSFCXFFRFS", "SRCFEXMUFXOUCRSRFRFXFSFSCRCRFCFGFGF", "CFRSRFRFRCFXFNXNFXFCXYOUXUFOXO", "SCRSRSRCFGGEUCSCUGEXEFOFYONFXOX", "XUMNXGEUXMXNUEFXYFFXOUFNXEGFGGEXNXM", "CFSFXFXFFFFOXFFUOUOFESFECXFSFG", "SCEFNUCFCSFCUEGGGFGGGGUCRFFFSCUCEXMNO", "MUXMXEUFNUXUCRSCEGGEGGFESFCXOUEGEF", "YOUCFXFFCXFOUXUOXYXCFCFXOFFXOXCFNXNFX", "NMUCFEUFOXFXCFCRCXCFCFCXFEXEFXCUEUCF", "SFCEFUNXMNONXNMNOYXOFUOXFXYXCS", "YOUNMXMNUGFEXNXUECFFCXFFCSCUXUG", "UGGEGUXUOFFCXFSFSRSRCFXFSEUM", "FCFXYFXFXFCXFCRSRCXFFEUMNUECFCXFCSC", "GEGGXUNUMXMUEXMXECUGUCRSECRFSFGGGF", "UOUEFCFOYXFSFSCFFUFESRCFSFGGXNMNUFYX", "GESCXOUOFUCRCFCECUFONXUXMUFEFGEUCFRCUX", "ECRSRSEUMUGUCFCSFCFGGUMNXEFSRFCRSE", "RCFFRCSRSECFEGEXUOYFNMNOUECUMUFFSFC", "OXONONUNOFFRFSFCXYOUXGEGEXN", "XFFSRFFFXYONMUFOFCSRSFXFRFC", "RSCECFXFOYFEGEFCEGFCRSRSCFCEXUOFUGX", "SFCRFFXFCXOYOXYXFXFXFCRFSFEFY", "XOYXFNMUMUCUGUESFXONFCRCFUCESRSCXFXOFCXO", "SRCEGUFFRSRFXFFXCFXOUMXECSCSEGEGEUX", "XYOYFOUNUFEFCSFRCSCFEXGXNXMNXESR", "GEUXMUOFOYFYXYXFXFEFOYOYOFXFFOXYFEFGUFEU", "NUECRCFEGEFUGXNXGGFGFEGEFGUGUMNUFNFXC", "EGGFGGXGGGFGUGUNXUOUXGUECFEFCFECFONMNX", "EGXNXNMNUXGEUCUEFGXGXMXNONXMXNXNUFXO", "EFCUEGGGGXNUNFUOXOUEXGGEFFFYFXOYF", "XEGXUMNMNFYXCFXFSRSFSRFFEXGXEXN", "ESFGEGGGGGEGUNOYFUFNFEFXOFUXGXMXN", "FRSCFCRSEFXOYOXYFNMUGXNFECFFNXECF", "FCUCFXFNFUGECRCEFOUOXYFCSRFSEXNFYFCUEUECF", "YXYFEXEFXOFCSFCEFNOFYOXONXNXUOYXF", "EFUOXYOYOUNOYFNOXYXONUOFOUOFEGFGF" };
    assertEquals(1511730L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case27() {
    String[] grid = { "XSZN", "JDEN", "TIUJ", "QWEP" };
    String[] words = { "WTDJITWQTQTDTDSDXJDESZENNJEIU", "TQWQWEJNUNZEZESEJENJNNZDSDZNNN", "IUNZNUDTWTIWITITDTDTJXJIJDJXSE", "EPUIENZNUJENNUEZDENZSXDTWUIJSENNZ", "DJIENNEUWTQTJXSJIUJPUITQWUWUNJNZE", "DXJTIWQIWTIWEIWEWEPEJUEDUDZNNEUPEPU", "JUEJEITDIWTDZDIWUIWQWQIJIDJTWIWQWEIUPJ", "QTWUEPUWQTJIEPUEZNZEDITITJDZDUWQ", "JTIQWEWQWIUIWQTIQTIQWTJTQIDESXJIEUEP", "DUPEJUJNNNENUJEJUIUNNNZNZS", "EZDJIUITWEUIWEWEIUDSZNNJEJENJPUDZSXJSE", "TWTDXSXSZDEZDXSDJXSENZNZNZEJUWUEIE", "ZDIUJEDSJDJDSDUEJUPEIWUNEUWITWTJSZNNUWT", "WUWUDIQWQTIUNNNZEZSXDTDEZSDSXDUWQ", "XSJITJTJIJDEZNEZNZEJEIJXJTIEIEZDIEUEJEP", "XDENZDZNEDXSEZNZDSDTJTQIDEZESJIEIQ", "NNJPJNEUEIJXJSZDUPJENNJESXSDUW", "NZNNNZSZNEZEIJIDSZSXJTQTITQWQWUJU", "QWITJTQWEPUWQWUDJXDSXDZDED", "EJNEUEZSZNUEIUJEPJNZSEUWIQWTDTJXJT", "QTQWQTDJTWEIEPUPJUWEPEITWIEJPUEJP", "NUWUENUPUWUPEIUDXJDIDJDZDUIJDEJEIEPJ", "XJIJXSZEZENUEPJUIQIEIJDZD", "SJSDJSJSXSENUEIEUJPUDJIDIEZNNZDIESEN", "UEWQWUJEPUDTIENEJENZNEDUIEWUNJPUENESX", "NJNJNZNNZNZSXDTQIEIDSXDXSZEN", "EWTJTQIWIUIQWTQIWTWEJNEIWIT", "EDXDSZDSJXDUWEUEUPJNZEJNNZSJTD", "SENZNEZENEUNNNUPUNEDJXJTWEPUIWEPJ", "ENZSDTWTJDTQWQTWQWEPJNZDXDJITDIDTQ", "JNEZSXDJSZSEDSDIUIEJEIEIWTJSEZEUESX", "UJPUPUDUIEJNUNEDZDTIQTWTDIDZNZENJEI", "ZSJSZNZDJIQIEZDXDZDZESJIWEWT", "QWTDEIJDTITQWQIWQIQTQWUDSENZDUDUJE", "WTWUJPEIQWQIDUPUEIQIDIQIDX", "IWQIEPEUIQIQTWUIDIQIUWQWQTIDJTQ", "JTQTDJITDZNEJPJNJEIEPEPEUDSEUIUN", "IEJUEZDSZSDXDXDEUENNUWTQWTQWIT", "JDUDUDTQIWTQWQTIQIQTQTQW", "NEJNUITIWUJPUIDXSZNNNZNUNZDXSZNN", "JEIWIEUIDTWTJIJIJIQTDXJXJXDSJITWQT", "WEUIDUDXJTDTIJXSDEZNJEIEIQWIEJENE", "ESENEJNUEDEJPJEIJXDTJDESJSDJXSZNENNEDXJS", "SEZDTDIEUEPJEJENZDXDXJTIWIWQIUWTDTQWTWT", "SDZSJDZSDSEJPJENNZNZNZNEZESZNJUJE", "DTITWEPJPUPJNNNNZDXJTJSZEJUJNN", "SJTWIEIEUESXSJTDTQTQIEITIQITWTJTJT", "XJTWQIJSEUNZNZDTJIDSJITQWTQWUJUEIUEZEJE", "JSZSEJUEDUWUEJNESDEUPJPUIUJPJEDJTDX", "NNJNUPUENUIJSJSJSXSDJDSZDZSDJSJIQIUE" };
    assertEquals(448231L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case28() {
    String[] grid = { "CXEU", "KBYG", "FMJY", "GIFR" };
    String[] words = { "JYRYGYEXBCBYBCKXKXYYGEYUGYR", "GYFIMBEYYGYJYXEUYYFMFYFJFRYF", "EXBXEUEYUEYJYGYYUYUGUYBKMGMIMIFMFKCK", "UYUGYJRFMBJBMJYYYJIGMBYBFKXEXEYUGEU", "JYYXEUGYUEUGYRJBCXKBYUYUEBFMJMKMIG", "RFMKFMFMFJFMBMIGFIGFIFGFMIMJMKFMYYYXEYMF", "KFGMFYGJIMFIGMJGYBFBXKMYXYUYXBFKFGF", "CKBCXYBYXYEBEYYGEUGYUGUGYMJMFRJIFYGJF", "YBMBYJFIGIFBYXCBJBKXYXCBKXBEGJFMFJRJBXBF", "GMBJGJYJYXBFGFBYUYYYYFYGUEBKCKFGMYEUY", "MFBFIJGYUEUGUEBCBCXCKCBKCBJYGYRYY", "IJMKBYUEUEBCKXKXYYFMYYRYRYGJIFIJ", "GFGFKMGFIJGUEGEGUEBKXYUGEB", "YYFMGMFBMKFMBJYJYYJYFJIFIGIMIMJMGIMYXYXBXEUY", "FMKBMFBYMFIMBXYMKXKBFMYYGEXKFMFYRJGU", "YYFRYGUEXBFBXYMGFBEGEXEBEGJFJIMIMY", "MGIGFIJRYRJIFIFMBCBKBCBMJIJYJIMJYJYXE", "GYEUEGEUGYBXKCKBFMKMJFYFYRFRFMIMJG", "YJIMYGYJBJBFMKBCXKMGFBXKXYUYXBK", "YGYJBCBKFGMFKCXYJYYGYGJIMIJFRJYJYUGYMY", "RYFYYYRFYYMBMGFKMGIJFRYFMGFGI", "MFKBXKCBEBCXBJBKCBCKFKFBYXYYYU", "MKXYGUGYFMBEGEXEGYUGYGYFYGUGYGJMF", "YUYMIGMBKXKFIJBFIFYRYFYFRJFMIFBEGJYUG", "JGUEBXBEUGYYJBMYJGEXCKXYGYMIMJYGYUEBYMBYMK", "FIMKBFIFKMFJYGEUEYJGYGYRFMYJIJMYEGY", "GYRYRYYUGYFMFIMIFIGIJGEXYEBKCBMIFIF", "KBCXCKXKXEGYJYJMGFIMJGYMIMFYYYFMGIF", "RJIJBXYUYUEXYJYGJRFYJRYJMGIFMFIFIJIFG", "CBJMBFIMBMKXBKMJIFBMIFMFIJYGJMBXCXKMFGI", "RFIMIGMGFBXEYJBKCXCXKXYBCKCBCKXEG", "RJRYGYUYYYXYEYEYEBXCKXCKXYEYUYGJRYRYGE", "BJGJRYRYRJMGIMJIGMGIFIGMFMJFIJRJYGYYEB", "FMFKCBFIFBKXEXCKBCKXYUYEUEGJR", "GUYJIMFBCKMBJYFYYMBCXBEGJMKXC", "CBFIFJYYXBXBJMJBKBXYGJRJBMGFMGMFMKMGIJG", "UYMJFMGMYBYMKCBEBKMFIFRFMGFBCXKM", "XCXEUYEGYGEUEBCKFMJYJIGIJYGUGYBC", "IJMFKXCBFIFIGMFYYMIFIGFG", "FIJIMKXCBFIGIFIFJRFMIFRJGU", "XKFKBFMFGFMKBMIFRJBKFGFBKFKBFKMG", "KCKXEGYJGEUYUGYEBXYXYBKMIJRFYFIMI", "EXBFIGFBYJMJIMYMJFYYBMBYEYMYJFYJYJRJYX", "FGFKFGIFGFKXKMIMFBCBMJYXEGUGYJYJFMJM", "KBYUGEXBJBXYUYBKBFGFGMIFIFMFR", "GIJYRJGEXBYBEXCXKBJIFMBEGYFIFMFGFKXYX", "KMGIFBMBJYGJMJRYFJYXYJYBMBYYFMYJMKMBKMBKBEB", "JRFRYYYYEUGJIFRFIJMJBEGYJGJYJ", "GJRYGUGJGYRFIGMJIMJFJYJRFIJIFGFI", "RFMGFKXCKMFYYUYYJGYXCKMYBM" };
    assertEquals(294684L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case29() {
    String[] grid = { "UMBZ", "BCIE", "RVQZ", "IYFN" };
    String[] words = { "MBEQEQFVCRYFZQFVRBUMBMCVCMIZIVIYIVY", "MBIZEQFZEZIEZBEIZBMCVFVRBMUBU", "ZNQCVFZQEBEQCIEIVFVIYQNFZIZQIEZEBMUB", "FYFZFQIEZBEBMBEIQFNQNFYQZFQFYQC", "FYVQFQZFQZIBCMUBUBVRYFZICQFVBCIZIVYVCVI", "IBCMBMIEZIZQZEIEQIEIBEQIQYQIMUCRBUBUM", "IYQIVIRYFNFNFNFQVRYIRCRIRIYVBVRB", "RBUMIVICBCBCUMUCBUMIZICQCUCBRBRYR", "NQZQEZIZFVYFQNFZIBMBVCRCIZI", "ZIZNZNZFZFZICQNQEBIVFQCMIVFVRVFNQNZIEIC", "BIEZIMBCIZIZFVRIVBRIRVFQNFQIQCUBRCVIV", "ZFZFYQEIQCRIVBCBMBEBZEIBZIQCBIEZ", "VBVYVFZQVCBMBVCUMUCRBCICUBCQVBRCBVICBMU", "ZEBIEZEBEZEBZIZIMBMBCBCBUM", "ZIZBZBICBCMUMCIZEZBEZBZBEQYRBRY", "YQFZFQVBMBUMBVFQVFVIZEIZEQZQEIQNFYIY", "QEQYIRCRIRCBZBMUMUCIZNFVRVIVI", "IYVFNZFZEZEZEZNQZEQNZEZNFVIZEIVY", "IYRCBIZNFNFNZFVQIQZNQIZIBMBM", "NZNFNZICBUBVCMCIVIRIVIMUBCRVQFNFV", "YFNFVYFYVYVIEQFYRVIZEZBIQZQEZQEI", "FNQEZFZFYFVIYRBRIYIRVYQZEZNZEQVI", "MBEQIBCBCMBVBMBCRYFNQZEZBCIVIVRVFVRYVIZ", "NFZIEZEIQVFQYVFNFVIEQFQIZEZIZNQVIZEQN", "IRVBCQFNFNQEBMBVIMCUCRCBCQYFVCBIMBUMB", "RIYQNFYIRBRBRVYVCRVYQEZQYIRCBMUCB", "IVRIYIYQCRYFNFVCBMCBZEBZIBMCBMCMBC", "MUMCBCVBMBIBCRBVIQZIZEZBEQEBMCRCQFVFYR", "QFNZNZNZFZEZFVCUMBICBZBM", "CMIQCUCUCQCQYVBUBVIZEZQCBZBEZEZNQEBZ", "RVQIBIBMIZIQZNFVQVFZFQZIQFQN", "VBUBUBMBCRVRYQFQFQIBMUBCRIRBVYRCUCQE", "EZQZEQYIRIVIYIYIVIYRYIRYQZEBMBZIZIZI", "BZBEZEBCVIYQIQEZFNFYIRCQNQNZ", "UMCRIVRYIRVBRBUMUCBCMCMBMBCUB", "RIRBRYFQIQCVQNQYRVFVQNZNQVIYQYIYVCBZE", "BZBZBMUCRVFQCBCRYIRBUMCBCIM", "VCBZBEZFZNFZQFNZFVIZFQFQCUCRCMBMBCB", "VYVCMBMBIEZEBCBZEIMIQNZIZIQIZIMBRIRIYFVRB", "BZIZIQIMBCVRBCQZQEICVCBCMCUBVQNQEZEZE", "UBRYIYIVRBVBRVYRIYVRCMUCBMBMCVFVQ", "VQYRVIYRVBMUMBMBCRBRBMIQCVBCIZEQFYVCB", "FVCICIZIQVBUBVIQZQCIQYVQIMUBMCMUBRYIR", "VIVFVFVBRYRBCRBUBRCBCVIVIVYIYFYVCIZIMC", "UMBUCIQZQVYVFQCQIBIMCQNQFZEICQCRYFNF", "ZBCVIYRYVYRBCBIVQNZEQCBRYQVYR", "YVIYQIQVQYRBMBRIYFQIZQEZQVFNFVYQZNZN", "EIZBCBRIVBCBMBZEQNFNZQEQVQNZEI", "UMCRVBUMCUMBMCUBUBUMUMBM", "ZIZEQNZFNFNZIVBCRCUMBMIEQVBCBV" };
    assertEquals(468908L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case30() {
    String[] grid = { "VIHK", "UMBR", "NVOT", "MIYF" };
    String[] words = { "NIOMBMVUMIVMVBMVIBMVMIOIMIOBHKHIVIVMU", "BKBVIVYFOTYTOMNMVBRKBHKBIMBVBIMHIVUVUMOF", "FOVIYVUNINMVNUVIVMVIYFYIYVIYFOTOBROVUMIUM", "NMNMINVOBMUVMBKBOYOYFTOYTFYVMVMVMVU", "TOBMOYFTYTBMOFYVMIHIBVMIHKBMBMOTORHKRTOVOTBM", "RTRHMIMHMNMNMBTRKROMUVIMIVIBI", "BVBVBHKHROBVYTYORHKHBKRTRHMOYTRBOIYINUIU", "YTYORBHKHIVUVBIMORHIUIVIBIUNIMIOINU", "NMIMIVBHMVUVMNUNVYOFYFORTRK", "OINVNIYOMHRTYTRKHBKRKBORHMIVUVUVIMN", "MVMNVUIBIHMOTROBMBTOYVIYOVNUIHKBOTRTFOM", "BTRTYTYVMNMHKRTOVUVMNUMHBTBMBMVU", "YFOMIHBOTROFTBIHBOTYFORBRHMHROMUVMBRH", "HRORTFYIOMUMNMHIMOTYFORKRBOIVORBVNU", "IMVOFOFYTBRBMVNVIVOVYVNVNMHIVUVMVBKHKROR", "MVBRHIVUMVUNMIYFYTBHBRKBRHKHBKRKHIHK", "UVOIMNVBVBMORTBKHIMOYFYTORTOTOVYOMUIUM", "MVIVIMINUMBIBVMOMNVMVMVMVUVIVYIVMVM", "TRKHKRKBOFORHIMVIOBHMIUNVOMOVMUMOY", "KHMBIVMBTBVINUVOYVNMNUIBIUNVBTBOROVOROFOYI", "BMVIHIMUNMVUIUIUIVUVBTFTBRKHBTOYT", "VOMORBHIMBOBHIUNVIOFTFORHRKHRHMN", "BKRKROININMVMVUIUMOTYVOIYTOYVUVYVY", "VMBRORKHRBHKHIVIUVBTFYINUNMIMBRTOIYVB", "IUVIYIVNUIHIBHMVUNVYOMHBHRHBHBTOT", "KRTBHMIUVUVMVIVINUNMUVMVMUMHKRKBVM", "KHMVUVMOIYTYTFYIOFTRTFYOBVMNMVOMBVBT", "VIUVUVIHIBVORHRKBHRKROMBMVIMVIB", "VUMBMHRBKRHIHKHKHMUVMOVOBVNUVMHROI", "MIMHRTYOFYVMIHIBTBMVIBVYFTOFOTYVOY", "MVMUNINMOMIMHIHMHBRORKBHIU", "NIMNUIBKBHKBTRHROVOBOTOIYTOVIVYOVMNVBOMHBR", "IMNIVYIOMUVIOFYORHMVMOFOBOF", "OTYTOVMIVYFYVUVMOBORTFOIMIMIYFO", "VOYVMIYFOYVUMVYFYOVMVUIUIHBVNUMNIYFTB", "UIBVNUVMOIMIORKBROVINVMINMVYVBVOMBIMUIH", "HROVNMNMVIVYTBTYFTBMVUVUV", "VOFYIOYFYOVBTRHRKRTOIYTOYVNMVIUMUVI", "MNMNUMIHKBHIMVUVOVORHKRHKHBVNMUIVUVMH", "RKHMHKBKRHKROTBVMIMVUMVMNUVUNMINMUV", "YTFTBOMUVYVOVUNINIOYOFYORHMUNVYIORTBOIVOYF", "INVMNVOBRHKRKBOFTYIYTBKBROFYORBRKHK", "MIBIMNMVUVUNMNVNIVUMUNUNMVMIYFYVMI", "OVUIBVMNMUVUIHMOVMIBIVUIVUIBMBHRBHR", "ORBTYORHMORBMHIHIUVIUVMIYTRTFOIYI", "OIVUNMVIMBMIUVUNIMVMNUMNIMVIVI", "KBOIYTBVUVUVUMUNVNVMIYIMNV", "VUVIMOYIMNUVUVMVNMIHMNVINVUVUVMIOYF", "YTFOMIBTOYFYIMINMIYFTFYOFYINMNINVMN", "NUVMIUVUNIVIMNVOYFOTFYTYIYTYIOBIBTOIVI" };
    assertEquals(781846L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case31() {
    String[] grid = { "TREX", "XXXX", "XXXX", "XXXX" };
    String[] words = { "TREE" };
    assertEquals(0L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case32() {
    String[] grid = { "AAAA", "AAAA", "AAAA", "AAAA" };
    String[] words = { "A", "AA", "AAA", "AAAA", "AAAAA", "AAAAAA", "AAAAAAA", "AAAAAAAA", "AAAAAAAAA", "AAAAAAAAAA", "AAAAAAAAAAA", "AAAAAAAAAAAA", "AAAAAAAAAAAAA", "AAAAAAAAAAAAAA", "AAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" };
    assertEquals(5758282696760L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case33() {
    String[] grid = { "ABCD", "CDAB", "ABCD", "CDAB" };
    String[] words = { "ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDAB", "ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDAC", "ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDAD", "ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDAE", "ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDAF", "ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDAG", "ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDAH", "ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDAI", "ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDAJ", "ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDAK", "ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDAL", "ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDAM", "ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDAN", "ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDAO", "ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDAP", "ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDAQ", "ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDAR", "ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDAS", "ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDAT", "ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDAU", "ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDAV", "ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDAW", "ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDAX", "ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDAY", "ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDAZ", "ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDAA", "ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDBB", "ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDCB", "ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDDB", "ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDEB", "ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDFB", "ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDGB", "ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDHB", "ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDIB", "ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDJB", "ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDKB", "ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDLB", "ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDMB", "ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDNB", "ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDOB", "ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDPB", "ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDQB", "ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDRB", "ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDSB", "ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDTB", "ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDUB", "ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDVB", "ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDWB", "ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDXB", "ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDYB" };
    assertEquals(6680647872500L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case34() {
    String[] grid = { "XXXX", "XXXX", "XXXX", "XXXX" };
    String[] words = { "X", "XX", "XXX", "XXXX", "XXXXX", "XXXXXX", "XXXXXXX", "XXXXXXXX", "XXXXXXXXX", "XXXXXXXXXX", "XXXXXXXXXXX", "XXXXXXXXXXXX", "XXXXXXXXXXXXX", "XXXXXXXXXXXXXX", "XXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" };
    assertEquals(4986798321760L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case35() {
    String[] grid = { "EEEE", "EEEE", "EEEE", "EEEE" };
    String[] words = { "EEE", "E", "EE", "EEEE", "EEEEE", "EEEEEE", "EEEEEEE", "EEEEEEEE", "EEEEEEEEE", "EEEEEEEEEE", "EEEEEEEEEEE", "EEEEEEEEEEEE", "EEEEEEEEEEEEE", "EEEEEEEEEEEEEE", "EEEEEEEEEEEEEEE", "EEEEEEEEEEEEEEEE" };
    assertEquals(5035968009260L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case36() {
    String[] grid = { "XXXX", "XXXX", "XXXX", "XXXX" };
    String[] words = { "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXY", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXA", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXB", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXC", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXD", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXE", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXF", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXG", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXH", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXI", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXJ", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXK", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXL", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXM", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXN", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXO", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXP", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXQ", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXR", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXS", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXT", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXU", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXV", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXW", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXZ", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXAA", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXAB", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXAC", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXAD", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXAE", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXAF", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXAG", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXAH", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXAI", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXAJ", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXAK", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXAL", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXAM", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXAN", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXAO", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXAP", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXAQ", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXAR", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXAS", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXAT", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXAU", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXAV", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXAW", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXAX" };
    assertEquals(6582031250000L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case37() {
    String[] grid = { "XXXX", "XXXX", "XXXX", "XXXX" };
    String[] words = { "XXXXXXXXXXXXXXXX" };
    assertEquals(4428160000000L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case38() {
    String[] grid = { "AAAA", "AAAA", "AAAA", "AAAA" };
    String[] words = { "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" };
    assertEquals(3271484375000L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case39() {
    String[] grid = { "AAAA", "AAAA", "AAAA", "AAAA" };
    String[] words = {};
    assertEquals(3297539062500L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case40() {
    String[] grid = { "XXXX", "XXXX", "XXXX", "XXXX" };
    String[] words = { "XXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" };
    assertEquals(2770967000000L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case41() {
    String[] grid = { "XXXX", "XXXX", "XXXX", "XXXX" };
    String[] words = {};
    assertEquals(6582031250000L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case42() {
    String[] grid = { "EEEE", "EEEE", "EEEE", "EEFE" };
    String[] words = { "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE", "EEEEEEEEEFFFFFFFFFFFFFFFFFFFEEEEEEEEEEEEEEEEEEEE", "FEFEFEFEFEFEFEEFEFEEFEFEFEFEFEFEFEFEFEFEFEFEEEEEF", "EFFEFFEFFEFFEFFEFFEFFEFFEFFEFFEFFEFFEFFEFFEFFEFEF", "EEEEEEEEEEEEEEEEFEEEEEEEEEFEEEEEEEEEEEEEFEEEEEEE" };
    assertEquals(6853478912240L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case43() {
    String[] grid = { "AAAA", "AAAA", "AAAA", "AAAA" };
    String[] words = { "ERE", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "ZZZZ" };
    assertEquals(8886718750000L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case44() {
    String[] grid = { "XXXX", "XXXX", "XXYX", "XXXX" };
    String[] words = { "XXXXXXXXXXXXXXXXXXXXXXYXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXYXXXXXXXXXXXYXXXX" };
    assertEquals(5003371081313L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case45() {
    String[] grid = { "EEEE", "EEEE", "EEEE", "EEEE" };
    String[] words = { "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE" };
    assertEquals(6582031250000L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case46() {
    String[] grid = { "XXXX", "AABB", "CCDD", "EEFF" };
    String[] words = { "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD", "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE", "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" };
    assertEquals(4756400525000L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case47() {
    String[] grid = { "AAAA", "AAAA", "AAAA", "AAAA" };
    String[] words = { "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" };
    assertEquals(3154296875000L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case48() {
    String[] grid = { "AAAA", "AAAA", "AAAA", "AAAA" };
    String[] words = {};
    assertEquals(4986798321760L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case49() {
    String[] grid = { "XXXX", "XXXX", "XXXX", "XXXX" };
    String[] words = { "XXXXXXXXXXXXXXXXXXXXXXXXXX" };
    assertEquals(9738281250000L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case50() {
    String[] grid = { "AAAA", "AAAA", "AAAA", "AAAA" };
    String[] words = { "A", "AA", "AAA", "AAAA", "AAAAA", "AAAAAA", "AAAAAAA", "AAAAAAAA", "AAAAAAAAA", "AAAAAAAAAA", "AAAAAAAAAAA", "AAAAAAAAAAAA", "AAAAAAAAAAAAA", "AAAAAAAAAAAAAA", "AAAAAAAAAAAAAAA" };
    assertEquals(607808009260L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case51() {
    String[] grid = { "EEEE", "EEEE", "EEEE", "EEEE" };
    String[] words = { "EEEEEEEEEEEEEEEEEEEEEEEEEEE" };
    assertEquals(3659179687500L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case52() {
    String[] grid = { "AAAA", "AAAA", "AAAA", "AAAA" };
    String[] words = { "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" };
    assertEquals(6582031250000L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case53() {
    String[] grid = { "AAAA", "AAAA", "AAAA", "AAAA" };
    String[] words = { "A", "AA", "AAA", "AAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" };
    assertEquals(4238281676280L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case54() {
    String[] grid = { "AAAA", "AAAA", "AAAA", "AAAA" };
    String[] words = { "A", "AA", "AAA", "AAAA", "AAAAA", "AAAAAA", "AAAAAAA", "AAAAAAAA", "AAAAAAAAA", "AAAAAAAAAA", "AAAAAAAAAAA", "AAAAAAAAAAAA", "AAAAAAAAAAAAA", "AAAAAAAAAAAAAA", "AAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" };
    assertEquals(4986798321760L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case55() {
    String[] grid = { "XXXX", "XXXX", "XXXX", "XXXX" };
    String[] words = { "X", "XX", "XXX", "XXXX", "XXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXX" };
    assertEquals(3352656925860L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case56() {
    String[] grid = { "AAAA", "AAAA", "AAAA", "AAAA" };
    String[] words = { "A", "AA", "AAA", "AAAAA", "AAAAAAAA", "AAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" };
    assertEquals(5455003468780L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case57() {
    String[] grid = { "XXXX", "XXXX", "XXXX", "XXXX" };
    String[] words = { "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" };
    assertEquals(6381835937500L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case58() {
    String[] grid = { "AAAA", "AAAA", "AAAA", "AAAA" };
    String[] words = { "A", "AA", "AAA", "AAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" };
    assertEquals(2770967004780L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case59() {
    String[] grid = { "XXXX", "XAAA", "XXBX", "XXXX" };
    String[] words = { "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAABAAAAAAAAAAAABAAAAAAAAAAAAAABAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB", "AAAAAAAAACCCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZ", "A", "B", "C" };
    assertEquals(524743868420L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case60() {
    String[] grid = { "AAAA", "AAAA", "AAAA", "AAAA" };
    String[] words = { "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAA" };
    assertEquals(7907532140700L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case61() {
    String[] grid = { "XXEY", "XXXX", "XXXX", "XXXX" };
    String[] words = { "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXEYE", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXYEE", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" };
    assertEquals(5890935501814L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case62() {
    String[] grid = { "AAAA", "AAAA", "AAAA", "AAAA" };
    String[] words = { "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" };
    assertEquals(8496093750000L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case63() {
    String[] grid = { "AAAA", "AAAA", "AAAA", "AAAA" };
    String[] words = { "A", "AA", "AAA", "AAAA", "AAAAA", "AAAAAA", "AAAAAAA", "AAAAAAAA", "AAAAAAAAA", "AAAAAAAAAA", "AAAAAAAAAAA", "AAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAA" };
    assertEquals(1805116046760L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case64() {
    String[] grid = { "AAAA", "AAAA", "AAAA", "AAAA" };
    String[] words = { "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" };
    assertEquals(2939453125000L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case65() {
    String[] grid = { "EYEY", "EYEY", "EYEY", "EYEY" };
    String[] words = { "EYEY" };
    assertEquals(8704L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case66() {
    String[] grid = { "AAAA", "AAAA", "AAAA", "AAAA" };
    String[] words = { "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" };
    assertEquals(9165039062500L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case67() {
    String[] grid = { "AAAA", "AAAA", "AAAA", "AAAA" };
    String[] words = { "AAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAA" };
    assertEquals(5075546875000L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case68() {
    String[] grid = { "XXXX", "XXXX", "XXXX", "XXXX" };
    String[] words = { "XXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXX" };
    assertEquals(5194950462500L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case69() {
    String[] grid = { "AAAA", "AAAA", "AAAA", "AAAA" };
    String[] words = { "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" };
    assertEquals(415039062500L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case70() {
    String[] grid = { "OSOS", "SOSO", "OSOS", "SOSO" };
    String[] words = { "O", "S", "OS", "SO", "OSO", "SOSO", "OSOS", "OSSO", "SOOS" };
    assertEquals(14972L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case71() {
    String[] grid = { "AAAA", "AAAA", "AAAA", "ABCA" };
    String[] words = {};
    assertEquals(4195514117500L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case72() {
    String[] grid = { "XXXX", "XXXX", "XXXX", "XXXX" };
    String[] words = { "XXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" };
    assertEquals(2006835941928L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case73() {
    String[] grid = { "XXXX", "XXXX", "XXXX", "XXXX" };
    String[] words = { "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXX", "X", "XXXXX", "XXXXXXXX" };
    assertEquals(1705470096216L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case74() {
    String[] grid = { "AAAA", "AAAA", "AAAA", "AAAA" };
    String[] words = { "AA", "A", "AAA", "AAAAA", "AAAA", "AAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAA", "AAAAAAA", "AAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAA" };
    assertEquals(5266325256060L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case75() {
    String[] grid = { "AAAA", "AAAA", "AAAA", "AAAA" };
    String[] words = { "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" };
    assertEquals(9794921875000L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case76() {
    String[] grid = { "AAAA", "AAAA", "AAAA", "AAAA" };
    String[] words = {};
    assertEquals(4488699884260L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case77() {
    String[] grid = { "XXXX", "XXXX", "XXXX", "XXXX" };
    String[] words = { "X", "XX", "XXX", "XXXX", "XXXXX", "XXXXXX", "XXXXXXX", "XXXXXXXX", "XXXXXXXXX", "XXXXXXXXXX", "XXXXXXXXXXX", "XXXXXXXXXXXX", "XXXXXXXXXXXXX", "XXXXXXXXXXXXXX", "XXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" };
    assertEquals(5607808009260L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case78() {
    String[] grid = { "XXXX", "XXXX", "XXXX", "XXXX" };
    String[] words = { "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXX", "X", "XX" };
    assertEquals(5455253195052L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case79() {
    String[] grid = { "AAAA", "AAAA", "AAAA", "AAAB" };
    String[] words = { "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "ADASDASDSAD", "DFG", "GRDFS", "GRHFDB", "SAASEW", "JHFDXC", "SACASF", "A", "XCVXCVSDV", "GREHGF", "DSFSXZC", "DSFWEF", "AAAB", "AAAAAAAAAAAB", "YTUHJGFDFG", "XZASDWD" };
    assertEquals(9095361172335L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case80() {
    String[] grid = { "XXXX", "XXXX", "XXXX", "XXXX" };
    String[] words = { "X", "XX", "XXX", "XXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXX", "XXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXX" };
    assertEquals(5240035232680L, bogglescore.bestScore(grid, words));
  }

  @Test
  public void case81() {
    String[] grid = { "XXXX", "XXXX", "XXXX", "XXXX" };
    String[] words = { "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "X", "XX", "XXXX", "XXXXXXXXXX" };
    assertEquals(1624873296432L, bogglescore.bestScore(grid, words));
  }

}
