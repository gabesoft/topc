package topc.test.search;

import junit.framework.*;
import org.junit.Test;
import static org.junit.Assert.*;
import topc.search.*;

public class ChocolateDividingHardTest {
  ChocolateDividingHard chocolatedividinghard = new ChocolateDividingHard();

  @Test
  public void case1() {
    String[] chocolate = { "95998", "21945", "23451", "99798", "74083" };
    assertEquals(3, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case2() {
    String[] chocolate = { "12942", "23456", "99798", "98998", "67675" };
    assertEquals(5, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case3() {
    String[] chocolate = { "129420", "234560", "997980", "989980", "676760" };
    assertEquals(6, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case4() {
    String[] chocolate = { "75356291270936062", "61879202375922897", "36129319478450361", "06320615547656937", "45254744307868843", "14920689266495048", "71727226106159490", "91771159776736563", "94812939088509638", "56115984810304444", "76317596217857418", "59753883189643338" };
    assertEquals(44, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case5() {
    String[] chocolate = { "540222992905480185398259270574548762061472910140789726663812289275573630033", "268338420186669909856526909112531386339567126236333995706719164213968814746", "362015514104976894438926728102031252715426833634378372945785208344537371984", "247996723920610130286849577687221913505109363306525101270138850062532064293", "525397829156169156474829046765230779652599125262001485500178912909066437340", "186306566226236327538646480226235085854486029854627681432476199819595955557", "743325006441898429520471196663459981493258539373445684705562127018489704589", "638982640142611023035873765325209027283499981003308007594328868760609070960", "263815626495820636625795894000138610194735530593185856457058183146365751504", "576016791458165194400246034386954555334672408027469615519949537912647314577", "379237308971067133834310043791440386028135453286579103127799053284816641386", "606373485728799695135528302441223951429211282163887439271737880397439451771", "018398251180556254285258116485806666683721078895444969790540141729587979298", "370814402301577881185053761990928921574726103082492997384695619621088471081", "311750941971533024906006164264525610837124270774384287893430904665968672201", "490838557258704914391187167617758861638574644047496507543204172170343310776", "370222992868108838257201735712362694805284114118135975248731298459059577908", "640675165619403822689584463374338597124687757232690561129556902963676254129", "954315591805772463879168703427534068517909497755235171943407160686430342293", "189702239546888614894750984335643515058102712894273969959382959420028048531", "712160758644794001974196992046129455622608088700817226146362176132816109909", "999080704410276486311705335427327245417171198868690762215787511265909816956", "954813081414904856292904898583388789209540153638450850259200750740880836071", "336472479696649814899879073680935574931002786680261360368628811381986088276", "136162298244208001452540340298021759991035668788024298235356358623844967623", "412524946979626271236712128992434606312919093642986569992701076637288491691", "177475243145535632518458208689917676392738482177629464406266478137999182022", "439193031504122860895504442864108219823193507806887368002218920961845384837", "819410176978319321310726254968841783710539462325758720378084860150631884743", "085752527674672070215270361035355020204984543961982701757053800303455043407", "895113585670408988911476982224106637187856116924916285073326758542272167870", "482176904401855653607054362269539747339791179854146041590928171065920810229", "137741577727931740156848150394427194441235148243258054969198542571128463970", "914251256965096152320754792001094649786673382999243418087217519983871451981", "200326788788729671561860226326666610408286150237395691734588344025278116943", "076907597882451285808637468253570372143021298537149122860806173302836151580", "335269491699989516079554180430693232371561451622429576017070041587914180437", "519952111934632958026729458693464371584907362759582376511382828477558248994", "470340707351401805842617433253892848048075147427931193158473954161085084618", "553366607912071378006105835217164691481194391650451383866387216777035345794", "059126254552201134924727272943649551498853393426020494231657912069129116465", "807601970396771462870803946782284176363594383630819111427296636053809271819", "274488599852693457072454573884004664413490879116843208858266888244897358336", "469073513401449027071452397142999918479831175078797052381018317428287380597", "296085990220542375237375014185005735424568543972426353156586297962526973857", "366518143759529258146319918415142093839425579414321972075938474874179113860", "712466774983796533042650781088081427396704273839453610681089007171000693310", "615750241301629722559879960491472058074424589761937016122161239656655018798", "686791695309738971036623127196054853032784669456751533946887405082305774360", "227024177783561221922152742378512214652522899033336561836285237450135589798", "814247825121949563420436004185286623525047153101643819419929660522875501236", "769825116259464550505002754898664749572329368713995495960369347041190322478", "462763402910178204920039384553690898130552769791186219340915376575301356742", "613034675721724472149872927502085380767442736203637716918760189629718664857", "479932814425593522616807685091950954357709471845238018799518823830276148395", "491914815806777550143180907756497608001813481466490901203198747409400783051", "199858041183492288148181351686995192107437787227262172220508297927249182882", "725541970114174195908844752962234901298230667288778573940456692304426469445", "163162239755793674825289836972519047560635216796178817820639802917683947480", "159798771655639849032920315273409598377635228122048340393012473522571237959", "863297041290703060312789925620709040754195175793726214307889151275252864393", "182466107550468376493230418840158526156124170109970513554668896670385197724", "767656607184562644401459191865561449031941307883226383494771349685508993055", "033577105544923278338919700227742209119686288827860653743078762294126394934", "919695882256753552073405236940331213901126014391790050686270424877167201003", "652933938218865800487215155385861266579593499181140083609137933251809970210", "350564595055980893418590619731776724393890511512854835096062359123582183344", "618903506236952108212562793257938720093928513943966414604921834909138422275", "789287820300925208611734676025613761545596808520512687264878332908074854436", "409652040767476421611441926581341408634721660234398662976546870122085470738", "971403299688262841063264021227014257776836672077173721145467189826594379959", "278998462796454272355926556541669470238429274891128830695240628588711574623", "002236239308024288357140419871384727341591525244271906957157295667423793865", "381911321146054793261925314811341664719923720309627041592073320686389291783", "725600604765084336516346285354946438499067587942793630458016602465216335013" };
    assertEquals(1492, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case6() {
    String[] chocolate = { "139883", "411049", "157807", "294969" };
    assertEquals(1, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case7() {
    String[] chocolate = { "393956", "445501", "633224", "015097" };
    assertEquals(1, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case8() {
    String[] chocolate = { "88402", "71886", "44319", "32667" };
    assertEquals(1, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case9() {
    String[] chocolate = { "4029118", "3671295", "1339906", "4157636" };
    assertEquals(2, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case10() {
    String[] chocolate = { "9961", "8959", "2165", "6717", "0692", "6588", "2846" };
    assertEquals(2, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case11() {
    String[] chocolate = { "2398690", "1825681", "6106710", "4694190" };
    assertEquals(1, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case12() {
    String[] chocolate = { "9180162", "1006596", "8570162", "4005614", "6098398" };
    assertEquals(2, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case13() {
    String[] chocolate = { "0873642", "2471508", "9609373", "7338377", "4456449" };
    assertEquals(4, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case14() {
    String[] chocolate = { "3532703", "5915154", "4207336", "2729494", "5239761", "4961889", "9333733" };
    assertEquals(7, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case15() {
    String[] chocolate = { "15864", "25809", "11802", "59169", "95141", "63498" };
    assertEquals(1, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case16() {
    String[] chocolate = { "5282541739949313034938424", "5219834249780531683996142", "3719976296242481474127700", "6160593322411827071753149", "2769977159864309820867138", "8131743614603975749368188", "1772080313188792518403444", "7330311016398622700595223", "7383942274817823132854764", "4797046549693967994730962", "9266821528786237940009925", "8557278455288928724971013", "0421670159528105303523267", "3404536950740191621846341", "8842436830668518380672213", "2526956729455497075616196", "9601864502558477052569537", "3456535249223745495193147", "6094567036761900345382708", "0932500596074200073196761", "0669642796296913209431626" };
    assertEquals(122, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case17() {
    String[] chocolate = { "2996162028", "4270489494", "6032361541", "8700516930", "7024094934", "3168316481", "7809852648", "9383982307", "9385446284", "3835732208", "0910408760", "6545109929", "4879372694", "4158100196", "2528250342", "3022189460", "0236066187", "9223078005", "4379897955", "2575302912" };
    assertEquals(38, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case18() {
    String[] chocolate = { "416686803461342239756730779018271031731", "279533779876541538639476781076496359748", "837401654419687475882423050147222972137", "790970648126588015120062269494366553639", "443012045559576892951689237710757078494", "971148727142202328099187896856375489374", "088520752563574473050807357304722774770", "128695032569660507357949239826030810525", "991978130887573616708323414668168575580", "568438719391144405063981758406574517389", "530664025721311408578327898758803889511", "004337700577601300407487898749169595465", "444304457597447226210128298766402862508", "479123867781793815611453769130177389685", "653754238719856244187314142213098583206", "089165701249971605838159207548446354055", "299308669472409421306160918625364414203", "140502445687213234298726168880304374521", "281904447176160806887819466838188298945", "674380560240143081697705554640127776734", "059065684743435192678881658441848976554", "141614125602492579614790899464971232664", "427696163026625906842559674861403184991", "423087877464931811517659199689733251039", "987372573644501622503696913137237166335" };
    assertEquals(248, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case19() {
    String[] chocolate = { "048054402638", "518941215506", "461929143140", "810073854841", "164625281375", "409726809008", "403019326890", "338695438510", "312214174605", "630439464453", "919762905128", "558228903949", "087522033932", "342886734576", "578062992746", "161786911329", "994362131139", "358744351521", "132466385833", "276382427391", "758023136685", "233038555204", "658309694606", "932812565089", "836477034884", "763235041244", "490098102749", "645023610235", "949084535755", "865251327849", "212436922050", "625212790416", "558234375510", "325750014535", "005068613659" };
    assertEquals(96, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case20() {
    String[] chocolate = { "686091449969124494767353702493583182228146258", "790386241612053501831184110845836885719890297", "840943153795791474082555654805681876103792281", "321939306991571159439071443861216301433042300", "735879906140648761511656071211404083183919174", "162224389907250590910548859068475897247460385", "546550524610718676377204140190844512584147340", "229057999305324408079429164090132259158088540", "903920075001602638063990701755877389318818191", "674472982054129828559690593312491138326743177", "352327298440793162275229826333189523262318300", "828045779673219847911230781731713510289476719", "695686712700074475729977814508677256029221328", "965460359362932791536341463515504170327453656" };
    assertEquals(144, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case21() {
    String[] chocolate = { "84112653048756360650979533101369981246772", "64827643164859382308017029619335039795301", "99692738910012328614184593446556627012006", "00725933175110146533199582602865037852189", "89200776009124942182832332856654877864686", "51010634572027348904674343209087218474841", "25308089045991343555627714454187629627843", "54469817473860926677545934322779326529268", "55576953658207762909905180372269938523818", "83171792013064880702311896347437965236737", "05555353578607780454753328885485130797046", "83652776215970159025076503475966443611364", "85317029279054019960546082197938579291320", "22584693511971904894471383298410870250621", "94903162028031885062180893691800212620053", "85613783305215363292496634034564057646178", "81144798613701043611473959331319635125998", "48871537641373078303790271422529418761445", "77308213240342079424710099833281933954391", "53585392751883971413344696469374624475641", "94926630985542708311080246204833325900120", "79416799829844308346671042244443414285289", "37490495163073505162698950724710471641159", "45690854492571090247642378780476066243612", "88991895491017814639401283812932044125674", "09577934240452212354874215773633512306922", "19851177815550927865310445424945840178859", "63784954507922388727107801501127695082464", "15750549930910226259635507653496182138051", "24438813409975163617878611293735370281723", "63234863931937041278754658495841195673999" };
    assertEquals(306, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case22() {
    String[] chocolate = { "2927366131709548054263943", "2543746965231583382852908", "1822376810678753906499793", "8477660502870802670345252", "9418376045625149130034625", "2704425864332598223565907", "9517089796331397640248663", "3402671211290108440737589", "9497231653557768150489821" };
    assertEquals(49, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case23() {
    String[] chocolate = { "047041933442287756337051841250064", "780994268686353988804918236234714", "923369439264684465088101735328710", "278411330098466164977362894887034", "877021222298827526273474055978657", "379494913725679316655270767525462", "424817319076207084611880662308563", "164915823765664345435413946912239", "922404992569193858529933525978062", "324924292323800752645210717713965", "569980312612780156798781654961619", "839862133522539208296573969252135", "234447821074917958506824949384108", "554456556969857727329736966576343", "088655473658322074259066615470070", "056623980013430977875657224423420", "082500623169176186641583127490510", "972054561498326993241866525796895", "012768810862753090378950620521252", "528521707294596753540635807924396", "170543262944519075150650565094821", "178424810282381918993051772174584", "546159277615729718235304742192749", "354293956748610633486850299565622", "042369054037091651249268336818215", "473498093724080224142198999011760", "021022314924946572883692794062086", "380631033747506806186655064282823", "886101576438138766321149568962260" };
    assertEquals(246, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case24() {
    String[] chocolate = { "22328776806682136275", "96592711929254453344", "50235361868726663873", "08774338692196661399", "10736399374651324802", "74390053573670935029", "77750075197853955780", "43833761902999401372", "46399464166704053863", "90289803377762677440", "00007080165077087330", "21983762123223415228", "17887186429838786519", "76311836275365358224", "41391277709662970465", "13080439875488502291", "58713915370523527037", "81181604005705954217", "13436175232045853996", "17332498625752223275", "52797843969232557635", "80544988155675573202", "81435104850857426208", "87472265689695977917", "41718235455431473051", "14720699716343557002", "67618004355423641831", "91436184208096387322", "19832696447553935979", "27114413955253791656", "04178215406687923354", "82737438306358152426", "48447662936753120633", "69819182500005491310", "88943083636537828764", "97622215737636069007", "48295134000976118566", "85431490698200173533", "53549650338382618646" };
    assertEquals(185, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case25() {
    String[] chocolate = { "9740705032486571", "5065469089626465", "3250231657622350", "6470072069445090", "3737065532957573", "1551282096569664", "3113771210087748", "2926769826432378", "4114048178148550", "5994503767382067", "1031614326001528", "4331388971004897", "8495530990937413", "7641632462421501", "9186496697171209", "1527043899304333", "4220386477192405", "1443883776941397", "7180164968004057", "4104954943358235", "6377948728780454", "6715456809694162", "4415803280295751", "6880559667728362", "9879803835904510", "5131849716999811", "6004362614681906", "2371968049167273", "5998546982793955", "3564365866451318", "4060441480319184", "8791361127752837", "0177501507698566", "2597139508358828", "2157193161268022" };
    assertEquals(132, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case26() {
    String[] chocolate = { "15877175471358661558303562613166654461920265043318359707168597164522934", "15275820014723714629791358777031560262563937439813084349116141297246692", "00894304634697081464888972338280282812398757768026604494859677905108337", "33312112370544684172971124310703036247695649239646853288621611017851613", "19921219777431538946076145883114006337226181334320948852550861484217951", "79914577988466101739345407778506409076766702425518764405284035897714602", "27571929026660914985433323489401170562464253446934679121481544971928486", "00137706262183310337776788182052088760586906558511200170999194512310569", "46103880912015924817975310426230040349360884378089798429561114110355283", "56112892801886271112255388853980793992382582321432850518315803002313553", "92135651999714819960290434571203446101293384966182122165734965429049488", "72713594527961738189933146730637020300054752025955040664237213115375573", "96037498060476210814147591278120923864681938771872496248387399303799150", "26324244268350755749652889793595140594912849036600585965945416121100513", "01992288485464015689753264282332523961702448069638725043783926198684876", "21003619119661298147500609469321641932144002332466319479538460527830044", "66792236019125040326141519812380159394996920624976581732814262389410139", "94390549207036564629564358671160510884906620296950026473460678659657249", "93197078778252989585363050524115644463452377775643199596768301967525971", "30019986429336505309348035296120121341983839501243177173722536578802012", "59846879212006935170736444686712898576629829415952026882440131312360944", "83609951493871697208513767368027589496745223512332196562410232982051627", "25272315867924568980222144671055774025501405071081133567947262741143915", "08768799712069868231950384913283081153026452338161478726119450968195617", "25248851488375556872371154000194849826084013761548795012734955459543161", "56413028607877916476120745178715356880860749650307912186813686134034012", "30727450441862820088861401762195169806071177552750568709095204942125754", "88184601429208218193454807255715625205569482425364802202029720404024793", "94118483031256298685081221481610053011416753372152862086355418635156519", "19472316144964938404703264849143000561177766459421811169866772082238667", "33397901312455063623445498974577009019341798314889145784574141041963907", "27802061052431278919520969810802794213310753191904159167248528929442993", "98059161122613587982474680219368175381426607158056595974917843872423765", "34537318893952613781311245575348813744524011492780013247916442544828593", "10624664464898498574929660865798962648086667528376790956954644442606424", "08393588566467146682228664820092941419365123037616048827419638042196342", "07547013475085251567957390455806770493933651188254161003168670447499002", "37848843584205438036761237327570276370821443186911687723457416455382567", "61192274312109655159416079014983024442095225381908069668570288580946375", "09863694874581378272077009764425323884291961098047347277343887539840289", "57767670045737403061038338950867535512749212973279574529324522275847211", "13445199805740944301534584976308864375375049265896059409017649636085715", "23946794776282482579267540507950266067535373613880929775755442661277242", "77923262281590457924372287179518420068287556801516173411120071835031979", "85563700062796827229959509810628195685691882494318435387580542474152621", "90237172277722597613239070528959072909158020301262787607889674594784829", "62487412039038106913870818888095535497612825657268746849639659104974635", "81967432049727115632245484142723819884088970994457691241878140433533934", "84105040838762101984380835174614347851037903143453803817526219843540955", "64817274922963050512821458887535919958340766281334536874782635259144999", "16581314961242289025389892433325293334942287407520160269532887306851565", "79663641162986571012985156781560429005111509388589970497285331603524255", "52845640431236100184492459811366542126371597329337999164045183730162709", "95068451953944705158188509139348856813210524994621742592625562567158791", "74345284521948064440067951638557101652204310136890008713877824656931363", "91695983983192421119577047350992171899180619853985134858586807034313543", "50668310161639117297469732087424482444470745979698357420620662023379736", "91050068143737955461284539426797014210237500416052182738692483295836161", "83108568001859335270114264545385716564375652515334365983348976447216743", "23048111756337261842528221388032538371748571318694079811141964319376660", "51886184134843974586441735601208607425950356643313179253915367120064859", "01479022185978629772356776416109248260678288240140497274035767613659616", "75779171577569409978546672161558025254314280143232387976485532564281834", "45278802345417103170597351369816353345579333243762731486712615441797266", "21073420249555332671735363437191218860086261716084379815350381433531731", "47775947900610964787593028338952641155847018126794476978034821087123927", "85096353429180180448858852083551062818352270400545342427655103421722757", "99613818262816184667891208447916807381237618249825506646780493395236371", "33437925192450819936899041307030583276907143356360969065398011089408219", "14548213832544197398610726710102576509884258690641422697398500777639730", "26524640066503478575795571060364149603631504841821390849168406030993588", "63823463678897490176337668613692994450749529468797320298179630841587771", "72369166131354447153684291268997423361974022478105793113241231095521710", "32358252219142596918448494631056484229650787936749613475030155096448305" };
    assertEquals(1378, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case27() {
    String[] chocolate = { "43199969574141291559565905531157468554601127467814772485138443101067627", "05170760127853804401052164933133962161173870350912027536941456763279388", "68573293425610192516276928811719568110454117247698437040033305573384549", "96270646742313735079224079025514363349143377840479593911823596022579583", "03274808593754864090972127014065484066848313999300319751554160628325121", "97226139355554061513331524996107820655891546964137671745446276980165746", "09281844440177721383365186755427565650014021015355783411206860527304535", "95925299948772004384992385440791205024920919141799488628382373693118722", "91504914808914397122858911190539789300700513143075252273304357448388550", "83214647419164097063659253050668100764428464865791279294700788898866411", "27967526651345314531319419274506293177032199622075328589608081700249943", "35243665530915722934743065466092736215768772544939335732498399584305873", "96013472978427763846751797765694317675194138815191099160867628250247976", "38038301421533233001296018607372395146280443986489620421281910341875604", "86035029817031565396709310176137730432535558806446036069278081776831294", "04002278639911823513623313927877498817700813195656911462776553414426198", "39960126807932771548293649821904013027829513910386326882886978579094776", "75026341315593631492470380340239953607730209862133490621875820915275070", "01329143487505813792991176046778100217567419911392503810425212144375023", "99598821948099105578911354007546417419815615747326117442874720481323306", "09976369722898537284400424879931021677850259105025685949536421743803600", "65776848296355740036444804132150820424474101877100745355060297381344711", "34342023223998468281156179838962398710145636493511649468561359708879003", "56843778806312197722412410110448232521513165596289522784917953988351412", "84030912709158117289018804518658353365735962775713817819272157984330035", "72301258318787899712302147769036266304435205114185317753629524262012455", "10861924798965692809241862108960966251720737416899833932352240456091366", "45110398486048361005419192115799322552322026854185726845058849792049481", "60338171948309789487107029713731784794808941831989919613505070148810220", "21439840869975232302206904006238574670778688431883303993326169128508877", "86662190925974939390902309409388966378660170883714836266309547355194970", "28926876116478153348913587626340344041852409217761665113898722958472558", "89093361909552883782911715641441362991281366546025238409995231587076197", "42300780133519730685100072763957189378493967850840350650858443373330391", "88958578184600420906550485790628444491321782944157802051542716570921353", "64485858448668395832908629844593131828784561602188690652568238571855925", "38264297273199817601208938417763709320069698780662984777640317607832858", "03081009649786684080378356897497997098282153911429479214995854556275293", "72002238642334695845310875849786206441206669249025566865340440160905147", "70584074250018773399790390563942190610245468457796967927175499621702938", "47522021180862253920026555576080035257577875092505539486135863068504453", "45215363310824688238898676632186700436799871461406205165720959841817606", "50565399372355104323133553829906954493641006518170684051543755340811176", "49826907633695421058503121265149024616509180642949911334452176198789331", "34053482192215771595256335148563189429950101870129666401936804122284370", "40050982490267296856890234188002329337777005744522213457867899223276176", "07654221765099560250343775468129806420696196354590544014550694574348428", "05960615713173231057992837421622238201094334677973682078832906149281381", "83422111148990898218471063809917471602039058059970939037647530479562965", "88288879570181469854360375994775593571550561807712340370089758428785052", "30841130274809802691405684655180284597534144326508848336793413452003777", "49102579557230519666900421650646577946823548711877497751829085753647229", "79558866651538068470437185579996041839715080008876039859526545142555628", "12812802782192688045426143610011295677855286544560012846229420749429106", "82449004614933327511720315506767203104695288720492794827300176899431890", "33111547465325810013704918246379682736594258950153445858673220390685454", "99178891356024513547761867711472412493658251804378154252143492933195470", "51580723526280701258197650706503671845419039119436266121193843112518250", "26317433996577709939580805090592345210602269152065924204925986311962124", "34255078649083353522596927548704331030014223570822103915861852285500513", "03558459992931089809342399515645120267358563662744698029080766208447372", "32970799257350842669423639002925132313250285261447310895705919655186633", "75347261836154121372490941828177603549835442055102553547749778639905188", "62504257302030417126814425476384755272122426499301104748298146733452775", "93959062285342734817295629346218515632062596961452391853010831814478884", "05385101824865517615034170058010668188261867320082805434442443620430378", "66551952972046312938664088483399946352541948509912790101169590614341716", "80287478815728951766975210637917136083887551376642539053038749654274852", "50085742169789219818206069719536734500946816757850800407590645229871867", "74033833331367553559124514453222857130486744599866988552007321716441710", "38473383245040760755092377794899958206822346325692311841740341238088861", "09784152186414121744158530348170048666994757160436072847891808825883494" };
    assertEquals(1330, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case28() {
    String[] chocolate = { "987803363081481519529778822763471351997218688939911880882160628773064998", "756541752863141579633621127646613290587885392659835197202286049680848547", "398555450179912330947025101157086954609738822077363295705133843759131204", "319536485804306919215582616768299163901482044655896567838404243451774014", "428803502261964904441988175707141053506024130732378489316886703028698293", "626891230079922811401715774694178970193392415798858151828209816713744274", "627318195220305245339022516035699530361883145660393217698293872727076156", "560246288721610431730232131747415662302386647911006341564751614380531781", "647330661395463159412870125423788433709830597902066273587041411475745940", "109812310937407111374614100817839010461456217130587948580862575498635792", "534459407313393472629180145634900355417178607246428558572035646693336063", "154070713768635831697487712529954551524022985668949789651815920577840272", "462148163333219312036285091238606811839362785846269890399412372976259117", "585261988087218179608025862703453289399317040878950782461961208646787931", "845944962950406712835619519203309095701927989750035797868890340272944136", "844919934406392193348487871286980571787139768209533591299529130307776411", "309429505956206350595545215078318373223938688416667131863380123250595898", "876930598202580848172697969440237120191131381395225686673537562496625730", "079128942630290543511772454128247359366529758904557854119743567412441293", "198181738445856921209961307649078008374238913627969076318393292003850274", "097552568486249178698810115445864741919859683512371354596332010604727823", "783336583920399922125288870652150685253747987979314934732999126186822116", "914804955540033425357288862084795397782449444887534453249569130699368714", "670158023471797963897956804887265272275642913620919807609197836363683367", "570833036218108019013671959488335439944587397390592871996034079634748318", "267099248648737360969044538569495117253128993859048272626792833676392824", "635210147964228097403860691874469083217913357359119495686783331551873796", "241988899751431009662739917208822110121296549662620003016956758961293315", "271337710722223830605613832393812968949931185688650114417878359678484579", "907486543774138115942121989348450218064361976789486798009255090131930468", "765656506195217132861875180347125900552193835568744023552698522012268799", "092748832446813292047368517588608882866202083423859586659337399107603236", "634999284234091144886718778013679378416852473588088889659470060917750458", "815164184162127297293406171438219957366882217238979429058312335230989789", "010935744886784735961786996875998903697177965538156446035644335157616345", "043799726360985771307142805762288867752310521098258162565031489267253404", "658778595601879383643671396858413310382844132082556833164959713046374579", "184312769472981488579884633101011472841888208346194304967497790957344444", "264128950502190840711027961307853287395355765771962165863195890320170807", "395062181497175487166210427629368967385446473133041982937999057166014760", "329852168457662573788496018686818795121086945322690751362340933924568686", "573005486551819346369953329417066388049894207134780877432573571331255147", "767792190390233412761094132966664535764914939482678800435822600055641244", "857007285387330033403401185431819619349078723826398639959592806767813022", "894399120013100072562158861463645394209200712040218625621767133862403345", "539853074058510799424822264500353259558154917108262664091463490016181119", "722562380877276524886907718031904370730817557311919522593308611058223526", "472125226471620172244369313786325748262121284403729178221599351945974106", "247889473300322404331747436046792671510871005475001195949745436694967046", "349816418758264330994565172196943836497562300744753321961390185490239087", "437523120473861910130899825945889853365433911023258247249763244329768421", "914338853679316582036481679443734367144601663213418287544608974500437899", "055598852900676246355717950849867518614804081817663134041055151004986368", "987268024359975090815138628477285914938586473293496219274033752375988746", "305924274097916539916165654648208913530951844407510228705160102093548563", "869411362606406014256477924792298139588748698292919776568939178981151156", "115256649526192187014024150485008723300252083413114718446484114988428463", "893134457040186745178886630779268691268065093968605406089356204084300228", "750248208040649596316834477619684628558552619588312015652313503966833898", "351429452674249693043561365644691935882140586657172428864340910003713948", "918793510975951587778791364660671570023131646995864764090678646713917542", "626237925611012272356949450307769513225986109558783599434785473324847337", "168243011570435105662904680345274008321608864574051453813069887219261333", "430899415762065671571214131566809000052528754233582833366415227128225499", "484007478861217871595327362821760472332118431448599041978150539798921164", "100246217132539365510681403739472418240973128175858019189454611073899896", "421250937851769836218415915826660906001907075958679632124826614724346646", "543140928983398702363736480076921437539549870870107602261580172446191265", "144251264126672940950124733869595010368791358744839853247755804528866855", "911987361568802799490174152738251569328676477878838065472747772841773732", "491380184980648814681086185451690040068478743726107515123891972277283340", "116681321274709388405625563099113993045262862793553335893393226725140688", "974143600954655084329103617896785129781706363883316428711612281925995085", "922202854618481753993295706527019461749320361556067318108951664702978020" };
    assertEquals(1424, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case29() {
    String[] chocolate = { "833313298379389995733784766978772033354204332243018516183792579972319959", "383739031902512081250458801818756229234324797907045180172475240875090644", "313005020550769106643930451637068590394560538741305690857111837818047595", "768534895676684697703484590461039883394051839291061331982128441332881288", "661713839164374509643778986226085286789807354926880469277900700248837729", "474068877815852744947063057949818414303004700106690517824718829663395615", "388308189431333736718705036718448290218273309892665535250842896918969088", "538439895661308413892685401501354329229087128189480641411563728352307405", "139949817992033319603639181823348554465275490921083467577850116963529146", "805019429766635411644452704731511343287255028581845402672166229553091739", "233211317067226753395252871955090343695523445111662319597804513869139881", "157961227450421102585063096987214900024071013245695311633523464867089488", "791235796540803178414112811979040163964518791138990301805922829937245908", "790003992155437929423319263875645675167474119833075329445844338815633390", "924829126680726401866967642093285868792360335087383972846146464053042280", "536056784392586110778475790920095691281613861604871731400604623404523804", "113473862056316588062502076367990247545062694454572725242870570516590297", "776113780963487967946119788019786510908914464473389902891914882545555346", "014673102014315407095461916663484151483694045606507043256014375982250519", "145725575499934747175895010194208872549180274948687366990109541549705834", "953548338066975117062148230043431987930759468979778112155259714814609805", "741659548351797514606319799979455731805963032905477008197087244947247033", "349759498110220150897281915911467532792523648863042792003896962817086269", "845823148549749149755238947683789461897841748672760483389260750699978655", "841818004255685723990059149926621704734459939611922927053956838939522967", "171034426631646933539644596993600924588472736341925089459040322646097034", "209865277977812916179533254950580688125112825117756809344831009060102616", "198829526107261867069188198681292075157089735013719738569527668088525425", "498110593688655609586486268900461383554014989461519359095086154402957571", "961827980018039740575015432281588682580704527701770494947387435414784956", "339301690730344092757508196783548498779064090699095767776366812783771777", "397478379065734562474844211301242980819946539918255859272523859167360264", "818821866361481665140057983039612615793340700076501838529022215477158505", "795794677950722827048615522593262864423118100694311392066328844242694127", "940121852902300152939665846589295217314824276284787845522270129662323927", "344183573557211451665841095687333042329677590665923409638318161467811098", "740938420993878809617984687887873066821132619499553243831632539848720034", "297159206553836211464378163466008915836513818630798355283549349362948719", "012878067902643097144180596388481781597209783084929359500248288356427459", "348968350415568704544302244109165151907270948721175635872282490125328247", "231233343128625073535547371317051186732045837336809384313445242570346540", "043099681839282756472742976523859379239434573858417983302974451498534497", "055332393204534733499530683045950403842265848411751836897411906157453899", "375217514899700441552489324624783325298807877813280448372757335789428208", "105118639975723210955643585528430161234323815359464920598252017144489111", "424250116731782709930847285199461908130903093563478752403934882192027019", "548896355223663186886007509423499470125868136666547177149083522471403282", "227883730477381201564923093511935634209266196417585199418779162658278295", "824768438158091998007582311332034702765572504713735683036171395967134913", "165558052510126953192881524115744421326700932527058539611244830482737409", "492856752827788013418676141001963360147320110111674531368568855101327171", "304345504150396343140883217926377711381999940876310598810714462335483784", "899878429589382585021455913483873972027975025383007262973414813312714423", "156706206044231882483916109852167759389104547627085498239216424300250370", "944919639279202125787237475604628211375314446870378293250713195936375827", "283960917038353626955479208780628916237152280744450117037037099013638563", "083068405617540245175396661637956252224807763900527076834990605423677277", "045336380207182773763507876713417071801052760130436986685357618635738035", "203538571161751388060025819822365618468874159309106320102006432114260060", "475607549191404824478689227325373055709641981364823883936988417732323409", "599935539819122910863758000570442537202185027319317992795062226472392501", "005856918609098596728487826078380886779751650610284242924534584572341216", "371652873297482157725172538671430595072313273488352982335212355616115666", "904354382890036577903784307965775322883262267834827195755663133895175693", "039844227158723481817396825604919115537454346886067999503084675706361208", "752341069951823243600373101451529953271278570094376525858903375262790039", "886008637402997709258975264469567169144184385276423213939598444183217626", "174623485827122274028758080744374966506008910440862637737714363789530150", "254498494678643536973563448473790141180778732106725273517385974900111308", "183613405932206264751341674716546807340133585101796843100773648248285290", "740260451248578878332177297936902050216432211290023563402398988385436270", "413754866134694923734764327146107683061996365079362950483109832720228517", "155854700926066598494676818672687374866868686536397966568655835762341957" };
    assertEquals(1414, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case30() {
    String[] chocolate = { "56804494370948795521405776843870780322779863854428569258942441739973161149", "65531718620109526243552496127715268360122435517133601150782655184030272617", "16810346657374110672614016952244837881769498100179530153760284899570646716", "62685571192642544382207205865943331980299483837287619359138652185296415363", "84879745861354852583457311594322911087683939334594052785854407800900680093", "14879721268316862950159378470321808982128152068273300437494456556646871996", "11413148345719854331817588499570621257091584761124425495266314508823524802", "47150514788942507862840285725779684637226312784571775805590367247902624478", "65610347397575478262631870214093564518449498137173338515549168416888844084", "81962716223678061676936737187247335829451738737814609393021947802685542815", "80050317510462693363389356794063080012765921392848298324295692110414810325", "66684086962324202346660708033381941569477602042498054025030388674740889649", "06341221964134630616376894882372126260657290674847795396785234449397375094", "37396965930009871336029904657510441249753755764897692702289952106222129697", "38379475695817728249221774963056906053732215987713855124633948759356629852", "56324672134692923310024580891516161728043623015378370958059303919092118490", "99354239249749444473766607983803948583509494530977475036754335651609972111", "58757642394954427975481792413830627683023410072761211501862347631390714257", "46475000325553299895100029361958717427471036578457977290138546337079729124", "97174663547569064427707616829269278665111969885240132003808834952930441730", "63847368680839919260909206615234528374354447539677667709562306780517164528", "27333221091008931918715006943158901434835168951164165767573998701066641457", "27450191768534365472484061775479116145333316964401861367437104217852587838", "65409648253159622684854391379857329583331846700978573923072157091140593899", "66967844595747660260371978828934530436096582459495622912016800375338039800", "04710686035355436439302614104127598577390027862428378739442874546615547759", "45869244051545286953639784451177654590117274012809182163700937694264577214", "63511803636463662961025680565701084485760516894312415903251744072510008059", "83146292364316133573290510512012649468794355960437988031293516970846837464", "27021602482925052213114592869611335615976178875096639088296359415278766503", "58001287597591687271543233990146948289158018476115262815306330146275180113", "15376458378443609900364237349490920597544488968870906552388427612683337995", "99377098284709783979298023613582412211261631511029070895156615178312648021", "18458960660534300671376795175318373461628701133192540319049700857396560350", "66529666160282970990483648453952534490309359766955913370315722975547779824", "79231700165869216457432009798167281383499997010686329721910928647905366455", "26744720937346675054623696251015889474487212099894279548484785485332970713", "94402546233849786750826165082433873220065559549114498024754097594938155602", "65679923923390832918879360838954634526830379473874871739914829494847630769", "62711659599808058263311800307105497754805996813851194594525457916801513002", "80539150297142516288448473504654828733074788051889845784067642326100609298", "39540548917060636071432650853856900986078776759676741207492779581689489478", "07495374796863900898604420415495157694083981273452225889950691307088786295", "43478022491282788693886683775621089083242370760751132720097751970070305754", "93092503122354222963763668637476985157782117651057543002895535345852541964", "64086751111351228771129776386124544112445580602602716603541356930464618188", "37173191269314959619935871964767476886114045752613717296504991868567378974", "44993222515680642652449012711678389601065525819295431632825282212192400973", "65467334840180354376599636847694352185581799744293064237833592937367835906", "09241494036534981833106905276267203543958703192505837439157805745292717889", "12137107481773563710194212300411827739407597045319528071421462767630690570", "27603098470104430278946472678392282581620860503541557204664415733113398574", "82630047641888622781215570455213697893677778530028372021076619198089669536", "31263648589899777061963761377932278745595695864763089477734428967931403072", "75112943769736003284073310342089712219705670470710318769925143225468338018", "15715948227136387719186761072173946450484217845839957526753982476212562103", "90768258735214763589544689402651728573548161557135282860933298363320994923", "10083345184885317221956355215546556802540141774496781416148814481362536850", "94738808714805404740583321789408891873867277039415663025315257058358944681", "58564811653826908670385966504549417819176488278268498004856312473274194752", "78180787967907580815769430579116126304090902753754420373322453166908429629", "19746401704660084827407603991102278848111897017691441321832945484278301480", "30207121756296515281036919035058178812108927500029424045140646675656969953", "82303519059432030696454133044782015596414577790952599932539107400151994343", "23252879961206597683616426399024359856764816666446937672421525982867636227", "98374036534258483933763350814083140766319756714109697925116637963269810995", "58819905807358636908832420549616507697499124188008804048213306956637379383", "92272482442024377346024427312444681041205420067913728180013579930236457119", "13712961342365610431953519083406797204530089552795000554584026616456012230", "30767839964401441618074756098324390203111671926109108585185149570700331411", "81362353430403456842871074319529855000565705073679056256819981868388337029" };
    assertEquals(1416, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case31() {
    String[] chocolate = { "610623115973263091677470963161524786027736354853132872188414589979781776521", "006529828038079547657535924577779533736751659725781446138705495670165730917", "090588622257220099756964468671372340234679602801798684042009238493736193173", "355656434058360404363836457967514079934330488438084560325313066493686031070", "045865523575206723392652475703909695169437179844373750917487980849687740667", "643090365556214214211379273239195416662319961582225353272715945608385518524", "894016543082285879531561042914394817684092230839905363467970339932991312565", "861971407876765818933223556722228346788685283887892234781355800654224395833", "431340564154200980957590021536090124372987429438655504729894593705164354298", "151138619383293642135841498830845161042170499775008584825628605441747955196", "396016187561346118672946733263894425333209333956833037902249740114847160215", "812416031923277343584060988920703974577662909835213610920742713000689667880", "965406899082058259751949806806892333234132537384250656756538137492918341707", "635180347933798504443856600070766476422415904755311817489709975514176339129", "526059240108270399842480235148220827763894843972889129374081813017896195799", "309797621778299582803704345115265146800209249199599962526137854578270492426", "555416525777300305962982121485033894658147888030626036241689115694071096894", "809861584110279400991518729309981867117758797630841122294344252559462239229", "214411553772228673128076491413534996041320742529032059600763317728553805881", "355469666756924357252027317017343991879674369916731144897508533824121090547", "450044458037719563067472691847702839274290161139647386765852722207146565583", "817971621208005207620454203883184883145397390830714979601989210608934685616", "619611008160278490472487076639291474794703840680829288095658599838227909203", "464678697616173152238082972012551920801563392607023041338739286580580658187", "467181415548533654304572647677415333594270324619062419895763404959521158282", "663799151142818380896968085003380879894120304444443252380882230427508132283", "629095532760759192136106111450914035519985082111536268070215409804675576296", "507872790528541302484864613442214191663625491641081498079315556166524896558", "612931002009240717633408807752536929241452378561226866656341796500737872211", "087212818775309790351624321554855798909076708797734098441816493183905802694", "464469860934035874194604116576044480387372795474815276917566380848879726116", "653154604417185024008108002616403019691042970574904717717090640943003339528", "878288989850751735851352817761861699607783950046641788169068264345405275762", "967543641550668404958490237925423398662039297047454416451154818147105528740", "446481842680897498232144727791756596601169141082825042434305500350942278405", "705980506769309851887091248388058748718304234411521221555505500576350300834", "497641794041723273230187128103762728027622904243596805737769265630552226618", "243612214997883719574540772533469741182583264565714169358503161235544894332", "718481119056029355501255657292583533945862566614184219095926194569855563911", "673001634554248857525631207500989209564031665463337000143013001141329922108", "867192194338632964279523425757733672983318482890249312666351046333721375113", "594740772168995021854258586019591265254460452174361906876480559875521089237", "644092294072932907897541869014771380821240635846847701800901478518512939924", "509103875178378618781752045149590622022759598671449525749453404678890088249", "006261115809844306065876197111023861192682788311237926656367681189209689067", "890914918793341321659691750658557571984955211543828809174151908985275893534", "690192173012428740558398877340701911240741106972247076885719811104248334654", "263487397197690791804230284649277536577488377346757392320706835609278916963", "700595424658839712292110123820312561013798583457696130342846887236367836706", "251931866810205985818466151042669084363944964475968004841265622540176462188", "548264086562688443617855613823808626234902181247501208769364674638263675906", "220173223012248637291029606198731850174606822905627941801643716013043713397", "707391285398672945849173444996666517636487454861365284648269826787463201148", "625981621108134118908855197514396086249579312926836613355126577385021171032", "526329192549251829567281518833088630751226143326494334405498019802877091835", "369120753116855956856246267360998810985428006791699223061897888799900762574", "166527479775077767556748915174702555392281089977652528532041631997626867185", "073760134087213376487349228948668144177575216566414169383379166972399249092", "669202948899328334152301437536815765151950884718123373648493295781596693991", "363307655229280600108458239528667199986628768721951096031984972883991655624", "526614935739849266447866124906350134547311405343210916720130886001476207549", "204625636200224222024472014961981545008840882436951390711217527672194171179", "644430589581824776553982591628882257408686788167932440899983984429171939720", "558241487468576966329248351535500354694362339247870716571846317342923371707", "621631602481585426172596045428100265548086166900730209803667478626271079817", "407590512625981921783522622803575524796058568650740205567760227791360967913", "909973225774660604573600828530130249783352748920487960174047252277355783977", "069029026255659575814571249558275489301127604852333900136284131891741165045", "421674275408328731832217343949482771218950903978382505259743713180421539541", "849799141696563056384439782839025114228307156451080745643026140653075105042", "689010286760283007385692425149419530570468487989917408840557610873040188936", "846730590504859543522826057852656232201471859003357559375072237182324472877", "770225993030550985993328085262152174984499464664273507528244782999508949015", "573990573425252920131282206107955276543088533947970198548179166815469860835" };
    assertEquals(1503, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case32() {
    String[] chocolate = { "90460770239610798504185167902053299279312475647419038844566861113332483643", "40715107605071631574609143292626707439190717002379951985405677249184113387", "00725445154938087779393134277369533197603218216905134448097923878307169600", "43424475841221110560546737425641983632116550693949115798652317437990421077", "34865268636524248332814718050743322060923795132995478852877863427623838109", "92331207995613304230426876259278623064773346896411473260888827899295862318", "92878183935556556724638786439710117037342098645230903974637738842765591722", "78633154183121619929648213423640625132571905269181247360622108472107466776", "29333167730539870854796870439321457983757902800197769346501455820710087900", "28041139024600926476603826825829943267189640834603365860472276160598426581", "76615678348145867620457551027854738207251066774459514279693570164904829057", "84629116370296141055714973485953525459286307132547030627185692154910840693", "42687279776247016037588606205151449366365981802605675465388825189218064574", "66484750417280180543335615370018868353514245473429955418946159155982344988", "43509719465757438122601526166962414406564061704837099161870696030592341757", "92950242134874770850277320830521716051266863262440589421726770063888135813", "16960665672099278988818600978321949905785994813833615697616448832744513022", "60598836103391458036383920150398658653575024161966714309334696451436985407", "02513381424739205162878458414505986216581154194810019155908370068700568675", "10471581992643849559336434230183231301690185669546570315751879114465526654", "32329714430807317211355921499952386377920921954687733337678586924572386508", "89535503958256133992367002188168031594009844650941187107317343449720120334", "99991514505601976410020221744284395466927689996859061003299817458097809799", "60838429261413414508010289478567660624762914455827958976035111870054631944", "38909378869742303433333809310753865793701877007543878168399396972444934211", "02477808891494590671305967209439879781562722391568690216138092071959205597", "73780587411792102044055558723720210260123203613137534301184676617853077417", "78029416979090036714804555229408402365982981186079679126679711573700418628", "06866782495861550885514718115317995783223739186194965369472124845314758233", "16497338102798449707352419021554193048969330104274902365389655366891707632", "86238999132017004679447354342861496205341642344922876603067543614235979055", "48198418194327192848992461354820939772701265194371382538885477580670142460", "07262975092393349036063786200830857066868217554779385853476789984882589510", "48787501559096055064823840735069030800955086883389061346331037941923139757", "56799509324709319611240674183758329490624026259130264544962238282222286810", "43536149706345979271295539527823107813905530239376605271123937247148650224", "44937696868579020505978685107643056045621601525875385165805762067681366528", "80058933704655622243049153730230455240540105668902408316819053098815889911", "60761915990359651104002152163272268379079124281393794121630179328275384216", "93428568629857359354758402456735008156928023869996363223690264094801613418", "71480566390756650510470696740020280257888065641794752031607712930976886984", "45974023863190469588019770739605393917293832870941942031016996547039750053", "45044455096606978835215502224860386054573134021826547019462060010617095628", "02332597299583323945174446392804057509440408733359866423162344069932086026", "11244755529772598968857198168349585153607804055871859888606651829547829529", "13573284992980968776994364872073520169550740967736627285683880244450327613", "60939425999956786588143848036163388320012027895455589075878516044897100323", "00276941851702609769419300505937184870975347519406549409759275283862982416", "48932019603612437189937876893989772176048520863773698595477985872282808750", "95944870778842513361215056255054768257444238602960281898633131717534479024", "08420032962058309916093339249680534557966263023215036481506576749117103940", "25457729085801888745168439568982628590511093301177813758627745920901253372", "63294283520228797379578500255283522161615669739666535417653271545084347033", "90888464830116640678040883363812803869263276140307121332660161663940076516", "12016209423741563171730232118279593313287773939469742787198938187631189956", "46142859478440541824920232043827643148205141396470982115539832828132052788", "11778679500876176714998230957830127907859156975548239072069944068979886792", "60137549031983573245024713582620636480503791061585007581051443506166326897", "21337407494404031466629304762854917657699069763021604736105380801786748674", "76226644603064219329359346044901524388968284818962917841667057109759546584", "26706527617355925508716513199053853607598245738408501352663761076538497531", "01787982905444303116893278173605796796188955385898487826853316815684395100", "65834918708176621800966921073191695098181100064165353245575884264993921033", "05059822456002772726465515747280807789144076464668306077743763765454590199", "73631236497166523350216771694794057491030969833168489288648027444403518724", "80714328432228829093757784064504776120183425219138705603121571970785725368", "00904201567790117947676646899699781132208199202919896762563633703938170189", "02034144321148794022281764475567782326858162054466804983520298077201906944", "44980761012068460462155366647001609696999215063201537083840560722812603525", "22377392664412119728067183341615043774950311725729525454080361877364781732", "11760955302862865593467224034485753760492699877549107050655015702278229508", "69856447529246998176198103390386461328270296817624454586815075633986713935" };
    assertEquals(1433, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case33() {
    String[] chocolate = { "65909475161997182726822837764592014174780091900494276650358020441978348577", "66960802798594076490801506283170788061460511110770950323163573771590836887", "11028720443876531468176074635626828892857346099155275892278740625604990846", "44568010988112812218664735853218986709728739930383342037514967955527419284", "39055818438824163754429895118953159650405509917412854963476292609787747497", "38004142981538200348355324818703835249739003855189146771372475958594460490", "97740852231144990660345201127238124209443769178454400141273298013533698966", "99593049040473237337462929820681631157153111656399358550652742025330067680", "96650763460187906348592014700719396585021160052887658072742713954702215443", "44884850363080709860508830906532131518764284257463415498700575888159957676", "02376922389486513461372084562322572376726667438886133632090244611040912509", "24224296522964068606747348473688300759504912339391085910789247079374247848", "19423335214333125818721475144547689144867410754537520699303779630574252903", "09064541867753700697194856676638556212398383675837766254031696662303564614", "17177645229969208364209457093156085841594402554383003959870316014511962322", "78743873025733569629986115750280074353987451927881901615300620820485775631", "72363492430584502010214283949479705045400558938131374705011968850675315363", "37630173812062294074582255520253937264557056295893543780342380795612299996", "73634589236239675674650974865923308968801424411171556755151855108196976030", "69100115894345176647829980841177107110929353162747649738834951882815827065", "59388054442042393021061222412267325122689005264769075219471809731355736656", "27286196850146874072407184643127057687484590178607069779335868565523261830", "85983973572485944521376720438759447767236484098670709681646531488374009649", "16992822838874239855639599586089690172378165500785260321372190281298725553", "22429204927162085007812911388820064006619345855575376769897699897210971036", "73328273950748836734827028960447771690107273256949524246244288187466678395", "64235640985577912025890666342528941438446995917319810076903177163528392104", "71564675977666819883638923044203459036526502313593856868385915371276159701", "13468398156761611984698581070201857808716512975083445493622864249952023694", "88350106751909127799481901369409564594272362477366326619945817765315732988", "44718593851940610797340619231235728787084171352343090261185420993961889398", "42667029021835889091042871786862340072094378058279593780058637063190399048", "85587302231062760351194017117697158008221339728853174576499270105905740175", "27707368005989073785756736337189052708508027126524290893628356553744596518", "43310574472521004781348785963259780750317872994365719719505842922217259938", "32787334742837887236658850542845235988452837738481248143399793316015970376", "14910722205649858791972243178831422426647423528309717131468443808040924668", "11195312483919725153336735193804135886246730622459785558260562185965719484", "47681170928430258979940798804748608715900765800619705806686070052823545713", "21327537505763843765385730188312455420191679154420171654865816183825855114", "12178371307857606887647095569820237296327204964564428140996871094913765485", "08445010593192182092231571245028062685855174604823347606720544352731318847", "42993226614892229762499722022609918232004405837706945139551013925768160531", "33601662235721243392841452370803163442967430776035212559806889307642030806", "07360634950768758641819452062022958943431407402468762607003207425419854117", "85731338955155280484631829580750425679484109940108573677725911285743603345", "45946043972649001433280839072426143949337713615750299372481624468954909870", "16395198003857665021623462650673214924926201188890273531729986427931534176", "59739651508127318373774081344139202180530362393143410020175608728266211268", "51903459550983931939213895127924327662730958343636779070584507959817182307", "33169749459255290481970243178361689755610837368527824041370306486563045028", "77682951393727520517472213865365053568899162036397057498996724231507586615", "02875967631531518982499476452603892588274329691699830907543805304555574136", "19848958458455183136403979912293399184252097727142904591404626265196811032", "91564185130264333597360528650281357966471517140629378420418736081879618789", "42678084760294373654684370679765942761149188817392972301588457061468794734", "51736878503719525397922529588824199978740314276925719192260163794884688710", "35996165456391902751699555544869358986524363675050132009853431488486359707", "27687309741741396812796781490663343383278544793506796566725783227577114161", "55200279155914363216683384427252883022067778116457217665028045245778976663", "67623196472244424109758450318975657299038462827537614450693582070919814852", "15500898133951816836736846197610260479302890991606470286195889807066917316", "31869835558511799589759340515691977050637609978828995059220700807825000880", "77877056208900120128328899897796675400242332345379431412391281058510754087", "42397113448773686798404701251146387218675642920512452042379784334257336892", "09626842564018705760022717397419582466635136928697611813862506564902787211", "02518704015165710077836074048279632522123860353650335052666484549711953531", "77703228870516173138646957412029719263040111731046121928689984075291527639", "92225896105581302445317332520012254743555026478814355000573596714418765597", "35413879529756402561805905852945498995049216876023405926423610371380096217", "89652008257634892198001922084374439839675640029468260672872429872057945601" };
    assertEquals(1420, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case34() {
    String[] chocolate = { "5861998157457619616034038710802318709516473166148963566530510771843717654", "9928068131718250082756719746323415214049210265464651235429051512365782623", "6414090753108520893328683575191064464451771625806168949508217515054411598", "8735531611860368798335309921411484950231317465447270800914277417822846097", "9547084476498403670088122968158134034491240080369679681899716749142502628", "8460029618211210946686940464202068263324366499403193789937479605722066693", "4443048131042099460266110396081445070885219418677693436465366430039238959", "9229896602138704080512762102051175174746970862470444830040268585015681308", "5047639073024166554332547448768484348267872408053508764409497456880829806", "0460536246921542159505388409235473446262974020255105943906821588845673961", "3854211317472570511290067930811397910161831200382403639324425756659688083", "1031335049690037652301070670853987330836905028905138455745722120054259959", "6737632990448105837978144493345118894395531542047864678219564087187718291", "5479516392172582078355434372765224278827154505712549304933209942461274901", "6523557016512566987821413609800474929652403651269254397889769028633898030", "4187649815112011992112845655606216290172615016127548744521283034656783144", "8476723483329840343379045921287047639977219315349889903598838533216306047", "1786236035930640679204612038297668203006511805064906579092031899629941724", "8043039235924936279060801772698493918851356769508607609796155196688485812", "4095514121940847192311919406219840391735040134065496518678311295447540146", "1797782479107875388774121663929001999258171858507376900288581703004140157", "2541240738759939730465660720877141467432227320316572130302389295531294449", "3713241813143447748143694011450943277678984548232148400101268454993650670", "0240674713435558916582406256047263231624168635427097537175779698033305712", "7873402799259324225915158474108905257629546690212006513450892803540302478", "0470683811444826818633173677045204595078112516199972319678605145896394307", "5594883886397166781138145441948427808406055993584899703467554328320363188", "8893587476302781245785206791899691259916868037371941691262352531678799375", "4901274345058411085748517208796106256882507470779265018951820463208098249", "1082773930268119152535043033592600077392338261389552056581933313622551816", "8532813665644427570885608281298243446904598152001300872610031057322914383", "4188200712584417440418752878372992833806076617573616402801648039532014632", "2259734360972993632891326362116332437883980172755166499057568104367055665", "8750606764283450911135604971539324496265605250443577249858221153714353043", "5887251028489337550835560023186867602704753806554557003207537443104596981", "4613187836051389036472798284488849170075681839932702191922680465504502190", "4933087989183225807284889311623018516505635967649477878929091514397047703", "4091650249117048351885472612325746021256187903758967606968312806620745355", "3688639598314292706722343100688146029991732372654229765296476212815024117", "5457222743628834230743578794824481313709064947580676133124536177228508706", "1100701589633757486673003623349661631981966252112992404986210398453853149", "8860184178772750183571957900142948156786663031161411736446552766573452038", "5338410031889225789647440814044599641644942876564631397578094463427504198", "3971646299786354348701351857977485659498576103759741086182081849524484433", "2455306047146430731570025601046401963567494047010189403164480022338607546", "9728930330733819411456906503270264258303579070014371962612161387825855105", "0143367838022657718198145992027352600585587863564596500011313240620691451", "1506081779399502838308121022495545263552483543749599613717956422260516876", "1227298787312240118843023761538982801692555770911097390866049059459639006", "5937949938448236498667117748964459244359116241800676409375381746683218450", "0761783479070565846794577816268456526884901958454223683464202247019690000", "4962518764347923127584595285486894245131587489913671042762532111565270649", "5075900594746629151493150643202701411783177731879018535791031423596964293", "1684753993628539862287093959342633008417771824900251950568492957257010017", "1128040491664122536484663994101215240381448072236996582874286628154384549", "3585913010514488685405879173624193986219460900798431918058612251741482539", "6218107660590648480631475057588320242908950934092067404902870715739149056", "2428413770195019899706455894841203076344475177078170835316810132649275832", "4413411681418934946088648115978319682740002015411219105117624667845041143", "5752163695790029675535390332605170508968639834821596025371541278538347300", "3869802698635906649147878115737235125386369882768672659692367081813563291", "3995664536318922480481416071262774340915768750098258501308446814260453059", "0261251620141462008144324007258274329584720087219323778478393242674825419", "4271681906904374899032928755184502772083673322713736129996524187374694172", "6060094932071199816013509393697216315928148567460062544676045986530122147", "9158519801545233278385915269326531385285541364604532245761623596827375049", "1778672136391283008715652129479568528753302720052823509943982059813689149", "4146399334965809983932868657896422051187693185275698075852733675802210172", "4121516106491455400087889292394926077610359614455455265306545137965928973", "8465820297672008746995052900873912416665325745721330938358435949180766511", "2859690142200658006955355044755942824038360525448235762496882508880415241", "3950598955638344138736736142505001172177751585100093687511962674903230906", "2760980196773486570244160590728997105415012373130256882843115127849401904" };
    assertEquals(1390, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case35() {
    String[] chocolate = { "16648014128962299418278871795348915038440568787841770770859504317812967", "91380370809736434141105375424296546795876761414020241990632383137719296", "08334697801410518143974273368448594953663724908814303842108965016414770", "37496676730970491403055239578491141800604693832094521065132972398690850", "44272724769181952274997895703508927309898928313530142051521194108840041", "83388616137658175508769758170710148139762520559039928093032003030855921", "49644337848028279521752172824248204639523348265337415842125761581176020", "56530393787036489836463576256483057088376372130035801350977715020741700", "43884306756769488157217637144150658208893661529535288941678105180202202", "86093318680462190071125149271291191444314572901011343050979328459796347", "70699731845495997980386804769437618781985445146855085765351216178058149", "90361922492251004849900700494805033335577022124628729719050650356689368", "06027595972382404120633311424005839508398756996331514077119639314284316", "11190286791952625911424779534995026274845230414125360937012404126843438", "07321772947669159286427607142644398667064040156006648610346720370458174", "79080863821227523192516432923981091177471595577808062805029638939048905", "28673361473294264662941553132206063502669180526212408875198638257807085", "19337799845123887983297767959720773445559263863564005903798672969405970", "89647374114364391399238823082783877626030768320671595477997168645527452", "42025441168214103085663319505049463118424357767175853306486902859460434", "06975868726470544326356060964204023520494251427150717333629061765227488", "80627898615980216729368032437235497189160859992767823626969605344384292", "20739968737983364982136879841765969057922640176896009609583881477584279", "45366246117403491341187872826532288103746406048394422432816779917029505", "14596279146460700067959149366317096616620488679685673589625259178949523", "76462170146973999341154834249407065472518328717653089464899051987426897", "63942310070867607519128114382571095249246544404388310124872021120964090", "86422785560894032772086417157287849219786867280669887620338256950074074", "87151977767556069544323846888758685792670547143309733238838803661151530", "59430983100435913304550472109507462670082248749391749988308370016294414", "74953568407017190395095379234483090568420321050389000850703363664830792", "93715230351359158112760319818867350894129286394105591822726704639748353", "29382225493331750137275764377809930174936289556580407906455365550599182", "72069734558849005579144741832872078963528303425073997384669847066173427", "37981133882967723512904777422897787990299797489042455832696005973684833", "70466376720471799951920878716066214862754993094181493470443161984370565", "15548489494340065798337272180753408268400854081752705643953948291237370", "37598527075321772523118240615330310364091726193348789505768322353589088", "36297252851648718591716264086189911858033429210061343281699200311696491", "93388608324976782606809916892002562323475864442824414327136439887041389", "06542190436581973249557647053843620039274842142468543407424729283206326", "82223840747172366515727752737117340846811620079642314001496200956160062", "34654442865228452426628481083826394758257971727289043801221514445830875", "77596968771301633841905555173851500218205355718024117892302987069280020", "78545945189459305524614208228427491905715881733297858298030094945038529", "30940394263947040362222692270473789718356642668694848027565514002974909", "59695271431014289956296227186393252901264467805911532356084824141563881", "22712081118541201359512149787691092311422598649076129633533593694125499", "86972384048434981226173314788876465913539372973115752083671668527038692", "54104035282905753680287757065101631044782974661029077765663283566662230", "44901711223192760594529115937263975256390800276248700613417355942469318", "31853746225243587653202848743829034500342869227104426830704289102682617", "10502995230498917960051279018201281690115184275173370799601643761021252", "77031014768675761990339940374924827120519396074484429333593005409314485", "34714478412628263313369353619494065524566058876109755683964003431183650", "45543417626184936596751062008622377710692402817487154480602784121014293", "73511616409043041290134574839778049110950874371722755302006975779802928", "12566595714488618697366274205407953524297635418479105925677137824397716", "60224509302374840511000355425601845206338887264235548793337817194744379", "37729663149526679249331598953846640727131015874890755005810117993075980", "20178118018568739060232182853855072185908986870786901339724029558968459", "25915614495609096457862372958763254945506076997632510957363231779163813", "44203191638838511165772463113457879418773677620966535774305652652713890", "17883202889347302350006624954875756206507643373720830612209617284014885", "54180817247544698905079049307155863865799765356147866780821858337615316", "48321884453222241479064530906072004303760204529698714169372179491823321", "44189597604947863584598409732146577748438125003381032872767093850746689", "61432467497718757527558275663652895262903707592445212232918385565283495", "08775690364496035110967730786746735305353794517038347042231927702332087", "35980252767458890121619644164969477615893638637860221385794382241222713", "09607977699832901066109713060392262171851066456873485567865896034462667", "96553011065841639480542097633322189402709315698746992203186419859719990", "04352231611845096862252969050173700956139415935541768954071299781886610", "57316761190991633345453373339656317985216425780037502059305480111021864" };
    assertEquals(1389, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case36() {
    String[] chocolate = { "8298294944471323071302626024496515354770317662979001483288657208735332665", "3525416739115403270570425070665119770543585227566515587287263874963048396", "0109865300000287762738601649255485464114414654320795567623868518376787348", "9065585282960803874382679578829745203943469640927577046113905890342958294", "4504743222288511519331995043460812407931171132506659748264710992262957297", "3227723374244409439353718867074508370830354726662817318396106776605898824", "4183065092302700006992500618654162680380720910112802284265322938419447411", "5225458480686141663523952402833566103163341955034598003343557005835243597", "9856080778804147816041998341059944664844924350252958267193409315991607091", "4464836916274577998503627224236674158971698247936009571295928785392319470", "3940009208891296114011435745437724944876856177918331674278911805292801506", "3452380923518988012937131052770218458640914934836029964381559690637413505", "1285031283347621290082630043760808404742288040381381766792380371431828256", "0722015516282294774065619649095087400952592931508235916080981411451476648", "8619120375583584597901572061819970084041792160719631789005118205426952223", "4397216948649856165380808950103853586392176061979437418505535131681240457", "0834733161791216064107908148705901596924213546362792483217209811170782104", "6702084897472701901934005789005677885384223415517821331022154712622272814", "4569297318861013160092736108914580539283261362970900373186977338601749067", "2136227129614790890440041982069474208133004774983127123211637796326230762", "1397272411734277824623169311273425374636901428333017323486606160607382995", "0571924933288664460653470755660929012627945921390657994191677669682064770", "3656048895709012790551344320303868682563255467656623069612642928999165683", "2211169982942584228378387645548799005995312560184941899555002091913604445", "6126322284275053255378483119575309133384901526054783723056125656769329710", "0849895598223490645491483902614809700280224673857319757249422114285235257", "6140119538487858293507714049417153365438598475325677578094138043491145194", "9347862439220216554619011376482536224688802044609362285532372826478958939", "1537258731136761233089579628789034870865189075191601878952942846345534262", "1619720643411385328374831585859912015079333681234093676937712625138655710", "0912148333931168892410568326156349786519034242021585561395920867755336539", "1554875362844351584561416844506651031889083628898244588184754320545646574", "0388377713221506362804362118882031970844196348194586033276076489778853282", "8388683281214602888268056021205244004524965528826652679571811457078632049", "7935763637426917041698666419650355143408450063087146925866944101615278015", "1416404560695474528629356744769023765131392160734506653227993807193828050", "2864598214867307222240633452422910361295893824566792775312784177324645154", "5391059961738270156224748315569018316204390137342986352393861084017630361", "3950214120774280361348355285567854095417607027054488246786335230650193153", "8757811212470356801034686091364141024268625653463669257079105739033551535", "0913499258427696712643689352898101440387340101773157527655844654711779504", "7160143213932597651428251122858785891122636917674016051196573451931265430", "2411285223497585368739882069410953084626175046572347545941915100400883402", "2088862121878831746047459354976305383515804608872679334561989819357828310", "0908792481927409688407976796209409491751073836994756643433085927179464563", "1677583440205668946863154511184261122486618274068877402866996632744983756", "6930121018432498604237193388054860974277030202162508417867674370388907603", "6550633333860838624995485584119064047592899974966577027778219117833594894", "9033111790738726137466221035821937248537530503318255007102904099936889552", "8321651136135537434643671471145978265478283036991365944001316933959618547", "0427340908062264692727889417156219973165183409060453133084890613720268776", "2373354717160166188812762021919256504905813040780581757251353490142564247", "7529229701770952427819151836085037971963031246480391208692410915912020446", "7605315606124916358483597830476146877357180773620499040924981797496344352", "5508141730900146230047446780064716641716936141864860724325541024608991684", "2985959730766281844068668650456655262367533453530236225100346923669805870", "3169919355592693131156747845635973885912781970285592396192658367775268636", "7339746550849931701398083443000955849695681597999228146683003290994174854", "9136226466703488601013127291057081825662362823883907419169566284376154500", "7022826943384543009495083158660583877682920394916057855161949007586445659", "8084191448226309558777476831780500049385109950827814651264534786700850592", "7807724740311777403319032092887587279855887186047380403614112863500605406", "1367306886292126451214934730156284234015954188723046451136141991334937424", "0538553521272320671784018167612667732294634868125495916923706172868289942", "5583629036163188094188146327299769121246862393392722836680431507531878584", "7152544468414197728256709887383298564130073605379224097177925256123538855", "3268558974191388213682927755710058906923354583526114308073546751664258703", "4547163279707772241994770128124508236776846713157248727951866416231828404", "0976125366203485241669010040564763575123976214758034938932100706055580977", "5209159286134388618417484296383805920040675224095138098417148648452488748", "2708993043042771049800284963621891713219845233539731769357630931322674550", "3936487118090447297239571347017322170802931978619434502638642574813094287" };
    assertEquals(1393, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case37() {
    String[] chocolate = { "6667503253439413672353675023983769731058511463742279766288688154248345127", "4657611810577055656910170426745120181282361267942535663807473185116546972", "1100042690455252947054460109091322338818853391707412871183005347590473478", "7200908530403707712059842445816746856812054425116333419653255851656437634", "1788014357066642019860418968704095806251150026227136399106188687177915130", "3549798044336642040629917834184431522426071657071236247152562135289621250", "6383455813072125817045424178520150516209726961642448190527571619682422597", "4835579127437977760379154896385798266370015022998948185565393974710559772", "2776685835930495901895836307170557235910423484085386869629459406129833995", "4449646922994635084680732765662128204897288661469827112311079401321722652", "4397776806938241440861394338901642339211827841007014445098919275420542744", "4317535741116406317782133677523976920694735576129990303882746153747709474", "9237657747062164021386124035621874539405323551064192926351014193576638372", "6280464758704276382605491021413261209887677194944116875170231587920810597", "4280135461239529782562402432031659794252505450558806046480805972063509751", "5285935931199509304299552053934475168664973133086735683080493840379465874", "1877183810693696081142643008872262970273452833661778152462461709196335682", "0863424312566948430339638985788784028469937522685810993984554523127995008", "9733518359344450905658795801001004358493549184405982981662994116562523879", "8194511403587169155482156771570589233393763679507245662250329507722053549", "8089796254836388837434358301872871752679073803796659384137534913000469487", "9994801452759188812747058437846936416754959888861038035808784407040618223", "2332195443488289983303545473608831260807147287105658114772034149265546282", "9036333983318080226385842310793818441931383381335185862093184665621726875", "3057584870632657933708349285352678346845801296901203258386014373130714515", "6364465661029327333627759763470026465123245379132497392481820043909414968", "7986219928210913954999098614695385916008842133449040940033492122633445542", "7572223284226271865007843300842722944562186924012733619949243615831288618", "3039241974505774910557689889719012136225976445156113871971842065278122630", "4769048171265338401486687729651248452289305060902243821723780824869080140", "8481583746679594294139900200543611762246123274725139241581748029497633265", "8954672923484177835954564197565370839241501918601416864494242709904820173", "2843464893957363737438334355620904461870388136619472237762436446085384622", "6572184786016978525183188774316966394772693203057786196185816424266753112", "7522899577884271008634910863907851232211190719919904595674184179495736875", "0699521625211005199460977833801962044129760861500648837630922211417139008", "0043545315163705920151868919937154500251878340034079157141334040412568845", "8918972043391752008060783443400311100624985252652779769225575708138113631", "3786458349038353040868129234085665222256251207833030942087496152896031678", "0097822052916194580854660601579590494601112732102390776748018287227907018", "3935249659328366394574091920138444178153085034773343764076090156575380801", "5141015580364341653709297797508233456106153599654146366035707822389990805", "3662438876132180009054333533331619083860476906129034669012568621829125374", "1868999123802827585436278305890076087999492696556099917767248465365074216", "4050526818747626074731026290418016268142936611448813915537708801437244459", "3314774789617364262093442988530083650028001757376507041459314512889803803", "9908274991162613129643442247072182932621947209733999233778495905118571777", "6197021910246934521446855338225156858159475280852926703458480915511536695", "1153905023927405808015728376981396809401906866468469163091809051841704194", "9827485054137320240421484408514416155672215169285249597937801462190877210", "9270477647336386307769079869279198348122867495247935942848975904960773979", "6303640575639589676573533226495057411681256324383961236651492027760141466", "0207500663992773185305385638014236907273585954282025755410332757678317865", "5829004229996427971830420737812394327769881425313498560735538978602398476", "7303736154816863301479093584070703078813416295545794815273672862392275746", "4689246930775140932896300585344904028634831547560941772852506996391254859", "9066728889573525121238621095065963735713890265797123907029725432727291792", "8183182227325364289933653164058096506840774220848053328856454283135919016", "4305245229749616082565602531749209945467553536367513295461747887971639497", "9608165670088459398176069691208488495974175930861990516607740708648335955", "4486577489105905965673413951126786455314324046732219883370402282948499044", "4582437746721021723906046565501259422319083305578070875443223361323764682", "0147625716503276419770295079853078852545125644485474604201309718713168602", "3668165750556979388296122282884372108975941548696537349560760197337326933", "2090609138790270030320777296349548618743512569564898886737562426409476947", "3054718737535562034773374060900525929892775224447116675071383538030131508", "1427876102977260555005257409909242159789989805072675310171073910337205425", "3258321916238521717737086501947274009310135218389074904555949686206167473", "1961543527722279130917435595170386430714786125248251195974683634487670160", "9735995449566432038872471162432327048883931506929736975182345709703501097", "1697639367343447992813517340337708662598524881592983256180244136092473426", "1262764869215426882918100793211330526124055719317528341510154489452286603" };
    assertEquals(1388, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case38() {
    String[] chocolate = { "65173903466299353752416613528905432924590110067532895667119029784189638869", "89554004253824116523377183663572449049787069693347804514000457811918106805", "77622302360612816316646029017386241471827898372933899612525473299357439440", "47888336234659825558641138454078957880633190292869826139996324411112307916", "95745533997218392738171294263545339884476119968344371492948494927037576307", "21507160875016490552842339292484547273583084626871078521641989565205653151", "53514256231448979994547695126953405852575831829748294176818606966651820504", "71888462403363471451319850275434542488641289728993027124163907361621606924", "10891951344588137400038255416777979074308988791434557594045734642541991989", "96112477243195764031478088999099622889805346015748005813824825907116218762", "66615015084334672053126408598134997718246871358763378910081895406170124903", "05905568467567587453634637898038821397333001051916392955755580664913648160", "28568821740329097895654702385087855838904258387268733323763283268751564201", "06908888343571333165053780544665477255209689912258055546790278916663384364", "25560260747304308017275029864708284202406158881612431153032404452875347952", "05312438949492918263701676066818349584398537741567837207823604460330799744", "71988577969137396630466763683222312299185011940525861448726250402643753374", "49044392936316890395533061596552468097380143942094747246527193331130180306", "91031170675230622577881484219498622939296741706163142202835775657852974848", "13875616350370657405995635575956566029854893058710331015772280136750836237", "73483688108476190211590108662050598858680737369382762992850275434432302577", "52467484004144768613987520548423889549252866453226536388555319899773790999", "73425813498403059367357206117206561252511353978816763684215137003120381639", "02600790526561632122185488427739099298243901085429937498552435354473520812", "93069468855932556009775600820140678616612137303125092655869974143906680023", "75529789627378977938389565567715567457530377386071029998556228976734697624", "67527247756833508009988325201667312068933739391393281116638914746964759252", "38141293136494074131612251043579505635168009408821105320647216166641167188", "02801242298796188549116847621421604758277248887731864449403545837222062986", "89678186053669794364639961581661758588383851742198882790040128295264124601", "88701999738659272575639590957995787178243108257425100159146865554361198520", "54530702003596257034597201308715168168580039777672051893124115623751519635", "70468489919850211569716454740119368228110017258506497152539760898630543764", "40125382273820317937024441080946980710967469492306000666974961759742738576", "63516799097657328956743163778636017886987775609424298826115189782782581558", "01017250358811992789708646451153484129364367458656848803460598838450386944", "98277767165412247248524220311750770468106968184028080502553621908965907593", "52192473478623271680671540518443675032392366803062051205478234813319778106", "99639571085250934292327417108460353400728345538977421383005161198658620676", "12114808013944117750836524940713924334337744375060064818212405718371906693", "02084786326528872021126855124056574143087652759953366971585102750494994871", "04616359018745728748562631571412973710633620492288035418587938148611974258", "29742754329426395608005316278751727114546498120600520253890865139940505266", "07006223647177275847238843015798618233797425344929862878371162933976257219", "75516024654557378199659413115404988780365723572583558612943785103973010702", "05923788464785332494445387685707412700778147982143788538206998731131308143", "03336966761243423522135458631282537425012368601163579234099440895550073409", "39262090902245369767934634471466502803894010576664358723480529389580061485", "56232806685039866259266087803758394594374997873720649577259526675037684076", "98355773268962450946618184056917764442880896354348939940567168056500700789", "61504105614331904705370399508314786308980513734104853003953894485117925107", "59012271811863493557320692953140063281564970211568411570767291397646914501", "54481096323120922957834415671818359688210524726232917580147248274142985168", "63245587852673257752693235116794239889585972519485676292703594027107077764", "23638684376315361303796786656420883664203934680732201891756328308865287792", "16035650888095780965976748818939753330521340110319926500503398573027071325", "43847938415630666741601893727293779695438992270847117418910831308379032833", "27037528614793014327422322643105800552533934535179832364540062643820174697", "36207107440208728556985386144237868578244564356101821350186500586355309756", "18391639844565433638793266265948977130237713456731702039675199188994127898", "25503120141639603594305547735849310824948224384834396040733537469671087120", "55094459519939474760577219080407017674748851790167234165086138859738402287", "58869453014697658138658154106293089146548127814829914922364183403610284229", "12051252511854495431487782654046243580762049609344502273658172908458554970", "84097632887633316157354039500520930815105088511446371787859821116308830658", "60986640589578168379764943241747955812070927955014180696110206912793992115", "00250392328289513774991032253323370622064002985453862077415849396659857459", "66920771311297365751947437221919613880132483211716002767689783766066389729", "04134414644410330369121904991293826488164505758906830030622063377215223893", "39148127539055475101095347697730666571244149899421541077957632898765882416", "50746161793562030558537115239515711349628997310378443176711893566922806905", "63989863226183504451230651722798208187629367819474697863137328349289164090", "90194832911562058251965966706728957350643721128974380898760352347082369851", "06588421251338244767268201099501182124271425249627465406705858086200849082", "73681877631698667369241451843960250538321682570407341688973361506872604994" };
    assertEquals(1500, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case39() {
    String[] chocolate = { "110405823702657495653399630503116377869351519558033565620690924551237362", "745612415964448508790166311060556217570298632502383591342771746568237466", "242492842324458927011668603441066425902154709814515972762207425078780998", "398599942431827379212711789800631600797962047094915196466366642702894782", "918618009540387245020490992360763526359523563409001071260419785059994867", "115667689786024375245961852558481159817705638067883599677044083298191993", "656672352631891725124445487576151720078441842934467033871550166430457423", "507892459362769016322188145899249140496544710841575983917596433657618263", "656832901409992962517094055803388274464634746032215114632122770797346821", "495291532255939163530732768360631353428673468395848013200238211659991788", "326175651753003229352417527995749466143318848381418781433324029987711045", "929989221091166691303213194291905803028159485077107648159699999491096821", "761598208192107187278347547329418587609438979809729553327059112991653819", "606798762629952879903102289860753522310592609888079311759838023377529898", "061269089110207281295523207307425541670783916754075540862822564211578558", "149736335999198370746387446413320413159668879629613244118959382533860948", "727789862309710535586931439733526316493733607860338143486351714345187470", "050738993907458285456002723480406771780191038866424226590041281071251261", "366372216658428724854972299425573112635211373348745362582426193736191734", "062598383829197542171664505679177329387669599565994063713490309353293972", "151000799317600952104230851170385707798820890085226741927266294866555447", "646847691487572418037634411957931718699737596757762446097204997390150055", "904590468624235176567496724949431100348132575194961632525919875985110145", "322131540823177880967478001216770903379581019797706653476899686678128076", "177248038805162941909769673671410337150130779963356434512991234268993007", "296312940503966355770116915535477018402474960727294208029594351074816263", "672754493145949000455752454072651826298722436638695280625234610894635407", "662527516157319164525724419951948112963790434660234819450465551572881372", "647003227620577733509668168415679471994888857530983061877618306365675263", "160843131650737411443299868504011025450717780743889319217267761063708989", "679843123056197023819116408496556430965282922626029132772631488043339889", "091454276112381565835650185263292330969890031109814490410139578933129321", "526868849409460585453446780913067675450492569737294538308499998675242483", "651724643026179938120997631091378750117741558462576567440849107094207991", "258315762311187364394293625537782715282715045781133772256002790173611004", "601189594091416118588717088309961009971570613445315187807837956158277326", "519956687118010926911746773428289196955988712924517684571815853794489170", "161363937907355658164733193121149497711603430997723197618043379418201571", "814025798139090896123296319488661283052065967276001630263301369417712211", "927866577832078510649710403846968945712497614667744615877162778782464825", "519077962343023859048829285877640548266691203501605609548035019266002993", "015565647207162187608836658047548106880601347755646649204321075987776838", "982880346110252984091502571154964442409012067458879949398406022569909022", "248285064979030071683151061175519637355844767775035562688995457532268944", "433330035512972892359214750555118441477248647826272323798845356323762406", "460154872214785789336178667007744971478891482960014643739631327924082163", "402610913577062128280994522730192563574844742255095084736931061419888262", "858175894324999682908251159977383392872204613893096113258267105436723165", "557836357989236272084738422730585480018036979706925490432837807645868663", "571443345004040425305081777536183258704204820082714433500375986423493815", "429627800543825072781325675978640505417463945662930273752459315596237903", "399865178397683830083752386276527615142273964269487862092820692465199619", "935573422328629033095551292456369028360702587782013589808145991813652924", "304274497855958764476577164557909538977952648436174753669134825998787473", "949703532127595408182891862521817800383596565235145524702176268260218760", "338061797241833241997915956024288006485121335659960671398993633633291916", "069746745722161170435999338621257322016518926154329919042037272114338109", "293008460452558751491812567307228521397654009896268349797627561316675350", "752851777522413378126288847502779984354208460099022670676336726844371993", "961180185542711364069843292503809919127874067403021906447698098189114003", "420160774864618499498236369769112340517926589348480205061957180515568352", "101055016056754870608850508454666984797313190677659644697554141959520372", "891870856712403171505810075022403580865669809338488199298910162533711577", "479532373392233324550824105255214167497746181415870973505222963489320214", "022186663972422976363621565786110528114604068275902266534005636808621201", "619756246684337737212093977029402378002883336012055265774496437694616997", "420251479017794135091980543252997124581482351997418506751098508422870139", "366757690470148479240284481714862637498465792751675625085356932108069925", "616881151833363099814346154247000619846939487799870324139665368541445258", "497198095028763821479424598016155876696320396978237270849852488287846698", "759569682300506691931779465245312278138689841400896983941476109348383242", "328468540340635094816740808124576315489415400120501197477411968702260402" };
    assertEquals(1396, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case40() {
    String[] chocolate = { "408625839723727858646880484426366340825927299297271869109572100957151653", "494515243549679636068283991366625399845319287462280120620758332181075509", "657595913045019206042270679342207168651176909029755192351315536454431559", "349243438168405756322167720877933850415232294069611049711020913321364007", "238657710845938230352804130652585660364348861987934344759934214971207853", "641932845481879772415822144020606721927775873752015797214838891675987756", "244711132813856230229308807892438010343736111955979131131812386109343916", "749944654767800284432274108512396302968556456797140569900051282032350125", "771660376545555552872188533647136492729585051726106436299755488150324574", "209391214059870967406431695142764724047462641639479235304038406978504240", "626999838952404807869559529045228917012917379961647515477594136920853064", "992080166038505376789594579975586986914827679327997077444534214825646028", "088110822829593149790294768560460483485680731177046286872730997237597388", "551680307245835028219954813863619999040766449961995802213811174283208494", "061259578271522005232862203264880108185902256486920308840366776087895517", "935603415677472600497198099742448920461130997169309330130224590502559864", "173889042977983125694845392400818118312729449752531928659899190922755248", "192187533855632643552844032756577906951238922186453839432818587489296611", "403833699972838321399039188749081494953872176900039154362156367628113622", "130940964079428945793657481853288272360789842836437792541648166995321311", "215401264933409583592381815168299931087473813782353582885392133238636306", "607278623974352904337662446376968605660259695007431419673402298080866882", "763473238371248701932030019717194433956706842812135431654546575110428298", "095208711456542098846359312363265997788926700121008855707143789270160973", "755969189184686390888027234351826325255364922583864666492047129073718264", "859227805292053259961180453309986830711352557082990209456786897480451786", "953671081121268056736696643934739219427750078974769549305718101233197982", "101910597561604197928343684592702814895763123534426453733182574075666152", "464037482329805133313910676304540264132384566072523816993725101428831291", "847546910403012505045187182401585251043085306858372092920172523278475905", "456233281582994211686905864554012857286356766189557347844211925322040697", "564104071928624266670102319698547159878962754492050280441521475313492409", "684245441469523887145998237499557193737885958538272963788647604533906806", "403479296612982978650024314127067324265846257446501523957689387229867351", "296940792864361029170092178825945751722128566680827828247220046714816221", "087767949742768510714388789601721618314501979740713471461341614897858400", "518784776135471606999579374316497467854680137310129088135768529487173831", "876729732650673141204142981487764456531716983210650276486844512178731824", "624068023242812796160477262567129647442786099460178137073521266342087277", "196042372105903477895649857797508134481893384833635199376056928033491871", "111716199618748465287280842929262634263446422481909649925140086541198452", "394544856921815649668414523390822498983575888464521384037598672811621981", "781727281539934893652836218508897971819163258747224539350323212121232240", "776542584937184129660974297532521305573289999631597706138181556618385803", "925988037008631441818471200912204992727729583859131198331322764264636400", "378873888107950202679197782325372362960772589739097128896240790058244433", "903886888712714638818835679232523133931904295658641446913059531046339631", "071538594769372907850174800985182437408976034246143250852050588943683773", "398932556893899206276290558128689473830639948060890439696721589626921985", "099925106370231103273347959157858760201138383496933269975882787556606919", "949408011639547047216281863476562512513978852576529148446804450723107516", "591879641657691271648913423194855954018395055304468571846357954479173132", "730470836986080617603072089514788727730621429613593892292464844639532814", "178031580990311650064429304587194219570689812170196740990370109721780760", "861271410086378537667532822818896245386515444299155831013225226040699272", "916657563368499933686582542691884641429955714808296844011480788155217104", "975557396172804164144151802732141609658478778386910348538703228308463312", "101139722077820802144177945578708933027325207289423133057506498483815768", "280229383916213173933773076752572614753044886215708297615280749921498914", "312153855874635185379263522515979306811399754484031180534918705647228688", "575146649979925446216992817995944488262452376830671580764673360830656111", "350953220370667234783966953565912107521788867782370679284660373585430638", "616386533802743129358626172155118778341921396628756538255682306193139242", "673446413077912690122752067981368704558877560959261436654562601791348126", "804899717062849206586855991823415815018914201123791579298370933435136059", "679704283453382331524179885600577747177635983336481010090551518204113196", "616149990291291366419259692202883719608630851108941987076398796267139212", "210522327737434283073891534656197342506279034655272754829584115049401028", "943638155522104055686111353467572835962624956564242183211779426632328782", "178056470688221599443026480359598595133413256607561096734761840791416778", "195958624033627295309691934611640158912435997639291370463826982207211474", "276959090137374986577019730800527134244377216624574277173373325238784314", "057829576116825152415130028651077769618529323848001525647405612588471425", "358634654818592455936286043487912797183886835392896614239879571062702280", "885515814677022100179475875195106977451010942174304461250762592189047360" };
    assertEquals(1469, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case41() {
    String[] chocolate = { "987055360916669852598058396375563481229411099995156272011861439988222463", "765684319037260548602622644880358846578673519776658830295695853657506574", "827026882685707468963429171048633355035213903841967401541765520055750294", "514011327279425591275391078390771194237174318088437966083115184423068706", "359450413111939543073417924816671518750081376523840104908509168439216434", "774426703733345195321187318971658092862158592004836177800817292091509715", "586018414221933914736965317201989582625268361874448066899519617885269886" };
    assertEquals(87, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case42() {
    String[] chocolate = { "29193663821610220057865324112946088564146239373579287919642857557303919742", "69194908978294814301896025242880700312102143726277556271795095285216758164", "44808593085895967119194571064820212262690391809512553101229801852071450619", "99987334865099289227969774470580700655034753874716612580149408690655470845" };
    assertEquals(66, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case43() {
    String[] chocolate = { "253519666660174370278742640294639993059827856484623598972294657768284168073", "933305876683102589467305943742236588075853186554602353047513839609428104634", "280942397891762167229181091664004298439138416843565474795853484805650584555", "239597254834631989360157127502246317034749303693659866791671197758673247299", "769046124093170482179136483402390414026427057295623538406748179220625597415" };
    assertEquals(77, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case44() {
    String[] chocolate = { "69292742141889261401246956661929848015559650776838282878636738932966413678", "66845127147944413912362928074950554296103999362854180594311008084703523035", "08126889986842052244081317767019844632623427623859377400376370274849321684", "55885578365380153078036639867823313983919458585004807760869651104493714951", "92165205492123919422576626767508914456005437720873042926704474268835455110" };
    assertEquals(76, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case45() {
    String[] chocolate = { "311244883040296150038314065396428664245561792528523374773432376352978444", "835088830480879142570107595369045543559899879713060280931697891368823722", "921892111151356635416743537029411892026331488152615300885587651930353998", "339346539169347818793888113632688512395223459150149639463026484267596248", "685512837912988482022658320044022685888792900940344621663680002462070060", "482477633396454022042411710936984444117468223627044595668851479114747485", "217790706155833611778901575435978858840755230811900991068702419506300577" };
    assertEquals(78, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case46() {
    String[] chocolate = { "2223314305622514956008750900742966317779233604199902999982956353904893737", "2076378290381263240715711525552771608449679708342515008180855025405442429", "3211575010218590466691018562104427875598819671937598820878188543242902785", "9640579290210300608343716938635510797938969119399326797380375846845859647", "6787077315024534801767503552219009928869383746348415295743986087101189028", "5142500125313078166365667756996502773995528055083640208983594445632931406" };
    assertEquals(83, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case47() {
    String[] chocolate = { "3023387520410999436199514754506020359333375366421032213601351155200333662", "3119832095200101474549742007980203208609159461500254151551549791031894839", "9753253628079550099701734838867732079442449316526618712415291066495439875", "9296734342374789972148654285273192785131689057277403588106825166536279438", "5554721454932260087463901291841396971136729245466202704945249391180293095", "0117775900926082223514894117104337107827839737959222901334356709732426129" };
    assertEquals(82, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case48() {
    String[] chocolate = { "2140693", "3717783", "3448320", "4082904", "7559810", "4050787", "7900340", "9905909", "8035717", "5292342", "0499391", "9510435", "4344582", "2910302", "6669078", "6607337", "8724060", "8640752", "1767328", "6994791", "1281127", "4892742", "4975735", "2650744", "7558051", "1705897", "5321597", "4446217", "0637117", "1605600", "4101522", "2316774", "0912579", "8882687", "2078179", "8120456", "2314246", "9159951", "6380589", "6705945", "5047573", "7198567", "6194695", "1760765", "6121381", "8547965", "4240435", "0504284", "9417751", "0640107", "2646997", "5447961", "4475005", "8660401", "7200956", "8453092", "2746133", "2482264", "6853163", "0320975", "9971639", "0732336", "5201084", "3605925", "8127021", "7507451", "7192395", "3927522", "4602742", "8657456", "0378482" };
    assertEquals(80, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case49() {
    String[] chocolate = { "02921", "46694", "63127", "19285", "04553", "59188", "10204", "44005", "48170", "09159", "65622", "97337", "16756", "19231", "09939", "23838", "92554", "77322", "15801", "64089", "20933", "87781", "77535", "92425", "65068", "12240", "18321", "60150", "43098", "78012", "59085", "09725", "95320", "71286", "32951", "72103", "55275", "77761", "25968", "93913", "76771", "06336", "88408", "99785", "91187", "19222", "79948", "24567", "36797", "71659", "44054", "98530", "70186", "01079", "90590", "46331", "27534", "14268", "46054", "75794", "81560", "72605", "82457", "89427", "46344", "03993", "40418", "40020", "82420", "43185", "82448", "84275", "73516" };
    assertEquals(73, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case50() {
    String[] chocolate = { "66184", "45661", "17175", "51931", "57014", "48522", "49069", "42428", "54583", "03627", "77478", "93966", "11739", "67131", "90749", "06268", "15863", "87675", "40813", "70203", "49315", "42270", "28606", "11578", "14995", "49779", "01162", "60609", "95857", "66825", "75986", "72549", "77285", "76759", "74471", "35727", "51261", "95360", "55975", "66232", "32691", "82774", "64711", "82648", "89698", "15551", "98357", "75045", "62943", "24518", "69729", "83659", "74939", "90716", "27833", "46097", "87889", "96361", "45550", "64235", "87591", "85984", "89267", "38586", "62138", "49465", "05456", "75186", "76515", "45393", "17820", "68125", "82259", "82511" };
    assertEquals(81, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case51() {
    String[] chocolate = { "7804", "4793", "0028", "5463", "5986", "3013", "0381", "6126", "1405", "1003", "2227", "8013", "1115", "4484", "0886", "9022", "6597", "7109", "5473", "7068", "1055", "4326", "1032", "2768", "2579", "6991", "6843", "8331", "5991", "4388", "5107", "0973", "4443", "3569", "5345", "8873", "7843", "3418", "5458", "3219", "6741", "5110", "6564", "5594", "3586", "0967", "3156", "5883", "8243", "5731", "3170", "6851", "4396", "2558", "6363", "3461", "7144", "0065", "1568", "4110", "4168", "6365", "6580", "9518", "8830", "0961", "6210", "5321", "4092", "4872", "3622", "3633", "6636", "7193" };
    assertEquals(64, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case52() {
    String[] chocolate = { "6088149", "1651474", "2287812", "6972693", "0468548", "6899740", "1465674", "6862856", "6498186", "8254366", "0183770", "5441425", "4711409", "5883339", "8158463", "1336799", "1146859", "2889662", "1141391", "7741099", "9893131", "0904706", "5989020", "5425386", "6875660", "8030156", "0625536", "7773310", "7983750", "6216466", "5245892", "5294989", "3992875", "6552988", "3568905", "9974388", "5680592", "4970444", "3526206", "1230226", "7162762", "5669551", "1076794", "9100352", "7785069", "0345106", "8679865", "5514816", "1809504", "8658993", "2010809", "6663379", "1072071", "8776334", "5497400", "4012685", "1742034", "2080976", "5220719", "3390512", "3184046", "2835015", "0045367", "2085385", "9102487", "4459484", "5115252", "5499476", "7748043", "4401870", "3648755", "1378787", "1740589", "5442863" };
    assertEquals(94, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case53() {
    String[] chocolate = { "3199196", "6095183", "8934282", "3587963", "2367486", "6954142", "2573607", "8023600", "7750249", "8466331", "6751424", "1339353", "1859711", "9507986", "4192143", "5696958", "5236087", "7988616", "7943336", "4719538", "7862290", "3982181", "7997930", "4688529", "0777751", "9622607", "7086073", "1265063", "5847547", "2982806", "6235331", "3276451", "4161001", "7682864", "6722967", "4107493", "8465648", "8595177", "1437361", "4409738", "1240707", "5553250", "5207836", "1186787", "5356698", "5250915", "1878077", "1342640", "6493859", "4601873", "7080871", "1782246", "0896389", "3317030", "0030130", "9030944", "1812720", "2005634", "8648678", "7019261", "2065997", "8180107", "7335976", "5665874", "0654630", "5275377", "7746272", "1609464", "2605279", "8196591", "1898836", "0382103" };
    assertEquals(89, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case54() {
    String[] chocolate = { "7039556", "5596157", "3662647", "2403843", "1220259", "8285871", "9214076", "6349964", "8071404", "7735212", "0951366", "4540801", "0758951", "6753410", "6228372", "7603143", "2772622", "7933616", "3261600", "2841644", "7071763", "5953816", "7450611", "4236277", "8337439", "3949004", "9308758", "5991330", "5295632", "2637588", "8029557", "4059162", "4121426", "2514341", "0408647", "1945296", "3698911", "3385011", "3754252", "8100147", "3646456", "3689286", "2186832", "2041163", "4327966", "5128029", "2266362", "2946117", "4729058", "1346797", "7161627", "9823982", "2999748", "9161637", "3242515", "1553678", "7500529", "4693974", "5041285", "8131984", "5532052", "7731527", "4232273", "7607938", "8133688", "9308162", "8093225", "7004801", "9618763", "6417045", "3071084", "5112336" };
    assertEquals(81, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case55() {
    String[] chocolate = { "000053005040100010400000", "980606000086000010000610", "130065011008020010100006", "072900301004062000007004", "030009000504248000000700", "710800008007400006210000", "520300500007090003150060", "000000000040038705300050", "000006031000000084057109", "000001500004002000008000", "600800000045000200008800", "800006000054700083000000", "505070930030400090500038", "009000800250001074000004", "910042066000077077709603", "000040000020010000707860", "450980300094000090700310", "003000000070049000175030", "687690730010040000001001", "000605007010400202300008" };
    assertEquals(36, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case56() {
    String[] chocolate = { "00008805200110656", "00082000008822000", "80000057000005006", "00050500002075854" };
    assertEquals(0, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case57() {
    String[] chocolate = { "000038", "006030", "086300", "000001", "800102", "904030", "000102", "001000", "080400", "700000", "000200", "000000", "007040", "060030", "831040", "018000", "700900", "070000", "008001", "008020", "020078", "000000", "800000", "005008", "000000", "054200", "282760", "300000", "080600", "000000", "800600", "040920", "000840", "000353", "000780", "000000" };
    assertEquals(10, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case58() {
    String[] chocolate = { "0050000005202101", "9000000600043000", "0000700090000704", "0000400000000170", "0007044868097500", "2200300008300019", "0003000860150050", "0060000000040220", "0001003070000000", "0080680000000009", "0040002070050000", "0020300001000500", "0370040007800000", "0190710031060200", "0086094030605005", "3100300600450030", "0000200056666000", "0040007970002090", "0000608900515807", "0000000040049100", "0760049000030740", "8390870090340500", "0000000000880000", "0400004000200002" };
    assertEquals(28, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case59() {
    String[] chocolate = { "002060312", "700020400", "670300000", "070080500", "000000050", "003080000", "000000089", "577000000", "000008900", "660000030", "000010020", "010084005", "020079205", "840000056", "000050000", "600000070", "080000000", "069029900", "007504202", "000072000", "000020071", "009110410", "002800000", "301300004", "080007000", "204801000", "000034040", "000000100", "300004000", "000702000", "000007008", "000005050", "206300005", "005600200" };
    assertEquals(16, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case60() {
    String[] chocolate = { "360000000006007000715", "000051450000000090020", "050300006300009087007", "207900200003100210054", "015000006039000009062", "203350509040000000000", "700060108854000191704", "001800410616060900070", "000710030080000000600", "010050000904050500350", "049729000000080406010", "870416090000200100516", "030016790730800510750", "308000000200080080008", "500830886500003602906", "200031760301080000649", "006200000028202000010", "630000100430157153000", "000001000702043007880", "400708000134006007300", "006073000110000004005", "002000000070000040009", "190008030000000000090", "005000000000640800400", "930074007000100800801", "208050000400080073290", "007308000000700068009", "895091050090617090005", "000060680012000955000", "200000400000000801006", "080105006030000080029", "007537053080093000423", "070000200605000023000", "209001500507763000800", "000581100500020003038", "700100000904026400002", "088500900007400070070", "007600000804020009000", "009090003008490000909", "000400001007890000300", "006000010060000003500" };
    assertEquals(88, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case61() {
    String[] chocolate = { "060305049057205810000000", "000088004484037000028000", "000020698040094004753004", "070005089040008299000000", "000907000091050080000080", "001100000090700002000000", "820000002008040000002021", "009008000000720000000110", "301008000200695884004000", "000903800000000400070030", "900003010808004400000203", "010040070040010001070304", "003010802000000085680008", "000000000800040005500000", "900300010700260100700309", "000203000000000000005000", "009007710505860600844002", "000000000004900010000005", "125000000980840009502060", "090060008000702000020002", "000000080004308400104020", "065000007000000300220004", "020500280400098039000993", "090002290700606784310070", "048070009000450102030010", "000102800000458020000002", "007000000930003460000004", "000050000690004022000000" };
    assertEquals(58, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case62() {
    String[] chocolate = { "00490007409570000000830700416040900003000001", "50170300024806070500200000080400000000600010", "00006000000102007750975000000200200229000290", "60288169007000050046933030900526000122400100", "00600100010000000020000014004000040730500400", "68040103090800004970500000920302083050400000", "02079000400000003000009005610000080000075074", "06400006000000000100000000140508050190204100", "00610670000208020035300000040021000030802000", "17001300400013010050006000000006965000400100", "09600000600009000028098004590300000703900100" };
    assertEquals(35, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case63() {
    String[] chocolate = { "000900500607750308530000000000320200508200000600000000007000062002003", "000000002000007000000900004020039800058036800000000800000001000020060", "000000806000004008000000000600000000102800000900000000099000000050300", "040000600040000000032300000049000050800000000060000208001002023094000", "600090700000800600000034000004000900403000003506200009002030007000920", "109050001000500000900000002000004608470908000050000100010000005300004", "009060007000870020001053370004303000030030009002570100098010509000560", "000060100240405050040000904904500020009000000000803000000000200000000", "000000700000000000000002021350000000000000000000800200000609050476400", "000100002007020040000960000000000778800500530000100100005000100000000", "637090000090520000038070000000000005000008000700009304008040340000000", "007206010005000000000000000000000000001001090000000022306008170001980", "000040007000003000060600264030006290006000009400005026700005000000000", "008004000400008800607000500000800050000000000000006700000001000040010", "049107107000010000004400300700003000030009600000000070000060300002000", "480000080800800700056001000000001404760020060000000072000001600006065", "050020600030801030018006347003200050801100080001077000308000010476000", "000004000006070805098000300000000009060502380009000000600000100900600", "000200009070600007040000040002020030020060030900409049000000000000300", "100000819070080020507000300800000000020000001000000000000036287000000", "000000003060004200000000003011000000030002000000200000800000000000007", "000400000007253103070000000006700003000440007000000000004000023000190", "000000000008020000000007050000000000000086000000640150205000000008700", "000050209000263100002802009000000000005083826000970034800000000000000", "010000006000090000000000203000000005046004000002060400001000034002005", "008001000900005900020090001000000100605450600061000001000000000700000", "070505009060200009040010022400200600000000290020001000600770500180000", "000020700700300300008000750044000000700500000020600000000010013001000", "000090800006000009000295000000005009000405900500008603200104501200000", "080000000009001000620060974100000060990860000060000500099000000000300", "040000000720900000000000335090906054003096007004000080093000300880000", "790701000000008000050000714400010700000606000700000068007050000705000", "000080000000000004000010050400008000000000070400400000000000300000004", "000006000002000500000020000000300000200108006002504030004020000020008", "040050000008103060000000400030000090370000000000034000900045201080500", "100800100000000401050004030000060000000000140020000090000800000040000", "007000310000002350003000000050000083100020000070000300007000838050080", "030050000003002457000800070000000750430100000000000002000000600000006", "090100560200605660000600007000000050020000000004000008600040090890000", "000010100090009000600200600477000500004000500040700000000000202700006", "000000091540058000002600400270000207000700000000802560003003000000500", "000000100700400000000000008004000000070349020020000000040592061701000", "032300400000000090040000008070020000290204006091000000003000000500007", "081000003000080035000000700000000008000006061100008000090080330000700", "900000800000000107030230000000000000900000031000089000080060000000000", "010400000500005001009090200000002000009003000540000000000000213700065", "300106090000070000005005930090030400063050500000000000000000007000005", "000000030000008502040030000800000000000000030900080000000060060438080", "000200002000052400000637000000000000000080000700500700001000100000008", "100800008000600300000020020000200000300000100000000807600109000060820", "000080700580000437008060064030070073000000560170300500108000000000010", "606008000000500008000300700000707300000050097804080000040098000097600", "007000400000016007000400403000000010000009000080000000000000000600000", "098000800020000004000000000906200000000900006005603003000000000010000", "090000020670000900005000094000000000000000100049070001005000000006072", "700000000900004010047010006007080000025070007000000000090000004090002", "000000000004040200800304000002001003000061000011500080005900000008000", "370000010003000000000000000090054500000070005310068009100002560080014", "000000450030580000100000090000500000000900200050600000000070000000020", "007000007008000000000000700802000000300000800060000000300000000000200", "000610000000080077000040700309006080000100200900078070080050020000000", "060909000000000000000000000400470070000604000002000000007900000000000", "005300038010001086701675000000100000030006060080026002401850000000070" };
    assertEquals(330, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case64() {
    String[] chocolate = { "0000006090107800080007900000800010300000005000001900100080000", "9000040000000000500000005000080000901070000000001000806000000", "0401246000000705000501000700809010000000000500000000000000020", "0000300006066000006000000000340000200780509470000007000050000", "0020542090000200800000000670025000000138000400000500009004800", "0000875000420800000006009000000150020007008000040990030000624", "3008000004000202000300000200000080200060000600090000000904093", "0000000000040000070009000000002107030600900590300003008900100", "6090001800000200002800004030000090000004001005000000080009931", "0020000070002512413907000000070086000500200800006004000056000", "0000000000900000006000600030004000020060000000500000000001300", "0000008000006000300200006010006050000800000006400000005000030", "2907520000000100038004008500400020003020000000000000933000300", "0000300400000000100000000050000000000000720008030000000000140", "0800090000000000008000001000040305047630100500265767040020000", "0500009003000000000002000108005000800700000908089000000000900", "0009005008060090000003000000110700070000701046000089600010050", "0000000300000030204004400088030060000600800000000003902000808", "7006000006000000006000400000000005004001000860001604000000000", "0070003000007050060170090800005036400044000900000000040040006", "0000000910000300003384800000100080010000700000000000000500600", "4900000000000000090600004000094010080000100156440000000026000", "0080000204000200001000001000030000000007008000200060000040003", "9000000004000005002009003900000800088000000000800000210608000", "2099070550001006800090000002086000090000003007490003000027590", "9800580000050050000100600030000000060000300008000002004030200", "0000000050000150000000005000000200600000006050800000040090000", "0006000005000009210200000090070030970001900030500060000100009", "0300400005100006000000700070003000406609405002000026000000000", "0000000600020050300800000106800500010050000005000002020000020", "0000000050000103000006500002900000070902040010000000007000000", "0200070300077600000500000000003000000000070000169980000000432", "0003743000231800714007000800000130050500000000000050100000000", "0008003000200000777002000070000000004000000000061000700000350", "0002400900000070708000368007100500100200060000003000000050802", "0000438559000000050100000000100006009590000070000000006000090", "0054000000030008000090000000100000074000000000300000001000200", "0400000100000700001660000200004700000008000000900001008002300", "5034901060000790008099000700009300001000000100000009000090000", "3070003700330009508000004043501000062000000000290300000000000", "1070000800003200900000002090010091100020000700040098109000000", "0967500310000000000900900000009007830809820001008006000009200", "0010000000200700500422002000000007600530109103050100024091031", "0000000000000006022000300010000080800080000015043800000070000", "6140000000209000026000870811080023000000900000009000020090002", "0000103000000050500060000000094029000000008070300370000091006", "0000000106070000010000000006409050070000000000000070000000000", "0901030000300015000500000000000000000000000800000948080080000", "0390000100000007706000000305020007000006000050051006000050908", "0600000000047002008020800000005100900970000000000009702805004", "1080070000600803400000000100000000068050000040100009030000000", "0070084005002000006070916080050000840000500020019000070300020", "0506000100800070902000000060000000000390020090500000002000000", "0000000000000000008000320004060000091010900210310000005000000", "2600000000740990080020480600012700800100010043000000396003108", "3090000500382510000050066406206000090000007000804020005000000", "0001900000000080000300123004090030000000032800000000070000000", "0400000000000084070004069000000000000070005000000000000000025", "0003805000017070030280039114030000001000000060010200000078085", "0000000020000700090030000390000020002170606000961007004700004" };
    assertEquals(278, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case65() {
    String[] chocolate = { "076608004800000007000000807301080000000000000005040000000608600", "090000056500000080000000000000000005090000000900009002030000300", "840560200300000000708140008000004005000002000000206000080405600", "000000200060700000005000410000050000000001000100608439072800000", "051009701000095000100060029003071000000090209000000060508905205", "400060000030091401000020000000000000000006370000000030000020800", "000000000000080000000000610600000000000020000050000104006000000", "000000060001005091600590600010009000000020006005060741640057377", "000000000504000050000000700000000102002000005000000000000000000", "000000000000010670850000009000000001600000000000000008600100003", "200005000300400070000009040006900000000403000000000000000000330", "000000000090000030020000000004900810004000092000000003000900000", "000000000730000000400000053000070004000000500005080200000740000", "060000000500006003000090010087000000800000075000870702000300003", "462008000060000009500800040000000000040000008000004100000590000", "040706003000000005594002071350000000800000700000000000006080400", "605030000000001403000870000900000000000000000078005000000000800", "010600080800003000700550000000007000370002065000000008000001000", "000000209007900610010280000000000000800230000000030600600003000", "000010001050708000000040000580080409000001000795006000000000707", "600650035000050100000000028000000000085405030000403000000200017", "703000000210004000009000700020044007000008000007003000000006000", "000000090000000400000000070200000030004005160001500604002870080", "006080002400004600602807000002003001001500000562700000400500080", "000002019000080040600008000000000070200030000202600005030000006", "000000007000010002000001001200000610386000000000400300500000008", "550600001600006040006600000000300000000000680005090070037000000", "060000001007000026003008000506700001000005007008000800040006000", "008001000000000500600500003020306200000705024543508000006013000", "030000401000060000900000500008000853000500070007000005061000000", "070300807185500800506070000074008200500600005600000000000702600", "003000007000000070700050000000603600060403170000000000100000707", "070908000040600709080563400000000000400061200007000000009509006", "007004007000070036000097600010040000400010040304000000801000000", "000060700000006600930019050500100022000000076000900000000000004", "100006309000004000065000400900501730400020500440002063072000050", "082000000000060850000000000500004052000000100000300080000000000", "001002502003000040000000000001600000700270060060098200006002000", "520020100800030000000000020068107400002054441003041000000000020", "000060600300000140000000006000005410400000000034000008100000800", "000000065000030005099400600040000000000620300040300400000008834", "100000011050000600000090000000020004000300000034806800040000053", "700292000000110000080800000000700070002903300000000340400049780", "027000000002080030000000108009200000050000200000000000170003000", "000000000100000003000050006000970000006100000160190007096000000", "009009000700000000010000600000800700000060820000305500000000006", "005000000006008080070097050000000404000091700400300000080360000", "000700004800010950000360350007000046070550300000001000300300006", "060800200010000307000000000000000032000000000000000000039000003", "000000000076006000500000000000200010010009000000030000000050000", "300000000112040070005000100000300000300400000060000005000440080", "000000020000356000403100000000000000400020008030500005060009004", "067800300000000300300806100007094604000000000080000050900004080", "000608000012007007010006000630212000000140000000003000000000000", "000003500600009400014700040000000000660000000400000100406000100", "000000037030080000005280000000007900000000000905000050004050709", "000000061000200000300006620002500590003000000000040100974001040", "400000087070050000000060000000000009060900600100350000040880000", "000000000040010007902000000000040010000057000000000024000000023", "300100000000000007000000000000000000800500000102000503000000002", "083700250200000000000000006002061000000090037000016000000000005", "000500500000903001008080007200090010090450000000000000000060000", "008050004810007000000000007004910000000083710300030000005800000", "010000040000900937060000000010038067006500000005800500700006000", "095000000063340002000000405060055019900050000050100000026801000", "000080020000000080440001000008021050070250000000090085009008090" };
    assertEquals(290, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case66() {
    String[] chocolate = { "008060500000990000020620015600000000000070000000009604200702700500005", "200600780081090060094000000000000700000280000000070800058200070060000", "000800000000850486000000744027000000343010000600001000020000008010002", "509006005000000602000106200000000424000000040880075790020000006000000", "000032000030060000000005000000000000000007017306000202060001009000903", "000000000044201005000050000800900050001000050000210000200000000030000", "000056100500005020500010060000000100790900100000000000208000040000000", "027100030005527008000030000000000087200002000307005000700000080000007", "922004009000060000000090030408000380500000500008000000200000050000070", "000001000000000009609000604000000000020660006090743200806000000095000", "000000000002900005000000094604044100000081002000002600008280950001107", "000000300006000030030061000090000806003000000100800904000900904007700", "086600000900900060008405900000002030000000040000320000000703608004020", "001000700620009000700000002005000000100004080800030900010460002000800", "020000000008030000040600080034600000908005000700066690000009008200000", "000006000000000004000000130034000006900000000050070050000605000900000", "004030304000040050014000000000080000000670000060449000005070030000500", "000201000203800906000000700000000070000010087071090206020000000009000", "000000000080078004000000002000702000200000046000036000509000000003023", "000090000000873500000600800000000016007002006000594500000002300000040", "009051060100450060060000060000000070000030100030000020000000008200700", "060300000060090062300007000009000404502487000000000034700000000000006", "000005980000000614030000000000008004425000050000000082806003000070000", "008030340000900000040000117090009302094002030400000520500000000007000", "000004000000042000700000000000000000000000300120000000008000000000010", "000000000004000500060002000600020005000000009010000390507050000053000", "000000006080700000000020000060000050000444000500000000000000090006000", "080000909600050040050000000000002000000800000000360000416006003000300", "930405002000500604000008060030000000000050100060480500005080034050000", "079000930070000400387000000000000000080080000100540001000000091000000", "005903040000600027000107080000006010002003080000000600097487456300009", "060080000060000050100100000808050000000100000009506320000200050006000", "007000100040000000600000401280094003202000202030000000700000200000007", "002990000000007000078002004080000000000007030005801033002031000483081", "000000000600000000000330900000000380000000007010600000000295000006000", "007060100000409000000007000000000900000058000030031000000000005300000", "008007003006744092040100800007061605008000005000000014000020070670002", "500000076000040000969030000094030336000200090680033000016400000600000", "350900001600500008081003000040061001000000010000044908650003000900090", "000040400000000000000000008000054039000000100000015980700002005000001", "000400000030000000090008000071100020000400005000000089600098000000000", "400040440070000900000000022810008000002602001440057000503600000064000", "704930000050250140090006900000030000800000220040503008000030000000000", "010100000000000900320000870106606006000000000708000000000000004909000", "000020000000000037000860020000200005000100602000000101203030004405007", "500000040800030700006403093000900003325000200405800870000000980085020", "000000078005004000064605000030000007901001001000000040000080070000140", "069004000001188000002000000000000000000000000250900008173040000900000", "000000000097000070010490007020000007030000400700000000000002000001000", "500070050700000010880000000006010000000100003600000000000007000000000", "030900090200000006000000000600000000000800100030090008062002000700000", "000004000300000000000190000030700005202000600200090000015098200007000", "338000006000800304040900006000000000080420007470003099090000000000200", "500002000067702709010900700002000020000007500300000370009000000000400", "000006000002901007083390000066000600000007300090700800000100020500038", "000009400017000000070000070008000000130009900000000000002090970000000", "000000009080028060120000000002000005038000460060009000304007407610007", "090080080030006000007886407000000000200000000000000009080002000000010", "000000000333800000004008000004100006300000600170000090000250260900820", "070023000000000801000700205000000000500000005000000000000001000520080", "000000000000000080000700000000920000309049000000000860160350004095300", "000020400016000603000409100200202105003005000000600000423062000081400", "000000020003000520012000009006900050780000000806803020050000001002070", "014571000900540000009400000000000010000040000500407000000070000080000", "000607000000001000000030080060020000900020030000045001000000006080060", "600004400600600800500000000000200000700000000670000001200806600008000", "000000000040000010000000000700000009000004200120908020426003001070084", "580070030000000000000000000000900002000060500007000500800500100200090", "607000000001000000000692190000050702000000004300800810000007000850600" };
    assertEquals(369, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case67() {
    String[] chocolate = {};
    assertEquals(320, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case68() {
    String[] chocolate = { "000000800806870200000000020070000000005000000207080040500000050080", "009065090600000000600020009000500452002200000000900300000050000008", "600000000000007090070300090000880000000080000078060000006000000090", "300000100090000007000304080000098000010000570560000000000000000004", "000803004900000000000000007000500090000500000000000330600800003000", "002020009550004230400000000000000780000007407500090092200000290020", "034040700800700090000000000004000007000000000095090800000004050000", "008030080000003400000090000000010950100000000202007386080586000080", "009000000040000300000000000944030536002000000090600001000000000500", "108050900060003000003005090000030000650008012000000080001005040000", "000010000690200090000007002000190000000079007000500200000007090000", "000004000000000108700100000056000000000060070061010000707030000022", "907150000000000600600000800000088604470007000500000007005067000010", "449009000500009803050208006006302000020043070008008738000081000010", "990000090000400040040000000700000000000030001005000000000000750040", "020000300330000320100001600600002000000000002300030000000020040000", "090000068004100080302080300000000000000107008005080001000020040100", "002670000005000080000060002000005000009040007000400050000090003000", "900010000000060000055001608900000900073099650132010000401000650440", "002000300000109030800006030070000000007006097000002000000000007000", "000000007800800000005000040035907000002000009000000310900008300000", "000320005060007003050306016050193000000000005160008000000063000007", "304070000010000000000070060000002851000000208060040050800000081005", "800050000000005000000070005408060040401107050000250000000094050600", "005000002006040800002000000000000700290006500000080100000000820000", "093900004039000000000400024402340000070070000000000090180006080000", "000690004960000020200002120000001700480830004000000004090001090004", "000080000000093040810000234010045000907700005107100500070500408807", "000400802000000000300804780085015000200890300001005009000200808000", "021000010440008050800004004062005900000388800000050500000000002000", "100050007093800002000000003000000000980000000000050000003900004000", "008000000000000000010080005404000000010090000000806000000900000000", "200040010000800900790100008000000034800000500140000000000903900000", "040070000567600000000100800600002007008070060080009000306000000006", "400020021046000007000000000040700007000010006000008040007099000140", "000006200050030001033000000000500703000000000000500000804005000000", "060300095400623000000050009000540000070074000900200400000600403400", "400700000000000000060100000001200092000000080000000070003005009000", "000302000003458004001000100000008000000000880093000704000007760000", "000770080001004002800000801030090000002808000072075070080006020000", "402000320003009000000008070000406000020402020505000004008000050000", "000000760000000203005000008006000000746000000000400700000003030000", "000700080550002080000100000000001090190080000010000000040000000000", "000980053800805502003070000002400007020050300884780000800000000002", "000030400000504000000000000000009000001718000000000700201080502000", "070080600100000000000798000001005001600000000200000000370000000707", "080020400030006000000000009020000200000190000900500307010700000900", "002080000000000081000000000065040000594000009400400700070700090004", "000031000000000802800040200065860030020303000020000002700603000000", "000000001004010253000700000000200007000000000001008810000000400200", "006600000080010000000100300004010020000022020400000005017003003020", "000000700000107003000060440070000006005900109030002000409900000480", "070000230000200000701000003900000100000000039000200040140065000257", "001000005800050000700060539000000700000200400009000000000800008000", "847060000700006200005800000200000706000350300006400000000000000036", "000008000009100080082910000100100600000009010040007000000084000000", "021993000020067020200025000400600960060030601041030007670000560000", "000001002800000000000080000200080500020000000008025500000000050207", "170006000090600000000300000000000006012050091300000070080000000000", "408000000006600000007000000204000082000040000079400000820000908600", "050000010000900903000000603010000000000501005006800000000000600072", "670000000030143920909600000244900008039060000600200700004001000000" };
    assertEquals(316, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case69() {
    String[] chocolate = {};
    assertEquals(345, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case70() {
    String[] chocolate = { "0300001190000600000090000003000000000000010800000808060064030040", "0000000006900905603100070000708170060003009400500000000008602064", "0816050007000000060070000003000190600001300000000000000990009008", "6046001000000654880020103800001000000400200000000280000600005080", "0006000090000090340000000050000005130000050809000000020230004000", "0010024090300308078000009150082007000000770000000700700750005009", "5008900060000000005906300320062000000800001000000079000022100200", "0000009001001020000000000000000700200000070059000000020200800000", "0480100040003000300000000060040000209029003200000000050004000204", "0000004004000800000300024000070906000004000500900900302803000001", "0080000010007000080150000090000143000020080200430007090000000270", "6003077090000020006020005008100600000075000000080084008900010045", "9050001200000000700080000000800000020506007000000900700010230000", "0000000073000070070000000090000500600802003058080000010000010000", "7500000700800000003050000000000004040200003000001400000000100000", "0000090040000000800005010005600015003000000070090070050090010060", "0000000000000000020000000000068500008000090200000010046090900100", "0750090080000605000109000208790003000600201000000000001829000080", "0001000000005030000200904800908006000006000007778070000400000020", "0000000016000105004000004500087000000307006000000000000008009000", "0200790000700270000000000800000000459000200009774205000000061000", "0783020190000003100000002000000040320090000000000810704090400080", "0525000007680002003600000080001000540434002030070000000000000300", "0020400040408000508010000000000080000000505070040400060000051080", "3900000708003300000000090330008001003090000001000000900088000000", "0000008000008600000007008900084000000000000090870030640000000008", "0000080710700050049411030530005008007060000000200100200400200012", "0000000050000022000040007044008000480000106062080000300907000300", "0000000830700000809270006002070000001001000003000390480024006000", "0006609780201600109000570000000001003000000000004004000000000180", "7008000560008000300000565310301020100600030003720500001700000000", "0000005070000090062000308002070040100000000800000870400000080007", "0160905804004496005000010000005400000000000000000000000000061200", "0000040011400700010007000730003030300020093000000040000000700880", "0000950000010020030000000090000010010620000010306009700081060000", "6800040000000058000050002000037000004000005000006060000000078008", "0000000007300000700000800010000000010020020007050100000022041050", "0090000030300007000002000091500600040090495060500090900000000004", "8000030000000000555700310070030000030000000083290060900610070000", "0100001093600013540000070007006060000500969908010060600905000000", "0002000500000000000040000000300600076000680000000000100000200520", "2001008300120000200000003000000600908000000080005000000000000080", "0000000600900000700000530822087000401005020000530000060701000000", "0079003020000057960415065000000403209000000000009800000010000009", "0043000537980730000000700020700005500000000000300090600460000000", "0097000030008000007005000000000703000601000650009200060070000001", "0060000010002200300780000008003005000000009000604007400030041300", "8100006000000000700000046644040000900009020000000500007009000000", "0000000079080000060000000740004100001000002040000400960702030003", "0501032000000004054004000601000000000301001060005000030309703200", "0000020000090900000000000080000001007800000000000000020000200200", "8040002300000880050050070089100009206000000000009010000003005500", "5900000000306020503004020000480059000090046200900005000706300006", "1053000100000400000480006760000000190704003050000000004035000040", "0000056088600000000010800000000000000001027102000000000535200000", "0000000370000400833000503030000000060009005042000080000702900000", "0000000000006085040000000000040100000000060000040000000000461016", "0000000300100000040000060600200600000002102000505005000000000320", "0000100043000000900009000000010000084000000000580000000700000000", "0000000860700006000075000026002000000000068306000000000600000005", "0036005273500060005009000300000000800004009006030006000001804600", "1080800600000004000005002000016060000000000053003110007050008100", "0008000010000000000044004000000200307004000207000009077300010000" };
    assertEquals(323, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case71() {
    String[] chocolate = { "000000040800000000000000080000005900010000270000500002000000", "000000000002005002000000000000000000000200040000000000000700", "008000010000005000080007002000000000000000000100000000200000", "007000000100000900000000000000000000000000000000510300000500", "000000008000000000000000000000000300000008000006100090000000", "000000000000000000001040090400000005000000000000000800000500", "000000060001000001300000000000200000000000000000000000400000", "200000000000000089000000080200000400000008000000000000000600", "400003000000000000400000000010000000000000000005070000000000", "000000005000000000040000000500100000009006000000000000000000", "000000100000020000000000000000100000200070400000000000050010", "000000000000016000000000002002050501000000000000006000000006", "010000060000000000002000000000900002130100200000140000000000", "000000070000000000000000000060000000000000000500000060600000", "003000000002030030000080000000200200003000000000000270000800", "000000100002000900000070300000000000099070000070006000000080", "000004020000000040004000000000030000000000080000000200000000", "400070000000000005000000050000000000000000000000150000000000", "020010057003000000400000270000820000000000000000810008600000", "000840200990006020008000701000602000000060200000000100009000", "000000300000000000390000000030000000300000000003077000000000", "000400000300070207070060100000000006000000000000000000000000", "000300002000000007000000000000000000907001000000000000000000", "002005000000000600007000000200000200000000020000090000000040", "095580000000200000000000000000800050060008000000000000088000", "000000600070020000000000000009700000008020006020000002000007", "094000036000013000000000000000009000000000000000000000000078", "000900000300000000000000000000000370000700020000000000000000", "000000000000000020000000001087000000050000000000000000010000", "000000000001000000000800000000000000900000900000000000000009", "010300000000000002000000000000000000000040000000006000000009", "000000000000000400000000076000000500000000019000075208904600", "000000100000000000000000000009000270000400000000049000000000", "000700010020010000010000000002000000000000000009010000006000", "000000000050000000000200007000000000100000030600007060001000", "100000000000000000000000090000060000000000000000201000500000", "000000060000009000000000001000000000000400000000000000014000", "007000000000000000090090000000040000000010003000000006006400" };
    assertEquals(70, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case72() {
    String[] chocolate = { "0809600006000000700000200000600000008050300000000000000000002", "0050005000040000000001000000000000000000090400000100000000000", "1000700000040000300100400000000005000550000000800000000000000", "0000400000000000000000050000000060000060000800000907000000000", "0000000000000000040000003000000000000100000500500000500000000", "3050000000000000002850000600000000000000000000000200000000006", "0000001060000000060000000000000000000090000400000009000000000", "0020000040007003300000000090080000002000000049000070000000000", "0000001000000000000000091010000000090080000007000000000090000", "0000000000000000000008080070000000000902000000000000000040800", "0040000000330000003000000000000000090000450000000100000006000", "0000050000000000070000000000100110000000300700902000000300910", "0000000000008030000000000010000002000009040002000002000000500", "0000000000000000700740000000400900000000006000107000000000000", "0000040700400000000030200000000400000000806100000000080000900", "0000000000002003007000080000000009003000000000001010000000008", "8000000206200000900000000400000060010000400000200000000000008", "0000000005800008000000009000070000660000000007000030000020700", "0000000000000000000000100400000507000000000060000000000070000", "0000007000000000690000000000050000040000000000000040000050000", "0000070000000000000003500000005050000000000000050000000060000", "0000000230700000860000009000008000000007000008000000000000000", "0090030400000000000509000060000000000000000000000000000000100", "0880000000000009000900003000000050000400080000003080000000000", "6010000000100004000000000040047000400000000009000000000030000", "0000000000000000000000300000056000000000000002000000900040004", "0400000200001000000000700440010000008080000000060004000000090", "0800000030000400000000000000000000000000000300000000000082300", "0000000000001000000000208000000000000000000200000002000000080", "6000090000000001000000003000000010000700000040000000500020300", "0000005000005000000000700000000000000000000000000004000000400", "0000000000000500000901000000000060006002004050000000000000030", "0000000400000000000052060000000000006000000000200102400000000", "0000000000090000000000060002050040000000000600000000900140000", "0000700060050000500000050030003001000000020000000000007000000", "0000000000000207000007005000320000060020000000060000000000000", "5000000000000020008000000000000000000080007008000000256002000", "0002090000030000000000400000000000000220000200005110000300003" };
    assertEquals(85, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case73() {
    String[] chocolate = { "7000000000000000030600000010000000000200000020007000000700500001000", "0000000000000000010000006000000000800000000000000000000400000000000", "0000000000000000000000000000000000002030000000000000011000000000000", "0000000090000000000000009100000050000050000700000000404000000300000", "0000000330000005200000000000000000000004000000000940000000000306000", "0010000005000700000600000000000000000000060000000008000000000000004", "0740010500030090008000000000000000004070000200000000900000000000000", "9090000030040005001000049000007110000090600000000050000780000000000", "0000010600040109000070000004006500000006000000000006000000004000004", "0090080000000000100000000000000000000000000000000006000000070047000", "0000404000000000020090000040000000000000000140000000900003008000000", "0030000000000500000100007000000450000099500005000000090200400000020", "0000000000080200000500700609030000090000000090000080002070800000000", "0000070000010000600400040000100000000000000000000000000000410060001", "0000000300000100100000090000000009000020000000000000000000900000000", "0060500020000105100000000800000000000000000000000000006409010000000", "0000008300000000701002000823005000009000000000009000009000000002000", "0000000000000000000000407000000000806009000000000010240082000000000", "0000000000000000000000000820000900070000003500000000000000600000000", "0050000007000130070000008000300201002000000000000208000000004100060", "0700000000040000000003000560000004000003200000006100000000010008000", "0050000010000480000000300000000000000000001600000000000000000000010", "0000060000000000100000000000000000000000000000300030000000000040006", "0020000000600000000000000000000000000209000800200000000000000090000", "0000003000000000100023000003000000000000080000702000000030000000008", "0000000700000000007002000000000000000300006000000000000034000000000", "0000000000050000000000000000000000000000050038290002090000000000000", "0000000006000409000090000000000000600000000000000038000030000300008", "3660000000405000000002000000000000040000000000000230000000000000000", "0006000000000000000000000000200000000600000000000000000000074000000", "8930000009000000000002200000003000090000100000070002080000000000000", "8000600000000000000000000000000030000000300000000020110000000100000", "0800000000000000000000000900000000000000500000008000000704005000600", "0000000008080000001000000040000800000090000000000900000008000000000", "0080040000000007000060030000000000050070000000000000050000000000000" };
    assertEquals(78, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case74() {
    String[] chocolate = { "05000000090002005002000000000000000000000000000000000000000020080", "00000100000000000800000060000607000000000006000008000000000380080", "00000500001000000091000089012000000040000000000706000700000050003", "00000000000040000000050600000000050000000000000000007600300010000", "01400000000007000000000000000000000000900000300000000000000000097", "00000000410009930000000000000003000008300000007300000080000000000", "06000030000000000000000000000000069000707000000000000005000000100", "00000000000000008200000030000070000000000007001000000000000000000", "00000030006090000000000000000000000000000000400000910000006000600", "00000000000000006030984000000000006800000000000000000000000040000", "07000100000004750000050000000000010000006000800000070300000004000", "00000900000701000020000030000000300500050000000090200000000000000", "00000000000000600008000090006000000000000000000004007000000000000", "00000000000000000080000030000000060050000006000300000300000070000", "00000020000050000000000000002000006000000000000007000000007000000", "00000000000200005000000700000000000010070000000300000700090004000", "00502000500040000003900000000000000001000000000010097000000000000", "10040040000000000007002070000000000090000000000000009000000000001", "02000000000000000002900200500400007000003020020000000005000000005", "00034060000000000000000000000000000007190000000000100000000086500", "00000400000000000000000010000000000000100080000000010000000000026", "00000002000000000000000000000000000000800001000005300200640000000", "00000000000000900700000000000049000000000080000000000000030000000", "00600000200009001000000021000000000000000000000000000000002000000", "00001006700000000000000000000100000000003600090000080000000000005", "00008070000000020909002700000000000000000060000800000500050037000", "00005000000000001000000000000603000001000000000000000000004006000", "00100000100080000000100000009000000000000000000000008000000000090", "00000900001080350000001010000000004600000005000000090070000000000", "00000000000001300000000000000000000000000800000090008040000500801", "60000500000020000100000050000000001000000000000000003000000000500", "00000000300500000800000000000000000600000000000000000000000506000" };
    assertEquals(69, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case75() {
    String[] chocolate = { "0027007086000000000000008004000000060000000034000000000008000", "0000000078005005000800000000090400000000000109000000030000000", "0000000700500000000020000000000000000000000000045000000000500", "9400000000000000000300000000000000000000300050000000000000000", "0000004059000780000060030000000001000000000090000000200000000", "0700000006030000000880000020000000000002100000005000000000006", "7000007110075000006000000000000002000000020000000400009000100", "0000000000000000000000000000000000570600000000000000003000000", "0000007000000000090000000000200000008000100000000000000007000", "0800002003000000000000900000000070000003060000009003005000000", "0000470000010000000085003000000000000000000000000708000250000", "0430700000000000000010009000000700000800000008030050030500000", "0000000000000000000000020000000000000090000000000000000000004", "0000000500070000000000000003000000000000005010800000003000000", "0000000000034004000700000000006000002600000003002000300000800", "0100000600305000000000000000000000000600205000002000000000000", "0000800090000000000806200000000000000009000007000000000010000", "0500030000005000003000200400009000000000000900000000000000000", "0030000000000000000000000000090000000010050000000500000800000", "1000000000000000000000036000000020000300000300800000000000000", "0000000000000704080000000700000000000080000000000000000040300", "0000000200020090000000000600000000000000000009000000000040080", "0000000000000000000000000400090007500000009000000005000900040", "0000000970000000000000000005094000002000000000040000000000000", "0008000000000000200000006000000700000403000000000306000000000", "0000000000000690000006010000000000000000008001000000000000000", "0000090000800030400020000000000000000000000001009080000000000", "0000300000000000000000000000070000400000103000000000100000800", "0000000700008000000000000000000000000070400000000060000000200", "0000210000020000000000040000005000000000000000000000000000080", "0000025000000480000009090000000000000005000000000000070000000", "0000000000000060000009200000000040600000000000000027000000000", "0080000200000004000000901000000000000000000010000000000000000" };
    assertEquals(62, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case76() {
    String[] chocolate = { "00000000070060000000000000700000020080000000900000000900001000003000", "00000440000000000701000300000900200000000000000000000000000005000000", "00500100000000600000004000000600090000000007006500700300000000000000", "00000000700000000000007000000000000900200600000500000700000000086000", "00000000600000000000000040800000000004800100000100000000000000050001", "00000500000600000000043010700090000000934000000000000000200000000040", "00000000000000000000000080000000000100000000003000000008001800004200", "00002000000000004000070000000900003000900000000000000000000000000000", "00000007000000000006000000000000021000060040000000000000006000000900", "00000000000000000000020400000030200000009000000005000048600000000004", "00000000060000240000000007018040000000000000007009060050900000050000", "00800000007000007500600001000000000030000000007000000049000000060002", "00000000000700070000000000020001900000000000000000000000000000000000", "02200000000000000000600000000000000008000700500000400600000003000010", "05090000000000000080000900100000000000000000000006000000080800000000", "00000000000400000900005000000000000000000000000000000000000000006003", "00000000000300001000000009000000050000080170800000750000005000007010", "00001000000000009040000000000002000000000040000000094007090000000000", "07000100040000000000027000000000000880050000050620000100700000503000", "02000000000080000002000000020000000000000600000000000000000000000900", "00008000000000050001000004000000330001600900000010000106000000000001", "00040690000000000300000000400000010040010100000000910400000000000000", "00000000000000000070006000500000060000004001107007000002000000000000", "05060000000006100000000000000000600000000000400000000002000000000000", "00100047300500000040030000100000000050087200060000000000100500000000", "00000010000000200000000909000000000800000000000000300050040000562000", "00000008000000000000000000000000000020000000000100800800800040000000", "00000000000007100000000061000000040000200000009000000800600800000000", "06000000050000300000700000062000000000000503000000001000000000000000", "00000000000090000000000006000000300030001800000000000006009000001200" };
    assertEquals(71, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case77() {
    String[] chocolate = { "01004000000300000002000000090009000000000300000001000090230000700000", "00000000000000000090000008300009008000000000000000000000000030000000", "00000000010000000000800800000000000000000000900030400000000000000000", "00000000000000000000000500000009900006000000000000000040000000000000", "50000001000600006000060000000000000200000008000000000408200000000003", "00002200006900000000000000000902000890000000500205000009600000000000", "00000040000000000000000000008000000000000007000000800000000000000040", "00000000708000002002000040000162000000000350000000000000004000008100", "00000009000006020000000000000050000000000000000000000000004000000000", "00000000060950000000000900082060000800000000000000000000001000000000", "00000009000400004000200008000000000000000000000000000000000008400003", "00000020000000000000090046000100000300900007000000009006000040000200", "01000000000320000000000000000000020000000000806002002709000000000000", "00000050000000300000000400010018560860000000000400000000003020053000", "73000800000000930000000000000090000000000000008100003003000000050000", "00000006090000000000000000000002050000040000000000000010000040000000", "70000000000000090000000500000000000000000001000100000020000090000000", "00000000000000000000000000000000000040000000100050009205000000600204", "00000630000000000000000100040000000980008023096000000000000000000200", "60000090000000000000000000005000000800040000080200800000090000000000", "09000902500000000000000000000004000000000000000000600000002000000000", "00040000000000007000040000200000500000040080000000000100000000002000", "00002000070000060000030050000000020000000000003000000000003080000900", "00000003000000000000000000000010000000000100000000000000000000000070", "00100001000007008000000000070090000000006000510000804000000000000004", "01000000000080000020800000000060009073009000000000001900001060000560", "00000000000020060000000000015004064002000000000400002000100000000000", "00000000000000000000000000000000000003000000000000000010070000010000", "00000020000990800005800000000500000000000000000000000000020000000600", "00700000000000000000000000000080000000000004380200000000000005300007", "00700000050000900000000000000000000000000000500000800000300000000000", "00000000001000000000007008000000000002000000000000080000000000000000", "00000000000000000000600000909000005009000002000800000000000000000020", "50000080001001000000030076000000200010007070000000008000006008000080", "00003000000000001000000002000000000070000700200000000050000000000030", "00090000000000502680000000000000000000030000000000087000000000000000", "00000000000000000003000704000000000000010000001000000000010007600000", "00400080000000068000006000000000000060000000000000000500000000000009", "90050000500000000008000000000000000000000000000300042050000000003710" };
    assertEquals(87, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case78() {
    String[] chocolate = { "007009160000009000007000209006000080003000000004000000002000400", "000080000000060100000000000000000000000940000000000000000000000", "000000300000000000000000650000000001000004005500000000000000000", "000060000000060002000000000000000000000000080000000000300000000", "120000910000070003790000060300000000000000400000000005000043000", "770700007000000000000000000400000000000000000000000020000000000", "000000000009000000007000000400000000400000006000000000000500045", "000000000000800000000000003000000000000000000000030308000000000", "000040000070000000340000000000000006000003000000000000740093600", "000250000000000000050000010830030000000000000600080001037000000", "000006000900070006000000206000000060000000000000070000000000000", "090090030000001000005000000000001007000000000004000000000000000", "003000000070000000002000000000000000000000007080170000000000000", "304000800001200000000000000000500000000000000060800300100005800", "000008000000000000000000000000003000000050002007000000000007000", "000000040100000006000000000007000000000110000000000070005000002", "000000005500000090000000000000005000002002000000009000006000700", "907000000000100000005000000030009000050900000000100000000000000", "100000000000300000005000008000200000000900000030000000000100000", "005900090000000010000000008000000400000000021900000000000000002", "006000200000000100000000000000000009000000007000000000000000000", "000000000000000005000000000000009000000008000000067060000000000", "000000000000000000000000500000000000106000000000409000000500800", "000000100520001000000700890000000000000070000000000000000000000", "000003000000000000000000001000000006000300008000000000004001000", "000509900000000000000040000000000000070000000000300000090020000", "020600000000200670000060000000000000500370000000000100000000000", "004000800000000700000000000000000080089305000000020000000001080", "000000000040000300000060000000000000005000000000070060000000006", "000000000000000006000000090071002000000407000000000000030700002", "000060000000000000000000010000006000000000020000200000000000000" };
    assertEquals(60, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case79() {
    String[] chocolate = {};
    assertEquals(25, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case80() {
    String[] chocolate = { "0000000000000000000000000000000000000000000000000000000000000000600000", "0000000000000000000000000000000000000000000000000000000000000000000000", "0000000000200000000000000000000030000000000000000000000000000000000000", "0000000000000000000000000000000000000000000000000000000090000000000000", "0000000000000000000000000700000008000000000000000000007000000000000007", "0000000000000000000000000000000000000000000000000000000000000080000000", "0000000000000000000000000000000070000000000000000000000000000000000000", "0010000000000000000007000000000000000000003000000000000000000000500000", "0000000000700000000000000000000000000000000000000000000000100000800000", "0000000000000008000000000000200000000300000000000000000000000000000000", "0000000000000000000000000000000000000000005000000000000000000000057000", "0000006000000000000000000000000000000000000000000000000000000000000000", "0000000000000000050008000000800000000000020000000000000000000000000000", "0000000097000000000000000000000000000000000000000000000000400000000000", "0000000000000000000000000000000000000000000000000000000000000000000000", "0000000000000000000000000000000000000100003000000000500001000000000000", "0000000000000000000100000000000000008000000000000000000000000000000000", "0000000000000000000900000000000000000000000000000000000000000000000000", "0000000000000000000000000000000000000000000000000000000000000000003000", "0000000000000000000001000000000000040000000000000000006000000000000000", "0000000000000000000000000000000000000000000000000080000000000000000050", "0000000000000000000000000000000000500000000000000000000006000001000000", "0000000000000000000000000000000000000000000000000000000000000000000200", "0006000000000000000000000000000000000000000000000000700000000000000000", "0300000000000000000000000000000000000000000000000000000020000000000003", "3000000000000002000000000000000000000000000000000000000000060000000000", "0000000000000000000000000000000000000000000000000000000000000000000000", "0000000000000000000000000000000000004000000000000000000000200000007000", "0060000000000000000030000000000000000000000010000000000000000080000000", "0000000000000000000000050000000000000000005000000000000000000000000000", "0000004000000000000000000000000000400000009000000000000000000003000000", "0000000000000000000000000000000000000000000040000000000000000000000000", "0000000000000000000000000000500000000007000500000000000000000000000000", "0000000000700000000000000000000000000000000000000000000000000008000000", "0000500000000000000000008006000000000000000000000000000000000000000000", "0000000000000000000000200000000030000000000000000000000000000000020000", "0000000000000000000000000000000000000000000000000002000000000000000000", "0000000000000000000000000000000000000000000000000000000000000000000000", "0000000000010000000000000008000000000000000000000000000000000000000000", "0000000000000000000000000000000000000000000000000000000000000000000000", "0000000000000000000000000000000000000600000000000000000000000000000000", "0000000004000000000000000000000000000000900000000000000000000000000000", "0000300000000000000000080000000000000000000000000000000000000000000000", "0000000000000000000000000300000020000000000000000000000000000000000000", "0000000000000000000000000000000000000000000000000000000000000000000001", "0000000000000000000000000000000000000000000000000000000000000600000070", "0000000000008000000000000000000000000000000000000000000000000000000000", "0000000000600000000700000000000000000000000000000000000000000007000000", "0700000000000000000008000000000000010000000000000000500000000000000000", "0000000000000000000000000000000000000000000000000000000000000000000000", "0000000000000000000200000006000000000000000900000000020000000000000000", "0000000000000000000000000000000000000000000000003030000000000000000000", "0000000000000000000000000000000000000000000070000000000000000000700000", "0000000000000000000000000000000000000000000000000000000000000000000000", "0000000000000000000000030000000000000000000900000000000000000000090000", "0000000000000000000000000000000000000000000500000070000000000000000000", "0000000000000000000000000000020000000000000000000000001060000000000000", "0000000000000000000000000000000000000000000000000000000000000000000000", "0000000000000000000000000000000004000000000001000000000000000000000000", "0000000000000000090000000000000000020000000000000000000000700000000000", "0000000000000000000000000000000000000000000000000000070000000000000000", "0000000000000000000000000000000000100000000000000000040000000000000000", "0050000000000000000000000000000000000000000000000000000000000000000300", "0000000000004000000000000000020040008000000000000000000000000000000000", "0000000000000000000000000000000900000000000000000000000000000600000000", "0000000000000000000000000101000000000000000000000000000000000000000000", "0000000000000000000000000000000000000000000000000000000000000000000000", "0000000000000000000000000000000000002000000000000000000000000000000000", "0000000000000000000005000000000000000400000000000000000000030000000000", "0000000000100000000000005000000000000004000030000000000000000000000000", "0000000000000002000000000000000002000000000000000000000000000000000000", "0003000000000000000000000000000000000000000000000006001000000000000000", "0000000000000000000000000000000000000000000000000020000000000000000000" };
    assertEquals(31, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case81() {
    String[] chocolate = {};
    assertEquals(29, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case82() {
    String[] chocolate = {};
    assertEquals(24, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case83() {
    String[] chocolate = {};
    assertEquals(26, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case84() {
    String[] chocolate = {};
    assertEquals(30, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case85() {
    String[] chocolate = {};
    assertEquals(29, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case86() {
    String[] chocolate = {};
    assertEquals(32, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case87() {
    String[] chocolate = {};
    assertEquals(142, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case88() {
    String[] chocolate = {};
    assertEquals(133, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case89() {
    String[] chocolate = {};
    assertEquals(127, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case90() {
    String[] chocolate = {};
    assertEquals(153, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case91() {
    String[] chocolate = {};
    assertEquals(152, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case92() {
    String[] chocolate = {};
    assertEquals(123, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case93() {
    String[] chocolate = {};
    assertEquals(137, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case94() {
    String[] chocolate = {};
    assertEquals(136, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case95() {
    String[] chocolate = {};
    assertEquals(152, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case96() {
    String[] chocolate = {};
    assertEquals(137, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case97() {
    String[] chocolate = {};
    assertEquals(144, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case98() {
    String[] chocolate = {};
    assertEquals(139, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case99() {
    String[] chocolate = {};
    assertEquals(0, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case100() {
    String[] chocolate = {};
    assertEquals(2916, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case101() {
    String[] chocolate = {};
    assertEquals(562, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case102() {
    String[] chocolate = {};
    assertEquals(690, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case103() {
    String[] chocolate = {};
    assertEquals(522, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case104() {
    String[] chocolate = {};
    assertEquals(420, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case105() {
    String[] chocolate = {};
    assertEquals(225, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case106() {
    String[] chocolate = {};
    assertEquals(200, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case107() {
    String[] chocolate = {};
    assertEquals(431, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case108() {
    String[] chocolate = {};
    assertEquals(990, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case109() {
    String[] chocolate = { "111111111111112222222222233333333334444444455555556666666777777888888999", "111111111111111222222222223333333333444444445555555666666677777788888899", "111111111111111122222222222333333333344444444555555566666667777778888889", "111111111111111112222222222233333333334444444455555556666666777777888888", "111011111111111111222222222223333333333444444445555555666666677777788888", "110001111111111111122222222222333333333344444444555555566666667777778888", "100000111111111111112222222222233333333334444444455555556666666777777888", "000000011111111111111222222222223333333333444444445555555666666677777788", "000000001111111111111122222222222333333333344444444555555566666667777778", "000000000111111111111112222222222233333333334444444455555556666666777777", "000000000011111111111111222222222223333333333444444445555555666666677777", "000000000001111111111111122222222222333333333344444444555555566666667777", "000000000000111111111111112222222222233333333334444444455555556666666777", "000000000000011111111111111222222222223333333333444444445555555666666677", "000000000000001111111111111122222222222333333333344444444555555566666667", "000000000000000111111111111112222222222233333333334444444455555556666666", "000000000000000011111111111111222222222223333333333444444445555555666666", "000000000000000001111111111111122222222222333333333344444444555555566666", "000000000000000000111111111111112222222222233333333334444444455555556666", "000000000000000000011111111111111222222222223333333333444444445555555666", "000000000000000000001111111111111122222222222333333333344444444555555566", "000000000000000000000111111111111112222222222233333333334444444455555556", "000000000000000000000011111111111111222222222223333333333444444445555555", "000000000000000000000001111111111111122222222222333333333344444444555555", "000000000000000000000000111111111111112222222222233333333334444444455555", "000000000000000000000000011111111111111222222222223333333333444444445555", "000000000000000000000000001111111111111122222222222333333333344444444555", "000000000000000000000000000111111111111112222222222233333333334444444455", "000000000000000000000000000011111111111111222222222223333333333444444445", "000000000000000000000000000001111111111111122222222222333333333344444444", "000000000000000000000000000000111111111111112222222222233333333334444444", "000000000000000000000000000000011111111111111222222222223333333333444444", "000000000000000000000000000000001111111111111122222222222333333333344444", "000000000000000000000000000000000111111111111112222222222233333333334444", "000000000000000000000000000000000011111111111111222222222223333333333444", "000000000000000000000000000000000001111111111111122222222222333333333344", "000000000000000000000000000000000000111111111111112222222222233333333334", "000000000000000000000000000000000000011111111111111222222222223333333333", "000000000000000000000000000000000000001111111111111122222222222333333333", "000000000000000000000000000000000000011111111111111222222222223333333333", "000000000000000000000000000000000000111111111111112222222222233333333334", "000000000000000000000000000000000001111111111111122222222222333333333344", "000000000000000000000000000000000011111111111111222222222223333333333444", "000000000000000000000000000000000111111111111112222222222233333333334444", "000000000000000000000000000000001111111111111122222222222333333333344444", "000000000000000000000000000000011111111111111222222222223333333333444444", "000000000000000000000000000000111111111111112222222222233333333334444444", "000000000000000000000000000001111111111111122222222222333333333344444444", "000000000000000000000000000011111111111111222222222223333333333444444445", "000000000000000000000000000111111111111112222222222233333333334444444455", "000000000000000000000000001111111111111122222222222333333333344444444555", "000000000000000000000000011111111111111222222222223333333333444444445555", "000000000000000000000000111111111111112222222222233333333334444444455555", "000000000000000000000001111111111111122222222222333333333344444444555555", "000000000000000000000011111111111111222222222223333333333444444445555555", "000000000000000000000111111111111112222222222233333333334444444455555556", "000000000000000000001111111111111122222222222333333333344444444555555566", "000000000000000000011111111111111222222222223333333333444444445555555666", "000000000000000000111111111111112222222222233333333334444444455555556666", "000000000000000001111111111111122222222222333333333344444444555555566666", "000000000000000011111111111111222222222223333333333444444445555555666666", "000000000000000111111111111112222222222233333333334444444455555556666666", "000000000000001111111111111122222222222333333333344444444555555566666667" };
    assertEquals(470, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case110() {
    String[] chocolate = {};
    assertEquals(547, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case111() {
    String[] chocolate = {};
    assertEquals(146, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case112() {
    String[] chocolate = {};
    assertEquals(288, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case113() {
    String[] chocolate = {};
    assertEquals(428, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case114() {
    String[] chocolate = {};
    assertEquals(548, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case115() {
    String[] chocolate = { "4444444", "4444444", "4444444", "4444444", "4444444", "4444444", "4444444", "4444444", "4444444", "4444434", "4444333", "4443333", "4433333", "4333333", "3333333", "3333333", "3333333", "3333333", "3333333", "3333333", "3333333", "3333333", "3333333", "3333333", "3333323", "3333222", "3332222", "3322222", "3222222", "2222222", "2222222", "2222222", "2222222", "2222222", "2222222", "2222222", "2222222", "2222222", "2222222", "2222212", "2222111", "2221111", "2211111", "2111111", "1111111", "1111111", "1111111", "1111111", "1111111", "1111111", "1111111", "1111111", "1111111", "1111111", "1111101", "1111000", "1110000", "1100000", "1000000", "0000000", "0000000", "0000000", "0000000", "0000000", "0000000", "0000000", "0000000", "0000000", "0000000", "0000000", "0000000", "0000000", "0000000", "0000000", "0000000" };
    assertEquals(35, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case116() {
    String[] chocolate = {};
    assertEquals(545, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case117() {
    String[] chocolate = {};
    assertEquals(400, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case118() {
    String[] chocolate = {};
    assertEquals(472, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case119() {
    String[] chocolate = { "3333333222222222", "3333332222222222", "3333322222222222", "3333222222222222", "3332222222222222", "3322222222222222", "3222222222222222", "2222222222222222", "2222222222222222", "2222222222222222", "2222222222222222", "2222222222212222", "2222222222111222", "2222222221111122", "2222222211111112", "2222222111111111", "2222221111111111", "2222211111111111", "2222111111111111", "2221111111111111", "2211111111111111", "2111111111111111", "1111111111111111", "1111111111111111", "1111111111111111", "1111111111111111", "1111111111101111", "1111111111000111", "1111111110000011", "1111111100000001", "1111111000000000", "1111110000000000", "1111100000000000", "1111000000000000", "1110000000000000", "1100000000000000", "1000000000000000", "0000000000000000", "0000000000000000", "0000000000000000", "0000000000000000", "0000000000000000", "0000000000000000", "0000000000000000", "1000000000000000", "1100000000000000", "1110000000000000", "1111000000000000", "1111100000000000", "1111110000000000", "1111111000000000", "1111111100000001", "1111111110000011", "1111111111000111", "1111111111101111", "1111111111111111", "1111111111111111", "1111111111111111", "1111111111111111", "2111111111111111", "2211111111111111", "2221111111111111", "2222111111111111", "2222211111111111", "2222221111111111", "2222222111111111", "2222222211111112", "2222222221111122", "2222222222111222", "2222222222212222", "2222222222222222", "2222222222222222", "2222222222222222", "2222222222222222", "3222222222222222" };
    assertEquals(68, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case120() {
    String[] chocolate = {};
    assertEquals(783, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case121() {
    String[] chocolate = {};
    assertEquals(418, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case122() {
    String[] chocolate = { "0000000011111111111111122222", "0000000001111111111111112222", "0000000000111111111111111222", "0000000000011111111111111122", "0000000000001111111111111112", "0000000000000111111111111111", "0000000000000011111111111111", "0000000000000001111111111111", "0000000000000011111111111111", "0000000000000111111111111111", "0000000000001111111111111112", "0000000000011111111111111122", "0000000000111111111111111222", "0000000001111111111111112222", "0000000011111111111111122222", "0000000111111111111111222222", "0000001111111111111112222222", "0000011111111111111122222222", "0000111111111111111222222222", "0001111111111111112222222222", "0011111111111111122222222222", "0111111111111111222222222222", "1111111111111112222222222222", "1111111111111122222222222222", "1111111111111222222222222222", "1111111111112222222222222223", "1111111111122222222222222233", "1111111111222222222222222333", "1111111112222222222222223333", "1111111122222222222222233333", "1111111222222222222222333333", "1111112222222222222223333333", "1111122222222222222233333333", "1111222222222222222333333333", "1112222222222222223333333333", "1122222222222222233333333333", "1222222222222222333333333333", "2222222222222223333333333333", "2222222222222233333333333333", "2222222222222333333333333333", "2222222222223333333333333334", "2222222222233333333333333344", "2222222222333333333333333444", "2222222223333333333333334444", "2222222233333333333333344444", "2222222333333333333333444444", "2222223333333333333334444444", "2222233333333333333344444444", "2222333333333333333444444444", "2223333333333333334444444444", "2233333333333333344444444444", "2333333333333333444444444444", "3333333333333334444444444444", "3333333333333344444444444444", "3333333333333444444444444444", "3333333333334444444444444445", "3333333333344444444444444455", "3333333333444444444444444555", "3333333334444444444444445555", "3333333344444444444444455555", "3333333444444444444444555555", "3333334444444444444445555555", "3333344444444444444455555555", "3333444444444444444555555555", "3334444444444444445555555555", "3344444444444444455555555555", "3444444444444444555555555555", "4444444444444445555555555555", "4444444444444455555555555555", "4444444444444555555555555555", "4444444444445555555555555556", "4444444444455555555555555566", "4444444444555555555555555666", "4444444445555555555555556666", "4444444455555555555555566666" };
    assertEquals(270, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case123() {
    String[] chocolate = {};
    assertEquals(508, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case124() {
    String[] chocolate = {};
    assertEquals(870, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case125() {
    String[] chocolate = { "5555555555444444444444444333333333333333444444444444444", "5555555554444444444444443333333333333333344444444444444", "5555555544444444444444433333333333333333334444444444444", "5555555444444444444444333333333333333333333444444444444", "5555554444444444444443333333333333333333333344444444444", "5555544444444444444433333333333333333333333334444444444", "5555444444444444444333333333333333333333333333444444444", "5554444444444444443333333333333333333333333333344444444", "5544444444444444433333333333333323333333333333334444444", "5444444444444444333333333333333222333333333333333444444", "4444444444444443333333333333332222233333333333333344444", "4444444444444433333333333333322222223333333333333334444", "4444444444444333333333333333222222222333333333333333444", "4444444444443333333333333332222222222233333333333333344", "4444444444433333333333333322222222222223333333333333334", "4444444444333333333333333222222222222222333333333333333", "4444444443333333333333332222222222222222233333333333333", "4444444433333333333333322222222222222222223333333333333", "4444444333333333333333222222222222222222222333333333333", "4444443333333333333332222222222222222222222233333333333", "4444433333333333333322222222222222222222222223333333333", "4444333333333333333222222222222222222222222222333333333", "4443333333333333332222222222222222222222222222233333333", "4433333333333333322222222222222212222222222222223333333", "4333333333333333222222222222222111222222222222222333333", "3333333333333332222222222222221111122222222222222233333", "3333333333333322222222222222211111112222222222222223333", "3333333333333222222222222222111111111222222222222222333", "3333333333332222222222222221111111111122222222222222233", "3333333333322222222222222211111111111112222222222222223", "3333333333222222222222222111111111111111222222222222222", "3333333332222222222222221111111111111111122222222222222", "3333333322222222222222211111111111111111112222222222222", "3333333222222222222222111111111111111111111222222222222", "3333332222222222222221111111111111111111111122222222222", "3333322222222222222211111111111111111111111112222222222", "3333222222222222222111111111111111111111111111222222222", "3332222222222222221111111111111111111111111111122222222", "3322222222222222211111111111111101111111111111112222222", "3222222222222222111111111111111000111111111111111222222", "2222222222222221111111111111110000011111111111111122222", "2222222222222211111111111111100000001111111111111112222", "2222222222222111111111111111000000000111111111111111222", "2222222222221111111111111110000000000011111111111111122", "2222222222211111111111111100000000000001111111111111112", "2222222222111111111111111000000000000000111111111111111", "2222222221111111111111110000000000000000011111111111111", "2222222211111111111111100000000000000000001111111111111", "2222222111111111111111000000000000000000000111111111111", "2222221111111111111110000000000000000000000011111111111", "2222211111111111111100000000000000000000000001111111111", "2222111111111111111000000000000000000000000000111111111", "2221111111111111110000000000000000000000000000011111111", "2222111111111111111000000000000000000000000000111111111", "2222211111111111111100000000000000000000000001111111111", "2222221111111111111110000000000000000000000011111111111", "2222222111111111111111000000000000000000000111111111111", "2222222211111111111111100000000000000000001111111111111", "2222222221111111111111110000000000000000011111111111111", "2222222222111111111111111000000000000000111111111111111", "2222222222211111111111111100000000000001111111111111112", "2222222222221111111111111110000000000011111111111111122", "2222222222222111111111111111000000000111111111111111222", "2222222222222211111111111111100000001111111111111112222", "2222222222222221111111111111110000011111111111111122222", "3222222222222222111111111111111000111111111111111222222", "3322222222222222211111111111111101111111111111112222222", "3332222222222222221111111111111111111111111111122222222", "3333222222222222222111111111111111111111111111222222222", "3333322222222222222211111111111111111111111112222222222", "3333332222222222222221111111111111111111111122222222222", "3333333222222222222222111111111111111111111222222222222", "3333333322222222222222211111111111111111112222222222222", "3333333332222222222222221111111111111111122222222222222", "3333333333222222222222222111111111111111222222222222222" };
    assertEquals(414, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case126() {
    String[] chocolate = {};
    assertEquals(638, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case127() {
    String[] chocolate = { "95998", "21945", "23451", "99798", "74083" };
    assertEquals(3, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case128() {
    String[] chocolate = { "75356291270936062", "61879202375922897", "36129319478450361", "06320615547656937", "45254744307868843", "14920689266495048", "71727226106159490", "91771159776736563", "94812939088509638", "56115984810304444", "76317596217857418", "59753883189643338" };
    assertEquals(44, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case129() {
    String[] chocolate = { "030766981030923830285666940592621425114182153526432716486253227463586992505", "672431231385527863025344953464898869267814236693461125224207490654612302197", "824079571476937598262769951596334052617589760834502403704321156832158368969", "382180750615287689594624971015132364715480326642408691907166414979821110618", "813673466972538405657052340062704354513162663981141350472227497693573089565", "457058648574395509749146150516844365332232466177248375831185800147217841224", "759784063486690372846693867223405384449948815649563899980905388237179216000", "732381520004899679071429149754727472482124342016783522568856861569056380362", "819771988641253138597556655051889882304343455455122298741228473794235222137", "205199196735910460413202924868377852019463624829338097381914868794667690432", "821054684793485106523411136886016984924597789919430765045725176246269007431", "300819371687739230420617530474220938227646699331230153569405029711911489738", "548697552174422641715050207454024094850857785112693572758464866688341488728", "733278133953681228865818499527839744897053490058178481059804369132415579583", "570859243272256951872689687206121655460778550249515974757789803902768288308", "152306123175712595825825538432245941661728333587493284267347508482335912086", "210520802832632071746074633599219588409361605218642638773930795227146599688", "362427999922413816868942005916084973613040280441383364759797056919507894276", "255942225419521386646755658779444438319245999841889185990476362294526147374", "518627324179590634788569326526654902014534446402996359754894706224478565490", "078152399351175595650008900401960403283748701381323493353200944123273931352", "034828077531363774822258707824284763913125132008867645815586627559669234259", "156428148551799451035116661748038886627534282880999096258208024107382624351", "812728068924336086632075600060344654049286438003344286467257391284259924935", "171462204745517361009643657263874627432095451035427626586445214262805427116", "177188854123108394327091911008722307837941768800756085692305669737183303066", "366884534694757472736606442065294836741309086856726052659359575642049791250", "665147921335141316107242821928239235599750818536498336258024494490203557993", "360313989107423641233297660333854974156693202347580141340668401418925392328", "068842522412691558528264409666442797345338568296198121785736554072778955764", "258770449607649165051633443601319938923314125286544217363817791512500215395", "823665151993689113799785814668575637729232920447046924406382222298276945878", "068766238204922508101326531595454723714351762176302881970812881356921281285", "364525711060963367550644143633152245869127777938495602912762359658426206491", "482241105466456397569853604294876574470667142419686921914908181291238248767", "917401085562845913284392625673768122488384417733049796609331272592203672702", "581649835208130657594792215650556922462993418447765253599742586615839963097", "884353548554445839271334135910705631180484511650926197026646833343056531966", "971408450042413042759195826237484364359672723470563859280349748198338463342", "985683919033380972095144277250567874766485146442683584656210633722282285916", "916153794111350215787208718855290124859166058465157280613782155838722208999", "832939236688353878782807468813379005234674112172609317684807830483772920619", "694308059155064901421313978590992131660448222887002401080412024649323130204", "009487351985554044777329662596896874579238238150252929422956845750129663984", "274510488841859909942476408191063148898723368951818604636596453951571895733", "846218706442754367230148043818984233609522150379339835259719476745513762775", "795603451971626017776199396346553263991945310416974498831529611592683648536", "958275338472847838936615873610258791401105931662609439761456447739712720547", "424955179028485046163137773187437880829284341130408809618573140684496166867", "702601283529895831599431782021948904713870755701461309033294633344467372027", "434485971725327962370321922139566966972530900386738224381876837937491410761", "757962938158035861887895489173693638899109508085462542116415856186635669682", "709236687389615192653887349030354080651826386394740762956417429284397546035", "046901159287177373654587156306022290141284308621726100740348615146313575799", "894921104320928058337510863416637348956465243943631050800955945166377264275", "718169926819430438495873594191310751045797697893418307295413802573754490530", "755006165108084556331874200265800990226463944259287537743750846470827559304", "342906555627374321948524723049058106810948549458060217452696099546238402334", "817132666120627495503846238611262769399587702365009652871940481809249051385", "931915169088167712261377703471557182093196767308541905243185750559690888261", "833343536279602394815624497157487075772735324554936881821337799621115010571", "516591414875433124197411055964211445926959544476983307524558892379341967245", "863413168036327030209702151338802415433956515185577067608926342511560946209", "778262303901274580569442068545041564264695850781683708794624137998061232269", "638327228690575991432708917767518035233053851766232168637144124732652396573", "354073307716569092287136371001372635487190271941678634298149713821470873196", "390385498959620621543938676404477095154211526235384644403239460807463610723", "208569442789926756432488160463281729694549640469525791788530837378805439057", "978748048598604436709486115553757259098124400973940769974985934978817029574", "505213695970706811615227207967504548586706096818763925021419697816395446703", "882977098092367905270515096390974555228310431899714552444404234672329933773", "533643255828989950145535589034129457981110425858671390923275386354804942508", "496941509067105859616314192740293613297554823345948404699317003476057080463", "422309204729081469002366957529631797267182931702806131183677342696218907185", "473012203279156830090190331596237397464636113059337599497698206900296446721" };
    assertEquals(1514, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case130() {
    String[] chocolate = { "174094882455171152761423221685761892795431233411387427793198650286024865090", "061389344606618496378829135984076361542097372601657541200146071777733599818", "266038012509478351201640618984143988087783837107349651099683484992553337438", "088068198972282890781586124258626539246182119762952003918195325258677229419", "698255491250839396799769357665825441616335532825361862146291503649293440596", "342887581257444442930778730382520372975343211325351222640703400531067500454", "956482168314849207060705673849265774579830223671554026061117300483012903885", "770893074783710083450145620356667677191627276513995926532444279237315785832", "411595106453089134746365281031552217482363035280722591085079053410485925413", "958279617719034175332412908745680774313630190429314820559328748143552689295", "945058801322270313370955837837939182801848609300876356583948397645861551964", "542532682663945625356614462682551015176002433628234343684739800880514363921", "982340231989891351425389287014819359798014755509282450440511590838726938103", "384801541373585690893606978941566666714061214952341523168827712604946036245", "881214982452998386986623826275782780208928205527678781609589000725521486468", "983551558405472149903035076783644195574734088152324666290493119955560594634", "905391288186024902215444250421277955403412298227858394469856607272647132163", "832860126054679347881638761723785858733108109249157334220127702410373959720", "286708183036202841837581704881367895556630088230650972282944827258473951902", "831431040790814079538232104075905120989173307660289899942087873076421916033", "622143260549608274076012938515668898707915863945382394851328164677964192631", "597026176253407553188801750590935427267220117591817866992665840378311257621", "611574856498432538327068011953631534031790352912617015229051836886166704989", "498756486878095690013558017746707412183571476823027885971347137127534455141", "266330081381698013939365540506551896225052520672800683064370520756181856592", "652321228887400599530995111233972330484392490574766309080151039589625763859", "302515779417857884238413041772131315150512215538928427584094435841033406755", "609835790487402354166452912499376587897716501326057449061190421970933313569", "598839513628819813343927217617306025607209543256088157579237279363810687651", "295615413850921335290485733030321108187289230282558124988271795034015342329", "492490449853230171988329332834020121076680588957322200231687728795929130819", "202475810071693037304323102771307036319561510973081517179498001850892808514", "736168086571028355614938323373014878989791958969331414576346383427890140734", "945689899708456936200651619735006518272452258698355058150734156417040610552", "583278527297631598954952522308728375418296898163754101228546773449183879711", "435291556790231987844435802949835043525777440411540286814764987386280980496", "828479407481822146693813645220103873314561219180477411981032503226336158219", "397213209274503297801147439967620962303519679275682463091876840379622730730", "736467401244634502016937915244134688703446718121231110891097745167839313963", "752071706717548175217531000500786491480899799960638036942044369189118635091", "082268977893056397743583336104742715722703609896402903224774531334352169884", "145730277702008645015732791140331583051025104064895622217478600213924154066", "813310589389843996977252328338578813512086553953548503508435812602216501773", "835132194230148661387944354427756690709867320153565468158533287696463210587", "003734620116534953437709154007123773339158880244336766148165968719167637127", "947182488162048594449945321743190738426987748783219374443513280903494439853", "812389851061818772823669651380761603104315895457446775268891980502960229267", "360521711532668158694662881687897905826971751644996155607507956853707523049", "858009774475923223197304378088127491936207200535774433864459244242532340237", "207761756790857425658828527673356944596929561783726910045636467639147500558", "869815606047864034100436105686767894510286707746229656406962912647082410036", "179802989747753912961149869748258256193713206899391134824914394952167251807", "574291844812846731585426646140466758115119076344572656296532163490565065332", "660620052056104940266407266851002138435087053563029937939302511833746719461", "282577842065056072444050662631755548998127792182979900642535197849198796956", "474486514988734577513379653402498042615610504870817280119103232281875626474", "370543738056826812662430205105801382845723891622138566893576957700259303761", "525953553668521026896258866167125249270049081001735695066236752566678645580", "044228650999387151998523107388596931191246808950468673317313427733655360956", "332996355147179965223709769569935818961845346415217548385231320008528871086", "322270847434446055372190888091678659805467640188494640929124399776679394546", "986826758682435662649242966225652957443492133733054512856018927384267630293", "992229494846342833783759149176252286155962689064066354188447324325124950685", "419192322291750998980180684550860546293256357285489286888599429987831306634", "083766052073687948085724292015014005747752835978960901916014347969075549420", "973377053126424603527114965987840290582629698395701207656328558801945677183", "633835961194391926070938730868306853986056389605991754884117025688053437560", "610987953711731691427086497013119995935614395455037224305803065408848177809", "000204542168466628852769216076005584439636841155429240576044755918446510499", "587548602627315959897408472088602391379331256206177056122610553312572171228", "094931414304873282398508351583716090531420159042605242385053297374988809730", "761242863983510962548531708046968522217859929695062523161022103550080164490", "925140215163082564245211505172373098449505124060199370560857910269095991147", "513984344017417509581270967884851351472464814866609799341407622862389373764", "130320234375207608689439330070723731591818388847212670834192211351108124450" };
    assertEquals(1468, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case131() {
    String[] chocolate = {};
    assertEquals(1468, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case132() {
    String[] chocolate = { "879660433650433982062073640191587011296293510127397242019352110756543111422", "388504978150518569450296899665348423409497504171632220054995912056524950480", "938525608490375202925338497664565259092613517705416462683760695342395129346", "538928357816282386346401925875534337503580548912478732340931724483419764053", "997551189569049596767184493097720886953523540552514871269941908434090706805", "570132088995402560150583647610067783807129938883090811920651013231211429673", "132241104242945705287293608704820082453159558456072549468576617415831778437", "411939208069445304256151161237390778228602252875031685084239689429202775623", "832433945626954253397940784887633200624181182564071017482841372966369057568", "701860486036179926404848167112702019432038627036269861991691194905176119488", "491884879000559466211790931225093609710822861685023716447954745576498878510", "499499451475491162959717673875365760084250873503160376676324911162668557898", "669549462315938808025954334914685443487454527049314018635078686188310472541", "448233177796623280541120651597854074375594278359032166542789851799974955694", "706694410234674908434308125562741718726661470697412934748388097863095833946", "780246373168155454909742960282429280393390221008061690516362106663141646472", "573202183540700807702502109659340121573643746282596908277942546522768407340", "076371661576289828082165028302921751705026653890254489125184901720957291374", "501699626074662038461258243880160381073180552061242319445067491808849667797", "068878977051499405344867882954053142140770824728941647414292429523073102101", "254618400314310684629934857504434814597007212245589494029247612614028997255", "356960721857369051904603651014687008471554831331271536060934493769552662780", "717570851224273034911097246223300064093632354350891126508365238063189894692", "240808009431598127216632641045728194547304601399502449960991373457376750205", "045715977608594370259614357615018488801719111528755025234234860187899198633", "872649989704113755375523730791366661403630946427542253403947743250631409403", "102200963693587167767141139661289929252408597567236466613749380950472562700", "556868156134705359084354094107411549791044904022291849861505169757782941675", "096125748621302438851753477225574208929356084769047947810756883514279302916", "707635605533551133595804287468327205271777945877542623867556540852080886824", "095653809423037326870223722804990767149209631476848672934901707035936990430", "318857450893433897232402165824805828837714028399734170170353719378936809390", "817376828729143440969998355975470323945309857829596965792711957467255357511", "002908769131091057103510810883282536680211431214600017190062153391398074640", "627157126105228902094684266453013689285584317932929834553842906271368751539", "748909825857727901818924588415889685861140572118582065309350070133675473297", "838080595094666295195786657917623868618860718234162290023832120409442734082", "478985757822184206375759739872322436961479847179345211062681074206314650078", "877343429181898782275533918260218777738884175978856131909571096016584906503", "600469444980161956462594371082474592378936214653460415939898304028148897653", "676807463249244304697751674651685823719129582380375848959726543067440504458", "905180718057204655083240287686288824583333058041853688762805841415405539855", "163653084806966803174267830199222244976088647928120752043188550240005642782", "254066631511829046645134912510041037144975562930845797323239827769562783993", "695378525682963179367340386896733455488585646307157034290700906368646211400", "357064672542148033528237669566396523348400420841105769135324138512745909962", "972574523249142964576443592491414311975388649734637362707440400502054091880", "249041613777234686783445683217046743588436776941999644904066048862695284844", "937026211013891684591215098708331493610899718476507968585946496706758603169", "777233732189853342420456455656242585728425909113709264248027833132049848323", "157793479773440073233435403545281879173730200411162188795726766052057655230", "909824589019366452209711967090414423190407219483396626962637896548530367545", "878873555992124052058900139574137341043203225572346774359355256316495435913", "197027000851680653503280068296326125091196162152225577205111426438904644247", "241757802177999606009377250901194496728411539058962793431719439800363210863", "738765842598588748537780585142241021903844790890969011004370543693009554820", "549145887665701399913746088428088547248837001229871542274735163958647073847", "210365107311625182489390975009150256867762677838759560272372162616579682550", "425898593802897816844391522667074794200782848437663570978349595656404688155", "190856402997613213742150391946837932268002501223104594915834339132086441594", "935212447157592460050176269974842132944745842757052743117530499600237866946", "162232005745283643810072206498948217075774093219448050565728641907609567148", "979770125347820784067274033502248852927009329521007984394774163749351135986", "235027126182926716834671220236554584308846643755187373388148851858782976315", "797369405932403973516739613560701781296381459057351560894288739765085063580", "345718804096447314401143309227265082007061187024955664727500620113468987273", "975379169254988460062775397670136398477311479411496349886103237452005881725", "982449460271031708239456247149730255261624528731927079752838928488311822911", "878788836179275849827093353600653285883102986936363173430023784176819553275", "433537850267931573686902415270713127450014728051480644359713312336343436348", "037311194417689849363020455615851275557274047527093100027855363410730832101", "143045249757089803591026816636199469430843639587513217322402236153315790872", "136349266526439584030048453116189647403470595522799515081308394377964479749", "270893567583768662013258716177912373532225078123552073383199184361934538397", "021528798493063881055438389498832603968496520889328121600353931003766187547" };
    assertEquals(1478, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case133() {
    String[] chocolate = {};
    assertEquals(1350, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case134() {
    String[] chocolate = { "12942", "23456", "99798", "98998", "67675" };
    assertEquals(5, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case135() {
    String[] chocolate = { "879899443958633618317696252859327224998141746143842925787831959779232399787", "391856567752767765967497818737712563692475875415569548742679542293397524177", "868869815378889743648897962948286299381381783956667455369221584613214829427", "986133424421997438956995866458883267289668623269821212831552817555838567558", "535696326589522645296612641632359828796464712997347888766155539581827166777", "895752287473281629472318356923813547564184598246268193259532794563916788722", "227835359318629255517868153254751474456223186985818713995996248583893721328", "848863863127384554461745549985742549873683733661468594462979471393926436739", "175233585575886826698157226368499584932296294667872645188166624773744149824", "989221499196965146922426159674766741873651916969898154879757879169248362924", "234791874374368343273297943866382454346137179939511864226396799561478437773", "275938559632273143184442543246689921833671162998332218851226876842729577678", "292558835242339172512383956333775675688638741251664552197324339475186678377", "955992841291227971554278384218556623244368977239812271194389637272884243431", "867212963511241342645546797282846938835329275768864766143465354945793955773", "346791695113373834944529558225678616356622959523577799196887777754398956166", "716275273558262737476711758652539763351754164554382451421779658769691964731", "276918461278122687458762182456244886365718777839564119783732294859756995326", "759466483315983338882539188147164328228571685234782554672542486212685772715", "265146752587866318981524168847765952594736579297131866993495963972499454268", "657444868474943878846469991385183797815833125555237651576158952221512649618", "729816589228784654758844868513753443176112512268475277974979745183869941338", "693289597692452366194793842535677153473825336857596688132854679348253561359", "784271494386762752958726618244772354546156438563926156712317762529167941196", "417118249165466915188799217652536514467458256346849758122892973221355686569", "994861573381998241576223674498997495635661868635448712247734139251411186412", "144981432242321427787887271644565643326181721671479281153133958652776749417", "379753846864918151235924948929167373243525529744563388292674437722849534957", "544552152994254933482329337287326317181922118573246876825988639695321453832", "487273441965864141876958748566532658952983455841413512161558314123272769864", "915273156346498346393632632134417422268589841355233684854791946963272815888", "549483689483645147877244649895325913316312533543931847317189731673649719651", "492521438533992287847755339515694391352843547188416963178282724486722414374", "669553221388636984362259345221569175735464759958986254884359472621546164611", "726634827981194463731686714333432643469899857337388767674627515235883243836", "745597374875294376718478829629583286719662939841323277812949842969932849839", "725659267741972217336483963752394685737151676294497962644412633966548266161", "129872741694892594732921159288632477577748527294315921683931573921461443978", "249493664718784352481822717926775259478723545296564842969235156566592714174", "353527789152264511213776585745645958172569655897744397295391553772657499512", "319131234658494744973334834214722589926129968563734455317215196656926219512", "545191423955986757895887551755577565967219734598365383254781779279639465416", "519565454974354243644797428664397196751593898516341996751268197518184479887", "786421956378613563771668236165547547288865984459985989634157263748441245549", "923998271227635444665666134928753878553256473415644475437327349339243563971", "896447487211333445767378151924546314319593287249797112812362369286344554268", "262555282964118689273214226189963147194959787194151419243482984357519139263", "191915165724326727118581963367554916749646676753651513691721816182181174682", "867479393378555631894511274191878164931878371741816631881517154696697213452", "634191643723227357259152325739579382568496617241983151399842954269236443178", "216725797375388637155479741199665291624316829468559364129331828216418544117", "156129788431446743448167962784979131539911668542585375617671124884476168848", "757836881584734784162271838976368918642426975454666325896317856919422243885", "937552156827382752792991755221531414977643895954449881487147655817133758839", "167738519648446798821696879836562492359438612415835938336295429453689278935", "436574658965817386894999649692891458199526477992239232588747796236967817257", "218551847441142923252179338181943597455345935959947236429587151983866983618", "635691778239244627666599191746317647895882735719554655129125748469848378386", "118292816731127466797948339276664245723698252769944518741349176897819379948", "199239647671293238477864863613579452885525614953672778771898635652188583747", "464615264379981279443292761847269712419982554499237365624363984333774326567", "558554363322999225277472115534676146454165185746761382421742923419453969835", "153277778818377319882733757849432472181988133967473956558489764686152648115", "183757837342876866477281539852325536566552653499966416142562853787739366114", "389483693581358879163397126869619642945437778822718433983271523912174282533", "112342672379126247721153456784918861536942876789586517842321983459342842355", "517453874946199551288149179523731979763851558224566274371548163155182618535", "956492175817344631772252148745765433324821757885972768715825518356737583336", "675857725991154143427533183733186534572661783924289845326828891721331692328", "251563945144252248293479752357514222527787181464751837144696393964738457391", "722782637452913699374279212796123345794213329229423417546868898834125749533", "618126494757796525822676191267118491989592521877689926694874411428976375998", "952867736742822465237946558897712594613179596941973167271295418713547532313", "517917336192313382142366177229631535447481891971978247837649275314443435727", "742846366267676758687947486398342316511221365415157254989878869916253721759" };
    assertEquals(1677, chocolatedividinghard.findBest(chocolate));
  }

  @Test
  public void case136() {
    String[] chocolate = { "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111", "111111111111111111111111111111111111111111111111111111111111111111111111111" };
    assertEquals(306, chocolatedividinghard.findBest(chocolate));
  }

}
