package topc.test.search;

import junit.framework.*;
import org.junit.Test;
import static org.junit.Assert.*;
import topc.search.*;

public class MinimumSquareEasyTest {
    MinimumSquareEasy minimumsquareeasy = new MinimumSquareEasy();

    @Test
    public void case1() {
        int[] x = { 0, 1, 2 };
        int[] y = { 0, 1, 5 };
        assertEquals(4L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case2() {
        int[] x = { 1000000000, -1000000000, 0 };
        int[] y = { 1000000000, -1000000000, 0 };
        assertEquals(4L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case3() {
        int[] x = { 1, 2, 3 };
        int[] y = { 1, 2, 1 };
        assertEquals(4L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case4() {
        int[] x = { -1, -1, 0, 2, 0 };
        int[] y = { -2, -1, 0, -1, -2 };
        assertEquals(9L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case5() {
        int[] x = { 93, 34, 12, -11, -7, -21, 51, -22, 59, 74, -19, 29, -56, -95, -96, 9, 44, -37, -54, -21 };
        int[] y = { 64, 12, -43, 20, 55, 74, -20, -54, 24, 20, -18, 77, 86, 22, 47, -24, -33, -57, 5, 7 };
        assertEquals(22801L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case6() {
        int[] x = { 1, 3, 4 };
        int[] y = { 1, 6, 7 };
        assertEquals(4L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case7() {
        int[] x = { 1000000000, 1000000000, -1000000000, -1000000000 };
        int[] y = { 1000000000, -1000000000, -1000000000, 1000000000 };
        assertEquals(4000000008000000004L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case8() {
        int[] x = { 1000000000, -1000000000, 1000000000, -1000000000 };
        int[] y = { 1000000000, 1000000000, -1000000000, -1000000000 };
        assertEquals(4000000008000000004L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case9() {
        int[] x = { 5, 5, 9, 6, 2, 8, 7, 0, 5, 5, 6, 3, 4, 7, 3, 2, 4, 4, 1, 2, 1, 8, 7, 1, 9, 6, 2, 8, 7, 0, 6, 3, 3, 1, 4, 0, 6, 9, 7, 4, 5, 3, 9, 2, 0, 8, 1, 9, 0, 8 };
        int[] y = { 9, 7, 1, 6, 8, 0, 7, 0, 3, 1, 2, 7, 0, 5, 3, 0, 4, 8, 5, 2, 3, 6, 9, 1, 7, 4, 6, 2, 1, 4, 0, 5, 9, 9, 2, 8, 8, 3, 3, 6, 5, 1, 9, 4, 6, 8, 7, 5, 2, 4 };
        assertEquals(121L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case10() {
        int[] x = { 984853360, 656442643, -599060272, -159275344, 943784892, -160899890, -341223067, 900172600, 668345616, 796059432, -426366138, -220144227, -51985138, -110571273, 849182324, -680826260, -155398276, 894165870, 340325297, 468940607, 475358336, -521648556, 428527985 };
        int[] y = { -1000000000, -1000000000, -1000000000, -1000000000, -1000000000, -1000000000, -1000000000, -1000000000, -1000000000, -1000000000, -1000000000, -1000000000, -1000000000, -1000000000, -1000000000, -1000000000, -1000000000, -1000000000, -1000000000, -1000000000, -1000000000, -1000000000, -1000000000 };
        assertEquals(2269548028937678724L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case11() {
        int[] x = { -517471030, 584021977, 899535831, -786996556, 969575111, -695206135, -299889695, 999720055, 931822140, -432000583, 495087403, 57610120, -682986698, 761319619, 845782917, -289105845, -552494500, -608351189, 63735797, 349589286, 202638994, -547316935, -687865329, 752751802, -10140019, -60928019, -756092733, -643912484, 407058294, -495947256, -982401626, 57594458, -203201658, 963277138, 677562655, -733372528, -94621381, 683451758, -96431933, 50201084, -73324285, 546940480, -557967074, 33322368, -242004167, 202263780, 704508005, -980014375, -735619851, -902133455 };
        int[] y = { 995366175, -413603573, -805775334, 622794709, -810259429, 465546691, -778592751, 392094004, -438846195, -307435423, 359440430, 727337583, -674911649, 303795222, 98438955, -287598840, -6400406, -884844280, -239848787, -526550357, 535591389, 52015643, -807669862, 717832480, -95524181, 549560294, 263607705, -69251894, 805006841, -847881015, -30013100, 349278, -526984872, -698648791, -112854860, -126938126, 426497469, -640005797, 820474658, -197901180, -732373249, -686750860, -750857465, 195744370, -725992416, 812363481, -732269611, -86450697, -12062382, -499439153 };
        assertEquals(3617046781106734144L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case12() {
        int[] x = { 0, 10, 100, 1000, 10000 };
        int[] y = { 0, 10, 100, 1000, 10000 };
        assertEquals(10404L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case13() {
        int[] x = { 428271094, 995758480, 767618762, -162757864, -771788233, 231680835, 404559333, 119392648, 917021004, 14078273, -422052457, -6171434, -982467281, -554362785, 659645905, -720178927, -55731135, -564260409, 431962676, 899705804, 953479174, -898224024, -426190077, 168707539, -702776365, -739372259, -175807236, 250654715, 568902055, 354647817, 201247825, -866324740, 345376973, -612539266, -821878188, -274001308, 347722461, 547285983, -715835101, 452009741, -91844001, -604904018, 973402471, 541202805, -976521995 };
        int[] y = { 878662018, 21967333, 354430596, -782127769, 481369654, 418659102, -142909261, 914027913, 971758610, 646834600, -285571675, -331015994, -468316315, -816053695, 940277477, 182653866, 265635181, -728030906, -509055039, 396407011, 622283820, 206131056, -899309372, 517211371, 124554482, 38065225, -839798561, -892954835, 3583684, 341207932, 257328890, -356478443, 681612832, 598423931, -857108198, -938883833, 686384274, 731589710, 796874164, -622153595, 453239643, 900652065, -709587043, 928724124, -150325512 };
        assertEquals(3650554552635578025L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case14() {
        int[] x = { -881118510, 379147416, 212341849, -118924799, -576448415, 551105428, 816539243, 339391178, -701254831, 703504474, -184149281, 676861211, 208600937, 119230680, -312228914 };
        int[] y = { -398770761, 542891465, 44973099, 294973846, -290102251, -377242571, -493424449, 441402507, 449082750, 1497660, 384189613, -747662876, -531250835, 777267149, 216708534 };
        assertEquals(2303698857140693776L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case15() {
        int[] x = { -270149193, -703621844, 882553030, 686314415, 907515209, 652953710, -238546384, -245159199, 2956906, 801620727, -894172305, -29855300, 465844306, -86695364, -905920546 };
        int[] y = { -287949023, -882575007, -429363224, 554976507, 91755989, 485469145, -298889004, 802189965, -51169582, -61647884, 93501995, 401190176, -122675745, -331613305, 342067673 };
        assertEquals(2838433017617220676L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case16() {
        int[] x = { 669631180, 158629085, 784881926, -308833849, -837140857, 737191202, 522063070, 184687696, -786188206 };
        int[] y = { -910968235, 717432753, -804450293, 715097979, -435483661, 77401366, 764925055, 46233210, -797273302 };
        assertEquals(2468261365946777956L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case17() {
        int[] x = { -961015228, 321061138, 353960261, -6866869, -777805951, -772972010, 15437412, -198348514, -770907494, 411237989, -891723328, -398319420, 647469418, 819448577, -665845804, 923289579 };
        int[] y = { 604351178, -425249076, 106664176, -311575707, -905286214, -821160532, 62520251, -931553480, -783577409, -125493032, -399806044, 252491999, 442245430, 778124577, 371364347, -776313477 };
        assertEquals(2587222862851683904L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case18() {
        int[] x = { -628396402, 608296433, 376809460, 808397515, 939359952, -737702357, 875078596, -685705205, -620800801, 650695067, -338441227, -898296769, 104294169, 386262461, -640961057, -339374747, 431598179, 236757802, 312781954, 617215905, -410765913, -815006881, -579929969, -762495154 };
        int[] y = { 679551851, 128385765, 790789046, -11591064, 784483984, -333870100, 722759197, 926336138, -361172640, -213540904, -648727420, -212530237, -325116720, 578507111, 738963593, 682228792, 472062790, 949466039, 591001851, 508146910, -842825140, -17941261, -20957004, 452825239 };
        assertEquals(3077802991747917225L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case19() {
        int[] x = { -992244652, 357767629, -271098307, -878239437, -62082212, -706753373, 474464106, 516668561, 921493405, 645385752, -856725693, -226144094, 538344088, 589527722, -154765005, -558895902, -12495813, 214179946, -80049928, -739767991, 563240391, 603503090, -584196878, -422366238, -40297802, 873889519, -710596055, -749903606, 851750789, 856483778, -852551955, -278405566, 349415606, 132564358, 306153733, 842167470, -384036054, -440888240, 155439177, -487794990, 550144103, -237189705 };
        int[] y = {};
        assertEquals(3069955885462165764L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case20() {
        int[] x = { 930155431, 458390915, -820961256, 233332754, -323196766, -134403318, 428905919, -734333893, 201665302, -269370606, 844209049, -260152561, 256902427, -31044687, -658064904, -883411577, 733270152, 632724302, 550529148, 588333960, -344174244, -637716552, 246307475, 781107082, 553899442, -806401970, -320317842, -375590294, 394507142, 122807479, -728312888, 650689772, -420322888, -410754924, -125883309, 841442253, -377711938, -156037251, -19114896, 81349317, -547873477, 678267450, 282580327, 469547994, -266226743, -254844390, 992221309, 125473601, -109786729, -800682391 };
        int[] y = {};
        assertEquals(2984673034291114384L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case21() {
        int[] x = { 370673750, 876776107, -221391247, -399793395, -236539747, -688076547, -13595034, -522261910, -691812895, 310554063, -572179428, 961390457, -885067716, 937243236, 761935576, 702654498, -690063358, 388219524, -836524469, 504379698, 770555307, -275325364, -601032206, 91660998, -502917171, -737089312, 302336345, 694512072, 456050067, 367284737, 686096516, 528644505, -572280201 };
        int[] y = { 451092311, -732264225, 190648191, 817792818, -802150222, 721126170, 632322128, -496028001, -937208125, -174445672, 457549470, -868807366, 712059106, -569518677, 132053695, 948867738, 208258855, 146287687, 112377265, 476363404, -702221563, 940109758, -690700471, -923281552, 103404448, -757807046, -197680124, -337699583, -466104271, 684100657, 601700795, -58980889, -644631630 };
        assertEquals(3409407792024330625L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case22() {
        int[] x = { 84593455, 715110113, 599641266, 211543687, 932873519, 78831460, -530642894, 421543722, -782144139, 56659868, -68179680, 910560774, 950632360, -237419628, 274001418, -68676505, -428539629, -750216813, -293840782, -722925540, 807940834 };
        int[] y = { -285833861, -171101704, 900468505, -809988287, 897923284, 904125413, -964273918, -67362843, 657343420, 527542069, -72159418, 470342679, -670720434, 146459173, 764882203, 417559318, 51581569, 690374578, 551846068, 378837715, -191181734 };
        assertEquals(2938185783384144804L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case23() {
        int[] x = { 172986161, -201560296, -113949737, 644210064, -639791666, 252896228, -472736750, 900132287, -238817062, -795615347, -141052136, 22686565, 790385932, -183088231, -227680320, 826921920, -421301713, 52158681, 527267360, 939201581, 945428187, -26626892, -985023796, 99473203, 732637012, -774756734, 518527572, 472003182, 278052437, -828060285, 36921092, 481347322, -758717416, 32205083, 322216207, 540839746 };
        int[] y = { -85348187, -631338673, -580545815, -880721925, 900390915, -727298661, -688844459, 865619432, -69090950, -503589468, -253533318, -426288071, 51195967, 936428354, -455834205, 488605314, -76478895, -177646274, 128036504, 951696762, -211003309, -627530939, -467856604, 744047107, -785720440, -926172731, -233702834, 859848893, -146067879, 167741708, -639350854, 523867209, 505821931, -533384228, -534974946, -70825094 };
        assertEquals(3357758251796478721L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case24() {
        int[] x = { -952269795, -990700023, -919658126 };
        int[] y = { 559914382, -929072690, -655021815 };
        assertEquals(4L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case25() {
        int[] x = { 248993563, -334973800, 263856168 };
        int[] y = { -963963822, -481037249, 643400668 };
        assertEquals(4L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case26() {
        int[] x = { 0, 1, 1, 0 };
        int[] y = { 0, 1, 0, 1 };
        assertEquals(9L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case27() {
        int[] x = { 0, 1, 0 };
        int[] y = { 0, 0, 1 };
        assertEquals(4L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case28() {
        int[] x = { 0, 0, 0 };
        int[] y = { 1, 2, 3 };
        assertEquals(4L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case29() {
        int[] x = { -7, 4, -6, -5, -6, 5, 0, 0, 4, 0, -9, 3, 6, 3, 2, 1, 2, 7, -9, -7, 6, 1, 7, 5, -4, -3, 6, -4, -5, 0 };
        int[] y = { -3, 7, -6, -8, 3, 4, 7, 3, -1, 4, -7, -8, 4, 2, 6, -7, -2, -8, 9, -5, -10, 0, -10, 3, -2, 9, 1, 1, 2, -4 };
        assertEquals(361L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case30() {
        int[] x = { 149689972, -760964744, -15988014, -791820322, 513265304, 850043658, 253449508, 273301315, -888695421, 689390806, -276543690, 761978352, -626938099, -364204421, 689780429, 331218199, 236727668, -58007118, -71606341, -902670581, -214907059, 377152558, -967630886, -598379799, -376578961, -902631572, 106295136, 775131758, 113471035, -686337965, -980514, 415428587, 643242987, -306312604, -332270569, -937855352, 763508516, 415504605, -59735316, -121711689, 14886291, -600599288, 411613700, -468628328, 163051364, -388247612, -481085538, 818494918, -942946357, -209778945 };
        int[] y = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
        assertEquals(3037221640292921316L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case31() {
        int[] x = { 3, -2, 2, -2, -4, -6, -6, -5, 2, -8, 9, -2, 5, -1 };
        int[] y = { -2, 1, 6, 3, 10, -10, -4, 6, 3, 2, -1, -7, -9, 7 };
        assertEquals(361L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case32() {
        int[] x = { -8, -2, 9, 7, 6, -3, 2, -9, 8, 2, -3, 0, 1, -5, 9, -6, -2, -4, -3, 1, -3, 6, 9, -6, -5, -7, 10, 2, -5, 5, -4, 0, -3, -1, 5, -6, 7, -7, -7, -9 };
        int[] y = { 9, 8, 1, -6, 6, -2, 1, -9, 9, -7, -7, 3, 0, -10, 0, -6, -1, 7, -5, 1, 10, 0, 10, 10, 8, -2, -3, -5, -3, 10, -2, -7, 9, 8, -8, 2, 4, 1, 8, 7 };
        assertEquals(441L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case33() {
        int[] x = { 6, -1, -3, 7, -9, 4, 1, 9, 10, -10, 8, 0, 1, -6, -9, 8, -9, 9, 3, -8, 9, -5, -7, 10 };
        int[] y = { 9, 5, 8, 7, -6, -2, 2, 0, -9, -4, 2, -8, 4, 5, 0, -5, -4, -10, -1, 4, -3, 2, -10, 2 };
        assertEquals(441L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case34() {
        int[] x = { 307024400, 261626989, 440439283, 602328070, -143816909, -395358004, -854649657, -423792727, -368199189, 26182097, -797834376, 428524773, -690532500, 297464473, -608620363, 732903559, -180923005, 762816060, -625013604, 31750030, -133442639, 693703856, -470485978, -24628821, 965626995, -917844590, -628588539, 736392903, 887229419, 534016344, -867403482, -786228778, -359336901, 510898659, 6478614, 775725888, 254222052, -815608651, -96924023, -645512417, 500360113, -999323892, 941260632, 134100194, 956551879, -988685159, -822895561, -235301997, -966518161, 291173341 };
        int[] y = { 307024400, 261626989, 440439283, 602328070, -143816909, -395358004, -854649657, -423792727, -368199189, 26182097, -797834376, 428524773, -690532500, 297464473, -608620363, 732903559, -180923005, 762816060, -625013604, 31750030, -133442639, 693703856, -470485978, -24628821, 965626995, -917844590, -628588539, 736392903, 887229419, 534016344, -867403482, -786228778, -359336901, 510898659, 6478614, 775725888, 254222052, -815608651, -96924023, -645512417, 500360113, -999323892, 941260632, 134100194, 956551879, -988685159, -822895561, -235301997, -966518161, 291173341 };
        assertEquals(3733184911582844964L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case35() {
        int[] x = { -736097596, 711361836, -902322812, 219825710, -910080034, -178122516, 934349310, 483077821, 476862235, 638000363, 949050326, 320205059, -465228410, -762513518, -440496278, 42748645, -682627526, -904606540, -239705043, 32288854, 584352885, -415023570, 391440742, -822077059, -836654305, 450147482, -886102199, -794695714, -840212322, 353760235, -279600946, -775966213, 542960339, -383791049, -690211390, 506496176, 462662171, 363940073, -60162319, -60088826, -597969796, 952958817, -750614109, 468355526, 669862158, 570400345, 995638562, -324665009, 104876794, 250460495 };
        int[] y = { 736097596, -711361836, 902322812, -219825710, 910080034, 178122516, -934349310, -483077821, -476862235, -638000363, -949050326, -320205059, 465228410, 762513518, 440496278, -42748645, 682627526, 904606540, 239705043, -32288854, -584352885, 415023570, -391440742, 822077059, 836654305, -450147482, 886102199, 794695714, 840212322, -353760235, 279600946, 775966213, -542960339, 383791049, 690211390, -506496176, -462662171, -363940073, 60162319, 60088826, 597969796, -952958817, 750614109, -468355526, -669862158, -570400345, -995638562, 324665009, -104876794, -250460495 };
        assertEquals(3450549062956798881L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case36() {
        int[] x = { 4, 1, 2, 3, -2, -1, -3, -3, 0, 4, -1, -2, -1, 4, -4, -2, 3, 2, -2, 2, 1, -3, -4, 1, -4, 1, -4, 4, -4, -1, 3, 3, -2, -4, 4, 0, 3 };
        int[] y = { -3, 3, -4, 0, 4, -3, 0, 3, 3, -2, 0, 1, -4, 4, -4, -1, 2, -2, 2, -3, 4, 1, 4, -4, 0, 0, -2, -4, -1, 3, 1, -2, 3, 1, 3, -1, 4 };
        assertEquals(100L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case37() {
        int[] x = { 36, 8, 2, -78, 57, -99, 84, 74, 17, -78, 61, -89, -97, -39, -87, 87, 80, -15, -64, -21, 63, 44, 10, -67, -84, -43, 83, 37, 6, -77, -19, -20, 5, 78, -16, 2, -29, -65, 71, 7, -55, 11, -34, -27, -71, 18 };
        int[] y = { 42, -93, 80, 18, 39, 23, 19, -38, -6, 62, 47, 87, -43, 24, -61, -43, -75, -39, 9, 47, -98, -93, -65, 60, 20, -38, -58, 71, 85, -59, -4, 81, 96, -29, -8, 7, 15, 70, -20, -58, -100, -99, -53, 92, 3, -44 };
        assertEquals(35721L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case38() {
        int[] x = { -505, -722, 481, 11, 655, 210, 487, 492, -126, 123, 228, -69, 777, 742, -998, 724, -671, 554, 165, -484, 485, -328, -562, 389, -609, 272 };
        int[] y = { -893, -531, -593, -233, -365, -669, 535, -626, 75, 843, 952, 607, -813, -462, -325, 674, -911, -163, -830, 595, 126, 584, 464, -184, -595, -646 };
        assertEquals(3083536L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case39() {
        int[] x = { 5472, -8211, -4870, -993, -9557, 2782, 9261, -1564, -9017, -3744, 6736, -7574, 9209, 1398, 4702, 6276, -1381, -5219, -7878, 7600, -7965, 6561, -3006, -1224, -5541, -6446, -4814, 9930, -1367, 464, 6836, -6823, 3324, 674, -5371, 4906, 2400, 3137, -1996, 7312, -7999, 5901 };
        int[] y = { 1665, -4521, 5083, -9360, -3718, -7590, -9379, 2840, 7702, 9960, 4518, -8539, 1123, 1048, 1390, -4878, -4071, -8341, 3047, 6995, -4315, -6689, 1127, -7278, -9609, -4542, 7502, 2447, -4328, 8780, -4611, 7723, -1929, -2739, -2893, 1915, -6209, -9363, -8846, 4083, -7041, -7093 };
        assertEquals(354192400L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case40() {
        int[] x = { 39955, 9748, -91690, 48468, 50552, 65673, 82442, -32189, -51139, 45603, -1256, 52847, 33089, -41698, 96647, -57573, -54632, 31253, 98902, -35549, 91629, 63566, 60228, -49577, -77517, -67679, -28084, -24990, 3603, -89248, 23970, -28598, -50026, -54045, 82092, 45992, -74410, -29983, -87206, -89590 };
        int[] y = { -84772, 81662, -38384, 12682, 69059, -1827, -14054, 18479, -85794, -68481, -47048, -47352, 32180, 28027, -47571, -86990, -79696, 9640, -46317, -85729, -83950, 43789, 81251, 80486, -20951, -18452, -58304, -99745, 36858, 81812, 53140, 99929, 43982, 28671, -85340, 12029, 57032, -14980, 74380, -85516 };
        assertEquals(35471578921L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case41() {
        int[] x = { 681646, 799417, 726310, 915351, -801500, -528428, 374132, -776298, 479132, -854156, 515693, -1895, -568128, 284572, 536671, -673839, -981596, -147074, -494648, -169719, -272789, -238356, -436995, -176163, 744499, 256490, 113505, -542287, 523751, 57608, 571251, -498585, 267533, -859665, -942114, 90084, -764986, 955412, -903171, 777263, 668269, -766641 };
        int[] y = { -475606, -621295, 944102, 299841, 87291, -52921, -456929, 635398, -565606, 800463, -278186, -489771, 130707, 733828, 328815, -464778, -562791, -79583, 513943, 48866, -568993, -629544, -93310, -772657, -725922, 584706, -52682, 940137, 45761, 790, 47748, -88610, -400688, 500335, 129535, 15506, 649435, 178319, -881637, 521342, -637600, -132281 };
        assertEquals(3333330199081L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case42() {
        int[] x = { 8334183, 3672484, 1626087, 6462483, 4882861, -3798725, -3648225, 6610959, 3017685, 2939390, 8749478, 6074764, -819837, 449156, 7047205, 5535226, 9569002, 7707152, 1223477, 1016081, -5019536, 9849285, -1309449, -8933655, -7002535, 6308670, -9444512, 7041199, -2461194, -8324605, 7593127, 1632937, -6903078, 2006996, 7123397, -3461478, 2462586, -2503477, -9701647 };
        int[] y = { -5770757, -9065841, 7888935, -3584146, -5232238, 677924, -7642536, -5213137, 4787763, -5411781, 2348797, -2061555, 9489217, 3157073, -542061, -7290933, 9047003, -254797, 3048046, -5785016, -1530384, 3794445, 4629358, -4366188, -6922802, -3691726, -5674182, -9645740, -7843046, -4474190, 590098, 2022666, -5632955, -9843469, -830501, -9700405, -507469, -7695437, 695695 };
        assertEquals(371357989963801L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case43() {
        int[] x = { 2400208, -283566, 7788892, -6286556, 4552328, -5394470, 3395507 };
        int[] y = { -8309960, 2876283, -6514372, -8562447, -1048860, -580743, 1000000000 };
        assertEquals(130844589767824L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case44() {
        int[] x = { -1000000000, -600000000, -800000000, -800000000, -200000000, -200000000, -1000000000, -400000000, -200000000, -800000000, -600000000, -600000000, -400000000, -600000000, -1000000000, -400000000, -1000000000, -200000000, -600000000, -400000000, -800000000, -200000000, -800000000, -800000000, -600000000, -1000000000, -200000000, -400000000, -800000000, -200000000, -200000000, -1000000000, -400000000, -400000000, -800000000, -600000000, -400000000, -800000000, -1000000000, -600000000, -600000000, -400000000, -1000000000, -1000000000, -200000000, -600000000, -200000000, -800000000, -400000000, -1000000000 };
        int[] y = { -600000000, 400000000, -200000000, 0, -200000000, 800000000, 200000000, -400000000, 0, 600000000, -600000000, 200000000, 0, -800000000, -800000000, -200000000, 0, 600000000, 0, 200000000, -600000000, -1000000000, -800000000, 800000000, -1000000000, 600000000, -400000000, 400000000, 200000000, -600000000, 200000000, 400000000, 600000000, -800000000, 400000000, 600000000, -1000000000, -1000000000, -200000000, -400000000, 800000000, 800000000, 800000000, -1000000000, 400000000, -200000000, -800000000, -400000000, -600000000, -400000000 };
        assertEquals(3240000007200000004L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case45() {
        int[] x = { 1, 3, 5, -1 };
        int[] y = { 0, 0, 1, 1 };
        assertEquals(16L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case46() {
        int[] x = { -1144778, -7816210, -2337860, -1297207, -3999871, -44553, -2052643, -3685412, -6414255, -6045999, -4293501, -84743, -1162710, -3385928, -4294273, -6664908, -2786606, -5606059, -7894648, -7741161, -9328793 };
        int[] y = { -4307933, -5179006, -8232325, -1175633, -4936348, -9804885, -3145581, -8297696, -493127, -1622463, -3580162, -5836581, -7946949, -7978750, -9814590, -9158168, -4898903, -8959233, -7690288, -8844328, -5394327 };
        assertEquals(74631612603681L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case47() {
        int[] x = { -1144778, -7816210, -2337860, -1297207, -3999871, -44553, -2052643, -3685412, -6414255, -6045999, -4293501, -84743, -1162710, -3385928, -4294273, -6664908, -2786606, -5606059, -7894648, -7741161, -9328793 };
        int[] y = { 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000 };
        assertEquals(60398683612281L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case48() {
        int[] x = { -4193334, -9039900, -678674, -9888380, -4897631, -202485, -3082567, -5656936, -2403738, -7098768, -1643106, -2496510, -6928612, -4090638, -5167004, -149972, -5427668, -2769614, -2925505, -6696909, -3102086, -2972959, -9227294, -1290206, -8266925, -8828240, -5062822, -2630392 };
        int[] y = { -390488, -5313389, -6883976, -2497381, -6414575, -4061417, -2076191, -6900149, -1221254, -2674561, -1156670, -4419532, -7971660, -4316737, -6313761, -1029930, -5158771, -3292124, -9291974, -7614951, -7941561, -3658836, -8271895, -7396608, -7423035, -9095820, -9655568, -6063686 };
        assertEquals(82397811000976L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case49() {
        int[] x = { -649812, -7968450, -4445495, -5318839, -674588, -3065310, -4422533, -921668, -6726876, -5629333, -2554396 };
        int[] y = { -1327211, -254597, -6070065, -2162692, -1554214, -5319901, -637685, -9742099, -8082689, -419994, -9961898 };
        assertEquals(61279055672836L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case50() {
        int[] x = { 1909473, 8523386, 1777562, 5361938, 9528618, 9386978, 9241391, 6744349, 319234, 3339670, 2138986, 1920826 };
        int[] y = { 8161941, 7479547, 8279848, 134127, 7490923, 236161, 1978155, 7377612, 5790550, 4422268, 4843933, 1596537 };
        assertEquals(64445829729856L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case51() {
        int[] x = { 3353505, 9138623, 1769096, 4737814, 7771996, 1643003, 6103266, 3269412, 9823917, 4528893, 9117840, 3014161, 9087095, 4718463, 4757851, 2044719 };
        int[] y = { 6609845, 1562312, 7724887, 9370934, 7250909, 4912412, 2760885, 1808625, 8073349, 2154238, 4042752, 3590746, 8430232, 3414943, 7658070, 460337 };
        assertEquals(60974608773376L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case52() {
        int[] x = { 9823537, 8044964, 8750792 };
        int[] y = { 7661960, 4396689, 6040682 };
        assertEquals(4L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case53() {
        int[] x = { 1695059, 9721043, 1732833, 9707424, 5604413, 7590840, 2644348, 9256257, 5851648, 4136999, 2655577, 2277464, 3782398, 7126898, 9176548, 6424230, 2959671, 4938104, 7683535 };
        int[] y = { 732332, 8261372, 1756652, 5690319, 834024, 4951867, 6910672, 2345390, 1419047, 6209977, 3995373, 6394904, 9655263, 7979249, 3635163, 189051, 7726698, 8033835, 8173818 };
        assertEquals(64198024942689L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case54() {
        int[] x = { 246670, 6777428, 5081125, 793620, 7494801, 6840155, 1182651, 7660105, 1240277, 456754, 3265396 };
        int[] y = { 9680283, 4728364, 2944586, 6167777, 7109888, 8979116, 3258896, 3081723, 7915681, 8711423, 7955935 };
        assertEquals(45369641018601L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case55() {
        int[] x = { 1999634, 765889, 1858721, 787017, 1617536, 747480, 3615930, 153095, 1006183, 823257, 2202588, 7089340, 7858425, 3976848, 7977194 };
        int[] y = { 6209229, 4656668, 350700, 9902767, 2864973, 9053884, 2233795, 4449671, 4592689, 3579911, 2226050, 4570593, 4175270, 8163247, 3439802 };
        assertEquals(58932014604961L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case56() {
        int[] x = { 662179, 1453073, 4480769, 5614197, 3808171, 9833089, 1036582, 4935453, 7915695, 6603895, 4825277, 9040374, 3407900, 9630539, 5787993, 7414709, 9035412 };
        int[] y = { 7100440, 1296147, 1237078, 8119509, 4540215, 1388845, 4255713, 3017686, 6070955, 6324462, 540826, 8056437, 4666144, 3219343, 434326, 3341496, 5897712 };
        assertEquals(70194184970809L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case57() {
        int[] x = { -7569026, -5238488, -2992923, 2835785 };
        int[] y = { 5964755, 7122464, -351709, 2816007 };
        assertEquals(5431416691600L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case58() {
        int[] x = { -4454743, -2288400, 6837654, 3940034, -8417862, 5554041 };
        int[] y = { -8004658, 6892827, -9305234, -5790163, 4317968, 8184263 };
        assertEquals(195284637927184L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case59() {
        int[] x = { 5718710, -3002176, -3255440, -9913136, -110908, -2852972, -9435393, -998878, 5575955, -4532621, -5929692, 4469072, 4231357, -7764343, 7394718, -6588651, -785656, 5593421, -7182394, 5353683 };
        int[] y = { 2466667, -4267007, -2012771, 9124415, 1130405, 9160770, 6238030, 2861227, -9581541, 1972078, 8563918, 1725741, 9486124, 5847359, 550771, 2640386, -6664304, -4037462, 7323233, 4233799 };
        assertEquals(260836389184900L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case60() {
        int[] x = { 16, 3, 34, 31, 55, 3, 49, 30, 20, 55, 55, 7, 55, 53, 20, 3 };
        int[] y = { 145, 111, 93, 93, 106, 96, 93, 93, 93, 131, 133, 145, 108, 145, 145, 123 };
        assertEquals(2916L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case61() {
        int[] x = { 130, 107, 106, 130, 114, 130, 71, 118, 130, 130, 130, 74, 121, 130, 129, 130, 108, 130, 111, 130, 102, 130, 130, 68, 130, 130, 62, 61, 113, 130, 130, 83, 103, 91, 130, 99, 98 };
        int[] y = { 80, 36, 36, 41, 36, 74, 36, 36, 67, 81, 71, 36, 36, 63, 36, 64, 36, 108, 36, 101, 36, 60, 53, 36, 109, 57, 36, 36, 36, 90, 73, 36, 36, 36, 37, 36, 36 };
        assertEquals(5041L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case62() {
        int[] x = { 983542520, 864769449, 939770100, 885722110, 946581077, 868726467, 974005658, 936726977, 868419768, 999461359, 920396379, 912145066, 997351761, 974331903, 856176324, 968167262, 845714357, 892210140, 982683043, 852963493, 962711053, 938320916, 833589849, 854127360, 976642924, 886249331, 949365432, 847518477, 984809577, 847796372, 970244817, 973704380, 890244739, 971641345, 944926920, 914986612, 997785343, 951273184, 967785509, 954859800, 940069508, 953882910, 870634652, 959851706, 881622024, 890102799, 841827461, 871588716, 961669765, 840834348 };
        int[] y = {};
        assertEquals(24633615459294009L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case63() {
        int[] x = { -216326654, -159857825, -185497923, -269698586, -528220004, -50877498, -107627800, -710281002, -601688063, -50877498, -484663789, -590998146, -493560785, -95117529, -394356440, -416573674, -132951272, -742550038, -622427260, -50877498, -477173892, -165126438, -179138549, -538838167, -75194545, -489161523, -50877498, -649347924, -763709784 };
        int[] y = { 839858077, 839858077, 839858077, 839858077, 839858077, 860984258, 839858077, 839858077, 839858077, 869703557, 839858077, 839858077, 839858077, 839858077, 839858077, 839858077, 839858077, 839858077, 839858077, 912825223, 839858077, 839858077, 839858077, 839858077, 839858077, 839858077, 970765590, 839858077, 839858077 };
        assertEquals(434812983725092036L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case64() {
        int[] x = { 140267216, 140267216, -193757493, 140267216, 140267216, -536208381, 140267216, -82312967, 140267216, 140267216, 140267216, 140267216, 140267216, 140267216, 97335336, 140267216, 140267216, 140267216, -114990098, -422093012, 140267216, 140267216, 140267216, 140267216, -4073976, -419299365, -85527041, -381959687, 140267216, 140267216, -184178433, -451733251, 140267216, 73566729, 140267216, 140267216, 140267216, -430368221, -492215512, 140267216, 140267216, 140267216, 109176281, 140267216, 140267216 };
        int[] y = { 276086112, 199724266, -204716184, 253659304, -60460009, -204716184, -166109639, -204716184, 402793002, 115836976, -191133281, 282179080, 432205047, 181170262, -204716184, -48388204, 46680921, 497279375, -204716184, -204716184, -154513077, 452902698, 138845022, -164700841, -204716184, -204716184, -204716184, -204716184, 218961330, -80363024, -204716184, -204716184, 58429630, -204716184, 338311112, 90407197, 4422370, -204716184, -204716184, 66345819, 356759866, 30283535, -204716184, -15030579, 520840722 };
        assertEquals(457619236042408801L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case65() {
        int[] x = { 65602517, 65602517, -499527498, 65602517, 65602517, -156406085, 65602517, 65602517, 6686929, 65602517, -377587610, 65602517, -66036504, -111555785, -19395780, -429680744, -388374826, -359012000, 65602517, 65602517, 65602517, -487169807, 65602517, 65602517, 65602517, 18593792, 65602517, -142826183, 65602517, -404027314, 65602517, 65602517, 65602517, -469162208, 65602517, 65602517, -390369016, 65602517, 65602517, -481898755 };
        int[] y = { -684763878, -505145022, -161824816, -283578840, -572949731, -161824816, -350769982, -385579201, -161824816, -556950126, -161824816, -432604552, -161824816, -161824816, -161824816, -161824816, -161824816, -161824816, -707359222, -264006229, -530840561, -161824816, -659595551, -534622488, -637861751, -161824816, -602518873, -161824816, -664646321, -161824816, -458753151, -429799845, -251055959, -161824816, -515507766, -392920528, -161824816, -380670094, -244745683, -161824816 };
        assertEquals(299757645031623076L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case66() {
        int[] x = { -914676594, -708823115, -774823109, -914676594, -914676594, -845414882, -914676594, -914676594, -914676594, -914676594, -879769704, -825811474, -711937574, -707157408, -914676594, -801540034, -573165411, -914676594, -893264201, -914676594, -558090229, -712216929, -723594421, -777317555, -914676594, -549677578, -914676594, -914676594, -914676594, -914676594, -914676594, -914676594, -753491772, -853373274, -914676594, -693909739, -798812512, -713638097, -893092940, -655876221, -709549007, -840760585, -914676594, -914676594, -830314677, -914676594, -914676594, -914676594, -914676594 };
        int[] y = { -736521892, -422513196, -422513196, -467435483, -442722349, -422513196, -644789715, -640856075, -678228290, -491753123, -422513196, -422513196, -422513196, -422513196, -691157453, -422513196, -422513196, -539778323, -422513196, -539991597, -422513196, -422513196, -422513196, -422513196, -577584862, -422513196, -745231213, -560972154, -692800084, -655266335, -545525745, -559109650, -422513196, -422513196, -617104877, -422513196, -422513196, -422513196, -422513196, -422513196, -422513196, -422513196, -759097869, -584439359, -422513196, -754971676, -740018700, -761368734, -633362296 };
        assertEquals(116629889480104225L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case67() {
        int[] x = { -914115701, -914115701, -828541867, -914115701, -810111971, -914115701, -914115701, -914115701, -534921802, -447831117, -775638356, -667552625, -914115701, -777834653, -914115701, -515951843, -549210108, -574362960, -914115701, -463605805, -841355168, -876665579, -754478693, -907710712, -593009059, -914115701, -914115701, -914115701, -828880348, -914115701, -914115701, -653309303, -644840344, -777537360, -914115701, -914115701, -914115701 };
        int[] y = { 133249703, 56114538, -21105195, 235440668, -21105195, 93516864, 435326734, 226058392, -21105195, -21105195, -21105195, -21105195, 187492796, -21105195, -9175881, -21105195, -21105195, -21105195, 403293491, -21105195, -21105195, -21105195, -21105195, -21105195, -21105195, 425404963, 71835392, 252248023, -21105195, 390430969, 279703815, -21105195, -21105195, -21105195, 180430446, 73627346, 8426752 };
        assertEquals(202959168195970404L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case68() {
        int[] x = { 768782698, 770631676, 963627558, 830989166, 993177047, 953184698, 832850421, 943194928, 983661972, 743433916, 744679813, 951546675, 957162479, 981712541, 895065156, 860869080, 953420855, 773665296, 942932181, 837164112, 991419211, 985722010, 990464956, 860928623, 912917998, 963706331, 921945017, 886837228, 849573703, 829854576, 947488939, 765954101, 852102932, 886971058, 944797674, 850620041, 828790921, 917840881, 828355960, 887656582, 943768528, 942580811, 898260104, 816707658 };
        int[] y = { -724560760, -457913092, -724560760, -457913092, -457913092, -457913092, -724560760, -457913092, -724560760, -724560760, -724560760, -724560760, -457913092, -457913092, -457913092, -457913092, -457913092, -457913092, -457913092, -724560760, -457913092, -457913092, -724560760, -457913092, -724560760, -724560760, -724560760, -457913092, -724560760, -724560760, -457913092, -724560760, -457913092, -457913092, -457913092, -457913092, -457913092, -724560760, -724560760, -724560760, -457913092, -724560760, -724560760, -457913092 };
        assertEquals(71100979916428900L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case69() {
        int[] x = { 4398166, -882877, 2311786, 4251553, 9962551, 6317744, 1441020, -902999, 3142066, 3425645, 5993901, -1114985, -4655904, -5092219, 4647618, -7400810, 6720615, -6450589, 2785959, -884772, -5796796, -975253, -1495356, -515082, 9620476, 9536500, -6698268, -7847726, 6776593, -5573177, -5959904, -1461982, -6795420, -3015328, -4000717, -8080075, -3964747, -4115726, -8924969, -1437960, 2237027, 3206850, -9768297, -3484779, -5412942, 8503173, 6500047, -6041395, 889253, 9403993 };
        int[] y = { -3041725, 3474860, 3346596, -3372148, 8482257, -6491965, 9514816, 3673692, 5732893, 9332818, -9410392, -1983237, -1886775, 1844458, 7088218, 3279321, 9603296, -3330730, -6670022, 2285930, -6914929, 5234268, -8982298, -6749518, -8617797, 7935944, -5477050, -4995266, 6655026, 6555567, -4542044, 2584930, 7954734, -6666871, 77143, 9287623, 3019186, -3495335, 3131129, -9063319, -415601, -3585626, -4275201, 217504, 4527598, 2091053, -5979423, 3503751, 4933627, -3706942 };
        assertEquals(356738487300484L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case70() {
        int[] x = { 3331589, 4260853, 6888459, 9984214, -5918399, -7090988, 409044, 3811419, -9405451, 2255150, 9907739, -2318060, 1911627, -9524106, -8215064, -4141938, 5529459, 3916218, -7508873, 1602094, -8436907, 3135752, -3713612, -6224098, 3586109, -6849337, -1144499, 8732125, 2833299, -388222, 378458, -3095506, -9887676, -1471430, 9479839, -9729575, -6149550, 9854486, -5595908, -2309564, 7077616, 7756752, -5912326 };
        int[] y = { -3183106, -9271158, 5587851, -879948, -924710, -6996321, -5976341, -4313410, 4739212, 5522857, -1688776, 6858292, 7918327, -3313410, -7082062, -4872893, -5716553, -3992596, -4072270, 1272086, -7514354, -8353497, 5381695, -5628766, 5214837, -1849328, -4091404, 366778, 4790343, 3174933, -4628989, 8383768, -2093701, -3976152, -5995818, 1859323, -98756, 9325629, 5063533, -7817950, -9178356, -9731763, -8219566 };
        assertEquals(380574627255684L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case71() {
        int[] x = { 6997000, -435323, -2105861, 3240396, 163730, 8964173, -7753872, -4523042, 667319, -7411483, -8862846, 3012412, 2468736, 3897714, -5004072, 7711780, -1797175, -9766838, 1124769, -4528467, 9396050, -1543531, -9777974, 9591474, 3808378, -296592, 267611, -2295560, 5362821, -2502473, 9986550, 7197833, 9820007, 8900281, 5288563, -3457544, -5755297 };
        int[] y = { -5331165, 5033119, 5771867, -7425518, -9688271, 3472372, -6150164, 5907787, 5225905, 8443718, -1650347, -453700, 1805133, -1655023, 4199602, 1541651, -2456833, -6439341, -3558428, -9002202, -1411513, 4938021, 7586877, 8859838, 4241299, 1081555, -2707299, -7550439, 7155978, 8773283, -3279793, 9719772, -8421084, 9973280, 1972076, -4499028, 9414910 };
        assertEquals(384080937668289L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case72() {
        int[] x = { 5318147, 5443323, -8225083, 2438449, 5288703, -5071264, -3990840, -7075238, 4548483, -2476608, 2071094, -1735511, -741125, -9032871, -7951062, 5558197, -5988158, 6185929, 1448819, -9116799, -2266191, -7296366, 1432779, -567379, -3553920, 5042669, 1388191, 8598107, -2553965, -4995236, -1547080, 9004089, -3943466, 2767922, -450109, -341396, -5811093, 8972788, 7625718, 7457760, -7618676, 1335704, 8922923, 6737280, -1904354, 6395094 };
        int[] y = { 721260, 8657822, -687440, -6530274, 8992685, 6821983, 5428902, 5552463, -2283768, 940384, 4717079, 5257601, 8567637, -1059885, -5882375, -2272759, -2479060, 2748900, 395491, -2890654, -3688091, -8291059, -8889531, 1988121, -3334477, 94319, -9659984, -7118765, -5624914, -3698187, 2583182, -7034437, -136920, 2109705, -53635, -3014776, -1453257, -9445406, 5023825, -8518044, -6397127, -6890727, 9175127, -9175356, -5033991, 3144127 };
        assertEquals(335542089924864L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case73() {
        int[] x = { -369634522, -596885111, 363479953, 403083085, 964431942, -268984159, 632147697, -774321251, 759457341, 611945143, 192471810, 711366099, -413935442, 943507755, 57230114, -116152093, -366234537, -623824935, -191524192, 473304388, -470782633, 150491442, 355206456, -196713279, 769210594, 225830119, -161198756, -931461336, 416693971, -993340052, 95991834, -661656908, 864315185, -489547959, -747976662, 673511044, -78406397, 167724261, -877996922, 737012103 };
        int[] y = { -611437933, 488399840, 399081930, 726073402, 814803105, 701261390, 675133881, 161023218, -71506844, -117257279, -341814849, 618959226, -508104078, -214836454, -31950875, 777540850, -429780437, -903776516, 12189942, 875888775, 162905424, 839655436, -509376388, -761155205, -565697705, 22578597, 602830721, -214896421, -777782382, 240564148, -58688675, -132036095, -664006497, 449418474, 389829287, -842492713, -199259410, -808500000, 896520698, -630473080 };
        assertEquals(3394544126270045956L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case74() {
        int[] x = { 433207484, -434925462, 510613191, 332241158, -718655809, 247349921, -366276999, -837263445, 848776126, 655564463, 100994609, -836032164, -661425737, 951240700, 402980460, -743564579, -25535374, 36192148, 327540327, -627009547, 901654646, 850666674, 212048635, -629779799, -494456670, -950546016, 755525520, -942885316, -910059443, -686885483, 787225046, -807960880, 346601153, 855966268, -540675331, -459755588, 260070002, 266592300, -65287588, 345248287, -356510905, 657342219, -259014330, 76204372, -973968920, -491735291, 647980201, -999344821, -981799843 };
        int[] y = { -105889550, 481145963, -977146036, -500928868, 273581231, -323734620, 829399271, 655459639, 289965183, 438366887, 122955290, 877912780, -625271532, 271883807, 853013748, -145862627, 768842618, -828880747, 565209638, -371088482, 997463172, -207210788, 105999791, 878103539, -715896550, 168147137, -435718209, -572780009, -311189094, -609862616, 305026798, -233427717, 15517267, -169028182, 779944505, 852704300, 447561463, 690260066, 335033188, 4183687, 30030241, 955957718, -208103746, 54157885, -795906404, -300852612, 308216743, 701717484, -194946911 };
        assertEquals(3613798981138281961L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case75() {
        int[] x = { 596411019, -857558589, -814077183, -588637701, -858228681, -789826911, -171836907, -82900149, -397650884, -350084451, -985190277, -577773738, 568308953, 673899413, -723578462, 76941759, -178490310, -527099334, -740388870, 255411219, 37967949, 304450366, -632844629, 592921470, 130794692, 510444445, -527777745, -680951413, -655717451, 651055781, -29862412, 43203699, 145741439, 831132507, -916602811, -295857350, 36606958, -251585559, 536461041, -770080243, 368450046, 33029906, -110334551, -350864582, -50001717, -769119085 };
        int[] y = { -619679733, -186986355, 251657754, -14975441, 544680898, -241772603, 195622852, -983305797, -455438460, -641622510, -929993543, -311850034, -336844485, -782310198, 509975896, 189124064, 887208044, -326023982, -897823890, -798994415, 679527617, 639523767, 606324393, -194647030, -630389577, -179234631, 692034611, -402426375, 728999765, 789504897, -295365308, -822655981, -193947964, -948109348, 222489228, -742546442, -615841881, -831806916, 518983462, 567056806, 380538186, -950075981, -889224719, -776394191, 874892917, 465634667 };
        assertEquals(3299028462942801796L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case76() {
        int[] x = { 122388062, 98213779, 677798952, 910152730, -4476766, -657103076, -406110451, -431986314, -789721147, 703019027, -406906771, -716268433, -281165941, -18926585, -776810618, 128980445, -7802024, 255916246, 305645905, -650675456, 76805813, -122009760, -535162085, -792220559, -125751192, 288169560, 138512468, -950071349, -388223998, 352683526, -166926015, -831804007, -695314885, -335087240, 119266795, -696683749, 694421562, -509517319, 561848692, 6456499, -3439164 };
        int[] y = { -11885777, 607189385, 882599446, -15298525, 516403021, -638975276, 728167176, -308765813, -407467287, -578565833, 509586571, -992858068, 285203231, -575637467, 977246486, 419131150, 674459028, 595081045, 431459247, -952157170, -454819698, 564542618, -807713739, 280566603, 999561180, 674395566, -496606660, 631641135, -425089273, 56115940, 278335544, 254955755, -375757061, 226565084, -233366327, 859638950, -135899265, -638589267, -277704964, 475224748, 516207520 };
        assertEquals(3460433631532294561L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case77() {
        int[] x = { -702136920, -335980407, -823681901, -524126684, -253520281, -384679774, -802782844, -708100973, -372568007, 556179072, 665164991, -306989795, -100173941, 400824710, 481432687, -243423397, 426834477, -292971559, 436009990, 623974567, -344692704, -239217484, -959927808, 27090116, 82752200, -522195621, 602821181, 921737171, 75290998, -831001823, -338263975, -368128401, 905915936, 645141189, -505171122, -663539963, -438224044, -516895843, 202594214, 260267232, 947538470 };
        int[] y = { -360052605, -248698879, 143405949, -566445095, 155069208, -238832543, 561420044, -110182301, 322217814, 63466780, 101215238, 516736872, 844198472, -564895492, 782374944, -424139866, -148009786, 864067776, 995412407, -234518261, 790300698, -450508189, -770314162, -727203176, -691936150, 280081220, -9278931, 446431232, 126689175, 913572353, 475135690, 192847117, -522917707, -721674259, 896787949, -873946738, 151816156, -996512771, -678965732, -372332834, 129557969 };
        assertEquals(3494503620472567609L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case78() {
        int[] x = { -304764164, 855498483, -602436326, 422156321, -345821940, 623414467, -806238698, 722278195, 480042992, 816162057, -606155140, 659464098, 104868251, -394535908, -582666354, 358737308, 470413620, 84670959, 184557680, -212990708, -567470565, 980838162, -344624440, -69002387, -480522983, -276862331, 354753210, 398518971, 435283115, 20534712, 609020608, 721961372, 776661738 };
        int[] y = { 698335743, 563061201, -241565376, -942231055, -104514427, -298730425, -112001121, -947632504, 120844493, -70069745, 867504138, -839082121, -580104796, -219376390, -28921182, -88652282, -618213734, 447720948, -332912542, -34896525, -129336691, 818532073, 817258555, 456838020, 114352330, 39106733, 492537118, 916673150, 34853397, -431025375, -919908162, 501513779, 425342690 };
        assertEquals(3193643710695767044L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case79() {
        int[] x = { 746, 108, 373, -17, 30, -139, -885, -983, 182, -134, -612, -437, 469, -148, -100, 130, -785, -49, -837, -906, 442, 209, 294, -767, -824, -63, 278, 44, -684, -548, -529, 383, -322, -588, 357, 639, -83, 190, 513, 145, 127, 405, 803, -722, -885, 0, 0 };
        int[] y = { -833, -971, -139, 761, 610, -300, -963, -835, 169, 484, 301, -54, 15, -549, -515, -261, 757, 703, 646, 864, -930, -455, -723, -886, -198, 344, 748, 295, -575, -120, -356, -51, 367, 640, 898, 799, 258, -331, 549, -482, -362, -118, -90, 413, 763, -1000000000, 1000000000 };
        assertEquals(3500641L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case80() {
        int[] x = { 223, -298, 53, -283, 190, 981, -577, 163, 634, 657, -157, 183, 401, 856, -481, 775, 340, -685, -250, -641, 538, -974, 431, -279, 990, -877, -550, -854, -826, 292, -160, 783, -207, -203, 99, 606, 119, -371, 455, 13, 739, 616, -890, 733, -1000000000 };
        int[] y = { -300, -872, -222, -551, -367, 848, -203, -549, -14, -942, 975, 171, 33, -253, -787, -16, 51, -756, 753, 639, -903, 540, 699, 189, -17, 39, -853, -584, -425, 792, -516, 716, 550, -478, -289, 227, -106, 943, 880, -675, 957, 977, -916, 709, 1000000000 };
        assertEquals(3690241L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case81() {
        int[] x = { -944540121, 666901312, 391335463, 773240308, 685868019, 434317065, 179908616, 717313742, 200727447, -872037848, 64070418, -135551508, -896325, -831620767, -352189534, -356181944, 609901900, -289236354, 246076569, -217583953, 921514308, -882824985, -706257006, -950333734, -776665487, -72835029, 894309972, -316049913, 935866656, -431461705, 491161038, 694399198, -972935089, 860989434, 221215990, -734324258 };
        int[] y = { -944540121, 666901312, 391335463, 773240308, 685868019, 434317065, 179908616, 717313742, 200727447, -872037848, 64070418, -135551508, -896325, -831620767, -352189534, -356181944, 609901900, -289236354, 246076569, -217583953, 921514308, -882824985, -706257006, -950333734, -776665487, -72835029, 894309972, -316049913, 935866656, -431461705, 491161038, 694399198, -972935089, 860989434, 221215990, -734324258 };
        assertEquals(3486604125297873969L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case82() {
        int[] x = { -139996557, 966705231, 162517713, -877563920, 107763722, 973343804, 255871782, -537059802, -423775887, 489940096, -531653339, 739389152, -508092839, -109020332, -127581204, -904792981, 581126041, 106929158, 414931239, -88898242, -17773266, -641780540, 187493971, -444382776, 695525984, 530965234, -381941148, -893640406, -269746033, -717635346, -800255205, -8264523, -225311102, 972205198, 984482442, 101929711, 439552163, 972447577, 593096707, -686148702, 563319220 };
        int[] y = { -139996557, 966705231, 162517713, -877563920, 107763722, 973343804, 255871782, -537059802, -423775887, 489940096, -531653339, 739389152, -508092839, -109020332, -127581204, -904792981, 581126041, 106929158, 414931239, -88898242, -17773266, -641780540, 187493971, -444382776, 695525984, 530965234, -381941148, -893640406, -269746033, -717635346, 800255205, -8264523, -225311102, 972205198, 984482442, 101929711, -439552163, 972447577, 593096707, -686148702, 563319220 };
        assertEquals(3467216661685620496L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case83() {
        int[] x = { -1000000000, -1000000000, -1000000000, -1000000000, -1000000000, -1000000000, -1000000000, -1000000000, -1000000000, -1000000000, -1000000000, -1000000000, -1000000000, -1000000000, -1000000000, -1000000000, -1000000000, -1000000000, -1000000000, -1000000000, -1000000000, -1000000000, -1000000000, -1000000000, -1000000000, -1000000000, -1000000000, -1000000000, -1000000000, -1000000000, -1000000000, 1000000000, -1000000000, -1000000000, -1000000000, -1000000000, -1000000000 };
        int[] y = { 363720355, -4131346, -403791130, -392999098, -845027610, 912254891, 801704874, -783444038, -670550758, -285571328, 956304370, 633815553, 962166842, 153091906, -461316472, -574054338, 748981710, 720832400, 987331377, 250551578, 319911562, 799337220, 534138989, 571502348, 995161893, 233292752, -714803508, -986771192, 717472629, 578462923, 133310959, -740634968, -205246850, 49512755, -602638564, -98685764, -470241969 };
        assertEquals(3386297414312145025L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case84() {
        int[] x = {};
        int[] y = { -600000000, -260000000, -900000000, -680000000, -640000000, -120000000, -860000000, -140000000, -340000000, -300000000, -560000000, -320000000, -620000000, -480000000, -840000000, -540000000, -800000000, -980000000, -280000000, -200000000, -500000000, -880000000, -380000000, -740000000, -160000000, -240000000, -580000000, -520000000, -100000000, -760000000, -820000000, -920000000, -1000000000, -60000000, -460000000, -440000000, -700000000, -960000000, -660000000, -720000000, -180000000, -940000000, -780000000, -360000000, -420000000, -220000000, -20000000, -80000000, -400000000, -40000000 };
        assertEquals(883600003760000004L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case85() {
        int[] x = { -703770882, -465722329, -22285289, -516427177, 826889870, -146236493, 175344433, 974872970 };
        int[] y = { 133709760, -176100518, 863819894, -496150028, 731454516, 602032053, 425337006, -20276892 };
        assertEquals(1849518194184565776L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case86() {
        int[] x = { 344977921, -137351702, -942543690, 934683366, 416232377, -239778463, -749038235, -128633727, -459224812, 473295068 };
        int[] y = { -628351659, -986263029, 432445356, -409686966, -576235924, 959109157, -103246566, 70281469, -523914830, 459522343 };
        assertEquals(2090295347672319876L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case87() {
        int[] x = { 393295608, -990688456, -322329966, -266342367, 739652839 };
        int[] y = { -689597410, 701609400, -68800861, -806847668, -149225551 };
        assertEquals(544713092275082481L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case88() {
        int[] x = { -676573332, 88036565, 870547252, 723545693, 198213187, -167614950, -815324614, 243664600, 425804617, 211466606 };
        int[] y = { -660052766, 68618622, 65645731, 266393726, -822016745, 620497667, -18118817, 537756054, -796512616, 330566358 };
        assertEquals(2080847834597763396L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case89() {
        int[] x = { -686888295, -427201718, -672510942, 290805799 };
        int[] y = { 973288122, 951749608, -803916138, 597974545 };
        assertEquals(67437119312723241L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case90() {
        int[] x = { -661161634, -631012053, 64210995, -591580958, -243683241, -849241457 };
        int[] y = { -276033029, 232608651, 67401711, -139602922, 997150011, 837556453 };
        assertEquals(526165453803862161L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case91() {
        int[] x = { -318437627, 919835870, 992246581, -879620152, -353030228, -564120008, 228907119 };
        int[] y = { -497926007, -604384774, 707425463, 919689341, -25583074, 469843594, -752984473 };
        assertEquals(2132797187009163844L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case92() {
        int[] x = { -555172446, -708450024, -199922646, -284011685, 105645094, -564778768 };
        int[] y = { -197375583, -97580358, 578880377, -821485427, -941235560, 838089554 };
        assertEquals(711754103236281616L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case93() {
        int[] x = { -533200425, -180028390, 11997400 };
        int[] y = { -925878924, 914589712, -612361438 };
        assertEquals(4L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case94() {
        int[] x = { 178576216, -25587720, 589492221, -158375638, -943129790, 827102236, 138416857 };
        int[] y = { -1000000000, -1000000000, -1000000000, -1000000000, -1000000000, -1000000000, -1000000000 };
        assertEquals(559306337516715321L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case95() {
        int[] x = { 1000000000, 1000000000, 1000000000 };
        int[] y = { -243567303, 747290779, 398651465 };
        assertEquals(4L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case96() {
        int[] x = { 424282937, -859333433, -873991945, -71960888, -134495774, -883002051, -522362257, -594608992, 348156475, -86558294, -840709031, 637233932, -870096540, -841927120, -750728482, -361406680, 777761330, -569767616, -234426714, -158959080 };
        int[] y = { 521424234, -735090556, -556782678, -741186665, -772151696, -698108194, 702554142, 56305688, 964013674, -971297849, -882534137, 219340325, 550246778, 900807579, 945083978, 224362991, 265683305, -242289564, 509407003, 380498431 };
        assertEquals(3014270198931898384L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case97() {
        int[] x = { -418674404, -240720935, 851283313, -329418132, 378064096, 316234580, 627993758, 865655813, 380372199, 875368237 };
        int[] y = { -806266446, -390552815, 90830461, 560610988, -955252142, 443180073, -231967309, 24586081, -569903146, 789618733 };
        assertEquals(1848299744917778161L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case98() {
        int[] x = { 232542300, 57624094, 66937185, -621042450, 899496007, 683227864, 739381538, 876341659, 754740759, -255186347, 932617661, -648354845, -393215946, 957264024, -638404462, 223384682, -669962589, -722934201, 229819713 };
        int[] y = { 199000853, -438157713, -116664278, 563963100, 146562344, 480179440, 832721524, 391262925, -377962600, -305653655, 342389164, 328960687, 569952469, 250675970, -860410945, 557777154, -690078236, 477761090, 390717215 };
        assertEquals(2647866456564358225L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case99() {
        int[] x = { -631569843, 171595300, 513263733, -279222326, 552942387, 557298973, 890839040, -161951565, -314408264, -125057483, -217626042, 420806110 };
        int[] y = { 967621302, -123228196, 545903162, 390738968, -159689671, -474065024, 825409030, -289722078, -654895688, 444927944, -682472761, 359992592 };
        assertEquals(1508907413119605625L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case100() {
        int[] x = { 637473820, -976278346, 639840643, -632822413, 190855074, 722271179, 113084477, 70944500, -588534554, -104999510, -76619651, 573009538, -490397559, -459122022 };
        int[] y = { -826892302, 906369049, -45212271, -461275034, 289827058, 406871650, 769242931, -216083423, -804287787, -573658350, -39427785, 55961614, -948895220, -276520942 };
        assertEquals(1838103811212664384L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case101() {
        int[] x = { 11, 12, -10, -3, 18, 14, 14, 18, -16, -15, 14, 4, -4, -15, 16, -16, -7, 3, -20, 7, -16, 7, -17, 19, 20, 13, 0, 0, -3, -9, -16, -19, 7, 19, -16, 11, -20, 11, -2, -1 };
        int[] y = { 16, -20, -3, -2, 13, 13, 0, 8, -13, 14, 2, 19, -4, -2, -4, 0, 3, -18, -11, 14, -17, -13, 6, -20, 19, 9, 8, -3, -5, -13, 9, 4, 13, 2, -10, 20, -1, -18, 4, 13 };
        assertEquals(1681L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case102() {
        int[] x = { -11, 18, 7, -9, -20, 7, 454014, 188012, 1470520, 230704, -1565755, 1943200, 20, -1, 169360, -20, -7, -107107, -500670, 7, 1, -1290437, 9, 1, -617341, -15, -8, 6, 1827462, 575505, 1438406, 931242, 352868, 5, -323440, 12, 484708, 1634123, 15, -3, 16, 1687327, -14, 236636, 1, 686644, 312140, 1813129, -6, 1246339 };
        int[] y = { -18, 0, 13, 17, 13, -2, -1917318, 1772894, -1729109, -1581593, 1198761, 566683, -10, -11, -1946090, 7, -19, -597598, 500378, -3, -12, 1137143, -5, -7, 1979799, 0, -6, -7, -1790931, 435770, 370065, -1273273, 1728030, 3, 310822, 15, 408425, 1477216, -7, 9, 8, -866979, -16, 899407, -13, -1541750, -609193, -90, -20, 1297363 };
        assertEquals(13499172470884L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case103() {
        int[] x = { 1268852, -1900730, 1909730, -356852, -843922, -1625770, 1441564, -1135653, -894532, 1892966, 1689762, -1525527, 1323371, -1206215, -1175958, -1471633, 1766600, -10934, 1789485, -377733, -635466, -1815034, -1231942, 53649, -114210 };
        int[] y = { 685741, -1204151, 1674456, -329366, 271017, -132978, -1676762, 950109, -608490, -885853, 1970208, -583003, 593901, -346678, -1132667, 260888, 1449194, -1838848, -1600664, 230853, -681206, -1228996, 199106, 115693, 1104550 };
        assertEquals(13873881754756L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case104() {
        int[] x = { 846137971, 729362933, 688493964, -779719143, -526479723, 610776069, 359716543, -210083817, 711493096, 455831481, 798960705, -493541071, 418810055, -403686726, -691432442, -766867225, 934419770, -201206764, 35483033, -522689287, -625434495, -199782531, -852972221, -152841829, -499179708, -696804698, 968638457, 804462200, 460784555, -202378007, 673509471, 515637606, -30578970, -894163606, -782477042, 800610415, -434409419, -397913456, 430680415, -373502123, -67565869, -567204389, -406472183, 199366629, 375144249, -902285552, -385782286, -299192976, 296620375 };
        int[] y = { -233227332, 569882679, 593259737, 991541152, 198678399, -808298470, -747536437, 771074747, -936776954, 943891560, -212472991, 56359858, 91408675, -459510642, 685999367, -74720134, -195177862, 901415696, -759897817, 630897908, -740270560, 493232783, 624817924, 142188925, -836124153, 847096050, 602167551, 267957798, -414787814, 823513239, 200624182, -56077927, -160093275, 168649218, -833019855, -730900296, 491023488, 222034788, -66433756, 800313266, 517364410, 216672409, 948159369, -151511661, 752448032, -609291211, 886296586, -262093582, -537647335 };
        assertEquals(3373486447209944976L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case105() {
        int[] x = { -146523020, 126410939, 948730615, -319117498, -715589742, -87601514, -460796242, 877340552, 536006591, -163489762, 233766170, -530947437, -825820213, 265114953, -898819914, -757414606 };
        int[] y = { 208448730, -483475621, 961498762, 572237729, 871378075, -860853467, -926624890, 378178441, 953474061, 348503216, -581530646, 493079402, -652864979, 636803686, 205788085, -90582420 };
        assertEquals(3232814669340803089L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case106() {
        int[] x = { -669337694, -581458883, 223402421, -722083160, 813621955, -808186513, -933984305, -766447649, 519527646, -299286476, 195188565, 985177801, -774201630, 438882051, -841977498, -693927753, 274572819, -686742237, -537386357, -867426420, 381749145 };
        int[] y = { -537214905, 802037020, 68189231, 367564653, -273496042, -252810279, 739439252, 183449971, 670215689, -735145228, -708626883, -996209316, 792991629, -263216382, 482472741, 900232634, 432361207, -644364079, -944053716, 926834887, -206223368 };
        assertEquals(3054127646981612644L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case107() {
        int[] x = { 592975231, -466802312, -360501044, -718549129, 670675248, 457476963, 967403685, -130553578, -664039454, -226732477, 177288330, 22186716, 472345743, -548524183, -167616763, 400218588, -400677091, 42526094, 379091433, 707246652, 989149599, -444405371, -774476422, 320757215, -168664953, 749700727, 694368859, -9077173, 632215368, 523656535, 794817918, -611278045, 370818308, -381075636, -5428403, 554734095, -513221183, 477386679, 2475664, 113426490, -633611564, 837295390, 299028936, -81926949, 540839288 };
        int[] y = { -116630933, -309264269, -822121023, -76773377, 392451646, 396968541, 515491470, -945564988, -382263770, 86664809, -227284582, -186408116, -175761936, 416334841, -258452450, -138684523, -674802436, 868535987, -581154827, 896675447, -531752838, -351757490, -641089122, -571149310, 823760981, -623918736, -256523653, 259719390, -900783019, 997069481, 680339345, -15879364, 73869716, 4837334, -490084302, 751370555, 107618488, -285560560, 449643400, -560727005, -374935138, -591576437, -281778637, 669013183, -813275829 };
        assertEquals(3230856944184907024L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case108() {
        int[] x = { 791742483, -897211635, 48400023, -213475323, 535745640, -579639053, -650456476, -541859942, 28487331, -206461782, -816513875, -106720714, 896059901 };
        int[] y = { -990214296, -623439405, -220808598, -725696501, 571283414, 993482705, 695774609, -764489700, -350810443, -54277420, 540443816, -371932570, -400038803 };
        assertEquals(2852566019464974400L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case109() {
        int[] x = { 505065559, -928842184, 225481964, 65416587, 814092483, -985027984, 694624594, -431655515, 313644767, -428602220, -388473853, -153940105, 850869359, 736173088, 846812035, -530944438, 428495360, 414657416, 448839302, -659286915, 556293946, -112654317, -141457083, 254367460, 600443535, -824393165, -512782609, 67983444, -943026631, -339225685, -55356164, 244316389 };
        int[] y = { -217209148, -164147577, -821683904, -710661720, -204818153, 231064323, 621667751, 742196825, 515264249, -539688251, 901448967, -249765038, -809368079, 870378838, -935958794, 317154832, -143028013, 284881397, 562741445, -360488722, -392031314, -62790061, 947523440, 776244456, 920906771, -223599847, 953406503, 799739695, 197181826, -694484163, 271590855, 277523592 };
        assertEquals(3218062830113664064L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case110() {
        int[] x = { 0, 0, 1, 1, 1000000000, 1000000000 };
        int[] y = { 0, 1, 0, 1, 1000000000, 999999999 };
        assertEquals(9L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case111() {
        int[] x = { -366840944, -11, 453096172, -335114104, -650907187, 3, -10, -990464152, 10, 810724179, 866537746, -797161342, 9, 254593808, -6, 11, 8, -12, 632831875, 36637474, 998090578, 611760797, 743408292, -1, 13, 5, -392926221, -14, -293023749, -2, -1, -9, -878558060, 1, 5, 391030812, 894838971, 306634980, -830287148, -12, -212000150, 3, 21235202, 12, 9, -8, -9, 401540397, -8, 652272867 };
        int[] y = { -292477936, -11, -870113925, -417189962, 791738308, 2, 14, -740244802, -2, -1364701, -857348152, 76628719, -8, -45819880, 12, -5, 14, 4, 590818421, -208496265, 846257104, 538011938, 377166883, -12, 4, -2, 662786770, 14, 303217519, 2, -10, -12, 237813452, -4, -10, 832357338, 573388316, -624897731, 239308172, -8, -312992729, 1, -460972172, -10, 2, 13, 5, 125505065, 0, 164677235 };
        assertEquals(3144937036653203089L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case112() {
        int[] x = { -1, -1, 0 };
        int[] y = { -1, 0, 100000000 };
        assertEquals(4L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case113() {
        int[] x = { 371484029, -717752932, -175041424, 816363110, -826875533, 858132995, -543223324, -463210924, 944422581, 419704626, -780205561, 669372288, -521974245, 11839776, -295292222, 285560180, -455435980, -203230960, -812211065, 537055140, 846001760, 886780972, 626745119, -329287183, 167581862, 125620664, -994901145, -723036722, -428636853, 844720177, -263238650, 762463046, -114182482, 487566869, -389827242, -985860552, -904603693, 382321249, 54491168, -138031670, 637629808, -197010810, -116434523, -441545102, -357566405, -688845285, 853490625, -208759596, -55484484, -969557226 };
        int[] y = { 375765702, 79484946, 833607109, 278385181, 287708255, -295274409, -708418735, 698004896, 694115970, -342706061, 629174384, 826172872, -232325382, -378187224, 113963219, 59574339, -320697224, 433591341, -587583208, 248420057, 398483505, -885686620, -839331528, 460897597, -513506100, 479869440, -195641501, 58414448, 812486494, 905463741, -288148246, -122427159, 589795299, 967687044, -672248024, -179549913, -708002688, -799717730, -949745957, -36047210, -562454550, 956046268, 921021172, 173071064, -162639978, 878972613, -40746742, 133380242, -124337076, -952127403 };
        assertEquals(3641126766330310929L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case114() {
        int[] x = { 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 1000000000, 1000000000 };
        int[] y = { 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1 };
        assertEquals(144L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case115() {
        int[] x = { 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, -1000000000, 1000000000 };
        int[] y = { 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1 };
        assertEquals(144L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case116() {
        int[] x = { 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1 };
        int[] y = { 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, -10, -1000000000, 1000000000 };
        assertEquals(484L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case117() {
        int[] x = { 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1 };
        int[] y = { 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 1000000000, 1000000000 };
        assertEquals(144L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case118() {
        int[] x = { 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1 };
        int[] y = { 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, -1000000000, -1000000000 };
        assertEquals(144L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case119() {
        int[] x = { 716053414, 710629410, -669562204, -836105526, 609353517, -823179678, 829884033, -258333085, 168831164 };
        int[] y = { -544492471, 653121300, 915576026, 802777044, -427149496, -44507665, -995075797, -896821234, -547993160 };
        assertEquals(2409197381230559364L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case120() {
        int[] x = { -307999589, -174396680, 840264574, 28197349, -173940825, 824789164, -949903848, 62926973, 945013638, -459028020, -646505383, -751358194, -763938135, 151991717, -216229650, 739264245, -269622604, 292866648, -378512505, -68766428, 383041416, -852909930, 56568122, 95207637, 759835765, 601685435, -46442480, -503018194, 145640475, -486617141, -470821218, 24106611, 978628352, -839207931, 345167986, -997406804, -408238628, -55236521, 314537787, 520901881, 157879020, 53205015, 359628432 };
        int[] y = { 271785687, -262246616, 233477327, -37777920, -607915834, 620264024, 186785416, 967242456, 788166070, 274307997, 688277886, -143367927, -393780717, 462518658, 92097872, -397352498, 683443258, -168699149, -4365937, 613936402, -205688182, 296679566, -13354490, -628911789, 195497902, -336810848, 720562154, 133607045, 811979191, 832531711, 927204552, 820597751, -941331243, 807665764, 188636894, -989132991, -263008738, -501217624, 21441066, -678754917, -241944862, -657069000, 812122476 };
        assertEquals(3590712286328230144L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case121() {
        int[] x = { 334698097, 309058884, -579526178, 427128852, -999510009, 90491716, -675483421, 673817899, -181834694, 795808236, -788679788, 80136406, 224106200, -632130042, 41974516, 535389412, 921135241, 747210226, -840616495, -796066898, -479893164, 476834933, -186883019, -202682325, -255062714, -101176355, 83264096, 485322505, 550325056, 407829104, 868203283 };
        int[] y = { -697685678, -785432599, 34143797, 534937921, -919236455, -613573546, 542072167, -91291566, -228628456, 901887553, 507473955, -859419466, 26157315, -648122163, 460412232, -63080512, -473207761, -937030684, 139055455, -880904703, -626053390, 467287220, -593991360, -890650267, -442951879, 394602902, -953539477, 172307870, 890285795, 106891527, 558894293 };
        assertEquals(3381620289726861121L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case122() {
        int[] x = { 93, 34, 12, -11, -7, -21, 51, -22, 59, 74, -19, 29, -56, -95, -96, 9, 44, -37, -54, -21 };
        int[] y = { 64, 12, -43, 20, 55, 74, -20, -54, 24, 20, -18, 77, 86, 22, 47, -24, -33, -57, 5, 7 };
        assertEquals(22801L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case123() {
        int[] x = { 1000000000, -1000000000, 1000000000, -1000000000 };
        int[] y = { 1000000000, 1000000000, -1000000000, -1000000000 };
        assertEquals(4000000008000000004L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case124() {
        int[] x = { 0, 10, 20, 30 };
        int[] y = { 0, 10, 20, 40 };
        assertEquals(144L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case125() {
        int[] x = { 1000000, 2, 234, -234, 0, 1 };
        int[] y = { -1, -2, -3, -4, 1000000, -100000 };
        assertEquals(10000000000L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case126() {
        int[] x = { 1, 2, 3, 4 };
        int[] y = { 1, 1000000, 100000000, 1 };
        assertEquals(25L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case127() {
        int[] x = { 856482125, 803730486, 182013614, 81904134, 869506005, 990787648, 954341159, 72524927, 818004363, 404678188, 949371466, 912127179, 375190231, 608736709, 618062850, 383447522, 29494045, 512827399, 741077777, 555753139, 278652402, 665775853, 92262647, 642855927, 869024264, 238535731, 516495243, 327251967, 130915056, 561371545, 97681213, 38668050, 710690631, 328338949, 342680516, 925295817, 250461812, 832343396, 556945604, 505995446, 816121189, 844058854, 837651936, 241749601, 124512984, 997987532, 360102721, 514649297, 870517721, 798942026 };
        int[] y = { 812502208, 64380808, 186518602, 773565891, 54811388, 971257903, 727009246, 901031210, 563980202, 850702622, 245514423, 800921750, 440607147, 906979687, 268189903, 868188248, 308228019, 314376690, 951423255, 570498312, 560329894, 548034703, 255514153, 55830901, 137455528, 523189428, 408210685, 984497230, 166429302, 187354367, 615132777, 855118839, 43736061, 459977028, 224114108, 344094815, 795083886, 664099629, 800493792, 428088801, 793182455, 844555385, 820388964, 309067316, 165767640, 617231675, 938979506, 411420614, 475904331, 443931366 };
        assertEquals(885031580861291241L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case128() {
        int[] x = { 93, 34, 12, -11, -7, -21, 51, -22, 59, 74, -19, 29, -56, -95, -96, 9, 44, -37, -54, -21, 100 };
        int[] y = { 64, 12, -43, 20, 55, 74, -20, -54, 24, 20, -18, 77, 86, 22, 47, -24, -33, -57, 5, 7, -100 };
        assertEquals(29584L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case129() {
        int[] x = { 1, 10, 11, 12 };
        int[] y = { 1, 10, 11, 12 };
        assertEquals(9L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case130() {
        int[] x = { 0, 1, 2 };
        int[] y = { 0, 1, 2 };
        assertEquals(4L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case131() {
        int[] x = { 0, 4, 8, 9, 10 };
        int[] y = { 0, 4, 8, 9, 10 };
        assertEquals(16L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case132() {
        int[] x = { 0, 0, 0, 0 };
        int[] y = { 1, 2, 3, 4 };
        assertEquals(9L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case133() {
        int[] x = { 5, -5, 0, 0 };
        int[] y = { 0, 0, 5, -5 };
        assertEquals(49L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case134() {
        int[] x = { 3, 4, 5, 6 };
        int[] y = { 8, -8, 2, 1 };
        assertEquals(9L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case135() {
        int[] x = { 0, 0, 0, 0 };
        int[] y = { 100, 0, -100, -200 };
        assertEquals(10404L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case136() {
        int[] x = { 0, 1, 2, 3, 4, 5, 6, 7 };
        int[] y = { 0, 0, 0, 100, -100, 0, 0, 0 };
        assertEquals(81L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case137() {
        int[] x = { -3, -2, 2, 3 };
        int[] y = { 0, -2, 2, 0 };
        assertEquals(16L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case138() {
        int[] x = { 1, 1, 1, 5, 6, 6 };
        int[] y = { 1, 2, 5, 5, 1, 2 };
        assertEquals(36L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case139() {
        int[] x = { -1000000000, -1000000000, 1000000000, 1000000000 };
        int[] y = { -1000000000, 1000000000, -1000000000, 1000000000 };
        assertEquals(4000000008000000004L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case140() {
        int[] x = { -1000000000, 0, 1, 2 };
        int[] y = { -1000000000, 0, 1, 2 };
        assertEquals(9L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case141() {
        int[] x = { -100000000, 100000000, 0, 0 };
        int[] y = { -100000000, 100000000, 0, 1 };
        assertEquals(9L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case142() {
        int[] x = { 0, 1, -2, 3 };
        int[] y = { 0, 1, -3, 4 };
        assertEquals(9L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case143() {
        int[] x = { 100000000, 10, -100000000, -10 };
        int[] y = { 100000000, 0, -100000000, 0 };
        assertEquals(484L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case144() {
        int[] x = { 0, 1, 0, -1, 10, 11 };
        int[] y = { 1, 0, -1, 0, 10, 11 };
        assertEquals(16L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case145() {
        int[] x = { 9384, 3484, 1262, -1162, -752, -2162, 51, -22, 59, 74, -19, 29, -56, -95, -96, 962, 44, -3753, -5464, -21, 23, 3264, 42534, 4245, 4243, 4243, 4253, 425, 6464, 4, 35364, 64, 64, 4234, 64, 4353, 644354, 6435, 64, 867, 9752, 9775, 0, -9, 6565, 6563, 4374, 6525, 43 };
        int[] y = { 643, 12, -4362, 20873, 55, 74, -20, -54, 24, 20, -18, 77, 86, 22, 47, -24, -3363, -5762, 5265, 78436, 4975, 68, 862, 22, 6623, 8529765, 7956, 7, 48, 773, 98, 426, 4623, 862, 3, 8, 362, 754362, 9734, 32662, 5653, 573, 9743, 3634, 87, 373, 7374, 3734, 8734 };
        assertEquals(422266032400L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case146() {
        int[] x = { 0, 0, 0, 1, 2, 3, 4 };
        int[] y = { 0, 2, 4, 3, 2, 1, 0 };
        assertEquals(25L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case147() {
        int[] x = { 1000000000, -1000000000, 1000000000, -1000000000 };
        int[] y = { 1000, 1000, -100, -100 };
        assertEquals(1214404L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case148() {
        int[] x = { 0, 0, 0 };
        int[] y = { 1, 2, 3 };
        assertEquals(4L, minimumsquareeasy.minArea(x, y));
    }

    @Test
    public void case149() {
        int[] x = { 100, 0, 1, 1 };
        int[] y = { 100, 0, 0, 1 };
        assertEquals(9L, minimumsquareeasy.minArea(x, y));
    }

}
