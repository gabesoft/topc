package topc.test.search;

import junit.framework.*;
import org.junit.Test;
import static org.junit.Assert.*;
import topc.search.*;

public class ConnectingCarsTest {
    ConnectingCars connectingcars = new ConnectingCars();

    @Test
    public void case1() {
        int[] positions = { 1, 3, 10, 20 };
        int[] lengths = { 2, 2, 5, 3 };
        assertEquals(15L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case2() {
        int[] positions = { 100, 50, 1 };
        int[] lengths = { 10, 2, 1 };
        assertEquals(96L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case3() {
        int[] positions = { 4, 10, 100, 13, 80 };
        int[] lengths = { 5, 3, 42, 40, 9 };
        assertEquals(66L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case4() {
        int[] positions = { 5606451, 63581020, 81615191, 190991272, 352848147, 413795385, 468408016, 615921162, 760622952, 791438427 };
        int[] lengths = { 42643329, 9909484, 58137134, 99547272, 39849232, 15146704, 144630245, 604149, 15591965, 107856540 };
        assertEquals(1009957100L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case5() {
        int[] positions = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 1000000000 };
        int[] lengths = { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1000000000 };
        assertEquals(999999980L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case6() {
        int[] positions = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 900000001, 900000002, 900000003, 900000004, 900000005, 900000006, 900000007, 900000008, 900000009, 900000010, 900000011, 900000012, 900000013, 900000014, 900000015, 900000016, 900000017, 900000018, 900000019, 900000020, 900000021, 900000022, 900000023, 900000024, 900000025 };
        int[] lengths = { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1000000000 };
        assertEquals(21599999424L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case7() {
        int[] positions = { 44202891, 88833429, 256077876, 337935658, 367871739, 427960181, 506756242, 512820686, 560531316, 754071474 };
        int[] lengths = { 17478870, 81171425, 35561316, 24557789, 25096330, 50535112, 2035651, 8142604, 50152216, 50542908 };
        assertEquals(882315007L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case8() {
        int[] positions = { 15033432, 124808778, 179984217, 246192051, 263857205, 358430789, 400761579, 417930174, 780367248, 889338809 };
        int[] lengths = { 13157921, 9876629, 35661725, 7323556, 14221222, 13588820, 4524835, 85079141, 87360276, 324791 };
        assertEquals(1451207885L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case9() {
        int[] positions = { 42029846, 136272234, 209150429, 244285256, 262158134, 441395412, 546143957, 630609313, 701446017, 806891598 };
        int[] lengths = { 78829034, 47191671, 7262446, 16367349, 174540605, 79232001, 54048625, 68167297, 21036335, 18628973 };
        assertEquals(462973455L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case10() {
        int[] positions = { 8880311, 32717799, 219547112, 289027995, 376533943, 447305956, 502608753, 637219433, 750223097, 853115475 };
        int[] lengths = { 4706655, 154787666, 57040513, 76349772, 45142854, 48104262, 81977159, 43397258, 29348752, 33485007 };
        assertEquals(692756877L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case11() {
        int[] positions = { 17530861, 60694860, 102374370, 132346737, 219436847, 341150047, 510538567, 639707694, 770256759, 830887576 };
        int[] lengths = { 29021492, 21989292, 29513440, 49925131, 37231052, 27325613, 50807745, 7487064, 32195867, 21096956 };
        assertEquals(1703865106L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case12() {
        int[] positions = { 13073048, 68443770, 135200884, 197147501, 261702265, 364467224, 460270448, 533488721, 772247077, 780301001 };
        int[] lengths = { 17948855, 52409328, 54566553, 5272190, 55173756, 47580114, 53407050, 7786202, 4359228, 91144319 };
        assertEquals(1281309055L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case13() {
        int[] positions = { 76168369, 111370509, 207777420, 238050909, 269558664, 305029129, 405634554, 513695844, 616783948, 768616017 };
        int[] lengths = { 14408006, 64035833, 11019125, 10404438, 17193810, 11256504, 6879829, 6760127, 118026083, 15492680 };
        assertEquals(1206497932L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case14() {
        int[] positions = { 25960036, 100665431, 187193334, 194856116, 247618612, 440675118, 473329383, 577446613, 754735430, 832134292 };
        int[] lengths = { 13135872, 38433248, 269346, 139060, 81644444, 31584038, 32173389, 153546341, 35332601, 15720554 };
        assertEquals(1257156839L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case15() {
        int[] positions = { 998263, 107451056, 260788717, 276064874, 334015297, 375943507, 445201402, 522487718, 594686033, 852643043 };
        int[] lengths = { 58938239, 148602370, 11527325, 23406311, 39159803, 42067858, 21814076, 40434177, 209340557, 32575033 };
        assertEquals(607571712L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case16() {
        int[] positions = { 625150, 14511568, 19093616, 34822576, 50240717, 63600248, 69497659, 90659209, 100240293, 108029673, 127285051, 136469463, 150812225, 161446507, 174887551, 179582788, 185230360, 190463168, 199125500, 214461627, 219645915, 222318826, 252847007, 265520193, 306806413, 310781414, 321793677, 330385907, 347837955, 361715080, 403455566, 471472019, 509150124, 525022807, 527996232, 546270556, 562957461, 584542639, 624596487, 640039606, 649999237, 679581070, 693403509, 708472872, 729948958, 769008289, 776804789, 812865944, 838161549, 869080951 };
        int[] lengths = { 8969980, 3654558, 7007149, 8012741, 5860642, 1365872, 2857558, 1318379, 5867498, 15980011, 7270417, 10109242, 10612086, 7463251, 4389160, 4665547, 1568693, 6637734, 3800598, 4789870, 2212147, 26282763, 8066019, 12839734, 3151453, 8600092, 7290256, 15679567, 7836923, 22820269, 6606313, 30036013, 14382358, 2966130, 11643916, 1696024, 16078048, 1839828, 10219334, 9499338, 10103967, 3244046, 7457828, 16438560, 19362170, 2099429, 22310996, 14337832, 4770559, 27845170 };
        assertEquals(5203260261L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case17() {
        int[] positions = { 5323282, 31422959, 58007165, 87039319, 97326973, 106959732, 117923509, 130775308, 141636009, 150893381, 152572692, 185933947, 199891753, 204241596, 236212908, 240232137, 254884897, 259994902, 286879955, 298416430, 319107347, 335249887, 355233035, 360202830, 398808640, 418775889, 442512223, 450780719, 463825179, 487143816, 506469064, 524887679, 536359238, 545558542, 555574398, 596127266, 618220394, 638729131, 678249366, 700851200, 713513152, 719266753, 735804983, 751322150, 789791166, 852566467, 867500205, 870728361, 880363942, 893134909 };
        int[] lengths = { 11657654, 15730205, 25037525, 9509704, 5379566, 269052, 1628769, 3786560, 919661, 142898, 29917420, 1844938, 3689848, 5498853, 2237769, 10333832, 3610552, 865346, 9638219, 14088064, 12598673, 6343243, 2169396, 22931695, 13875149, 18380105, 6637943, 2020623, 21289445, 10371627, 16919650, 5575609, 9173035, 9367312, 37823430, 3797805, 9837019, 32909353, 18430341, 8670797, 2097545, 3551995, 9425123, 32510862, 660341, 6618837, 1657342, 5107828, 6415421, 5841907 };
        assertEquals(4605627799L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case18() {
        int[] positions = { 2830387, 6455368, 7891140, 24014702, 41846859, 45384862, 56954395, 70783965, 79380312, 103386377, 107689302, 114194351, 125775734, 130054229, 159857244, 176264894, 179867695, 186023272, 226705597, 251594778, 258055917, 266696935, 272587306, 280601891, 290294224, 291334063, 319494695, 327515610, 329545016, 367024045, 381390330, 424506751, 425992200, 435642613, 442843542, 456821377, 472873729, 507542430, 543957168, 559303382, 575030075, 585323492, 609190676, 645561316, 691500453, 731651215, 775618973, 790766850, 822512282, 865626274 };
        int[] lengths = { 1371182, 562736, 4716801, 10206475, 1680463, 10883104, 7112979, 1529461, 1902609, 1825631, 1446909, 4966630, 2425965, 9486442, 16008265, 1702295, 5023709, 26015786, 6837451, 1481356, 5596093, 836340, 7459502, 43043, 450129, 26084577, 2371797, 785942, 25099426, 10215868, 429278, 35784, 3759892, 1816745, 10179243, 12040517, 23913576, 34736612, 595295, 4634683, 6686619, 5754574, 2352083, 33161887, 3452585, 27599546, 14559171, 14149661, 13428343, 32318773 };
        assertEquals(4976925650L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case19() {
        int[] positions = { 358056, 4166162, 23219938, 33967355, 39346433, 54667044, 78344430, 88045049, 114756849, 118757451, 126385820, 150361266, 157371189, 204550220, 215430399, 216418509, 221591187, 255758105, 293162211, 307125139, 318983899, 321606977, 331906397, 335689689, 341017884, 352678572, 373718357, 390535111, 413808848, 434112104, 460212390, 468751676, 476591606, 518660623, 543762749, 553017314, 554912069, 579103332, 603009700, 647926069, 666511015, 687501434, 716967342, 728009647, 749367808, 770066599, 789390381, 812281747, 835356333, 862552175 };
        int[] lengths = { 1543377, 1174523, 10149232, 708255, 7812057, 1448216, 2091884, 26666987, 3027492, 1332212, 9405358, 4319630, 47068173, 10765346, 807386, 1166034, 14825491, 28481546, 8243771, 8262286, 2090663, 454427, 724578, 4818, 2195855, 18795520, 12043650, 18969551, 7863302, 25049876, 119117, 626620, 17294194, 5711324, 7407498, 1306190, 660812, 518826, 3012851, 14654792, 4716018, 24907301, 1586792, 11702004, 13703157, 14354197, 21981734, 12709119, 22850827, 15312207 };
        assertEquals(5023973768L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case20() {
        int[] positions = { 18105917, 25435231, 37970413, 55843481, 61961811, 68443936, 71053216, 87444960, 116214379, 122634482, 146568118, 161689561, 172781431, 189361513, 226403187, 244675899, 257724075, 259750965, 298075909, 303000989, 316639838, 324410143, 334969133, 352932992, 366697745, 430085627, 431896849, 443830860, 479346967, 500463287, 508242280, 528564844, 532360193, 569859608, 580930836, 585043452, 595615418, 609255638, 641942946, 726017553, 753238793, 754404756, 755771192, 759368503, 768307061, 827220266, 850544455, 864583898, 873404484, 881091684 };
        int[] lengths = { 5965524, 9962668, 4965026, 3872884, 3519148, 2353467, 13191837, 27470728, 2623596, 1009667, 11139671, 1116542, 9121548, 30155787, 2861147, 10950425, 504166, 29856853, 2234326, 12165479, 6914334, 151203, 10699861, 8060586, 36247063, 1207009, 1782660, 34873165, 16652988, 7444402, 12537488, 1298619, 1586330, 9434902, 1455765, 6037364, 1886500, 6673199, 82442097, 8472782, 179140, 381073, 1187388, 1081775, 21829751, 9175369, 2300557, 527338, 936189, 18070886 };
        assertEquals(4823906896L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case21() {
        int[] positions = { 15952034, 26441465, 36386153, 42092528, 73748806, 87179543, 91707151, 97074437, 101476832, 119157773, 125796420, 145230882, 149640401, 168434800, 207454069, 243554438, 249534177, 278668308, 288982273, 306338779, 321020747, 327429935, 331762970, 339961943, 344091551, 366423427, 376438811, 386824167, 395986229, 427565157, 459158214, 488530286, 502501080, 549854071, 581379731, 603815688, 616914861, 682774313, 688266420, 705853345, 716804962, 722811876, 748715049, 764965154, 801777938, 822508817, 829709326, 840140230, 873034851, 883447642 };
        int[] lengths = { 8627751, 3748119, 3546986, 18109970, 12918016, 2254015, 583490, 3676793, 15702041, 6105881, 7844813, 657127, 1039725, 10037984, 23261662, 3125760, 5635782, 1181037, 16104383, 3402833, 1680673, 2568191, 7026196, 4049760, 5421924, 665352, 29510, 2146500, 469972, 23207770, 24649813, 8167506, 10719992, 15729898, 21319991, 6460931, 29046079, 1164658, 12274149, 9761240, 4435643, 15848193, 3518752, 20189215, 9779192, 6076601, 510347, 29405601, 8451499, 1228589 };
        assertEquals(6203378813L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case22() {
        int[] positions = { 291302, 12870110, 16356450, 23605886, 31023632, 52908254, 71187932, 119882804, 124754148, 133778113, 145048897, 152344912, 178136200, 196698528, 199579278, 229343022, 241568414, 258245399, 293432350, 303242216, 330062378, 376143300, 398733379, 403338406, 427652306, 438846303, 448813673, 462895235, 467749710, 485565137, 496264808, 533300228, 557976885, 573457906, 617562368, 632172582, 659566996, 666332686, 720968927, 733361887, 748645660, 764102967, 785464699, 793641399, 805914446, 829642576, 835072514, 868035261, 877235242, 880889816 };
        int[] lengths = { 11310086, 768520, 6472898, 4019469, 9518203, 2240758, 27416472, 3736611, 305345, 446644, 3486950, 11400291, 18559100, 576085, 8377297, 7662245, 15229775, 12304735, 4513442, 16134528, 36743720, 4960406, 4266915, 243286, 3741110, 9119209, 8713332, 4799849, 6995966, 5170383, 25082487, 14608897, 11480012, 22822956, 4320307, 9044805, 3428079, 29991540, 7678916, 7069825, 5752345, 13942075, 2315157, 7559255, 18346198, 321598, 11484088, 1056876, 827332, 8265264 };
        assertEquals(5803627471L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case23() {
        int[] positions = { 4275332, 25443791, 48760520, 50284767, 68892384, 90877367, 98579842, 113918065, 115177729, 120334078, 145043848, 150739992, 156516119, 181550930, 197874661, 209226476, 224679471, 264318721, 277299670, 278275529, 287926212, 291661364, 295580008, 334839849, 341994926, 368457194, 384577252, 391210838, 411657493, 412887628, 427696459, 446047001, 466902329, 482233048, 500047033, 518859838, 550854326, 611218809, 628437268, 636114284, 654257824, 699890564, 728393541, 743539256, 760489648, 774268326, 782848953, 807026649, 838081276, 860448422 };
        int[] lengths = { 6018571, 12859215, 351793, 8582407, 3888260, 4587530, 13976521, 1236986, 369767, 23088344, 1770590, 3963064, 22424399, 5907173, 5945642, 10591930, 5633793, 4331705, 725985, 8478010, 2157489, 1318307, 3167098, 3942755, 19652217, 9321627, 1771786, 4506705, 310616, 5175386, 790472, 10558224, 1766705, 15325349, 12127767, 9039334, 50327657, 2876010, 205737, 13115705, 11350790, 28214686, 1562194, 3640684, 5584664, 7267408, 19711906, 5431751, 611749, 34198593 };
        assertEquals(5693380116L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case24() {
        int[] positions = { 11095730, 16143068, 25767632, 48657176, 56131288, 72639121, 103222418, 109588209, 116356231, 128915419, 148264207, 151867600, 158355671, 175125269, 185223635, 196834735, 201028565, 217273436, 249825369, 266107321, 272007521, 282068007, 291907880, 298534930, 319372178, 347611012, 365979940, 380530976, 382234831, 404969912, 415596497, 422326369, 462052493, 470841474, 508241179, 544969790, 551363341, 568096300, 620918318, 643307865, 684736849, 738865968, 746344185, 771318532, 782528745, 800923248, 819534700, 846086438, 871186804, 875911377 };
        int[] lengths = { 243199, 259863, 6575269, 2475320, 1822588, 19391908, 1477127, 1119553, 3732415, 15428291, 2698971, 4377915, 6672755, 1454637, 77976, 109900, 6217927, 29359405, 2298697, 5893598, 3719573, 6977101, 2051863, 12387997, 9854299, 1661472, 3990666, 1416846, 21361890, 9233975, 4379563, 39204327, 4452068, 26196152, 22672443, 5937868, 1188748, 4630455, 8572381, 14741475, 11919755, 7138497, 22351494, 9355280, 6940250, 8455691, 2835938, 8177815, 4530306, 18284409 };
        assertEquals(5460019762L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case25() {
        int[] positions = { 6459000, 13845579, 18637552, 25843053, 42232748, 70811700, 77081301, 102597927, 108170992, 122701268, 148650065, 154679461, 179255442, 182485609, 215581188, 232883834, 241207304, 257849263, 280175237, 287062107, 313999197, 327306908, 351033785, 354646031, 385890014, 398483945, 405622038, 452030738, 464594883, 482816598, 494411179, 524518099, 545918148, 552610811, 556017468, 606500553, 608330904, 660089394, 676419377, 695484505, 704521420, 709201227, 713325239, 736643803, 752575931, 762143382, 806294251, 834412045, 872775680, 881950180 };
        int[] lengths = { 7321145, 2153640, 4894286, 11203082, 12976915, 4904422, 11217584, 2019233, 2807850, 24260282, 1575993, 10745675, 287638, 20814130, 5149565, 6094297, 13819769, 14470905, 5379044, 2954533, 7428092, 14540918, 2026889, 24424769, 77361, 5825380, 33817329, 11850987, 7748547, 4935381, 29121722, 6289222, 796780, 1517079, 5985074, 310420, 40296353, 15986464, 10413106, 4905341, 1826095, 1439821, 15049212, 1758886, 122016, 38023615, 9859422, 10758391, 1564526, 8969971 };
        assertEquals(5018386008L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case26() {
        int[] positions = { 39390912, 68583521, 71782793, 98127606, 115753560, 130519398, 147685577, 148542067, 160591208, 175991048, 184587304, 201152353, 212744326, 234698046, 237660521, 250628257, 258228654, 270570589, 275522113, 287191698, 308429740, 327815149, 340877025, 341912192, 349606541, 417011380, 488386072, 493909991, 503809129, 525412466, 541996777, 543643129, 579693234, 585714291, 605913920, 613498268, 630163432, 631506124, 641365185, 645165102, 660502180, 667189321, 707661121, 729251152, 755252308, 760625741, 769734846, 802166764, 830029611, 870277069 };
        int[] lengths = { 1859875, 2887901, 12432136, 17441169, 4058762, 2335928, 136381, 8757131, 11079150, 8339233, 13280963, 4507068, 20264557, 330903, 262760, 5301721, 606548, 1753735, 4149491, 4731884, 11524223, 5007905, 663841, 728586, 54899972, 13965999, 1043123, 9240309, 382120, 6293514, 1241235, 14628266, 4635430, 12565003, 2293355, 15008278, 42531, 5929171, 3060136, 11456988, 3020076, 18453244, 6250747, 1968334, 3334224, 8064521, 662645, 16712749, 6045044, 3337086 };
        assertEquals(5780052686L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case27() {
        int[] positions = { 14053124, 37976134, 44838421, 54615893, 65025254, 84385111, 98530296, 127302305, 140409783, 144802771, 152698907, 164522448, 170346375, 189102657, 219099651, 224797134, 228930340, 237985375, 246969196, 275545841, 287910863, 298006669, 301144919, 319786726, 337460500, 350582245, 354056344, 359534142, 372703859, 433596363, 459176006, 478695308, 488994568, 565123020, 578186651, 591746049, 597247980, 620693745, 656298283, 679642673, 709901557, 731530508, 741477172, 756710476, 767044696, 800219916, 819676075, 848692888, 865951870, 877950903 };
        int[] lengths = { 4182783, 4569945, 1270828, 9377876, 3029214, 8630839, 10987736, 2545018, 2354484, 900853, 2841186, 2204406, 15743206, 17801362, 4866429, 1331102, 3296219, 5629063, 6880675, 11916606, 4079294, 1970998, 11087262, 2160626, 2650031, 1238903, 5240223, 11417984, 22758517, 6367708, 14214471, 8776255, 5945979, 1587481, 13167765, 531042, 994221, 16011071, 324744, 23710407, 7621682, 3343380, 7882623, 166324, 27811717, 2751248, 2111204, 16090015, 11517873, 21540165 };
        assertEquals(6592126208L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case28() {
        int[] positions = { 3564940, 26886135, 29518532, 34092290, 38427385, 60779695, 86855034, 96876356, 109714982, 119036494, 132199706, 135615177, 146630249, 158034190, 181233649, 196685621, 238839455, 250693754, 266432091, 272980832, 277423044, 305678408, 313688690, 327435894, 378045767, 384051510, 417292156, 420636604, 425097073, 449942212, 476928050, 499668433, 529894239, 549864003, 559374703, 592512767, 610960060, 626609792, 640157442, 676237103, 695207670, 717447385, 729627367, 752686919, 799959438, 817007604, 829892990, 859642843, 877397903, 887785574 };
        int[] lengths = { 7216194, 537379, 1029025, 649775, 6889538, 20113078, 1790587, 11223307, 3836031, 2694028, 3354418, 5224109, 2146462, 11927058, 7519504, 22951090, 7081492, 473559, 5352819, 120968, 20383164, 1427604, 766292, 47447223, 1695403, 7997064, 2948517, 2213565, 20034147, 19651116, 10348815, 16561871, 3737964, 5698981, 25632421, 5071281, 2009177, 2034740, 25520043, 7990729, 17857780, 7999800, 10956683, 24513546, 12040994, 10412969, 12516003, 7801755, 859647, 8772934 };
        assertEquals(5397248922L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case29() {
        int[] positions = { 4827585, 25652486, 44598191, 75267860, 85290019, 104567685, 108288987, 122060071, 133521079, 152065414, 158416485, 178160286, 207442142, 215221639, 225803418, 298227814, 306196717, 309690187, 319192948, 348019417, 364977714, 371357953, 387990295, 398947494, 411320445, 417424503, 423857295, 442392791, 451896146, 467807788, 498167512, 530918036, 568608759, 583030596, 600261419, 609900930, 621496962, 640833827, 648620420, 654007244, 685731276, 707820405, 722758914, 748556986, 767265210, 798974512, 830493304, 850406728, 873420084, 895623004 };
        int[] lengths = { 20625808, 12049816, 5887473, 4752800, 14544222, 3670619, 1979745, 6999020, 5118769, 2477698, 3868776, 2894239, 5328857, 5791498, 60092464, 6738710, 1769386, 3967593, 3455007, 11266863, 3749772, 8586301, 9836687, 2722942, 4182413, 1172053, 3672716, 7850290, 11207503, 3292961, 7474505, 5313313, 9961967, 13385608, 4398026, 10885182, 19270872, 1509011, 4802533, 8000362, 20029090, 2867061, 17092364, 7867599, 16029528, 3005239, 7524785, 20798095, 14230009, 4017652 };
        assertEquals(5705056349L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case30() {
        int[] positions = { 4741299, 15887654, 22171965, 36714774, 56914373, 69041377, 88678802, 100431004, 120344485, 146706024, 151857757, 153261605, 172716518, 180446630, 205663146, 206141516, 217464260, 232149142, 249311470, 253333048, 267936221, 276240514, 285373141, 330916215, 363099122, 380533314, 390747019, 402402675, 418128539, 419789163, 422520293, 433922544, 451375707, 467418927, 476527006, 502932371, 543629834, 574778726, 592543419, 618084879, 648954908, 668887218, 700939958, 737626137, 761303281, 775099093, 790516333, 834429474, 852055989, 873556715 };
        int[] lengths = { 2343531, 1300031, 11807783, 4536641, 11389273, 1174121, 3867456, 15522327, 19253659, 654994, 667807, 9482924, 7670732, 16775368, 210257, 10996493, 12785266, 13876142, 256218, 14262458, 5439535, 4982930, 720804, 7860544, 8318311, 5029792, 9815350, 13448729, 125455, 1422135, 9641486, 16853090, 11912998, 5715673, 14368363, 30467368, 10162739, 589606, 6987264, 22218945, 15215183, 21953452, 33494190, 12795794, 9871428, 5641964, 14791756, 7452662, 18858111, 5029805 };
        assertEquals(4740374585L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case31() {
        int[] positions = { 6125714, 14378856, 24810134, 29110485, 44636216, 46540957, 55978109, 63920546, 77928790, 81730869, 88176696, 98706664, 105142625, 117526592, 121925556, 164202209, 206529823, 207585248, 230433745, 252603686, 258301420, 259681143, 269226535, 271618313, 289624054, 297620149, 314922972, 319000822, 329542503, 343033114, 368381040, 391713882, 433134876, 475931930, 528514254, 540839561, 548015508, 573210634, 650785691, 681315582, 700008921, 731218511, 745574618, 786575320, 798827061, 811152066, 845571266, 860296973, 885741132, 890343060 };
        int[] lengths = { 5290841, 8706203, 3512996, 14903474, 1477625, 1127504, 343162, 2016492, 345681, 4745482, 8329938, 4656234, 3266746, 799570, 36949370, 37676145, 566405, 1616829, 14750822, 4194234, 401791, 1290721, 1397782, 14263086, 6999585, 4190416, 922767, 8839222, 10397703, 22620929, 17578391, 15789372, 33250113, 37806167, 12293190, 2749844, 16019879, 60862104, 21179170, 9995527, 16920453, 2289552, 40078411, 5594861, 10563000, 30995456, 10680251, 14547407, 981773, 8100468 };
        assertEquals(3947890484L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case32() {
        int[] positions = { 1390794, 8098839, 14618209, 18700401, 33642420, 57165157, 61768625, 67349614, 115154279, 122841717, 128292271, 139479162, 148252383, 159520609, 170087081, 203567187, 211362970, 221668665, 241456635, 265028536, 275340950, 299059372, 316759706, 330445713, 339830126, 376473236, 379079986, 391649839, 418011247, 443968214, 466242407, 498149923, 508766342, 522525847, 543307951, 560743429, 564737614, 625287357, 631653743, 635864485, 649475616, 660673294, 687691606, 707346288, 732700850, 807310888, 820403972, 831605320, 842693722, 893868830 };
        int[] lengths = { 2442687, 3727972, 1769482, 3996506, 15345239, 1311991, 5013961, 1815771, 1208813, 2572744, 3401496, 3026991, 8510811, 8723122, 24128058, 5395370, 9035468, 19388702, 1513593, 933279, 338403, 16667738, 5248728, 7284877, 11664326, 969234, 1298483, 14883294, 25764355, 14538636, 20378852, 9901341, 6370113, 789394, 10755035, 601295, 4400462, 3102144, 859939, 12835976, 9512856, 19736991, 523588, 1514040, 14169020, 12904115, 1241262, 9305401, 960851, 1955541 };
        assertEquals(6078850838L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case33() {
        int[] positions = { 18559662, 30759961, 42939209, 62811752, 87075886, 98672155, 113321374, 124282013, 148452014, 159920344, 165981350, 178280262, 181218822, 195316423, 207131960, 210328415, 220875245, 239549671, 244467056, 258633333, 268207733, 280839419, 285303084, 291662655, 297471667, 307013727, 312234953, 315767713, 328171982, 388853903, 428294801, 445147524, 480774862, 487419300, 494946376, 509087405, 525954130, 565927182, 631592544, 661295185, 687110439, 706697631, 718347311, 730297422, 778840406, 783754978, 807611525, 818972145, 866871878, 885344606 };
        int[] lengths = { 6237864, 904415, 5171069, 4237580, 8107058, 5014952, 6769194, 5443372, 3088264, 4978793, 637082, 1785199, 9825681, 2045146, 579573, 7140003, 2486499, 4849276, 1586650, 5699365, 3379283, 3067120, 3427545, 123574, 1388268, 1475053, 3483326, 82154, 18929741, 966440, 12774208, 33803005, 350654, 3383115, 1707731, 270703, 32228060, 49732665, 26661189, 11433747, 16040006, 4449413, 3428939, 11376802, 2903845, 15146828, 4127912, 5169258, 17747305, 14367241 };
        assertEquals(5852249603L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case34() {
        int[] positions = { 25852676, 35731596, 50149455, 72058886, 76258269, 81101737, 94912930, 127175051, 132388959, 142439839, 166789353, 168638209, 171926348, 178219512, 186796617, 196778109, 207262630, 227307962, 248325695, 249048058, 284429324, 291736614, 309855583, 324745013, 350322649, 392379636, 395934929, 423777317, 438832436, 473779512, 510153086, 526539187, 559164088, 606557839, 634348045, 656346021, 665467065, 679114424, 689457354, 693129593, 709133087, 716785709, 741632160, 763505125, 786661251, 809339807, 814059870, 845284305, 860706182, 882198128 };
        int[] lengths = { 588679, 1779264, 14879325, 3511590, 1420884, 11697318, 9244543, 4706115, 6620715, 15767794, 132502, 2115141, 5825105, 4661510, 3211334, 3377889, 4115832, 5215100, 211182, 29698251, 2953607, 6735534, 12846947, 1713486, 37729019, 1370104, 18259569, 2739351, 2709412, 3126140, 12433183, 13897105, 36761674, 9057280, 9684052, 2578026, 8778660, 3525314, 861269, 9746511, 6592295, 8661037, 8044756, 19553923, 3719870, 1544431, 12310858, 7428115, 20299332, 17501630 };
        assertEquals(6159770712L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case35() {
        int[] positions = { 11183736, 19441768, 58139674, 63741311, 71657403, 76162709, 79402741, 82283413, 118785673, 133183428, 152580389, 171068732, 185501072, 187521621, 200610467, 208356936, 244270762, 260216910, 268654543, 271684552, 280834362, 290739882, 295731308, 319694626, 335694455, 357860187, 386930415, 417498478, 432882915, 435908879, 462386937, 480651927, 495930307, 501377598, 523995418, 543243096, 543711868, 576066233, 602166026, 645929648, 672073695, 690894090, 714634210, 747703207, 777866424, 789397392, 825301304, 850038796, 876507656, 882915053 };
        int[] lengths = { 1277862, 3459192, 1586242, 7860346, 1711076, 1382380, 2601847, 22452409, 9053595, 14284455, 3088195, 13246742, 1362664, 1393209, 5448283, 12344826, 13564174, 6558785, 2239747, 7851871, 4454156, 210681, 22119690, 11348168, 15657675, 5873729, 7814425, 9675994, 2547717, 3986140, 2406409, 10896657, 1196214, 2557566, 8705044, 323122, 19530489, 743249, 7661130, 18754074, 18498919, 6953649, 31240557, 21779859, 8391349, 27591408, 20666973, 959197, 708581, 9567611 };
        assertEquals(5606890403L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case36() {
        int[] positions = { 15503813, 18941999, 40512283, 70985084, 75908915, 85989476, 112549883, 123822854, 156333096, 161303048, 171082396, 176513885, 187260500, 209655581, 216018647, 218858394, 233595529, 248330340, 264847834, 270242053, 277112500, 282148888, 306264861, 311776550, 343582355, 351485241, 390232342, 406914711, 414336535, 440162406, 447949900, 486048048, 493054974, 507480683, 540673110, 556298862, 569397631, 582109356, 611471280, 637752620, 675953409, 688339240, 727662409, 756763105, 778912771, 800744843, 830042889, 855526397, 871336493, 882211674 };
        int[] lengths = { 1950363, 10316614, 2888098, 2232669, 5899302, 3014458, 9891967, 3989010, 2278051, 9045820, 3789060, 4258656, 17555039, 4805416, 522523, 5638884, 1554746, 5449468, 1901240, 1288686, 4450179, 13064951, 4184692, 12434803, 2803276, 16269872, 13570191, 213861, 19666418, 2099535, 27994006, 4497, 2025651, 8888689, 6641327, 10405067, 9956368, 27791189, 1112565, 19078496, 2491109, 28977216, 2888486, 19325125, 14156056, 1770300, 24506028, 12067607, 3009069, 5547882 };
        assertEquals(5554364161L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case37() {
        int[] positions = { 7624820, 22367948, 39673667, 61348546, 67853141, 73161654, 81164030, 89553188, 91168640, 100470866, 110387291, 117658629, 120942064, 122892729, 130194850, 137570528, 159531545, 164567160, 177026372, 204157094, 210218477, 224680825, 260520068, 276969591, 287246998, 294918939, 296487941, 312287047, 324808266, 386741457, 392906036, 440440009, 458591633, 462520722, 530274314, 543041690, 571287121, 607737170, 614879194, 617290957, 621348938, 661848549, 686054706, 718082218, 772634520, 779624591, 791114174, 815479600, 835604226, 894910870 };
        int[] lengths = { 14410156, 6826719, 10298332, 5973591, 2898014, 6173869, 5515574, 1439914, 7755595, 3691339, 3808803, 1244552, 719710, 4924860, 2538111, 13657363, 4649899, 2641257, 22626404, 4528494, 10729469, 30090134, 15082594, 7203844, 2037112, 820557, 8691931, 10493348, 5429208, 1849669, 33741984, 3652851, 2401481, 48230781, 986112, 798311, 27937271, 3930187, 1575698, 2122773, 3938136, 8077912, 19194963, 31081317, 37960, 5193032, 11018270, 8397341, 55657881, 124081 };
        assertEquals(5160828129L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case38() {
        int[] positions = { 4808125, 6844094, 12020816, 15490169, 19238824, 26370661, 42287962, 73489908, 88956814, 99389985, 105805879, 145431063, 152708742, 166701452, 176454865, 181488463, 185486643, 193996387, 206081951, 220735872, 246554450, 284758119, 291517352, 297817360, 336671777, 342841120, 358964308, 383795928, 401295535, 433790112, 476338779, 517178691, 527398513, 545727083, 551234267, 573330689, 598811648, 614875255, 652370868, 674512508, 681138278, 704404490, 748720179, 755524609, 763379713, 773074102, 787359459, 802977977, 842291983, 874324569 };
        int[] lengths = { 339017, 2682905, 2018609, 469356, 6742083, 9247646, 8001502, 14674492, 516624, 3969157, 24547323, 2825449, 9572316, 7171706, 2894264, 2960623, 3012250, 3695441, 7181041, 12444557, 33101371, 5282701, 845848, 17361114, 5071037, 938376, 19716359, 2026238, 18040643, 39206551, 34544032, 4566779, 13800220, 2773038, 5247277, 14548872, 5640427, 33507025, 464755, 2097496, 12832713, 5100270, 4759959, 4065853, 6682423, 5234793, 9702719, 13477654, 843042, 20380422 };
        assertEquals(5176884880L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case39() {
        int[] positions = { 5337795, 21385300, 45028355, 63470632, 71794177, 77221804, 83846023, 104310551, 111972714, 117775185, 140452891, 156851767, 158428389, 190915367, 203795329, 223705721, 234719269, 252456116, 258439571, 282683054, 300452139, 302611344, 313078484, 321599025, 341663749, 383469001, 413431441, 422344512, 431586924, 442127296, 461840769, 474777223, 485636173, 503666804, 517681775, 587274990, 635458168, 651172488, 664032270, 668236753, 669915603, 673912496, 684797477, 686693649, 747272757, 785550051, 814683744, 857040205, 862987205, 886188273 };
        int[] lengths = { 6554541, 6696126, 13130043, 3791254, 626454, 6480596, 20105788, 5596532, 5539225, 6034439, 15013037, 400880, 3528040, 3275234, 19050503, 7648229, 1223425, 3430640, 23109504, 14861484, 819619, 9110354, 7418669, 19784745, 23916231, 19213466, 6027367, 4434393, 1945321, 14205508, 6839757, 10589372, 13427833, 6895221, 6874728, 28261658, 8189130, 5834269, 2478194, 1563363, 1200506, 2321325, 1857388, 9381092, 22475095, 14669241, 22959489, 644504, 21312317, 3425622 };
        assertEquals(4905110108L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case40() {
        int[] positions = { 3243143, 9145427, 17258863, 45573610, 76814167, 81226188, 116029990, 135168589, 136537481, 151281336, 164650418, 166360877, 181746694, 183851913, 206844715, 217407277, 230127341, 239815680, 251687152, 264257520, 287060714, 300900448, 308379129, 317420374, 333278071, 344353969, 371809623, 398355446, 420300765, 423039646, 460268627, 472673958, 476840107, 507262351, 521608242, 545722214, 584909164, 624039956, 674901527, 693734906, 695169185, 717047333, 740437008, 757939505, 785724001, 795762769, 852847891, 859140692, 876634231, 892366933 };
        int[] lengths = { 1177847, 7007217, 18745930, 3994988, 1981078, 28307335, 18468817, 701957, 2340700, 9712404, 1461553, 14676010, 70011, 11982456, 802006, 4997557, 2813170, 4192181, 2555537, 9904075, 1862206, 2700182, 2935750, 13182334, 10525801, 25824278, 24852194, 6038357, 2479787, 5187367, 9763769, 1774608, 7812226, 20320, 7081044, 35149914, 33766790, 27092438, 18813698, 636426, 13625836, 17094518, 4016580, 7859751, 8124470, 23585499, 3330519, 9350313, 3935171, 6612010 };
        assertEquals(5069658364L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case41() {
        int[] positions = { 9132829, 22376405, 28657826, 35134744, 73223114, 82462970, 88115671, 129266312, 138311197, 146379718, 151357638, 176425984, 196953535, 201858393, 207504785, 218781018, 245125024, 261174738, 277156696, 286676844, 303916380, 316819717, 327846997, 355503914, 380785973, 390697774, 411785087, 440671165, 456608726, 466242953, 479364034, 510863262, 529689379, 546404943, 585312518, 600848118, 616504401, 632846828, 670268828, 682773461, 726629510, 749690667, 809987501, 817138333, 830705482, 838095756, 843739189, 854592850, 867905685, 877802728 };
        int[] lengths = { 4116798, 5572986, 3220173, 9388661, 524078, 4723192, 26460231, 3662252, 4055667, 1303580, 23915995, 13390533, 3468993, 4746912, 10052291, 5055754, 15907599, 13976467, 1071283, 7018087, 47979, 10351779, 5612347, 1441168, 8591843, 7830223, 28311522, 7409086, 3520807, 4590644, 24280515, 12996429, 3670337, 8522947, 11223693, 12667758, 3237628, 1878319, 11251148, 2631947, 1622862, 6417834, 2887973, 2930365, 4442878, 2042041, 776112, 7032830, 9389320, 7091252 };
        assertEquals(6379602044L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case42() {
        int[] positions = { 4077441, 16063925, 32999173, 36133818, 38697333, 58278910, 64313541, 81947216, 84122747, 116940168, 123873735, 149107880, 154427473, 155594109, 160319618, 194352439, 212888122, 254895628, 287388168, 312776008, 314907612, 329908545, 352668844, 367138730, 378240955, 406145664, 413954754, 421489729, 463693445, 486167033, 511843131, 524819951, 530213660, 573456540, 587164515, 607397220, 645163316, 664877097, 674313766, 695362146, 705112684, 717107877, 742080383, 757076953, 762207960, 777274003, 802955658, 821902276, 836721630, 868043218 };
        int[] lengths = { 11247, 5057374, 582321, 393181, 12367298, 1118234, 13507296, 403043, 27853743, 3019679, 2087070, 2967056, 1865, 3619294, 18238994, 2143334, 21938982, 22344874, 4718732, 1109, 1582666, 20795896, 9177372, 3277146, 10796930, 1429592, 2885516, 3022533, 7987559, 18748643, 7472313, 881794, 43050418, 1963924, 18149249, 34555101, 14859757, 6040682, 13112223, 4911600, 2700341, 22931656, 13915808, 1655210, 1706846, 3087036, 15542846, 10085, 24249608, 400320 };
        assertEquals(5668536343L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case43() {
        int[] positions = { 12726859, 47124777, 57493813, 64900772, 78076587, 81208030, 100623027, 112224684, 134826363, 150643222, 175200947, 187777363, 196953706, 213410875, 224796245, 234763070, 257790920, 270352112, 290008858, 305301194, 318870125, 320805323, 323109285, 335831287, 338861991, 361778567, 395735460, 400582704, 443777195, 470890528, 488914879, 535975668, 549935747, 561282738, 569274152, 571486617, 607803957, 611878189, 683500275, 701965921, 731602657, 750136413, 755791407, 777154889, 805192890, 810622503, 844848476, 857826923, 862664856, 887198397 };
        int[] lengths = { 30167675, 6437510, 5064734, 11872653, 1817539, 5463914, 5381799, 5356244, 9959209, 17207235, 8902779, 2240188, 13966721, 10296893, 3467680, 2699079, 12039212, 4918553, 4385082, 2290780, 1424315, 659633, 5100361, 573702, 4631490, 7087233, 1100628, 33627796, 2265891, 15730920, 3340351, 9244702, 732931, 384838, 171012, 11414686, 3409655, 24689403, 12002222, 18105524, 9955440, 4852829, 17685879, 523837, 2372165, 8592941, 5887238, 2878539, 13130649, 7911713 };
        assertEquals(6754850474L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case44() {
        int[] positions = { 10193290, 13394289, 37642813, 48992720, 54095728, 92941724, 98531166, 118588622, 124279230, 133396845, 140921222, 147952888, 159949006, 167580361, 189564523, 202717013, 227738240, 232019946, 252210765, 259556301, 302995620, 317659460, 322131621, 328015462, 334842819, 340807560, 376725021, 386866854, 411070096, 425488186, 439838259, 473768912, 495866809, 560353058, 569855327, 592982912, 620897205, 641210610, 677269930, 687619747, 712600516, 721903978, 731674783, 747202398, 760305828, 783053968, 793726018, 802823457, 836922447, 875831575 };
        int[] lengths = { 2815, 15638674, 2538475, 4120981, 9295840, 2486759, 18471678, 5372379, 5121428, 2945329, 5461005, 9829161, 5756029, 17054115, 12829333, 17963942, 555225, 16130005, 1829487, 26345778, 8184523, 1854114, 5715033, 5391945, 2226192, 32713214, 9153168, 5245428, 1364017, 7927512, 5509011, 1114133, 50996433, 61674, 21427416, 12407882, 1907446, 1832594, 1306383, 16107470, 8124770, 2623725, 2152649, 4768730, 19776704, 1827807, 1705135, 1050347, 26609702, 8614117 };
        assertEquals(5135995705L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case45() {
        int[] positions = { 17787394, 26372510, 52311714, 74284573, 81700585, 84972441, 99030483, 120359444, 131873892, 141519469, 155540922, 167604390, 197208781, 206133144, 224932256, 234964938, 244083847, 285373343, 286159808, 307385980, 323511155, 325796029, 333123600, 339686517, 370154817, 383392035, 417031096, 436690215, 461662874, 483420546, 486889243, 525145634, 535501613, 547163374, 575635329, 589185472, 631123918, 635592214, 655979693, 658386475, 665388016, 681858306, 710688212, 770193579, 778598735, 787618990, 801311911, 854986488, 884572486, 896615979 };
        int[] lengths = { 8129638, 7446877, 2688479, 2490507, 1238181, 5410732, 7687543, 6661690, 720073, 1488356, 399157, 7151848, 1909164, 9566851, 1378217, 980007, 961550, 304689, 8567554, 15405769, 1699654, 2189864, 301944, 4855078, 11820464, 5129364, 10607060, 23995469, 15462937, 1888382, 8650714, 148418, 5718348, 15798470, 13536063, 11807590, 2433232, 6092065, 1051113, 2253338, 995357, 17889809, 40431249, 3022461, 3468672, 2633098, 27541960, 14040017, 689511, 2238847 };
        assertEquals(6659524537L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case46() {
        int[] positions = { 2503115, 16621460, 23488524, 36712985, 51131960, 59860220, 89947230, 106470937, 130361307, 136518718, 144930689, 150425555, 152781359, 160110397, 195004098, 251082609, 259366248, 269558520, 280259449, 282140295, 308905445, 314575919, 327636838, 341450532, 374875371, 380705270, 429730380, 461454341, 486302552, 511216485, 523845151, 535120883, 546142264, 554585482, 564464612, 568657814, 572231807, 577978161, 595603303, 646342780, 662911212, 679513461, 700405089, 754482328, 766405811, 782852231, 805456923, 837692717, 862351134, 877936720 };
        int[] lengths = { 6618119, 905045, 391930, 11270306, 3728475, 19211059, 5876959, 10128827, 3955248, 4609104, 515478, 941268, 4795109, 25502217, 54588393, 2615749, 8513784, 7163391, 326345, 17702369, 1830915, 2463639, 6693189, 32518712, 4090551, 27654114, 31522749, 16637178, 14096517, 11325215, 9096216, 5625400, 5814578, 5375298, 3803576, 531297, 34996, 6413884, 43124284, 11407029, 3334140, 13165578, 43313297, 1504537, 726789, 5620474, 8116240, 8671739, 5175568, 7933642 };
        assertEquals(3777882492L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case47() {
        int[] positions = { 2242705, 5706341, 12663257, 27932048, 31878148, 38934757, 62090225, 77766945, 94408891, 103651016, 108406564, 114779490, 134111621, 139696221, 152594339, 162305456, 179721433, 193017255, 220535034, 258648638, 261586995, 271606309, 283454524, 296048723, 300247768, 307510286, 315722286, 322505029, 341606817, 358181267, 389690870, 410273876, 421549882, 446726541, 476157634, 512191921, 520375457, 539137630, 587765259, 600669428, 622737478, 636435803, 660087090, 704351713, 742131308, 756574871, 771129532, 808809162, 828516815, 846617800 };
        int[] lengths = { 1639846, 5465295, 12022588, 3148511, 6028802, 19143579, 2297182, 15717861, 5734827, 3914422, 2701370, 10406439, 131186, 12176389, 599550, 13355913, 2230699, 75503, 7752955, 2867774, 252337, 3927314, 7991609, 3165437, 1481904, 749844, 4064809, 18837302, 7912855, 18481253, 4806349, 1264639, 4196658, 4366764, 35948620, 570388, 16830699, 39968634, 8614149, 2358819, 3899, 19727824, 41699486, 35174691, 937154, 10999311, 17952965, 13767614, 10168428, 19931794 };
        assertEquals(5290652680L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case48() {
        int[] positions = { 4604125, 13594369, 37068669, 43680141, 51269372, 86580968, 91113294, 102123173, 112739354, 117850084, 120076101, 128589349, 148587558, 194995996, 203258357, 215183819, 247285987, 257968985, 269575733, 279193023, 289813752, 292648254, 294073661, 303994426, 339103468, 366485561, 419644712, 450378681, 455314608, 478442674, 489906005, 505220602, 529681690, 541472561, 552167125, 565192690, 572489410, 579047788, 611673543, 701700972, 719353641, 752376694, 758384381, 773862504, 794776835, 819289171, 823346153, 842287440, 865041316, 869617974 };
        int[] lengths = { 5727861, 6297409, 2207364, 7147032, 19074407, 926013, 4275454, 8251953, 3561276, 1131354, 6949040, 15413332, 15593498, 1038776, 5050393, 6810981, 585673, 4254648, 4963155, 1134928, 2634184, 720660, 3204475, 4764996, 14280801, 148194, 9310915, 2151433, 4818579, 3511528, 8784206, 22767203, 672081, 3156045, 8453912, 2029395, 1295828, 17432170, 89379727, 4872904, 10273021, 3665804, 14383066, 19090873, 3202725, 449244, 9949278, 10675365, 2672251, 196024 };
        assertEquals(6918288275L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case49() {
        int[] positions = { 2836131, 11573977, 16551143, 31693118, 63995690, 68303643, 85131601, 96422844, 114535505, 120264698, 145695234, 157318914, 161248972, 170138515, 173875876, 189894679, 223155687, 230117642, 245979611, 267460942, 279341561, 280056464, 283138550, 294466222, 321742266, 344077585, 364089397, 372926281, 388722115, 402625397, 418988485, 422070705, 453347521, 460672588, 482089924, 487285684, 547383618, 566103149, 597725834, 611282976, 631532061, 670977799, 700350230, 710684381, 738671677, 764247442, 769162729, 808215579, 849224731, 864684333 };
        int[] lengths = { 8706142, 3341954, 6398813, 21807440, 1636092, 12339309, 4561084, 5306971, 886645, 21854346, 676807, 906890, 1373018, 932109, 8261401, 16312271, 1993015, 8769420, 19459497, 5795112, 597265, 863148, 4320426, 9118699, 1584064, 7279941, 3207626, 2953887, 11706296, 1957158, 332904, 7788402, 4495301, 14080422, 4268741, 55904615, 10093582, 18679231, 10012466, 118290, 7151906, 28969605, 7915804, 15088669, 16435384, 3456518, 19324748, 33403696, 8907835, 31850833 };
        assertEquals(5354584050L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case50() {
        int[] positions = { 8745704, 20609287, 55406500, 60991569, 76826825, 88549372, 99300820, 105011881, 108741045, 113246482, 133459493, 139204731, 147346261, 170993893, 187723519, 197228345, 211131463, 223754251, 232685346, 247086346, 285905071, 293948304, 311234027, 337917614, 344344181, 380334615, 405932546, 417959974, 423958182, 453188076, 469453385, 528249120, 554063794, 571347534, 578763340, 592923971, 614435197, 617355473, 676680221, 699946370, 710542380, 714102324, 755770920, 778381534, 787957995, 814313694, 838467802, 849622529, 875383635, 883987244 };
        int[] lengths = { 182320, 24642380, 62826, 10143726, 6300733, 217743, 930536, 2089467, 3331728, 17587753, 5167092, 2969579, 6762942, 8200154, 1517947, 2548702, 1820761, 6957869, 4890037, 7029549, 3856801, 11197140, 22951811, 3353881, 9710074, 15136707, 1975001, 5809658, 26701367, 9524189, 19857168, 11194276, 4390768, 1909008, 6556095, 12064588, 1620298, 36127818, 3727604, 2627668, 6044, 5572239, 5779906, 2425690, 8254961, 13493092, 8326050, 19288172, 3595885, 11705098 };
        assertEquals(6489823450L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case51() {
        int[] positions = { 31288854, 37129030, 44391040, 62091134, 79336491, 97206085, 103197735, 114038170, 155416843, 157194028, 173631140, 191651582, 226645653, 250880260, 258873682, 267274068, 287906693, 299074361, 301345436, 316178065, 323464323, 325101445, 335696963, 362052340, 375741642, 395014363, 413108571, 419921374, 433013700, 439708843, 442467795, 454528924, 466572486, 502823984, 510353539, 523794856, 534588706, 565004383, 583536193, 600578198, 648169218, 683968230, 725632346, 740970937, 803564921, 814566964, 825000002, 832926036, 840976369, 878134714 };
        int[] lengths = { 4044816, 6473692, 17641872, 12969923, 14596160, 3484773, 8021298, 16542073, 757858, 1949956, 2878762, 18993577, 3344136, 5959572, 8018782, 18745079, 6301923, 1621726, 3301597, 306092, 885014, 9765252, 17365501, 8511112, 18853615, 16555520, 6281870, 2090339, 254563, 173570, 8370261, 10129306, 13692952, 1438408, 2284239, 9087649, 6550620, 17839892, 1541139, 13311923, 28639530, 897102, 8772727, 34983353, 7848951, 5699305, 4190687, 379140, 28383561, 10343096 };
        assertEquals(4706741035L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case52() {
        int[] positions = { 12209179, 33561401, 40452768, 56063074, 76898873, 109652746, 121200344, 138498956, 148462632, 155481964, 166615337, 185284169, 191773125, 222514271, 239430191, 244869815, 246349994, 252791863, 253781237, 291933975, 304038145, 310599327, 361594094, 378481462, 385558696, 393497791, 418927386, 435367657, 443124181, 456033307, 484786461, 498229596, 510418485, 511387948, 535235029, 554392573, 570583459, 602736215, 671967916, 677331849, 716709767, 722212918, 723742032, 746806769, 771640451, 796400233, 825190799, 842551375, 870093688, 882929041 };
        int[] lengths = { 732539, 1043170, 1643717, 5308812, 12194646, 3615607, 6734254, 8066805, 4187807, 10859362, 13873215, 2291244, 12313778, 9370626, 2218476, 1453925, 205679, 783593, 25106045, 712691, 3287927, 37940811, 7520239, 269462, 5966191, 14359510, 6937092, 4995745, 8557407, 23129566, 13242151, 7652343, 320760, 18297960, 6967234, 2019235, 26978089, 35723849, 717298, 9908219, 4517490, 1453250, 13411045, 4531168, 8403196, 11875332, 14680265, 8398176, 4364243, 16246110 };
        assertEquals(4804313385L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case53() {
        int[] positions = { 14450, 36278263, 57501620, 63405892, 80759025, 101275274, 122319846, 140980394, 168526866, 173816194, 182279797, 188839933, 192622614, 203700955, 206787054, 209672322, 218007153, 233987009, 243167515, 249723809, 262615714, 279319367, 295309325, 303527273, 306518331, 313407028, 351338710, 365373191, 378434209, 406542186, 430923582, 438658341, 465654168, 488126360, 507463714, 511345575, 528251146, 589307883, 598367193, 632388477, 661080784, 667439748, 683676863, 723397307, 773798533, 808344542, 832732091, 855448732, 863137537, 880508029 };
        int[] lengths = { 19921684, 15770211, 3412538, 8042690, 81516, 14898535, 2013413, 26478704, 1416366, 8015818, 1248339, 2280195, 2096498, 2820714, 1245070, 2478281, 12630598, 5948747, 1063145, 3055431, 9063630, 7671422, 6588135, 2542309, 1391135, 5840933, 2775200, 3026318, 9551862, 5971555, 1751053, 17561931, 18337889, 3470254, 930930, 11851704, 24038199, 6162523, 18299032, 10354975, 5833541, 3466277, 18689534, 48183632, 30618884, 2954116, 16037081, 3551392, 3596726, 6282036 };
        assertEquals(5653670030L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case54() {
        int[] positions = { 3549296, 20989215, 31299530, 34562554, 50471191, 76246325, 102403868, 121133600, 127340202, 131876875, 136014952, 157749355, 177496445, 191316212, 202384636, 215106016, 225397339, 235828049, 244662511, 282682302, 294610487, 313543518, 330595961, 340568447, 342979515, 405695260, 431369508, 483626021, 515206289, 524970263, 528101301, 539645847, 556803034, 566198328, 567222036, 575216145, 584157309, 600598511, 627723044, 649141653, 704802236, 738475781, 755384077, 765351081, 786449698, 836770750, 858533577, 867709169, 880674093, 890857429 };
        int[] lengths = { 12326614, 2618746, 2993341, 11062782, 11217554, 18855668, 18659774, 5702563, 4021303, 3143569, 9772089, 19226867, 6486280, 3946545, 10043154, 3552319, 9759585, 5451330, 20071191, 6100376, 3868521, 7296978, 5760588, 1358117, 14874345, 1570380, 18940485, 2400096, 1298682, 56855, 207029, 15847726, 4806324, 251663, 4535463, 3546401, 4706457, 20573300, 11133012, 34203358, 22726389, 15809542, 580050, 17448369, 19797006, 18431327, 1003255, 8002686, 3574152, 1380397 };
        assertEquals(6679836766L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case55() {
        int[] positions = { 12285330, 13861637, 22545720, 57374808, 82479759, 92759515, 136269962, 137995679, 149839300, 160700080, 187988006, 206314644, 224622561, 242047037, 254376321, 265187516, 276307695, 288108076, 296771266, 335167553, 346105414, 359404603, 380384856, 389308410, 401891310, 415528854, 438324169, 480395287, 491883143, 507933252, 556675857, 569333212, 593770395, 599404157, 600791320, 654143759, 686124581, 707733913, 727814072, 730687109, 732432448, 738330442, 741357189, 773330089, 789073515, 790909223, 795617613, 812678684, 845767348, 876293107 };
        int[] lengths = { 1494624, 7986390, 32459980, 19376505, 7123004, 19134495, 906475, 1241006, 973739, 11616053, 8962429, 12333343, 2619516, 11615866, 3916721, 1313171, 939000, 6839369, 305593, 3802739, 2882108, 19007025, 8196351, 11737520, 722117, 22134373, 32770548, 4387929, 7773145, 42989362, 11139925, 18942318, 402994, 23937, 46218189, 9949324, 5240208, 18568009, 1418945, 305754, 5409239, 2175850, 9641229, 4738485, 1047170, 2743322, 1716837, 124501, 29559224, 21229873 };
        assertEquals(4821652644L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case56() {
        int[] positions = { 15, 40, 30, 20, 50, 60, 70, 80, 90, 100, 110 };
        int[] lengths = { 5, 10, 10, 10, 10, 10, 10, 10, 10, 10, 1 };
        assertEquals(0L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case57() {
        int[] positions = { 5606451, 63581020, 81615191, 190991272, 352848147, 413795385, 468408016, 615921162, 760622952, 791438427 };
        int[] lengths = { 42643329, 9909484, 58137134, 99547272, 39849232, 15146704, 144630245, 604149, 15591965, 107856540 };
        assertEquals(1009957100L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case58() {
        int[] positions = { 4, 10, 100, 13, 80 };
        int[] lengths = { 5, 3, 42, 40, 9 };
        assertEquals(66L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case59() {
        int[] positions = { 50, 20, 30, 170 };
        int[] lengths = { 90, 3, 5, 31 };
        assertEquals(67L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case60() {
        int[] positions = { 10, 1 };
        int[] lengths = { 1, 1 };
        assertEquals(8L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case61() {
        int[] positions = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 999999999, 999999998, 999999997, 999999996, 999999995, 999999994, 999999993, 999999992, 999999991, 999999990 };
        int[] lengths = { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
        assertEquals(9999999790L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case62() {
        int[] positions = { 1, 2, 3, 4, 5, 500000000, 999999995, 999999996, 999999997, 999999998, 999999999 };
        int[] lengths = { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
        assertEquals(4999999940L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case63() {
        int[] positions = { 100, 50, 1 };
        int[] lengths = { 10, 2, 1 };
        assertEquals(96L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case64() {
        int[] positions = { 195745346, 803520162, 109290109, 247431814, 31736621, 316009534, 909910272, 636781317, 454419049, 69064827, 425334996, 132537747, 346622421, 510948828, 707032529, 551799881, 40049384, 623126449, 172240622, 125849230, 570962186, 1291034, 268422902, 62432561, 275480421, 870335876, 863412859, 778630075, 526327760, 341253614, 543968750, 467571712, 827111081, 698618602, 372990234, 217831752, 945112188, 925012704, 178366988, 94169182, 936332404, 241305448, 764039507, 154172165, 364509718, 396913386, 853292556, 658415736, 602308349, 751642502 };
        int[] lengths = { 19546723, 17842380, 14602621, 16996889, 935716, 3666233, 1889646, 17543216, 7291103, 5775126, 12583404, 19669865, 13515027, 8156422, 33416060, 12022846, 9169120, 1439701, 4395904, 1568793, 21696545, 3155266, 4133773, 2099177, 40030538, 6113651, 5256789, 18358531, 13818548, 1456477, 5025132, 146858, 5472553, 1427286, 12868828, 8088053, 16565816, 3266546, 12932059, 8596990, 1582418, 3628810, 5279556, 12018148, 7353250, 2048059, 285075, 355096, 7804341, 628627 };
        assertEquals(6490968249L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case65() {
        int[] positions = { 100, 50, 1 };
        int[] lengths = { 49, 5, 1 };
        assertEquals(93L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case66() {
        int[] positions = { 1, 2, 3, 4, 999999998, 999999999, 1000000000 };
        int[] lengths = { 1, 1, 1, 1, 1, 1, 1000000000 };
        assertEquals(2999999979L, connectingcars.minimizeCost(positions, lengths));
    }

    @Test
    public void case67() {
        int[] positions = { 100, 50, 1, 5, 10 };
        int[] lengths = { 10, 2, 1, 1, 1 };
        assertEquals(137L, connectingcars.minimizeCost(positions, lengths));
    }

}
