package topc.test.simulation;

import junit.framework.*;
import org.junit.Test;
import static org.junit.Assert.*;
import topc.simulation.*;

public class FallingSandTest {
    FallingSand fallingsand = new FallingSand();

    @Test
    public void case1() {
        String[] board = { "ooooo", "..x..", "....x", ".....", "....o" };
        assertArrayEquals(new String[] { "..o..", "..x.o", "....x", ".....", "oo.oo" }, fallingsand.simulate(board));
    }

    @Test
    public void case2() {
        String[] board = { "..o..", "..x.o", "....x", ".....", "oo.oo" };
        assertArrayEquals(new String[] { "..o..", "..x.o", "....x", ".....", "oo.oo" }, fallingsand.simulate(board));
    }

    @Test
    public void case3() {
        String[] board = { "ooooxooo.ooxo.oxoxoooox.....x.oo" };
        assertArrayEquals(new String[] { "ooooxooo.ooxo.oxoxoooox.....x.oo" }, fallingsand.simulate(board));
    }

    @Test
    public void case4() {
        String[] board = { "o", ".", "o", ".", "o", ".", "." };
        assertArrayEquals(new String[] { ".", ".", ".", ".", "o", "o", "o" }, fallingsand.simulate(board));
    }

    @Test
    public void case5() {
        String[] board = { "oxxxxooo", "xooooxxx", "..xx.ooo", "oooox.o.", "..x....." };
        assertArrayEquals(new String[] { "oxxxxooo", "x.oo.xxx", "..xxo...", ".oo.x.o.", "ooxo.ooo" }, fallingsand.simulate(board));
    }

    @Test
    public void case6() {
        String[] board = { "..o..o..o..o..o..o..o..o..o..o..o", "o..o..o..o..o..o..o..o..o..o..o..", ".o..o..o..o..o..o..o..o..o..o..o.", "...xxx...xxx...xxxxxxxxx...xxx...", "...xxx...xxx...xxxxxxxxx...xxx...", "...xxx...xxx......xxx......xxx...", "...xxxxxxxxx......xxx......xxx...", "...xxxxxxxxx......xxx......xxx...", "...xxxxxxxxx......xxx......xxx...", "...xxx...xxx......xxx............", "...xxx...xxx...xxxxxxxxx...xxx...", "...xxx...xxx...xxxxxxxxx...xxx...", "..o..o..o..o..o..o..o..o..o..o..o", "o..o..o..o..o..o..o..o..o..o..o..", ".o..o..o..o..o..o..o..o..o..o..o." };
        assertArrayEquals(new String[] { ".................................", ".................................", "...ooo...ooo...ooooooooo...ooo...", "...xxx...xxx...xxxxxxxxx...xxx...", "...xxx...xxx...xxxxxxxxx...xxx...", "...xxxoooxxx......xxx......xxx...", "...xxxxxxxxx......xxx......xxx...", "...xxxxxxxxx......xxx......xxx...", "...xxxxxxxxx......xxx......xxx...", "...xxx...xxx......xxx............", "...xxx...xxx...xxxxxxxxx...xxx...", "...xxx...xxx...xxxxxxxxx...xxx...", ".................................", "ooo.........ooo.........ooo...ooo", "ooooooooooooooooooooooooooooooooo" }, fallingsand.simulate(board));
    }

    @Test
    public void case7() {
        String[] board = { "oxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxox", "xoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxo", "oxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxox", "xoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxo", "oxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxox", "xoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxo", "oxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxox", "xoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxo", "oxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxox", "xoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxo", "oxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxox", "xoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxo", "oxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxox", "xoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxo", "oxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxox", "xoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxo", "oxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxox", "xoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxo", "oxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxox", "xoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxo", "oxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxox", "xoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxo", "oxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxox", "xoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxo", "oxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxox", "xoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxo", "oxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxox", "xoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxo", "oxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxox", "xoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxo", "oxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxox", "xoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxo" };
        assertArrayEquals(new String[] { "oxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxox", "xoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxo", "oxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxox", "xoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxo", "oxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxox", "xoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxo", "oxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxox", "xoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxo", "oxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxox", "xoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxo", "oxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxox", "xoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxo", "oxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxox", "xoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxo", "oxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxox", "xoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxo", "oxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxox", "xoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxo", "oxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxox", "xoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxo", "oxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxox", "xoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxo", "oxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxox", "xoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxo", "oxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxox", "xoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxo", "oxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxox", "xoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxo", "oxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxox", "xoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxo", "oxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxox", "xoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxo" }, fallingsand.simulate(board));
    }

    @Test
    public void case8() {
        String[] board = { ".oxxoooxooo..x..xxoooxxxox", "oooxoxoxxoxoxx..ooxox.xx.x", "oxo.o..o.oo.xx.xo....o.oox", ".ox...o..x.x.x.x.x.x..xxox", "x.ox...xoxooxoxxxxx.oxooo.", "...xxox...oxooo.xxo.x.ox.o", "xxxoxooxo.o.ox.xoooooooox.", "ooo.o.xo..xooox...oxx..xxo", "..xxo.ooxxx.ox.o.x..oox.xx", ".ooxx.x...oxxoxxoxooo..xxo", ".x..oxooxo.ox...x.o.oo.x.o", "ooxx.xxxxoo...xx.xxoxx.oox", "ox...x.xxoox.x.o..ooo.x.xx", "ooxx...xx.oooo.ooxo.ooo.x.", "oxoxx...xxo....o..o.oxxoo.", "xoooxooox....xxx.x.oooxox.", ".o.xxxooxxx.xooo.xooo.xxoo", "...o.oooooooooxxoxx.oooxo.", ".xooxoxxoxxooxx...xo.o.o.o", "ooooxoox.oxxx.xxxxxxo.xoo.", "xxxxoooox.xooo.x.oooxxox.x", "xxoox.o.o..oxx.xo.ooo.o.oo", "o...oxox.x.oxox..ox.x.ooxo", "oooox.x.xxoxo.ooooxoxo.xoo", "o...x.oxxxx..ooooxxo..x.xo", "xxoxxx..oxxxo.xxoox.oo..oo" };
        assertArrayEquals(new String[] { ".oxx.o.xooo..x..xxo.oxxx.x", ".oox.x.xxox.xx....xox.xx.x", "oxo.o.o..o.oxx.xoo.o...oox", "o.x.o.oo.xox.x.xox.x.oxxox", "x..xo.ox.xooxoxxxxx.ox.oo.", ".ooxx.x...oxoo..xx..x.oxo.", "xxx.x.oxo.o.oxox..ooo.ooxo", "..ooo.x.o.x.oox..ooxx.oxxo", ".oxxooooxxxoox.ooxo.oox.xx", ".o.xxoxo...xx.xxoxo.oo.xxo", "oxo..xoox...x...x.o.oo.x.o", "ooxx.xxxxooo.oxx.xx.xx..ox", "ox...x.xxoox.x.o......x.xx", "ooxxo..xxoo....o.xoooooox.", "ox.xx...xxo..o.o..oooxxoo.", "x..oxooox.o.oxxx.xooo.xox.", ".ooxxxooxxxoxooo.xooo.xx..", ".ooo..oo.oooooxxoxxooo.x..", ".xooxoxxoxxooxx.o.xooooooo", "ooooxooxo.xxx.xxxxxxooxooo", "xxxxooo.x.xooo.x..o.xx.xox", "xx..xooo.o.oxx.x.oo.o.o.oo", "o...oxoxox.ox.x.ooxox.ooxo", "o.oox.x.xxox..ooooxox.oxoo", "oooox..xxxx.oooooxxo.ox.xo", "xxoxxxo.oxxxooxxooxooo..oo" }, fallingsand.simulate(board));
    }

    @Test
    public void case9() {
        String[] board = { ".xx..x.x.xx..x.xxx.xxx..xx..xxxx.xx..xxx...x.ox", "x.x.xox..x.o.xxxxxx..x.x.x.oxxxx.xxx..xoxx.x.xx", "..o.xxxx.x..xxx....xxx..x..x.xxx.x.xx.x.oxxxx.x", "..ox...xx..xxx.o.x.xx........xxxx..xx..x.xx.xxx", "x.xxx..xxxx..x..ox....ox..xx..x.xx.x..x.x...xxx", "xxx.x.x...x.x....x.xx.xxxx...x.xxxx..xx.xxoxxxx", ".xx..x.xx.xxxxx.xxxxxox.o.x...xxxxxxxx.xx...x.x" };
        assertArrayEquals(new String[] { ".xx..x.x.xx..x.xxx.xxx..xx..xxxx.xx..xxx...x.ox", "x.x.xox..x...xxxxxx..x.x.x.oxxxx.xxx..x.xx.x.xx", "..o.xxxx.x.oxxx....xxx..x..x.xxx.x.xx.xo.xxxx.x", "..ox...xx..xxx...x.xx........xxxx..xx..xoxx.xxx", "x.xxx..xxxx..x...x....ox..xx..x.xx.x..x.x...xxx", "xxx.x.x...x.x...ox.xx.xxxx...x.xxxx..xx.xx.xxxx", ".xx..x.xx.xxxxxoxxxxxox.o.x...xxxxxxxx.xx.o.x.x" }, fallingsand.simulate(board));
    }

    @Test
    public void case10() {
        String[] board = { "xxxxoxxxxo.x", "xxx..xxxx.xx", "xxxx.xox.xxx", "x.xxxoxoxxx.", "...x..ooxoxx", "xxoxxxxxoxxx", "o.xxxx.x.xxx", "oxx.xxoxx.o.", "xxxxxx.xxxxx", "o.xxx.xxxxxx", "xxxx.xxx...x", "xx..xxxxxxxx", "xxx.xxxxxxx." };
        assertArrayEquals(new String[] { "xxxx.xxxx..x", "xxx..xxxxoxx", "xxxxoxox.xxx", "x.xxx.xoxxx.", "...x.oooxoxx", "xxoxxxxx.xxx", "o.xxxx.xoxxx", "oxx.xx.xx.o.", "xxxxxxoxxxxx", "o.xxx.xxxxxx", "xxxx.xxx...x", "xx..xxxxxxxx", "xxx.xxxxxxx." }, fallingsand.simulate(board));
    }

    @Test
    public void case11() {
        String[] board = { "....oo.oo.o..oo.o.o.oo..xo..o.ooo..o.....oo", ".....o...xoo...ooo...ox..xoox..o..o...x.ox.", "..o.ooo.ox...ooo.xooo.oo.ooxo.....oo..ooxo.", "..xo.....x...oxoooo..xo.oox.xooo...xo.ox.oo", "o.oo..x..xoo.o..ooxo.ooooo.xo....x....xoxx.", "oo.....ooo.o...x.......o.oxxoo..ooo....oox.", "..x.x.o.ooooxxoo....ooo...xxx....oxxox....x", "ooo.xx..oxoo..o..ooxo.ooxo.....o...oooxoo.o", "..x...o.xx...xooo.o.oxoxox.oox..x.oooxxoo.x", "..xooox.xooo..o.x...o.o.ox.x..ooxoooxo.o.o.", "..ooox.o.oo.xx..ooox..xoo..ooo.o.o.oooo...o", ".o...ooo.o.o.o..oo.ox.o..x.o.o.....x..o.ooo", "oo..o...o...oo..oo..x.x....x..ox.o..xox..ox", "....o.....oox.xooo.ooooooo.ooo...ooo..o.ooo", "..oooo.o...o...xoo.ooxoooo.oox..xxo.xooooox", "..oooooo..o.o.oo...xoox..x.ooooxx.oo.oo.o..", "xo....xx...oo...xxooox..o.oxo..oo..ooo..ooo", "oxoxoxo.o..xooxo.ooo.oo.o...o...oooo.o..o..", "x..ooxo.ooo.o.o......x.ooo..oox..o...oxxooo", "xoooo.o....xo.ox.o..o.oooxo..oxoo..oooox.xo", "xooo..x...oxxo..ooo....oo.oxo.x...oxx.o.x..", "x...oo....ox.o...ooo..ox.oo...o..o..oo..o..", "xoo.....oo.o...ooo.o.oo..ooooxo...o.o.ox..o", "oxx...o.o...oxo..oo.oo.o...ooo.o.o..o.xx.oo", "...oooo..xx.x.o....oox..xxoooxx.o.o.x...xoo", "....x..ox.o.xooxo.o.oo..oo..o.o.xoo...oo.xo", ".xo.xoooooo.xoxxoxx.oxo.o..x.oxoo.xx..xo.ox", "oo.oooooxo.oo.oo......ooxoxx....o..xo..o...", "o...o.ooox.o.x.o..o...xx..........xoo.xoooo", "...o...xo..oo..xx..oo.o....oo.oox..xoxoxo.." };
        assertArrayEquals(new String[] { "........................xo..o............o.", ".........x....o..oo..ox..xoox......o..x.ox.", "..o......x...ooo.xo..o....oxo......o..ooxo.", "..x...o.ox...oxo..o..xo..ox.x.....ox..ox.o.", "....oox.ox...o.oo.x...oo.o.xo....xo...x.xxo", "..o.oo..oo...o.xo..oo.ooooxxo.....o.o....xo", "..x.xo..oo..xx..o..oooooooxxxo.oo.xxox....x", "..o.xxo.ox.o....o..xooooxo...o.oo..ooox...o", "..x...o.xx.o.x..oo..oxox.x.o.x.oxo.ooxx...x", "..x..ox.x..o..o.xo..o.o..x.x...oxo.ox......", ".....x.o...oxxo..o.xo.x....o...o.o.o..o.o.o", "...o...o...o..oooo..x.o..x.o.o.o.o.xo.o.o.o", "oo.o...o..ooo.oooo.ox.x....x.o.x.o..x.xooox", "oo.o...o..oox.xooo.o.oo..o.o.oo..o.....oooo", "oo.ooooo..oo...xoo.o.xo.oo.o.xo.xx..x..ooox", "oo.ooooo..ooo...oo.x.oxoox.o..oxx..o..oooo.", "xoooooxx..ooo.o.xx...x.oo..xo.o...oo..oooo.", "oxoxoxo...oxo.xo..o..o.oo...o.o...oo..oooo.", "x.o.oxo...o.oo.o..o..x.ooo..o.x...ooo.xxoo.", "x.o.o.o..ooxoo.x..o....oox..oox...oooo.xoxo", "xoo.o.x.oooxxo...oo.o..oo..xoox...oxxoo.x.o", "xoo.o...ooox.oo..oo.o..xo.o.oo..o.o.ooo...o", "xoo.o...ooo..oo..oo.ooo.ooo.oxo.o.o.ooox..o", ".xx.o...ooo.oxo..oo.ooo.ooooooo.o.o.ooxxooo", "...oo...oxx.x.oo.ooooxo.xxoooxx.o.o.xo..xoo", "...ox.oox...x.oxooooooo.o.ooo.ooxoo..ooo.xo", ".x.oxooooo.oxoxxoxxooxooo.oxo.xo.oxx.oxo..x", "o..o.oooxo.o.o.oo..oo.oox.xxo..ooo.xoo.o...", "o..ooooooxooox.oo..oo.xx.o..o..oooxoooxooo.", "oooooooxo.ooo.oxx.ooo.o..o.oooooxo.xoxoxooo" }, fallingsand.simulate(board));
    }

    @Test
    public void case12() {
        String[] board = { "..x.xx.oo..", ".x.oxo.ox..", "x.xoxo.xx..", "o...x....ox", "xoox.oox..x", "..xx.o.x.oo", "o..o..oo.x.", "oox.xxoox.x", "x..o.oxx..x", "xx.oxoxxoxx", "ox..xxxo.x.", "..xxx...x.x", "xx.xo.oxoox", "xxoo.x.xoo.", ".xxxo...xx.", ".o.oo.x.x..", "oo..xxxoo..", "ooo..x.o..x", ".oxox.ox.xo", "..o....xo.x", "..x.o.o..ox", ".xxx..xox..", "o.x.ooxx...", "x..o.oox..x", "...o...x...", "oo.oo.xx..x", ".x.xxx.x.xx", "xoo.xxo.ox.", "...x.x.x..x", "o.xo....x..", "x.x.x..o.o.", "oo..xooxox.", "x..x.ooox.x", "oxo.xooox..", "x.x.....x.x", "ox..oxx..x.", "oo.o..xoxox", ".o....oooxx", ".o.x..xx.x.", ".xoo..o..xx", "xxx.xx...o.", ".o.xx.ooo.x", "x..xxooxxxo", ".xo.o.o..o." };
        assertArrayEquals(new String[] { "..x.xx.oo..", ".x..x..ox..", "x.xox..xx..", "o..oxo....x", "x.ox.o.x.ox", "..xx.oox.o.", "o....ooo.xo", "oox.xxoox.x", "xo.o.oxx..x", "xx.oxoxx.xx", ".x.oxxx.ox.", "o.xxx..ox.x", "xx.x...xoox", "xxooox.xoo.", ".xxxo.o.xx.", "....o.x.x..", "....xxxo...", ".oo..x.o..x", ".ox.x..x.xo", ".ooo..oxo.x", "ooxo..o.o.x", "oxxx..xox..", "o.x...xx...", "x..oo..x..x", "...oooox...", ".o.oooxx.ox", "ox.xxx.x.xx", "x...xx...x.", "..ox.x.xo.x", "o.x.....x..", "x.x.x..o.o.", "oo.ox.oxox.", "xo.x.oo.x.x", "oxo.xoo.x..", "x.x..ooox.x", ".x...xxo.x.", ".o....xoxox", ".o.o..oo.xx", "oo.x..xx.x.", "oxo.o....xx", "xxxoxxo.o..", "...xx.oooox", "xo.xx.oxxx.", ".xo.ooo..oo" }, fallingsand.simulate(board));
    }

    @Test
    public void case13() {
        String[] board = { ".ooxooo.x.oo..xxoxxoxxo.o.o.oxxxxoo.x.", "ooo.o.ooxo.x..o.xoooxxoo.ox.oooxooxx.o", "o.xxxx.xxooo.oxoooxxo.ooox.oxx.o.xxo.o", "xxxoox.oox.ooxxoxxooxooxox.oxo..ox.oo.", "o.x..oox.o.x..ooox.oooo.ox.oooxxo.o.oo", "oxo.oxxoxx...o..oo.o.oo.o.xo.o.oxoo.xx", "o.xx.o.oo.xxxo...oxxoooooox.oox.o.xxoo", "xxxxooxxo.xxxoooox..ox.xx.oxooo.xooxxx", "oooooxxooo.xo.xxooo.o..xx..oooxxooxoox" };
        assertArrayEquals(new String[] { "..oxo...x..o..xxoxxoxx....o.oxxxxoo.x.", "ooo.oo.oxo.x..o.xoooxx.ooox.oo.x.oxx..", "ooxxxxoxxo.o.ox.ooxxo.ooox..xx..oxx..o", "xxx..xoo.x.o.xx.xx.oxooxox.oxoooox..oo", "o.x..ooxooox...o.x.o.oo.ox.o.oxxo.oooo", "oxoooxxoxxo.o..oooooooo.o.xooo..x.ooxx", "o.xxoo.oo.xxxoooooxxooooo.xooox.ooxxoo", "xxxxooxxo.xxxoooox..oxoxx..xooooxooxxx", "oooooxxooo.xooxxooo.o.oxxoooooxxooxoox" }, fallingsand.simulate(board));
    }

    @Test
    public void case14() {
        String[] board = { ".o..x.oxo", "oxxoox.xo", ".xoxx...o", "xx.ox..xo", "x.xo...o.", "oox.o..oo", ".oxoxxo..", "oxxx.x..o", "..ooo..xx", ".xo.oooo.", ".oo..xxo.", "x.ooooxo.", ".xxoxx.x.", "o.o...x..", "oxoooo..x", "ox...x.o.", ".o..ox...", "o.ox.xoxx", ".o.ooxx..", "x..xx..oo", "oooxoooo.", "ooooxo...", "o.o...o.x", "x.oo.xoo.", "..x.oxx..", "..x.o.oo.", "xo.......", "o.oooox.o", "...o.xoo.", "o.oxx...o", "ox...oox." };
        assertArrayEquals(new String[] { ".o..x..x.", ".xxoox.x.", "ox.xx...o", "xxo.x..xo", "x.xo....o", ".oxoo...o", ".oxoxx.oo", ".xxx.xooo", "..o...oxx", "oxo.oooo.", "o.o.oxxo.", "xoo.ooxo.", ".xx.xx.x.", "...o..x..", ".x.o.o..x", "ox.o.x...", "o..oox.o.", "o.oxoxoxx", "o.oooxx..", "x.oxx....", "o.oxo....", "o.o.xoo.o", "o.o..oo.x", "x.o..xo..", "..x..xx..", ".oxo...o.", "xo.oo.oo.", ".o.oooxo.", "oo.oox.o.", "oooxx.ooo", "oxo..ooxo" }, fallingsand.simulate(board));
    }

    @Test
    public void case15() {
        String[] board = { ".oxxoxxoxo.xxoooo.o..x.x.o...oxxo", ".oxx.oo.o.o.xoo.xoxo.oxxoxxooo..x", "xxoooxxoox.ooo.oo.oxxooxooxxxooxx", ".ooo.xxxooxxooo.x..oooooooxox.ox.", "oooxxooxxooxo.xxxoooxxo.ooxooo.xo", "xoxx..xooooxoxxoxox.oxooxoo..xooo", "o.o.xoo.o..ooxxxxox..o..xooxo.ooo", "xxoxooo.o.xooxoooo.ox.oxooxoooo.o", "o.oox.xxx.o.oox.ooooxoxo.oxooxoox", ".oxxo.ox..oxo.oo.xoxx.xooxoox.xoo", "ooo.ooxooxxoxoxoo.xoox.xx.oo.ooxo", "oooo.oooxxoo.ooxoxox.o..oooooxoxx", "xxoo.ooooxxoxx.xoo.o.xooxxoooxxx.", ".oooxooxooxooxoox.ooxoo.xox.xxxox", "o.oxxxox.o..oooxoooo...ooxoo.o..o", "xoxxo.oooox.oxooxo.ooxxx..xooxo.x", "o.oxo.oooo..oxxoo.ox.o.x.oo..oooo", "oxooooxooooxxoooox.o.oxooxxoxoxox", "ooooxoxooooooxoxoo.oxxooxoooxx.xx", ".ooooo.xoxoxooxooxox.oo..x.oxoooo", "x.xx.oooooo.xxxoxxoo..oooxoooooox", "o.oxoxxooox..oooxox.ooo.o..xxxooo", "o.ooxoxoo.o.xooooxxx.xoooxooxxoox", ".xo..xxoxooox..xoxxoooxo.xooxooo.", "x.ooxo.oxoooo..o.oooo.oooo.oooo..", "oxoooo.ooooooxxoxxxx.oooxoooxxooo", "ooxxxxoo.oxoxooxxxxxo.oo..xx.oxoo", "x.oxoxoxoo.o.oxoxox.xoxoxxxoo..x.", "ooo.ox.o.xo.oooooooo.ox.o..ooo.ox" };
        assertArrayEquals(new String[] { ".oxx.xx.x..xx...o.o..x.x.o....xxo", ".oxx.ooooo..xoo.x.xo.oxxoxxooo..x", "xxoooxxooxooooooo..xxo.xooxxxo.xx", "..oooxxxo.xxooooxoo.ooo.oox.xoox.", "oooxx.oxx..xooxxxoo.xxo.ooxo.ooxo", "xoxx..x.o.oxoxxoxoxo.xooxooooxo.o", "ooo.x.o.o.o.oxxxxoxoo.ooxooxo.ooo", "xxoxooooooxooxo..o.ox.ox.ox.ooooo", "..ooxoxxxoooo.xoooooxoxooox.oxoox", "ooxx.oox.ooxoooooxoxxoxooxoox.xoo", "ooo..oxooxx.xoxoo.xo.x.xx.oo.ooxo", "ooooooooxxo..o.xox.x.o..oooooxoxx", "xxoooooo.xx.xxoxo..oox..xxoooxxx.", "..ooxooxooxooxoox..ox.ooxoxoxxx.x", "o.oxxxoxoo.ooooxoo.o.ooo.xoo.o..o", "xoxxo.ooooxooxooxooo.xxx..xo.xoox", ".ooxo.oooo.ooxxoooox.o.xooooooooo", "oxooooxooooxxooooxoooox.oxxoxoxox", "o.ooxoxooooooxoxooooxxo.xo.oxx.xx", "o.oo.o.xoxoxooxooxox..o..x.oxoo.o", "x.xxooooo.o.xxxoxxo..ooo.x.ooooox", ".ooxoxxooox....oxoxo.oooo.oxxxooo", "ooo.xoxoooo.x..o.xxx.xoooxooxxoox", "oxoo.xxoxoo.xooxoxxoo.xooxooxooo.", "x.ooxo.oxoooooooooooo.ooo.oooooo.", "oxoooo.o.ooooxxoxxxxooooxoooxxoo.", "o.xxxx.o.oxoxooxxxxxoooo.oxx..xoo", "xooxoxoxoo.o.oxoxox.xoxoxxxooo.xo", "ooo.oxoooxoooooooooo.oxoo..ooo.ox" }, fallingsand.simulate(board));
    }

    @Test
    public void case16() {
        String[] board = { "x.xxxooox.x..xo..xxo.oxx.xxx.ox.x.x", ".xx.x.x.x.xxxxo...xoxxx.ox.oo.xx.xo", "oxoxo.o.ox..x..x.xxxox.x.oxoo..x.xo", "xxxxox.xxxxxoxxoxxx..xx.ooxxx.xxo..", "x.xx.oxxxo.xxxxx..xx.xoxxxxo..xox.o", "o.xoxxxo.xx..xxxxxxxoxxo.oxoxxx.xx.", "..xxoxx.xxx.o.xxx.xxxx.ooo...xox.xx", "xxxoxxxoxo.xxxxxxxx..x.xxx.xoxxxo.x", "x..x.xxxxx..xo..oxooxxx...xxx.xxxx.", ".x...xxx.xx..xxo..o...xx.xxxo.x.xxx", "oxx.xxxooo.x.oo.xx.xxx.xxo.xxoxxxx.", "xxxx.x.xxx.xx.xxxxo.xx...xoxxxo.xox", ".x..xx...oxx.xxo...x.xxoxxox..xx.xx", "oxxx.xxx..xxxx.xx.xx.xox.o.oxx..x.o", "oxx.oooooxxoxxxx.xxxxx...o..x.xxxo.", "xxo.oxo..oxxxx.oo.ox.xx.xxxxxxx.x.x", "xxo.xxxx..xx..x.x..xxoxox..xo.x....", "xxxo.oxx.x.oxx...xx.oo.xxx.oox.x.ox", "xoo.ox..xxo.x.o.o.ooxo.xox.xx.xxx.x", "x.x.xx.x...oxxox....xoxxx.ooxxxxxx.", "xxxx.x..ox.xxoxxxxxx.xxo..x.x.x..x." };
        assertArrayEquals(new String[] { "x.xxx.o.x.x..x...xxo.oxx.xxx..x.x.x", ".xx.x.x.x.xxxxo...xoxxx..x.oo.xx.x.", "oxox.o.oox..x.ox.xxx.x.xooxoo..x.x.", "xxxxoxoxxxxxoxxoxxx..xx.ooxxx.xxo.o", "x.xxooxxxo.xxxxx..xxoxoxxxx..ox.x.o", "..xoxxx..xx..xxxxxxxoxxo.oxoxxxoxxo", "o.xxoxxoxxx.o.xxx.xxxx.ooo.o.xox.xx", "xxxoxxxoxo.xxxxxxxx..x.xxx.xoxxxo.x", "x..x.xxxxx..xo...x..xxx...xxx.xxxx.", ".x...xxx.xx..xx.o..o..xx.xxxo.x.xxx", "oxx.xxxooo.x..ooxxoxxx.xxo.xxoxxxx.", "xxxx.x.xxx.xxoxxxxo.xx...x.xxxo.xox", ".x..xx....xx.xxo..ox.xxoxx.x..xx.xx", "oxxx.xxx.oxxxx.xx.xx.x.x.oo.xx..x..", "oxx.ooo..xxoxxxx.xxxxxo..ooox.xxx.o", "xxo.oxoo..xxxx..o..x.xx.xxxxxxx.x.x", "xxo.xxxx.oxx..x.x.oxxoxox..xo.x....", "xxx..oxxox..xx...xx.oo.xxx.oox.x.ox", "x.o.ox..xx.ox.oo....xo.xox.xx.xxxox", "xoxoxx.x...oxxoxo.ooxoxxx.o.xxxxxx.", "xxxx.x..oxoxxoxxxxxx.xxo..xox.x..x." }, fallingsand.simulate(board));
    }

    @Test
    public void case17() {
        String[] board = { "o.oo..oooo..oo...oo.o..o.oo..o.", "ox..o..o..x.o..o.oooxooo.o.oo..", "oo....ooo.oo..oo......o.o....ox", ".oo....o..x.......oooo.oo.o.ooo", "o.o..ooo....o..oooo..o.o...o...", ".o....o....o..o....o....oo.ooo.", "o.oooo..ooo......o..o..o....o.x", "....ooo.oooxo...ooooo...oo..ooo", "......ooo..o...o..o.o.o.o.o.o..", "..o.x.o.ooo...o..ooo.o..oooooo.", "o....oo..ooo....ooo.o.o.o.x....", "..o.o.o.o.o.ooo.o.o.x.o..ooo...", "...ooooooooooo.o.oo.ooo.......o", "ooooo..oo...o.o.....oo..o.oooxo", "oo.o...ooo...oo.oooooo.o.o.ooo.", ".oo...xooo.o.oo..oooo.....oooox", "ooo.o.o..oxo.o....oo..o....oo.o", "..o.oooooooo.oooo.o.oo..o..o.oo", "o.o...o.oo.xoooo..ooo..oo.o.ox.", "....o.o...xoooo.....o...o.o....", ".oo....oo..o...oo..o.o........o", "ooo.oo.o....o.o....oo.oo..oo..o", "..ooo.o.x.....o..ooo.o.ooooo...", "o.ooooo.ooooo.o..oo.oo..o.o..oo", "oo.....oo..o.oo....oo...o.oo..o", ".o.o..o..o.oo.o.o...oo..oo..oo.", "ooo.ooo..o.o.o.oo.oo..oo..o....", ".ooo.ooo....o..oo..o.o.o.o..o.o", "ooo...oooo.o..ooo.o....o.o.oo..", "......oo...ox.ooo..oooo.o...oo.", "oo....oo.......oo....o.ooo.....", "...oxo..o.o.oo.x.o.ooooo...o.oo", "ooo......oox.o..xooo.x.ooo.oooo", "...o.oo.oxoo..o.o.o......o..ooo", "...oo.o..oo...oo..o...oo....o..", "...o.o...o..oo..oooo..o.oo.ooo.", ".oo.x.ooo...o..o..o..o.o...o.o.", ".o..oo...x...oo.o.o.....oo.oo..", "........o..oooooxx....oo.o.o..o", "o..o....ooooo....oo.....o.o.o..", "oo.o.oo.o..oo....o..ooo....o...", "...o......o.ooo....o.oo........", "..o......ooo...oo......o.o.o...", "...oooo...oooo.oo.o....oo.o.oo." };
        assertArrayEquals(new String[] { "....................o..........", ".x........x.........x..........", "..........o...................x", "..........x....................", "...............................", "......o....o..................o", "....o.o....o........o.....o...x", "....o.o....x........o.....o..o.", "....o.o.o...........o.....o..o.", "....x.o.o...........o.....o..o.", "......o.o.o.........o.....x..o.", "......o.o.o.........x........o.", "......o.o.oo.................oo", "......o.o.oo.................xo", "......o.o.oo..................o", "......x.o.oo.................ox", "........o.xoo........o.......o.", "........oo.oo.....o..o.......o.", "........oooxo..o..o..o.......x.", "........oox.o..oo.o..o.........", "........oo..o..oo.o..o.........", "....o...oo..o..oo.o..o......o..", "....o...xo..o.ooo.o..o..o..oo..", "..o.o....o..o.ooooo..o..o..oo..", "..o.o....o.oo.oooooo.o.oo..oo..", "ooo.o..o.o.oo.oooooo.o.oo..oo..", "ooo.o..o.o.ooooooooo.o.ooo.oo..", "ooooo.oo.o.ooooooooo.o.ooo.oo..", "oooooooo.o.ooooooooo.ooooo.oo..", "oooooooo.o.oxooooooo.ooooo.oo..", "oooooooo.o.o.ooooooooooooo.oo..", "ooooxooo.o.o.ooxoooooooooo.oo..", "oooo.ooo.o.x.oo.xooooxooooooo..", "oooo.ooo.x...oo..oooo.ooooooo.o", "oooo.ooo.....oo..oooo.ooooooo.o", "ooooooooooo..oo.ooooo.ooooooooo", "ooooxoooooo.ooo.ooooo.ooooooooo", "oooo.ooooxo.ooo.ooooo.ooooooooo", "oooo.oooo.ooooo.xxooo.ooooooooo", "oooo.oooo.oooooo..ooo.ooooooooo", "oooo.oooo.oooooo..ooo.ooooooooo", "oooo.oooo.oooooo..ooooooooooooo", "ooooooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooooooo" }, fallingsand.simulate(board));
    }

    @Test
    public void case18() {
        String[] board = { "oxxxoxxoxxoooooxooxooxxox", "xoxxoxoxoxxxooxxxxxxoxxox", ".xoxooooooxox..xxxxx.oxxx", "oooxooxoooxoxooxxxxooxoox", "xooxxoooxxxoxxxooxooxxxox", "xoxxo.xxxooxxoxxxxooxxxoo", "xx.xxoxxxoxxxoxoxoooooooo", "oxxxxxxoox.x.oxxoxoooxxoo", "xooxoxooooxoooooxxoxxooox", ".xxoooxxxox.xoo.oxxxoxoox", "oxoooxxxxoxxxxx.xoxxxxxoo", "xxooxoooxoxoooooxxxooxo.o", "ooxoooxxx.oxxoxoxxxxooooo", "xoo.ooooxxxxxxooxxoxoxxxx", "x.xxoxxxoxxox.xoo.xxxxxoo", "xxxxxoxoxxoxooxxxoxxoooxx", "xoxxoxoxooxxxxxo.oooooxox", "oxoxxxxooxxoooxoxxxooxxxo", "xxoxx.oxxo..xxoxoxxxxxxxx", "xoxxox.xooxxxxxoxooxx.oxx", "xxoxoxoooxxooxooxoxooxoox", "oxoxxxoxxxoxxxoooxxxooxxo", "xxoxxxooooxoxxxxoooxooxox", ".ooxooxooo.xxoxxoxxxxxxxx", "ooxoooxooxoxooxooxoooxxxo", "xxxoxxxoxxxxxxooxo.xooo.x", "ooxxxxoxxoxoxxxooxoooxoxx", "xoox.ooxxxooxxx.x.oxoxxoo", "xoooxxoxxxoxxxxxoxxooxxox", "xxxxoxooxxxoooxoxxooooox.", "xoxooxoooooxooxxxxxoxxoxx", "o.xxoxoooxooxoxoxoooxoxox", "ooox.xo.xxooxxoxxxoxooxox", "o.oxoxxxxxxoxx.xxxxoxxxox", "xoxxo..x.oooxoxooxxoxxo.o" };
        assertArrayEquals(new String[] { "oxxxoxxoxxooo.oxooxo.xxox", "xoxxoxoxoxxxooxxxxxxoxxox", ".xoxo.ooooxoxo.xxxxxooxxx", "oooxooxoooxoxooxxxxooxo.x", "xooxxoooxxxoxxxooxooxxxox", "xoxxooxxxooxxoxxxxooxxxoo", "xx.xxoxxxoxxxoxoxoooooooo", "oxxxxxxoox.x.oxxoxoooxxoo", "xooxoxooo.x.ooo.xxoxxooox", ".xx.ooxxxoxoxoo.oxxxoxoox", "oxoooxxxxoxxxxxoxoxxxxxoo", "xxooxoooxoxoooooxxxooxooo", "o.xoooxxxooxxoxoxxxxooooo", "xoooooooxxxxxxooxxoxoxxxx", "xoxxoxxxoxxox.xoo.xxxxxoo", "xxxxxoxoxxoxooxxxoxxoooxx", "xoxxoxoxooxxxxxo.oooooxox", "oxoxxxxooxx.ooxoxxxooxxxo", "xxoxx..xxo.oxxoxoxxxxxxxx", "xoxxoxoxooxxxxxoxooxx.oxx", "xxoxoxoooxxooxooxoxooxoox", "oxoxxxoxxxoxxxoooxxxooxxo", "xxoxxxooooxoxxxxoooxooxox", ".ooxooxooo.xxoxxoxxxxxxxx", "ooxoooxooxoxoox.ox.ooxxxo", "xxxoxxxoxxxxxxooxooxooo.x", "ooxxxxoxxoxoxxxooxoooxoxx", "xoox.ooxxxooxxxox.oxoxxoo", "xoooxxoxxxoxxxxxoxxooxxox", "xxxx.xo.xxxoooxoxxooooox.", "x.xooxoooooxooxxxxxoxxoxx", "o.xxoxoooxooxoxoxoooxox.x", "oooxoxooxxooxx.xxxoxooxox", "oooxoxxxxxxoxxoxxxxoxxxox", "xoxxo..x.oooxoxooxxoxxooo" }, fallingsand.simulate(board));
    }

    @Test
    public void case19() {
        String[] board = { "xx.o", "oooo", "oxox", "o.oo", "...o", "ooo.", "xo.o", ".ooo", "o..o", "ooxo", "oo.o" };
        assertArrayEquals(new String[] { "xx.o", ".o.o", "ox.x", "o...", "o.oo", "o.oo", "xooo", ".ooo", "oooo", "ooxo", "oo.o" }, fallingsand.simulate(board));
    }

    @Test
    public void case20() {
        String[] board = { "..x.xxxx..x..xoxx", "xx..xo..oxx.x....", "..x.x...o.xxoo..x", ".oxoo..x.o..xxxxx", "...x.oxx.x..x..x.", "....oxo.x.xxo.x.x", "xxx.xx.....x.o.o.", "xox...x...o..o..x", ".xx...o..xx...xxo", "x..xxxx.xxo.x....", "ox.x...xx..x...xo", ".o...xxoxxx.xox..", "x.xx.x..x....x...", "xxx.xoo.x.x.xoxxx", ".xxxo.xx.x.......", ".xxxxx...xx.x.x..", "...xox.xxo.x.o.xx", "..xo.x.....xx..xx", "x.xxx..oo.x...x.x", "...xxxx...o...x..", "...oo..xx...x.ox.", "xxx..xxxxx..oxxo.", "oxx.x.xx...o..o..", ".......xx..xxx...", "oxxx.ox..xo.xx.o.", "..o.xx.x..o...o.x", ".xooxxox.xxo.x.x.", ".x............xox", "xo....x.xo.oxxxx.", "x..xx.o.oo...x.x.", "....o..x..x.xxxx.", ".........xxx.x.xx", "xo.x.oxx.xx..x.x.", "oxxxxx....x.o..x.", "ox.....xx....xxx.", "...xo..oxx..xxxx.", "x..x...o...ox..xo", "ooxx..xxx.x.x....", "xxx..o....x.xxx..", "oo.xx.xo.xx.xxoox", "...xxx....x...x.x", ".x..x.x.....oo..x", "....xxx..x.x...xx" };
        assertArrayEquals(new String[] { "..x.xxxx..x..x.xx", "xx..x....xx.x....", "..x.x.....xxooo.x", "..xo.o.xoo..xxxxx", "...xooxxox..x..x.", ".o..ox..x.xx..x.x", "xxx.xxo....x.....", "xox...x...o....ox", ".xx...o..xx.o.xx.", "x..xxxx.xx..xo...", ".x.x...xx.ox.o.x.", "o....xx.xxx.xox.o", "xoxx.x..x....x..o", "xxx.x.oox.x.x.xxx", ".xxxooxx.x.......", ".xxxxx...xx.x.x..", "...x.x.xx..x...xx", "..xoox.....xx..xx", "x.xxx.....x...x.x", "...xxxxoo....ox..", ".......xxo..xoox.", "xxx.oxxxxx...xx..", ".xx.x.xx...oo....", "...o...xx.oxxx...", ".xxx.ox..xo.xx.o.", "....xx.x..o...oox", "ox..xx.x.xx..xox.", "ox....o.......xox", "x..o..x.x...xxxx.", "x..xx....o.o.x.x.", ".......x.oxoxxxx.", ".oo...o..xxx.x.xx", "xooxooxx.xx..x.x.", ".xxxxx..o.x....x.", "ox.....xx...oxxx.", "o..x...oxx..xxxx.", "x..x...o....x..x.", "ooxx..xxx.x.x....", "xxx.o.....x.xxx.o", "...xxox..xx.xxo.x", ".o.xxx....x...x.x", ".x..x.x....o...ox", "o...xxxo.x.xoo.xx" }, fallingsand.simulate(board));
    }

    @Test
    public void case21() {
        String[] board = { "ox...xoo.x.o..o.x...", "..oxoo..xx.oooo.x..x", "x..o.oo...x....ooooo", ".x.x.o......x....x.o", "..x......oo.xxxo.o..", "xx..ooo.o.ox....xoo.", "x..........xx....x..", "...oxxx.o.ox.....o.o", "o.o.oox....ox.o..oxx", "...ooo..x.o.xx..ox.x", "....x......o.....oxx", "x....xx.o..xxoo..o..", ".xo....o.o..xooxxx..", "o.oo...x.........o..", "ooxxo...o.o.o..x..o.", ".xxo..oo..ox...oxxx.", "...xoo..o.xx.xxo.o..", "...o.o....x.ox.x..o.", "o..x..o.x.xx...o..o.", "x.o.o.xx.xoxoo.o..xx" };
        assertArrayEquals(new String[] { ".x...x...x......x...", "o..x....xx......x..x", "x..o......x.o.o..o..", ".xox.o.....oxoo..x..", "..x..oo....oxxx.oo..", "xx..ooo....x....xo.o", "x...ooo....xx....xoo", "....xxx.o..x.....ooo", "....o.x.o...x....oxx", "....oo..x..oxx...x.x", "o...xo....oo...o.oxx", "x.oo.xxo..oxx..ooo..", ".xoo...o..o.x..xxx..", "..oo...x..o...o.....", ".oxx......o..oox.oo.", ".xxo....o.ox.oooxxx.", "o..x....o.xx.xxo....", "o..oo.o.oox.ox.x..o.", "o..xooooxoxxo..o..o.", "x.o.ooxx.xoxoo.o.oxx" }, fallingsand.simulate(board));
    }

    @Test
    public void case22() {
        String[] board = { ".xxo.xxoxo..x.x.xo.x.oxxxoox..ox", "xo.xo.xxx.o.x..ox...ooooxoo.o.oo", "oxxooxoxxx.oo.ooxxxoooo.x.x..xoo", "..oxoxox...o.oooo.o..oo.oxxox.x.", ".x.oo.xooox..x.x.oo.x.ox..xx.oox", ".xo.oxox.x.xooo..x.oooxx.xoxo.xo", "xo..ooooo.x.xo.oox..o.o.xxxx..xo", "x.o.xxx......xo.o.oxxooxx.o..x.o", "o.oxxoo....xoxx.....ooxo.xooxxxo", "..oox..oxxooxx..ooxxxoxoo.o.xox.", ".xx.x.x..xooxx.xo.x.xoxxo..xxoxx", "xxxooxx....oox.xo.xooo..oox.o.xo", "xxoxxx.xooxx..oxo.xox.ox.x.oooox", "ooxxx.xx.o.ooooooxxxx..xxxx.o.xo", "xxooxo.x.xo...o..xoo..o.....xooo", "x.xxoxx.xoox..oxoxxxxoxxx.xooox.", "...oo.xxoooxxx..o.x..o..oooxxx.o", "oxx.oooxxxooxxxooxx...o.o..xx.x.", ".o..xo..o..o.o....ox..xoox.oxoxo", ".o.xx..xxx..xxxxxx..xx.o.o.oxxxx" };
        assertArrayEquals(new String[] { ".xxo.xxox...x.x.x..x..xxx.ox..ox", "xo.xo.xxxo..x..oxo....o.xoo...o.", ".xxooxoxxx.....oxxx.o.o.xox.oxoo", "...xoxox..oo.o.o....o.oo.xxox.xo", ".x..o.xo.oxooxox.o..x.ox..xx..ox", "oxo.oxox.x.xooo..x.oo.xxoxox..x.", "x.o.ooo...x.xoo..xooo.o.xxxx.oxo", "x.ooxxx.o....xo...oxxooxx...ox.o", "..oxx...o..xoxx.o.o.ooxo.xo.xxxo", ".oo.x.o.xx.oxx.oo.xxxoxo..oox.xo", "oxxoxoxo.xooxx.xo.x.xoxxo.oxx.xx", "xxxooxxo..oo.x.xo.xooo..oox.ooxo", "xxoxxx.x.oxx...xooxoxo.xox..ooox", "ooxxx.xx.o....o.oxxxxooxxxx.oox.", "xxooxo.xox.oo.oooxoo.oo....oxoo.", "x.xxoxx.xo.xoooxoxxxxoxxx.xoooxo", "....o.xxoooxxxo.o.x..o.....xxx.o", ".xx.o..xxxo.xxx.oxx..oo.oo.xx.xo", ".o.oxo..o.oo.o.oo..x.oxoox.oxoxo", "oo.xxooxxxooxxxxxxo.xx.oooooxxxx" }, fallingsand.simulate(board));
    }

    @Test
    public void case23() {
        String[] board = { "oooooooo", "oooooooo", "ooooooo.", "ooooo.o.", "o.oooooo", "oooooooo" };
        assertArrayEquals(new String[] { "o.ooo.o.", "ooooooo.", "oooooooo", "oooooooo", "oooooooo", "oooooooo" }, fallingsand.simulate(board));
    }

    @Test
    public void case24() {
        String[] board = { "..oo.oo.x.ox.o..xx.o....xo.xo.x.....o...o.ooo..xxo", "o...oox..x..xxx..x..x..x..xoo.xo..x..o.o...xx.o...", "ox..o....oxo.xx....x...oo....o.x.o.ox..xxoxoo..xo.", "ox....ooo..oooxooo..oxoo...x..ooo.....x....ooxoxox", "..xo...oxoo...oo.x.x..o.x.o..o....oo..oo..o.oooxo.", ".xox....x..xo..x..x...o..x.x.ooxxxx.ox.x..o...o.x.", ".x.oo....o.oo.o..xo.ooo..o.oooo..o.xoooooooo.o.ox.", "ooo....o....ooo.o.x....x..oo...x.x.oo....o...xo..o", "o..xxo..x...xo....xo...oo...ox.o......xx.o.x.o.oox", "........ox.ooxooo.oxo.xooo..o.o..oooo...o...o.o.xo", "xox.x...xxxoxxxxx.o.x.x..o.o.o.oxx..x..x...o.....x", "....o..x..oo.x.ox.....o....xo......oo...ox..oox...", ".o.o.xo.xo.x....x..x...x.x...x.ooox....xo..oxo...o", "xo.ooooox.o.oooxooooox.o.o.x.oooo...o.ox....o.o.oo", "x..xox.ox......x.o.oo...ox.oxo...o.x.xo....x.ooxx.", "ooo.o.oo.xooo.oo...x.o.oooo..x........o.x.o..ooo..", "xoo.oxoxo..x..oxo.o...x..........oo.x..xo....o....", "x.x..o.....oooox..o......oo...xx.o...oo...o...o..x", "....oox..oo...oooox.ooo.oo..oo.o.o..o....x.xx..o..", "ooo..o.ox...o.o...oo.x..x.o.oox.x...o.o...x...x...", ".....o.x..x..oxx..ooxxoxoxooooo...x..xooo..oo...xx", "..ox.xooo....x..xooo..oo.o.ooo.xxxoo.x.oox..o.xoox", "o.o..xo....o..x.xoo......xooo.x.x.x.....o.oxxoo..o", "x.o..x.o.o.ox.oxx...xx..oo...o.oox..oxoxo.oxo.o.o.", "ooo...xoo.x.o.o..o.o.o.ox..o...o.x.ooo..o.oo.oo.xo", "o.x..oxooxx..oo...oo..oox.xo.xo.oxxooox..x..xx.xo.", "x.oo.xooxo..xo.......xoxx.xx...xxxxx...xxoo.o.....", ".o..xxo..oxox.ox.x..ox...o...ox.o.x....x.oo...o..o", "oo.xxxoo.ox.xx.xx..oxo..x....ox..oo..x.ox..xx.....", "..x.oo.......ox....xo...xxoxx.xxoox.o.xo....o.x.oo", "o.o.x.o.o.oox.xoxo..xo..o.x.xooo...ox.oox..xxoo...", "ox.o.o.ox..o.....x.x..xx.o.....o...xx..ooo..xo.oo.", ".x..o..xxoo............oxxo...oooo...x.x..x...o.xx", "xooxxo..x.o....x.xo.x...xxo..o..ooo...o.o.x.ooxx..", "xo.ooo.ox.o...ooox.o..o.....oxoo.x..oxo.xox..x.x.o", "o.oxxoxo.x.o.oo..oo.xo..ox.oo.x..o.xxx..o.xx..o..o", "xxo..xoox.xxoo..o...x.oo.xxx.oo.....o..ox.x.oox...", "ox.o.oox..xxxxx...xx.x.oo.o.o.o....o..ooooooxx.o.o", ".ox.xxo.x.oo..xxo...x....x....oxo.x.ox...o.ox....o", "o.o..o.xooox.x.x.oxx.o..x...x....xxxxx.o.o..xxooo.", "o.o..x.o.oxo..o..xo.x..xo..o..oxo..o.xx..o.x.xo..x", "..oxxo....oo.oooo.o.xoxo..ox.oxo.x..ooo.ox.ooo...x", "x...xo.....xoo..x.x..xoox...oooxxx.ooo......xx.x.x", ".o....o...o..o.xo..xo.o.oo.o....xoxo.o.o.xo.o..x..", ".ooo.o.ooxxxoxox...x.ox......xoo...ox....xo..x...x", ".xoxoo.xxo.o.x..ooxooo.o.xooooxo.oo.oox.o..xo.xxxo", "xoo.x..ox.......xo.o.o.o..xx..o...xo.x......oxoo..", "x.x..xoxo.o.xx.o..o.xoo....oo..o.xox.x...ox.xox.xx", "......o.oo..ooxoo.oxo.x.o.o.....x.....oo..o...ooo.", "xo..oo.oox..xox.oxo..o..oo.ox.o..oo..xox..x..ox..o" };
        assertArrayEquals(new String[] { "......o.x..x.o..xx......x..x..x............oo..xx.", "......x..xo.xxx..x.ox..x..x...xo..x.o..oo.oxx.....", ".x........x..xx....x.......o...x....x..xx.x....xoo", ".xoo....o..o..xo.o...x..o..x..........x......x.xox", "..xo....x..oo..o.x.x....xo...o.ooooo.o.o.......xo.", "ox.xo...x..xo..x..x...oo.x.x.o.xxxxo.x.x...o.oo.x.", "ox..o....o..ooo..xo...oo.....o...o.xo.o....o.oo.x.", "o..oo....o..ooo.o.x.o.ox.....o.x.x..o.oo.o.ooxo..o", "o.oxx..oxo.oxoo.o.xoo.o....oox......o.xx.o.xo.o.ox", "o.o..o.ooxoooxooo..xo.x..o.oo....o..o....o..o.o.xo", "x.x.xo.oxxxoxxxxx...x.xo.o.oo...xx..x..x.o..o.o..x", ".....o.x...o.x..x......o.o.xoo....oo....ox..o.x...", "...o.x..x..x...ox..x.o.x.x..oxo...xo...xo..ox..o..", "x..o.ooox......x..oo.x...o.xoooo...o.o.xo..o...oo.", "x..x.xooxo....ox..oo....ox..xooo...xox..o.ox...xx.", "o.o...oo.x.o..oo..ox..o.o....xoo....o...x.o...o..o", "x.o..xox..ox..ox..o...x.o.....oo.o..x..x..o...o..o", "x.x..oo...o...ox..o.oo..oo....xxoo........o.ooo..x", ".....ox.o.o..oo.o.x.oo.oooo.....oo....o..xoxxoo...", ".....o.ox.o.ooooo...ox.oxoo...x.xoo..oo...x..ox...", "..o..o.x..x.ooxxo...xx.x.xoo.o.o.ox..xo.o...oo..xx", "oooxox......ox..xo.......ooo.ooxxxo..xooox.ooox..x", "ooo.oxo.....o.x.xo......oxoo.ox.x.x...ooo..xxo.oo.", "xoo.oxo.oo..x..xxo.oxx.oo.oo.o...x.o.xoxo..x.o.oo.", "ooo.o.x.oox......o.o...ox.oooo.oox.oo.o.o...oo.ox.", "oox.ooxooxx.o.o..o.o.o.ox.xoox.ooxxoo.x.ox..xxox..", "xo..ox.ox...xoo..o.o.xoxx.xxo.oxxxxxoo.xx.....o...", ".o.oxx.o..x.xoox.x.ooxo..o..o.x...x.oo.x..ooo.o...", ".ooxxx.o..x.xxoxx..ox.o.xo..o.x...o.ox.ox.oxx.o..o", ".ox.o..o...o..x....xo.o.xxoxx.xx..x.o.xo..o.o.x.oo", "oo..x..oo..ox.x.xoo.x.o...x.xo...o.ox..ox.oxx...oo", "ox...oooxo.o.....xox..xxoo...o...o.xx..o..o.xoo.oo", "ox.ooooxxooo...o..o.....xx...oo..o...x.xo.x..oooxx", "x..xxoo.xooo...x.xo.x...xx...oo..o......oox..oxx..", "xoooooooxooo.o...xo..o....o..xoo.x..ox..xox..x.x..", "oooxxoxo.xoo.oo...o.xo...xoo..xo...xxx..ooxxo.o...", "xxo..x.ox.xxooo...ooxo...xxxo..oo.....o.xox.oox..o", ".xo..o.x..xxxxxo..xx.x.oo...o.ooo.o.o.o..o..xx...o", "..x.xx..x.oo..xxoo..x..oox..o.oxooxooxo..o.ox....o", "o....o.x..ox.x.xooxx..oox...x.o.oxxxxxo..o.oxx...o", "o..o.x....xo....oxo.xoox...o..oxo....xx..o.x.x.o.x", "o.oxx......o.o..o.o.xox.o..x.oxoox.......x..oo.o.x", "xoo.x....oox.o.ox.x..xo.x....o.xxx.ooo......xx.x.x", ".oo..o.oooo..o.x...x..o...o..oo.x.xooo...x....ox..", ".ooo.ooooxxx.x.xo..x..x..ooo.xo....oxooo.xoooxo.ox", ".xoxoooxx...oxo.o.x.oo...xoo..x..ooo.oxo..oxo.xxx.", "x.o.xooox...o.o.x..ooo.o..xxo....oxo.x.o..o.oxo..o", "x.x..xoxoo..xxo..oooxoooo...o..o.x.x.x.oo.x.x.x.xx", ".o....o.oo..ooxoooox.oxoo..oo.oox.o...ooo.o..ooo..", "xo..oooooxooxoxooxo.oo.oooooxooo.oo.oxoxoox..oxooo" }, fallingsand.simulate(board));
    }

    @Test
    public void case25() {
        String[] board = { "o.xoxoooo.oooxooxx..o.xo.xxxo.x.xox.o..ooxoooooo..", "oxx..oxooxox.oox.xooxoxxxooxox.xo.ox.ox.xoxx.xo.xo", "o.oxoxooox..xxxxo.o.oxx.xoo.oxxo.xoo.oo..o.oxxxoxo", "oooxxooxxxoox.oo.ooxxooxxooxoxxxo..xxox.o..o.o.ooo", ".ooo..ooooxx.xoxoxoxoxx.oo.x.o.xxo.xo..ox.xo.oo.xo", "..ox..xxoxo....xox.o.ooox.xoxx.o....x.xxoxo.xxxox.", "x..oxoxx..xo...xoo.oxoox.x.xoxox..oxoo..ooo.xx..xx", "xxoxo..ooxo.o.o.oooo..oxoxx.o..ooxo.xooxoooo.xox..", "o..oxooo.oxo.oxxo.o.xxxoxooooooo.ooo.oxox..x.xxoo.", "ox.xo.ooo.x..ooox.ox.xo.xx.x.xo.ooxoo.ooo.oxxx.xox", "oxoxxoxo.o.ox.ooooox.ooxoooxooooxxoo.xxx.x.ox.xooo", "xx.oxx.xx.oooxoo..xxxoxxox..xx.xxo.o.ooxxxoooxxxo.", "oo.o..xoxxxxoxoxox.xo.o.ooo.oo.xxooxoxxxxooooxoooo", "ox.oo.xoooxo.oo.xxo.x.oxo..xoxxooxo.o.xxo..oooxox.", ".xxoo.o.oo.xoo.ooo.oxxxxxo.o...o.o..oo...x.ooxoxo.", ".oo.o.x.oxoxoox..xxo.xxoxx.oxo.xxooxoxxooox..xxoox", ".xxoxxoxxoxo.oxxxox.xoxo.xoxox.xxo.o..oxxxxxoxxxxo", "xooox.x.oxooxo.xooox.xxxo...oxxx.x.oxx.x.ox.xxo...", "xoo.x.ox..xxo.o.xoxoo.ooox..ooooxxxoooxxx.ooooooxo", "o.ooooxx.ooxxxxooooxxoxoxoxxxxxxooooxxoooooxoxoo..", "xxoxo..o.xxox..o.ooxo.o....ooooox.oxxxooo.oxooxoxo", ".o....xox..ox.oxooxxxxoxx.o.xo.xoooxooox.o.oo.ox.o", "oooxo..ooxxoo.xx.x.xox..xxxxo.oxx.xoxxo..oxxoxxo.x", "xxo.ooxxooo..oxx.xoxox.o.oxoxo..xooxo.ooooxoxx.x.x", "xxooxo.oxxox.ooxo.x.xo..ooxxoxoxxo.oxx.xxx...ooxxo", "xx.x..ox..x.o.o.x.o..xxooxox.ooxooxoxxo.oo.o.x.xo.", "xxxoo.x.oxoxooxoxxo.xxox.xooooxxxx.x.oooxx.x.oxxo.", "o.xxooxoooo.x..xooxxox.xxooooxoxoxoxox..o.o.oxxxx.", "oooxox...o.xo..xoo..o.oooxxoo.xxo..oxoxxoxooxoo.xx", "o.oo...x..ooo..oo.oo.oxooox.ox.oo.oo..xo.o.xooxoxo", "xoxx.oo..xxxox.x.oxox.xoxx.oxoooooxxx.xxxxoxxo.xxo", "ooxxxo.oox...oo...oo.xxooxooxo.ooooxooxoxoxxxx...o", "ooox.xxxoxxx.x.xxx.o..xox.ox..ooxxx.xo.oxxoxxoxxo.", "xxx..xo...xxooxxo.oxoxxoo.xx.oxox..oooo.xx.x.oooox", ".xxxoxooox.o..xxoxxox..x.xxxoxxx.xxoo.oxoooo.xoxxo", "oxxxxxx.xox.oxooxxxooox.o.xoxxoxoxooox.xxxoxoxoxox", "xx.xxoox..xooo..xox.xoox.oxxo.o.oo..ooxxxo.xoxxxoo", ".o..xxo.o.ox..ooxx.oxxxo..oxx..xxooxoxx.xxx..o.xxo", "...ooox.xx.xxxoox.o.xxooxoxxooxoo...xx.oo.x.xoxx.x", "xxxx.xxoxo..oox.o..oxx..oxooox.x...xxo.o.xooooooox", ".xxx.o.ooxo.x.xoxx.ooxxx.ooo..oxox.oxx.x..oooooo.o", "xxxo..xox.oxo.xxooooooox.o.xoooooxoo.ooox.o...oxxo", ".oxo.oxox.x.ox....oxox..oxxoxoo.xx.ox..xoxoo.oxxxx", "xxxxox.xoo..o.ooxooxox.ooxox.oxxoxooxooo.oox..oxoo", ".xo.xo.xo.xxxoxoox...oo.xoxxxx.xo.o.o.o.ooxoxxx.x.", "xxoxoooxoxxox..ox.xooo.o.x.xo.x.oox..oooo..xx.x.ox", "..o.ooo..o.o.ooooxxxx.oxxooo.oxoo.oooxx.xooo..x.xo", ".o.xxxooox...o..xxoooox..oxx..xoxxoxxx...x.xx..xo.", ".xo.oxxo.o.oxxo..xxxoooooxxxxox.xooooxxx.xooxxxox.", ".xx.ooxxooxx.xxox.ooox..xoxoooxxx.xx.xxo..xxx.oo.." };
        assertArrayEquals(new String[] { "..x.xoooo..o.xooxx..o.xo.xxx..x.x.x.....oxoo.oo...", ".xxo.oxooxoxooox.x..xoxxx..xox.x.o.x..x.x.xxoxo.x.", "o..xoxoooxo.xxxx...ooxx.xoo.oxxoox.oo.o.....xxx.xo", "o..xx.oxxxoox..ooooxxooxxooxoxxxo..xx.xooo...o.ooo", "o..o..oo.oxx.x.xoxox.xx.oooxoo.xx.oxoo.oxoxo.oooxo", "oo.x..xx.xo...oxoxo.o.ooxoxoxx.o..o.xoxxox.oxxxoxo", "xo.ox.xx..x...oxo.ooxoox.x.x.x.x.ooxoo..o..oxx.oxx", "xx.xoo.ooxo...o.o.oo.ooxoxx.o....xo.xooxo..o.xox..", "o.ooxoooo.xo..xxo.ooxxx.xo.ooo.ooooo.oxoxo.x.xxoo.", "oxoxooooo.xooo.oxoox.xooxx.xoxooooxo.ooo.ooxxx.xox", "oxoxxoxooo.oxooo.oox..oxoo.xooooxx.o.xxxoxo.x.xoo.", "xxo.xx.xxooo.xooooxxx.xxox..xxoxxo.o.ooxxxoo.xxxo.", ".oo...x.xxxx.xoxox.xooo.o....ooxxo.xoxxxx.oooxooo.", ".xooo.x.ooxoo.o.xx..xooxoo.xoxxo.x..o.xx.oooooxoxo", ".xxoo.oooo.xooo..oo.xxxxxo.oo..oooo.oo..oxoooxoxoo", "ooooo.xooxoxooxooxxo.xxoxxooxo.xxooxoxxoooxooxxoox", "oxxoxxoxxoxoooxxxoxoxoxo.xoxox.xxoooo..xxxxxoxxxx.", "x..ox.x..xooxo.xooox.xxxo.o.oxxx.xooxxox..x.xxo...", "xo.ox.ox..xxooo.xoxoo.o.oxo.ooooxxxoooxxx..oooooxo", "oooo..xx.ooxxxxo.ooxx.xox.xxxxxxo.ooxx.o.ooxoxoo.o", "xxoxo..ooxx.x..o.ooxoo.o....o..ox.oxxx.o.ooxo.xoxo", ".oo.o.xox..ox.ox.oxxxx.xxoooxo.xoooxoooxooooooox.o", "oooxo..ooxxo..xxox.xox..xxxxoooxxoxoxxo.ooxxoxxo.x", "xxo.o.xxoooo..xxoxoxoxo..oxoxoo.xo.xo.oooox.xx.x.x", "xxooxo.oxxoxo.oxo.x.xooo.oxx.xoxxoooxxoxxx.o.o.xx.", "xxox.oox..x.o.o.x.o..xxooxoxoooxooxoxxo.oo.o.xoxo.", "xxxo.ox..x.xo.xoxxo.xx.xoxo.ooxxxx.x.oo.xx.x.oxxo.", "o.xx.ox...o.xo.x..xx.xoxxooooxoxox.xoxoo....oxxxxo", "o.oxox.o.oox.o.x....o.oooxxoo.xxo.oox.xxoxooxoo.xx", "ooooo..x.ooo.o.oooooo.xoooxoox.oo.oo..xooooxooxox.", "xoxxoo..oxxx.x.xooxoxoxoxx.ox..oooxxx.xxxxoxxo.xxo", "ooxxxoooox...o..oo.o.xxooxooxooooooxoox.xoxxxx...o", "ooox.xxxoxxxoxoxxxoo..xox.ox.oooxxx.xo.oxx.xxoxxoo", "xxx..xo.o.xxo.xxo.oxoxxo..xx.oxox...oo.oxx.x.oooox", ".xxxoxo.ox..ooxxoxx.x..x.xxxoxxx.xxooooxoooo.xoxxo", "oxxxxxxox.xoox..xxx.oox...xoxx.xox.ooxoxxxox.xoxox", "xx.xxoox..xoo.o.xoxoxooxo.xxo.o.o..oooxxxooxoxxxoo", "....xxo.oo.xooooxx.oxxx.oooxx.oxx..xoxx.xxx.o..xxo", ".o.o.ox.xx.xxxoox..oxx.oxoxx.oxo.o..xx.o..x.x.xx.x", "xxxx.xxoxoo.o.xoo..oxxoo.x.oox.xoo.xxo.o.xo..ooo.x", ".xxx...ooxo.x.xoxx.o.xxx.oooo.oxoxo.xx.xo.oo.ooooo", "xxxo.oxox.oxooxx..oooo.xoooxooo.oxo....ox.oo.ooxxo", ".oxoooxox.x.ox..oooxox..oxxoxoooxxoox.ox.xooooxxxx", "xxxxox.x....o.o.xooxox..oxox.oxxoxooxoo.o.oxoooxo.", ".x..xo.x.oxxx.x.oxo.o.ooxoxxxx.xo.oo.oo.ooxoxxx.xo", "xxoxoooxoxx.xo.ox.xooooo.x.x..x.o.xoooo.oo.xx.x.ox", "..o.ooo.oo.o.o.ooxxxxooxxooo..x.oooooxxoxo.o..x.x.", ".ooxxxooox.o.oooxxoooox..oxxooxoxxoxxx.o.xoxx..xo.", ".xo.oxxooo.oxxoo.xxxoo..oxxxxoxox.oo.xxx.xooxxxox.", ".xx.ooxxooxx.xxox.oooxooxoxoooxxxoxxoxxo..xxx.oo.o" }, fallingsand.simulate(board));
    }

    @Test
    public void case26() {
        String[] board = { "....x.xx..x..x.oxo..x..xo.o.......x.o...oo..o...xo", "x...o..x.....oxxxxo.x.ox..xx.x.x.......oxxo...o...", "..ox.xox..xoooo....x.xxx.oxox.o....x.xoxooxxxxx.o.", ".....x....xo..xox.x.xo.xoxxx........x..xx..xx..xxx", "..o.x.....x...xxxx.x.x.xox.xxxxo.x....o....xoxo.ox", "xo.xox..xx.x.xx...o.oo...xx....xxxxoxo.xxx....x.x.", ".......xx.xx...xxxx.o.x..oox.x..x.x.xxx.x.xox.xxxx", "o.xxxx.o.....x....x.xo...xooxo...ooo.o...o.o.o..x.", "ooxox...xxx..o.x.x.......xx.x.o.xxoxxox..x..oxo.x.", "o.oo..xoxx..xo..x.xxoxx.x.........xo.xxxx....x..ox", "ox.x....xo.xxx...xx.x.ox.x..x...xxx.ox..x.o.x.oxoo", ".xx.x.xo.x....x..ooxxx.x.x..o....x.oox..xx.....xx.", "ox.x...x.xxx.......o..x.xx.o..o.xxo.xxx..x..x..x.o", "xox....oxx..o.xxx.x.x..xxxxoxxx.x....xo.o.oxo..xox", ".xoox.o..o.x..xx.x..x....o.x.xo.x.o..oooo...xx...x", "...oxx...o.o...x.x....xxxoox.x..x...xxxxx..ooo.x..", "oxox...xxxo.xxx..o..x..xox..ox.xxoxxx..x.o..o.ooxx", "x.x..o.oox.x..x.o.xxo.xoxo...x..x.xoo.....xx.oxo.x", "...xo.xxxx.x.oxx..xx.o....xo..o.....x.o.xx.oo.x.xx", "ooo.x.x.xx.x.x.o.oxxx..xx.x.xxxx.xx...x....ox..x..", "xxxoxxxx..x..xoox.x..o.xx..x.oo..xxxxoxoxxox.x..x.", "ooxxxx..oxx.o..x....x..x.x...xo..xx.....x..xxx...x", "o...o...ox.....x..oo..oo.x..x...xoxxx.xo.ox...x...", ".x....oo.xoxo..x....o.x....ox.ox.x.xx.x..x..o.....", ".o....ox..xx..xxx.o..xx.oxxo..x.ooxx...o...x.xxxo.", "xo..x..xxx.......o.....xo.ox...ox..ox...ox...xoxx.", "x....xx..xx..o....x..ox..xox.o.x..xo..x.x.x.xx.xxo", "xxxxo..x.xox.xx...xx..x.xxx.o.....oxxxo.x..oxox.xx", "xxx..xx...o.xxx.o.xx...oxo.x..xxxoox.ooo..xx..xxo.", "x.x.oxx.o.o.xx...xx...x.xoxo...xx..o.x..o.x..xxo.x", "x.x.xx....o.xxxxx..o...oxo....xoxx.oxox...x.xx.xxx", "x.xx..x...xx.oox.xx...x.x.ox..xx.x..x......x...x..", ".....o.x...o.oxo..ox.xxoxoxoo...oo.xxx..ox..x.x.xx", ".o.o..o.xxooxx.oxxoo.....x.oxxxxxoxxx.xx..xxoxxox.", ".xxxxoo..xxxx.x...x..x..xxx..oo.o..o.x.xo.xxo..xox", "ox.x.oo.xox.....xoooxxxx...x...xxx..o.....x..xoox.", "o..x....x.xx.xxx....x.x.xx..xxxox.x..xx.x.xoxox.x.", ".x...xxx.x.x...o..oxo..xxxx.xo.x.o.x.o..x...xx.o..", ".x.oxo.xxxx..xx.o..oxx..x.xxox.oo.xxxxo.x...oo.xx.", "x...oox.o.x.x..xx.o.x..x.x.oxoo.x.o..xx....x..o.xx", "x.o.....xxx..x.x.oxxxo...xo.x.oo.x.xoxo...oo.x.oxx", "x..xxo......o...oo.o..xxxoxxo..oo.xxox.xo....o.o.x", "x...xo..xx.xxxo.x.x.oxox......o.....xx.x.....x..ox", "x....x...x..x.x..ox.xx..xo...xooo...xox..xo.o..o..", "xoxx..x...xxoo.o.xoxxx..xo.ox.xxxox.x..x.xxx.o...o", "xxx.xxx.......o..o.xxxxxxoxo..oxxx...xxooo.o..xxxx", "x..x.x.o..o..x.xxo.o.xx...x..ox.x.xo.xx.xo.ooxx.xx", ".x.o.xx.xoo.x.ox.xx.x....ox....x..xx.xxx....x.xxx.", ".xxx.xxo.....ox.x.x..x.x..x.x.x..ox..ox...xx..oo..", "oo...x.x....xo..xoxxx.x..o....x.x..x..x.xo.oxxo..x" };
        assertArrayEquals(new String[] { "....x.xx..x..x.oxo..x..x..o.......x.....oo......x.", "x......x......xxxx..x.ox..xx.x.x.......oxxo.o.o...", "...x.x.x..x...o...ox.xxx.oxox......xox.xo.xxxxx.oo", "....ox....xo.oxox.x.xo.x.xxx..o.....x..xx..xx..xxx", "....x.....xo.oxxxx.x.x.x.x.xxxxo.x....o..o.x.xo.ox", "x.ox.x..xx.x.xx...o.o....xx....xxxx.xooxxx..o.x.x.", "..o.o..xx.xx...xxxx.o.x.ooox.x..x.xoxxx.x.x.x.xxxx", "..xxxx.......x....x.xo..oxo.x....ooo.o...o...o..x.", "ooxox.o.xxx.oo.x.x...o..oxx.x...xxoxxox..x...x..x.", "oo.o..xoxx..xo..x.xxoxx.x.........x..xxxx...ox..ox", "oxox...oxo.xxx...xx.x..x.x..x...xxx.ox..x...x..xo.", "oxx.x.xo.x....x....xxxox.x.o..o..x..ox..xx.o...xxo", "ox.x...x.xxx......o...x.xx.oooo.xx..xxx..x.ox..x.o", "xox.....xx....xxxox.x..xxxxoxxx.x....xo.o..xo..x.x", ".x.ox....o.x..xx.x..x....o.x.x..x.oo.oooo...xxo..x", "..ooxx.o.o..o..x.x....xxxo.x.x..x.ooxxxxx.o...oxo.", "oxox...xxx.oxxx....ox..xox...x.xx.xxx..x..ooo.o.xx", "x.x...ooox.x..x...xx..x.x.o..xo.x.x.o....oxxo.xo.x", "...xo.xxxx.x.oxx..xxo..o..x.o.o..o..x.o.xx.oooxoxx", "ooo.xox.xxox.x.oo.xxx..xx.xoxxxx.xxo..x....oxo.x..", "xxxoxxxx..x..x.ox.x....xxo.x.o...xxxx.x.xx.x.x..x.", "..xxxx...xx....x....x..x.x...xo..xx.....x.oxxx...x", ".o.......x.....x.....oo..x..x.o.xoxxx.x..ox...x...", "ox.....ooxox..ox.....ox....ox.ox.x.xx.x..x........", "o...o.oxo.xx..xxx.o..xxo.xxo..x.o.xx.......x.xxxo.", "xo..x.oxxx........o....xo.ox...ox..ox...ox..ox.xx.", "xo...xx..xx.oo...oxo..x.oxox...x..xo.ox.x.x.xxoxxo", "xxxx...x.xoxoxx..oxx..x.xxx........xxx..x..ox.x.xx", "xxx.oxx...o.xxx..oxx....x..x..xxxo.x.oo...xx.oxx..", "x.x.oxx...o.xx..oxx...x.xox....xxo...xoo..x..xxoox", "x.x.xx....o.xxxxx.......xo.o..xoxx.ox.xo..x.xx.xxx", "x.xx..x...xx.oox.xxo.ox.xooxo.xx.xooxo.o...x...x..", ".......xo..o.ox...ox.xxoxox.oo..o.oxxx.o.x..x.x.xx", ".o.o....xxooxx..xxo....o.x.oxxxxxoxxx.xxo.xx.xxox.", ".xxxxoo..xxxx.xo..x.ox.oxxxo....oo...x.xo.xxo..xox", ".x.x.oo.x.x....ox..oxxxx...x.ooxxx......o.x.oxo.x.", "...x.oo.xoxx.xxx...ox.x.xx..xxxox.xo.xx.x.x.xoxox.", "ox...xxx.x.x......oxo..xxxx.xo.x...xoo..x...xx.o..", "ox..x..xxxx..xxoo.o.xx..x.xxox..o.xxxxo.x..o...xx.", "x....ox.o.x.x..xx.oox..x.x..x...xo...xx....x.o..xx", "x..ooo..xxx..x.x.oxxx....xoox.oo.xoxox.......x..xx", "x..xxo......o...oo...oxxx.xx..oo..xxox.x.....o...x", "x...xo..xx.xxxo.xox.ox.x.....oooo...xxox..o..x.o.x", "x.o..x...x..x.x..oxoxx..x...oxooo...x.x..xoo...o..", "xoxx..x...xx.....x.xxxo.xo..x.xxxox.xo.xoxxxo.oooo", "xxx.xxx......o.o.o.xxxxxxox...oxxx...xx.o...ooxxxx", "x..x.x......oxoxxoo..xx..ox...x.x.xo.xxox..ooxx.xx", ".x.o.xxox...x.ox.xx.x....ox....x..xx.xxx.o.ox.xxx.", ".xxx.xxo..o..ox.x.xo.x.x.oxox.x...x...x..oxx..o...", "oo...x.x.oo.xo..xoxxx.x..o.o.ox.xo.x.ox.xo.oxxoo.x" }, fallingsand.simulate(board));
    }

    @Test
    public void case27() {
        String[] board = { "ooo.oxx..oxxxoxo.xo.o...ox.x..ox..x...ox.o.x.ooxo.", "oxoo..x...xoooo.x..ooxxoo.x..ox.o.o.x.xooo.oo.x..o", "oxoo..xxoooxxxx.xoo.oooxx.xoo.x..xx.x..ox.xooxxo..", "xxxooo..o.o.x...oxoxo.....oxxx.o..o..ooo.o.oo.o.xx", "o.ooxx.oox...oo.x.oo.xxo....xxooooxo..o.x.....ox.o", "..x..oxxoo.x.oo.xooo.o..oxxoo.o.oo...oo.xxoxo.o.xx", "x...x.oo.x.x.oox..xox..o..xx.o.oxoxxooxoxoo.ooxoxx", "o.oxxox...x.o.x..oo.xoox.o.xxoxxx.oxx.x.x.ooxx..oo", "o..o.ooxoxoxxx.ox.ox.xox.xoo.x..x.xx.xxxxxoooxx..x", "..ooxooox..x.oxooooxx.....xxoxo.xo.oxooo.xx.x..o.x", "...oox...oxx.ooooxxx.xxx.o..o.oo....xx.o.oo.ox....", "xox..x...xx...xxooxoxo.ox......xox.......ox.xox.ox", "xx..ox.xxooo.x...xooxo..xxx.oo.ox..oo.oooxoxxxoxxx", "..o.o.o....x...xoooox.x.ooo.oo...o...o.xoo.ox...xx", "...xox..oxx.x....o...xxxooxx.ox.xx.o.xx.x.xoo.x..o", "xoxxoo..oox.x.xo.o..xx.ooxx.o.xo.xxxx.xxoxxoxox.xx", "x...ox..oo.ooxx...xoxxoo..o.o.x.oxxooxooooxo.x.x.o", "oo.ooxxoxxooxxoo.xxxxo.ooxo...ox...ooxxxooxooooxxo", "o..oooooxxoxxoo..xoxxo.xo.xxooxoo..xo.xo.oxxoo.ox.", "ox.xooo..o.xoxoxx.x.x.xo...oo......x.o.oxox...o..o", ".oxxxxoxoxx.ox.xxxooxoox..x...o.o.oooxooo..oooxx.o", "o.o..o.ooxx...ox...xx....o.x..o.o..xxxx.oxo.oxx.o.", "xx.x.xxxo..xxo.xx.o.oooo.xx..oxox..x..oo...xooo..o", "xoo.xx.xooxxx..o.xoo...xxox..xo........oo.x.ox.xx.", "o.o..o.ooooox...oxoox.ooo..xoooxxxoxoo..xoo.oox..x", "oo.....o.oxoo.o.x.xoxxx.xx.xooxxo.oo...ooooo.o..xx", "xxoxxo..o.o.oxxo.ooxox..x.oxo.oxooxo.xx..x.oooo.o.", ".o..ooooxox.xoo.xo.oxo...o..xo.xo.....xoxo.xoo...x", "xo.oxo....oxox.xxxxo...x.o.xoxo.o.x.xxoo.o.o.xx.xo", "ooxx.xoox....x.ooo.xxxxo.ooo.xoox.oxo.oxo.xx.x.ox.", ".ox.xxoxxxxo.ooxo.x..xo..ooxx.xx..oox..ox.oo.....x", "oxo...oox.oo..o...xx.xooo..xo.oxo.ox.ox.xooxooo.ox", "x.x..x....x..x.x.x..o.ox..o.oox.o....xoox.x..xxxo.", "...oo..x.xox..x.xo.x....xxxxx.o..oxoxxxoxx.x..o..x", ".xxo..x...xo.oo.ooo.oxo.o.oxooxxoxoxx.o.oxox..xx..", "oo.xoooo..xxx..xx.ooxxooo.o.o.o.o..x.x.xxo.x.oxxxo", ".x..xxxxx..x..xx.oxxoxoo.xox.xxx......oo.oxxoxo..x", "x..x..o...xx...ox.xxxx.oooxoxx.ox....xoxx.xo...xo.", ".xx.xoxx..ox..xoo..xxxoo..o.oxo.x.xoo.oox....o.xox", "oxox..ox.x.xx...xx.x..x.oxo..xx.xo...o..xox.o.oox.", "x.ox.x...o.oxoxxxoxx...oxoxxooxxoo.xoxoox.x..xoo.x", "x.oxoo..xooo.xx.oxx..o.oxx..xo..oooo.ox.xxx..xxoox", ".ox..xxx.....xo.oxxx..oo..oxx.xo.o.ox..xox.xxooo.x", "o.xxox.oxxoo..oxo....xxo..ox..xoo..x.x.o.oxox.x.ox", "o.o..x...xooo.o.o.x.x...o.oo..oo.o..oxxx.xox..oo.o", "...xo.xoxoo.o.oxx.xx.xo....xx..xo..ooox.o.ox.xox..", "xo.o..ooo.oo..ooox.x..x.oo.x.x.ooxox.x.oo.oooxxo..", "o.oxxxx.oooxox..o.oxxxoxxxx.oox.oo..o..oox..oxo.x.", "x.ox.x.o.o...xx.xx.xoo.o.xoxx.xxo.o....o.oxxoxxx..", "xox.x..xoxo...xxo..xxoox.x..x........o.xo..o.oo..." };
        assertArrayEquals(new String[] { "ooo..xx...xxxox..x......ox.x..ox..x...ox...x..ox..", "oxo...x...xoooo.x.o..xxoo.x...x...o.x.x.o....ox...", "oxo.o.xx.o.xxxx.xoooo..xx.xooox..xx.x...xoxooxx.oo", "xxxooo...o..x...oxoxooo....xxx..o.o...o..o.oo.ooxx", "..ooxx.oox....o.x.o.oxx...o.xx.oo.x...ooxo.oo.ox.o", "o.xo..xxooox.ooox.ooo..o.xxo..ooo..o.oooxxoxo.o.xx", "x..oxoo.oxox.oox..xoxo.o..xxoooox.xxooxox.o.oox.xx", "...xxoxoo.x.oox..oooxo.x.o.xxoxxxooxxoxoxoo.xx...o", ".....o.xox.xxx.oxoox.xox.xoo.x..xoxx.xxxxxo.oxx..x", "o.o.xo..x.ox..xo.ooxx.o...xx.x..xo..xo...xx.x....x", "o.o..x...oxx.ooo.xxx.xxxo......o.o..xx.o.oooox.oo.", "xoxoox.o.xx..oxx.ox.x...xo.....xox.....o.oxoxoxoox", "xx.oox.xx..o.x...x..xo..xxx...o.x..o..ooox.xxx.xxx", "...oo....oox...x...oxoxo.oo...o..o.o.ooxo.oox.o.xx", "..oxoxo.oxx.x....ooo.xxx.oxx..x.xx.ooxx.xoxoo.x..o", "x.xxooo.oox.x.x.ooooxx.o.xx...xo.xxxx.xx.xxoxox.xx", "x...oxo.oo.ooxx.ooxoxx.o..o.o.xo.xxo.xooo.xo.x.x..", ".o.ooxx.xx.oxx.ooxxxx..o.xo.o.ox...ooxxxooxo...xx.", "oo.ooo.oxxoxxo.ooxoxx.oxo.xxoox.o..xo.x.ooxx.oo.x.", "ox.xoooo.oox.x.xx.x.x.xoo...oo..o..xoo..xox..ooo.o", "o.xxxxox.xx.ox.xxx.ox..xo.xoooo.o..ooxo..o...oxx.o", "oo...ooooxx.o.ox..oxxo..oo.xooo.o..xxxxoox.o.xx..o", "xx.x.xxxo..xx.oxx.o..ooooxx.ooxox..x...oo.ox.o..oo", "x...xx.xo.xxx.o..xoooooxx.x.oxoo..o....oo.x..xoxxo", "oo......o.o.x.o.oxooxoo.oo.xo.oxxxox...oxo...ox..x", "ooo..o..o.x.ooo.x.xoxxx.xx.xooxxo.o..ooo.o.o.o..xx", "xxoxxo.ooooooxxo.o.xox..x..xoo.xo.x..xxoox.o.o....", ".oo.oo.oxoxoxo.oxooox..o....xooxo..oo.xox.ox.oo.ox", "xoooxo.o.o.x.x.xxxxo.o.x...x.xo.o.xoxx.o..oo.xx.x.", ".oxx.x.oxoo..x.o...xxxx..ooooxoox..xo.oxo.xx.x..xo", "oox.xxoxxxx...ox..x..x.o.ooxx.xx..oox.o.xoooo....x", "oxo...o.x.oo.oo.ooxx.x.o.ooxo.ox..ox.ox.xooxoooo.x", "x.x..xoo..xo.xoxox....oxooo.o.x..oo..xooxox.oxxx..", "...o..ox.xox..x.x..xo.o.xxxxx.o.ooxoxxxoxx.xo.o.ox", ".xxoo.x...xoo...o.o.oxo...ox.oxxox.xx..oox.xo.xxo.", ".o.xoooo..xxx.oxx.ooxxo...o.ooo.o..x.x.xx.oxooxxxo", "ox..xxxxx..x..xx.oxxoxo.oxoxoxxxo.....oo..xxox...x", "x..x..o...xx....xoxxxxo.o.x.xx..x.o..xoxx.x.o..xo.", ".xx.x.xx...x..xooo.xxxo.ooo..xo.x.x...o.xo..o.oxox", "oxox.o.x.x.xxo.oxx.x..xooxoooxxox..o.oo.xox.ooo.x.", "x.ox.x......xoxxxoxx...oxoxxo.xx...xoxooxox.oxoo.x", "x.ox.oo.xo...xx.oxx....oxx..x....o.oo.xoxxxooxxo.x", "..x..xxx.ooo.x..oxxx.ooo...xx.xo.o.oxo.x.x.xx.oo.x", "..xx.x..xxoo..oxo....xxo...x..xooo.x.x.o.oxox.xo.x", "o...ox...xoo..o.o.x.x..o..oo.o.ooo...xxx.x.x.ooo..", "o..xo.xox.oo..oxx.xx.xooo.oxxo.xoo.o.ox.o.ox.xoxo.", "x.ooo.oo.ooo..o.ox.x..xoooox.xo.ox.x.x.oo.o..xx.o.", "oooxxxxooooxoxo.o..xxx.xxxx.o.xoo.o.o..ooxoooxoox.", "xoox.x.oooo.oxxoxx.xoooo.x.xx.xxo.o.o..oo.xxoxxx..", "xox.x..xoxo.o.xxo.oxxoox.xo.xo..ooo.oo.xoo.oooo..o" }, fallingsand.simulate(board));
    }

    @Test
    public void case28() {
        String[] board = { "x....x.oo....oxxoo..x.xx..o..o..o.o.xx.ooo.oo.o..o", "....oooooo..xo..x..xxoo.oxo.oo....oox...ox..o....x", ".x..o.o...o.o....x.xxxooxxo.x.oxx.x..xo.o...o.x..x", "oo..xooo.o.oooo..xoxxooxx.oxoxo......xoo.o.o...xx.", ".x.o.xxx.o.o..xxo.ooo.oxx.x..xxx..o..xo...xo.oo...", "o.o.o.ox.oo.x.o....oox.oxx.x..x...o....ooo.o.o...o", ".o.oo.x.o.oooxo.x..oo.oo.x......oo..xx.o.o...oo...", "oo.oo..o.oxooxxxoo..o..oo.ooxoo...xoxo.xx...xx...o", "....o.o.xoxxooo.o.xo..o.ooxo.oo..x.x.x.o...xx.o..x", "x..o.o.oo....x...o.oxox.oo....oxoox.o.....x.xoxox.", ".o.o..oo..oxx.xo.xoxx.o.x.xoo.oo..ox..ox..ooo.oo.x", ".oo.x.o.o..o.o.o.o.ooo...o.o.oxx......x.xo.o..o..o", ".o.oo....o....o..xo...ox.o..oo.xo.ooo..o.xooo.ox..", "x..ooxoo...ox.oxxoo.o.oo.o....o.xoxox..oo..x...x.o", "..oo.o.xo.o.x.o...ooxoooo.oooo.....x.....o...xx...", "oooox.o....x...o.x....o.xo.ooooxx.x.xx...xxx.oxox.", "xoo.oxooo.xxo....x.x..o.oxox.ooo..o.x..xox.xxo.ox.", ".x.oxxoooox.oo..oxxox....o..o...x.o.oo.x...o..xoox", "xox.oooo..x...oo..oooo.o...o.....o...oxxo.oo.oo.oo", "oo...xxo.x.oox.x.xx.o.ox.oo..o..oo....oo..oxxoo..o", "ox.o.xo..x..x.o..x.oo.oxx..oo.ox.o.o.xo..ox..oo..o", "..x.ox..x.oxxo.ooo.o..o..x.x..xo..xxx.o.x..x..o..x", "x.o..xx.ooo....o.x.x..oo.x.oox.oxxo.x.o.oxxx.ox.o.", "oo.xx.xo.o....x.xx.oo..o.x.....xx....oxxxo....o.oo", ".o.x..ox...x.o..o..xx.o..xx..xx.oooo.x.oo...o..o.o", "oxo..oo.x.xoo.o.xoo.o.oo.xx.x..ooo.x.ooxo.oo..ox.x", "xo..oo.x.....ox..oo.ooxxx.x.o.o....xox.oo.xoo..xo.", "x..o...o.oo.x..o..oxx.x..oxxoooooooo.x.xo.o...xoo.", "x.xxx.x..o..xo.o.oooooxx.....oo.oo..o..x.ooo.oo.xo", ".oox.x.xo..oo..o.x.xx......xoo.x...xxo.ox.oox.xoo.", "ooxx....oo.o...o.o...oo.o..oo.x.xxxo.....o..x.o...", ".xo....oo.oo.ooo....o..ox...oo.oo.xo.oxxooo.oxxxoo", "oxox...x.ooxoxxx.x.oox..x.oo.x.ox.o.oox..o.x..xo.x", "oxo..x..xo..oxoo..o.o.oo...ooo..o.ooooo...x..o.xo.", "ooooox..x..oooox..oo..x.xxoo.xo.xx.....oox.xx.oo.o", "..oooooxooox...o..xx.o..o.x..xooo....o.ox...xooxo.", "xoxx.oox.o......o.o.x..oo...o...oo.o....o.xo.x.o.o", "o....ox.xox.oo..oo..x.xoxoxooxxx.o.xo.ooo........x", "oo.ox..oox..xxo.o..xo.o.x......o...ox..ooo.xxo..ox", "...x.x.o...xo.oo.x..oo....o.xx..oo...x..o..xoxoo..", "x.x...o.o.o.xooxo.xooo.x....xxx.xo...oo....o.o..ox", "x.o.o.oox.o...o...x.oooo..xx.xox.ooo.xo.oox.o.oo.o", "oo...o.oo....ox..x..oo.xox.oo.o..o..ox...xo.o..ooo", ".xooo..oo..x..o..xx..xooox..ooo.xooooxo.x.oo.xo.xo", "xoxo..xoo.....x.xo....ox.o.xo...o..oxooo.o..oo.x..", ".x.ooo...xx.oo.o....oo.....ooo.xxo.ox.x..xxo.oxo.o", ".ox..oxooxxo.oxoxoxoox.oo.xooooo..o..o..o.o.oooo.o", "oo....xo.....oo..oox.xo..o....xo.x.x.x.xooo....o..", ".xxo..o..o.x..oxo.oo..ooo.ox..o..xo.....o.ox.....o", "....xox..........xx.o.x.......o.o...ox.xo.oxxo..xo" };
        assertArrayEquals(new String[] { "x....x........xxo...x.xx..o.......o.xx...o.......o", "....o.oo....x...xo.xxo..oxo.oo..o.o.x....x....o..x", ".x..oooo.........x.xxx.oxxo.xooxx.x..x........x..x", ".o..xooo....ooo..x.xx.oxx.ox.xo......x.oo......xx.", ".x...xxx..ooooxx.....ooxx.x..xxx.....x.oo.xooo....", "......oxo.ooxoo.o..ooxo.xx.x..x...o....oo..ooo....", "o.....x.o.oo.xo.x.ooo.o..x..o.....ooxx.oo..oooo..o", "o...o...o.xooxxx..ooo.o.o.o.x.o..oxoxooxx..oxxo..o", "o...o...x.xxoo...oxoo.o.o.x...o..x.x.xo..o.xx.o..x", "x...o.......oxo..o.ox.xoo.....ox..x...oo.ox.x.x.x.", ".o..o..o...xx.x..x.xx..oxoxo..ooo..x..ox.o.o...o.x", ".o..x.oo.o.....ooo.....o.o.o..xxo.o.o.x.xo.o..oo..", ".o.o.ooo.o.....oox..o..x.o.o...xo.ooo....x.o..ox..", "xooooxoo.o.ox..xx.o.o....o.o....x.xox.....ox.oox..", ".oooo.ox.ooox....ooox.o.oo.o.o.....x...o.oo.oxx...", "ooooxoo..oox.....xoo..o.xo.o.o.xx.x.xx.o.xxxo.x.xo", "xooooxo.ooxx.....xox..oo.x.x.o......x..x.x.xx...xo", ".xooxxo.oox.oo.o.xx.x.oo.....oo.xo.....x...o..x..x", "xoxo.oo.oox.oooo..oo..oo....ooo..o...oxxo.oo..o..o", ".o.o.xxoox..oxox.xxo..oxoo.ooooo.oo..oo.o.oxx.o..o", "ox.o.x.oox.ox.o..x.oo.oxxo.oooox.ooooxo.o.x...o..o", "o.xooxoox..xx.o.oo.oo.o..xoxooxoooxxx.o.xo.x..oo.x", "x..ooxxo......o.ox.xo.o..xo.ox.oxx..x.oooxxx..xoo.", ".o.xx.xo..o...x.xx.oo.oo.xo.o..xx....oxxx......ooo", "oo.x...xo.ox....o..xx.oo.xx.oxx....o.x.o.....o.ooo", "ox......x.x...oox...oooo.xx.x......x.o.xo.o..ooxox", "x.o...ox....o.xo.o..ooxxx.xo....oo.x.x.oo.x..ooxo.", "x.ooooo.....xo.o.o.xxox...xx..ooooo.ox.xo...oox.o.", "xoxxxoxo.o.oxo.o.o.oooxx.....oooooooo..xo..oooo.x.", ".oox.x.x.o.o.o.o.xoxxo.....x.ooxoooxx...xoooxoxo..", ".oxx....oo.o.o.o..o..o..o....ox.xxx...oo.oooxooo.o", ".xo....ooo.o.ooo.oo..o..x...oo..o.x...xx.ooo.xxx.o", "oxox...xoo.x.xxx.xo..xo.x...ox..x.....x..oox..xo.x", "oxo..x..xoo.ox.o..ooo.o..oo.oo..o..o....oox.o..x..", "o.oo.x..xoooo..x..ooo.x.xxo.ox.oxx.o.o..ox.xxo.o..", "o.oo..ox.ooxo.....xxo...o.x.oxoo...ooo..x...xo.x.o", "x.xxoooxooo.ooo.....x..oo..oo.oo...ooo....x..x..oo", "....oox.xox.ooo.....x.xox.xooxxxo..xoo.....o....ox", "o..oxo...x..xxoo.o.x.o.ox..oo...o...xo..o..xxo..ox", "oo.x.x..o..xo.oo.xo..o.o...oxx..oo...xo.o..x.x..o.", "xox.....o...x.oxo.x..o.x..ooxxxoxo...oo.oo....ooox", "xo......x.....o.o.x..o.o.oxx.x.x.o...xo.oox...ooo.", ".oo...oo......x.ox..oo.x.x.......o.ooxooox...oooo.", "oxo...oo..ox..o.oxx.oxoo.x.o..o.xo.ooxoox.o..xooxo", "xox...xo..o...x.x...o.ox...x..o.oooox.oo.oo.o.ox.o", ".x.....o.xx..o.....oooo.....o.oxxoooxoxo.xxoo.x..o", ".oxoooxooxx..oxoxoxooxo.o.xoo.o..ooo.o.oo.oooo...o", ".o.oooxoo..o.o.o.ooxoxo.o..ooox..xox.x.xo.oooo.o.o", ".xxoooooo..x.oox.oo.o.oooo.xoooo.xo.....o.oxoo.o.o", "o..oxoxooo..ooo.oxxoo.xoooo.ooooo.o.ox.xoooxxoooxo" }, fallingsand.simulate(board));
    }

    @Test
    public void case29() {
        String[] board = { ".xo.x.xooxo.ox..xx.oo.xxox.....o.oooo.xx..o.x..x..", "ooxxxoox..oxx..xxxo.o..o.ox...x.oxoxo.o.x..oo.xo.o", ".oooox...xxxo.xo..o.xooo.x..oxx...xoo.xxx.xo..ooo.", "..xo.o.x...x..xx.o...o.o..oo.xoox.ox.o.xxxx.x.xo.o", ".x.xxo.ooox..o.oo..ooxooooo.o.x..x......xooox...x.", ".......x.o.xx..xx.o..xx.o.oxxo...xx.xxo.o.x..xoxx.", ".xx.....x...ox.oxx.xxox.xx.o.x.oooo.xo.....o..x.ox", "....xoooo.ox..ooox.ox...ooooxoo.oox...xxoo.xxxoo.o", ".....oo.xxooxoo....oo.......xooo.o.o.oo...o.xoo..x", "oxooxxooo.o.xoxoooxoox.x..xx...x.oxxo.o.o.o...xxxo", "........oo.x..xxxo.o..x...o.xoox.oooxxo..oxoo.x.ox", ".ox.o.o..oo.oxoox.xo.o..o...xo.oo..x.xo..o...ox.ox", "o.oxx.x..oo.oo...o.xx...xox.oo..xxoo...x.....xo..o", "x..oo.x..o........x.ooox..ox.o..x..xo....o...x.oo.", "xox....oxo.....o..x.xxx.x...ox....oo.xxxoxox.ooooo", "x..ox.ooxxo.oo.o...xoxx.ooo.ox...ooxxx.x..xx..x.oo", "........o.x.oo.x...x.xx...oo.oxxxxx.ox.x.o..xo..xo", "oo.oo.oooooo.x...oooo.xo.x.oooxo.x..oo.xx.xo..oxo.", "o.o.oxoox.....x.o..o.o.o..xxxx..x..x.ooox..xoxo.ox", "xo.x.oxxoxxxo.oxxxx.oo....oo.xxoo.x...x.ooxo.ox..x", "x.x.o..x.x...o..x.ox.ox.xo..ox.ooo..o.xxoxoo.oo.x.", "o..o.oo.x.xxox.o.xoooxoxoo...x...x.xoxxxxx.x.xo...", "x...o.oo.....x.x.oxxxo..o.xo.xx..x..xx.x....xx..x.", "o.oxo.x.xoxoooo.o..xxx..xx.xo.x.o.ox.xoo.xxoxxx...", "oooo.xo.xo.x..xo.o..x..o.oox...x..xoxx......ooxox.", ".xo.oo.oxoox....oxo.o.x.o.x.xoxoxo.x.o.oo.o.o.oo.o", "oooxx.x.xxxooxxx...oxxo..oxo.oo.o..o.xxoxx.xoxx..x", "oxxo...xooox.o.oo..oo....o.oooooxxx.oo...oooxooo.o", "xx..xxo..x.xo....ooo.oo.xxxo..xoxo...oxo.o..x..xx.", ".x.xoxx.ox..ooo.x.xxo....o..xx..x.o...oo.ox.oxxo..", ".o..xoxxx.....x...x.x...oxoxxo.oo.oxxo...o.o.xx.o.", "x...ox.xxx.x..xoxxox..o..xx.x.ox.o.x.ox..xo..xxxx.", "xxo.o.x.x....o.o...xo.x..x.xx.xx..x.o.ox.oo.oo.x.x", "oo.o.o.ox.o.oox.xox.x..oxxoxoxo.o.ox..xxxox.......", ".oooxooo.oxx...o.xo..o.o.oooxx....xx.oo.oo.xxo.x.x", "x..o..o.x.x...oo.o.o..oooooxox.xox....o...xx.xo.o.", "o..ox...x.x.oo.xoo.xxo.o...xoo.oxxo.ox...x.oo.xo.x", "oxxo.o..........xoxoo.o.x...oxooo..x...x...x..oxxo", ".o.o.o..oo..oo.o..x..xo.x.xo.ox.ooxxoooo.xxo.o.x..", "x.o...xoo.xx.o.xx.oo...x..oo.o.o..o.xooxoox.ooxx.x", ".o.o.oo..oooxooxooxoo..oxox..x..xx.xooox.x..ox.x..", "...o..x.....xx..o.xxxox.x...o.oxx.o.x.oxxo..o...oo", "oo..oooxooxx.xo.o.xox.o...xo.x..x..x...xooox.xoox.", ".....xo..o.oo.o..x.x.xx.oxoo..xo.xxoo.ooo.oooo..xx", "x...ox.x....o..oxox..xx....ox.xxo.o..oooox.oxo..o.", ".....ox.......x...xoooooooo..x.o..xo.xox..x...o.oo", "xx..o.o.....o.xoxoo.ox..o.ooox.xooxooxo.xo..ooo.x.", "xoooxox.x..oxo..xoxox..o.o..o...xoooxox.o.x.xo...o", "..o...o.o..x.x.o.xxx.x.o....xo.x.xo.o...x.ox..xxxo", "ooo..xo..o..o.x..oo.xx..x.oo..o...x.....o....oxoo." };
        assertArrayEquals(new String[] { ".xo.x.xo.xo.ox..xx..o.xx.x.......ooo..xx....x..x..", "..xxxo.x..oxx..xxx..o....ox...x..xox..o.x.o...x...", ".ooo.x...xxx..xo....xo...x...xx.o.xoo.xxx.x.o.oo..", ".oxoo..x...x..xx.....oo.o...oxo.x..xo..xxxxox.xoo.", ".x.xx..oo.x.o..oo..o.xo.o..oo.x..xo.oo..x.oox..oxo", ".....o.xo..xxo.xxo.ooxxooooxxo.o.xx.xx....xo.xoxxo", ".xx..o..xo...x..xxoxx.xoxxo..x.o..o.x.o....o..x..x", "....xoo.oo.xo.oo.xoox..o..oox..o.ox...xx...xxxo..o", ".....oo.xx..x.ooo.oo.o.o..ooxo.o.o.o.o....o.x.ooox", ".x..xxo....oxoxoo.xo.x.x..xx.o.xooxxoo...oo...xxxo", "o.o...o..oox.oxxx..oo.x.o...xo.xoo.oxxo..ox..ox..x", "o.xoo.o..oo..x..x.xoo...o.o.xo..oo.x.xo..o...ox.ox", "o..xx.x.ooo........xxo..x.x..o..xxoo..ox.o...x..o.", "x.o...xoooo....o..x.ooox...x.oo.x.ox..o.oo.o.xo.o.", "x.x.o..oxoo..o.o..x.xxx.xo..oxo...oooxxxoxox..o.oo", "x...x..oxxo..o.o.o.x.xx..oo.oxoo.ooxxx.xo.xxo.xooo", "...o..ooo.x..o.x.o.x.xx..oooooxxxxx..x.xo...xo.oxo", "o..o..ooo....xo..o....x..xoooox..x.....xx.xo.oox.o", "o..o.xooxooo..x.oooooo....xxxx..x..xo.o.xo.x.xo.ox", "x.ox..xx.xxx...xxxxooo.oo....xx...x.ooxoooxo.ox.ox", "xox.o..xox...o..x.oxooxox....x...o..ooxxox.o.o..x.", "oo..o.o.x.xx.x.o.xooox.xoooo.x.o.x.xoxxxxx.xoxo...", "xo.oooo......xox..xxxo..ooxo.xxoox..xx.x..o.xxo.x.", ".ooxoox.xoxo..o..o.xxx..xx.xo.xoo.ox.x...xx.xxx...", "ooo.ox..xo.x..x..o..x.o...oxo..xo.xoxx......o.x.x.", "oxooo.ooxoox.o.o.x..o.x..ox.x.x.x..x.oo.o..ooooo.o", "oooxx.xoxxxo.xxxo..oxx...ox..oo.oo...xx.xx.xoxxo.x", "oxx..o.x.o.xo...o.oo....oo.o.oooxxx....o.oo.x..o..", "xx.oxxo.ox.xo...o.ooo...xxxoooxox.....xo.oo.xooxx.", ".x.xoxx.ox..o.o.x.xxo.o..o.oxx.ox..oo..o.ox..xx...", "....xoxxx...o.x..ox.x.o..xoxx..o..oxx.oo.o...xxoo.", "xo...x.xxx.xo.xoxx.x..o..xx.x.ox..ox.oxo.xo..xxxxo", "xx..o.x.x.o.o..o..oxo.x.ox.xxoxx..x..oox..ooo..x.x", "....o...x.o.ooxoxox.x...xx.xox..ooox.oxxxoxooo....", "o...x.....xxoo.o.x.....o...oxx..ooxx.o...o.xxo.x.x", "xoo.....x.x.oo.o...o.o.o..ox.x.xox...o...oxx.xo...", ".oo.x...x.x.oo.xo.oxxo.oo.ox.oo.xx..ox...x.o..xoox", "oxx..oo.....oo..x.x..o.ox.o..xo...oxo.ox...x...xx.", "o....oo.....oo.o..xo.xoox.x..oxoo.xxo.oo.xx..oox.o", "x....oxo..xxoo.xxoooo.ox..o..o.ooo..x.oxoox.ooxx.x", ".....ooo....xo.x.oxoo.o.xox.ox.oxx.xo.oxox..ox.x..", "...o.oxo..ooxxo.ooxxx.x.xo..o..xx.o.xooxx..oo...o.", "...o.o.x..xx.xo.ooxoxoo..ox.oxo.x.ox.oox.o.xox..xo", "oo.o.xo.......o.ox.x.xx..x.oo.xo.xx..oooooo.o...xx", "xo.ooxoxoo..o.o.x.x..xx....ox.xx..o..ooooxo.x...o.", ".o.oo.x.oo..o.x..ox.oo.....o.x.oo.x.oxoxo.x..oo.o.", "xxooo.o.oo.oo.x.xoooox.oo.ooox.xooxooxo.x..oooo.x.", "x.ooxox.xo.oxo.oxoxox..oo.ooo...xooox.x.o.xoxooo.o", ".ooo.oo..o.x.x.o.xxx.x.ooooox..x.xoo....x..x.oxxxo", "oooo.xo.oo..o.xo.oo.xxooxooo.oo...xooo..ooo..oxooo" }, fallingsand.simulate(board));
    }

    @Test
    public void case30() {
        String[] board = { "xoooxxoooxxooooooooxo.xxoxoxxxxoxxxxxox.oooxxo.xxx", "oxooxxoxoooo.x.oxooxoxxoxooooxxoxxoooxoxooxooxxxo.", "oxxxoxooxxoxxxxoxooooxoooxooxoooxoxooooxox.xxoxxoo", "oooox.xxxoxxxxoxoooxoooooxxoxxoxxxxxoxoxxxxxxxoxo.", "xoxoxxxxxxxxxooxxooxxxxoxx.xo.oxooxxxooxxxoxoxoxxx", "xoxooooo.xxxxoxooxoxox.oxoxoxooxxxoxxooo.xxoxxoxoo", "xoxoxxxxooxxxoxxooxoooxoxoxxoooxxxooooooxoxoooxooo", "xxoxoxoxoxooooxxoxoxoxoxxooxoxoxxxox.xxoxxoxoxoxxx", "oooxxoxxooxxoxoxoxxxoxxoxxxoxxooxoxooxxxxxxxooxoxo", "o.ooxxxxo.oxoxoxxxoxxxooxxxxxoooxxxooxooooxoooxxoo", "ooxxxxoooxo.xooxxo.xxxoxxxxooxoxooooxooooooooxxoxx", "xoxxxxxx.oooxxx.xxoooxoox.oxxoxooxoxxxxooxxoxxooxo", "xxxxxxoooxxxxxxoxooxxoxo.xxooxoxoxxxoxxooxooxoxoxx", "ooxxx.oxoxoxox.oooxoooooooxoxxxoxxoxoxxoxxxoooxooo", "xoo.oxxoxoxxoxoxx.ooooxxxxxxxoxxoxxxxo.xoxxooxoxx.", "oooxxxxxxoooxooxxxxxoxxooxxxxoxx.xxooxxxxoxxox.xoo", ".xxxxxoxxoxxxxooooxxxoxxoxx.oxooooxxxxoxxxxxx.xx.x", "ooxooooxooxxxxoxoxoxxxxxxoo.ooxoxxxxxo.oooox.ooxo.", "ooxxxoooxx.o.xoxxooxoooxooooxoxoxxxox.xxxxoxooox.o", "oxo.oooxxooxxooxoxoxx.oxxoooxxoxxxoxxxoxoxxxoxoxox", "ooxooooxooxxoxxx.xoxxxoo.ooxo.xoxxoxoxooxooxxxxoxx", "oxoo.oooxxxoxxxooxxxxxooxxooooooxoooooxxxoxooxoxxo", "oxoo.oxox.xoxoxxxxxoxxooxxoooooxxxxooooxoxox.x.oo.", "xoxxxxxoooxxoxx.ooxxoxxxxoxxooxoxoooo.x.xxxxoxxoxx", "xoxoxxoxxoxoooooxxxxxx.xxxxxxoxoooxoooxxxxoxxxxoxo", "xxxxooxoxoxoxooxoooo.x.oo.oxoxoxoxxxxoooxxoo.xoox.", "oxoxxxox.oxxxooooxxxooxxxooxoxxxxxoxxoxooxo.oxxxoo", ".oxxxxooxoxooxxoxooxooxoxo.xoxxox.xxxxx.oxxooooox.", ".oxxoooooxxoxxxooxxoooxoxxooox.ooxoooo.ooxoxooxxoo", "xooxxxxxooxxxxxxxo.xoxxooox.xoxoxxxxoxoooxooxxxo.o", "oxxo.xxxxoxoxxoxxoxxxxoxxxx.xoxoxxxxxxxooxxoxoxoox", "xooxooxoxoxxoxoxoxxooxxxooxxoxo.ooxxxoxxoxxxxooxxx", "xxoooo.xoooxxxx.oooxoxxoox.x.xoxoxoxo.oxxoxxooooxo", "ooxox..oxoxxoxxoxxxoooo.ooxooooxoox.oxx.xxoxoxxxxo", "xxxooooooxoxxoxxooxxox.xoxox.oooooooox.ooxxooo.xxx", "oxo.oxx.ooxooxoooooo.o..oxoxxox.oxoxoxxxoooxoxoxox", "xooooxoxx.oxxxxxo.xxxxoooxoooxooxooxxo.oxxo.xooxx.", "oxxxoxoxoo.oo.oxxxxxxxoooxoxxxxoooxoxoxox.xxoxxoox", "xxoxoxxooxo.oxxxxxxoxxooxooxx.ooxxxxooxoxooxoxoxoo", "xxoxxoxxoxxxo.ooo.oooxxoooxxxxoo.oxxoooooxoooxoxxo", "ooxxoxoxooxoxoxxoxoxxxxxxxx.xxxooooxxxxooo..oooooo", "oxoxoxooxoo.xxxxxxooo.oxoxxxoxoxx.xooxxoooxoxooxxx", "oxxxxxoxxooxoxooooxxooxxxoxooooxoxxxxxooxxoooxxo.x", "oxooxx.xoxoxoxxooxxoxoo..xxxxoo.x.ooxooxx..oxxoo.x", "xoxooxxxxxxoxoxoooxxxo.ooxooxxoxoxoxxxxx.oxoooxooo", "oxooxxooxoxxxxoxooxxxx.ooxxxxoxo.oxooxoooxoo.oxx.o", "oxxxoxxxxxxxxxxxxxxxxooo.oxoo.ooxxxxxxo.oxoxxxxxxo", "ooooooxooooooxxxoxxoooxxxxxoxxxoxxxxxxxxxxxxoxxox.", "xo.ooxox.oxooxxooooxoxxox.oxxxxoxxoxoxxoxooxooxoox", "ooxxoxxxxooxxoxoxxxxxooxxxoooxoooxxxxoxxooxxoxxoxx" };
        assertArrayEquals(new String[] { "xoooxxoooxxo.o.ooooxo.xxoxoxxxxoxxxxxox.oooxxo.xxx", "oxooxxoxoooooxooxooxoxxoxooooxxoxxoooxoxooxooxxxo.", "oxxxoxooxxoxxxxoxooooxoooxooxoooxoxooooxox.xxoxxo.", "oooox.xxxoxxxxoxoooxoooooxxoxxoxxxxxoxoxxxxxxxoxoo", "xoxoxxxxxxxxxooxxooxxxxoxx.xo.oxooxxxooxxxoxoxoxxx", "xoxooooo.xxxxoxooxoxox.oxoxoxooxxxoxxooo.xxoxxoxoo", "xoxoxxxx.oxxxoxxooxoooxoxoxxoooxxxoo.oooxoxoooxooo", "xxoxoxoxoxooooxxoxoxoxoxxooxoxoxxxoxoxxoxxoxoxoxxx", "o.oxxoxxo.xxoxoxoxxxoxxoxxxoxxooxoxooxxxxxxxooxoxo", "ooooxxxxoooxoxoxxx.xxxooxxxxxoooxxxooxooooxoooxxoo", "ooxxxxoooxo.xooxxooxxxoxxxxooxoxooooxooooooooxxoxx", "xoxxxxxxooooxxx.xxoooxoox.oxxoxooxoxxxxooxxoxxooxo", "xxxxxxoooxxxxxxox.oxxoxo.xxooxoxoxxxoxxooxooxoxoxx", "ooxxx.oxoxoxox.oooxoooooooxoxxxoxxoxoxxoxxxoooxoo.", "xoo.oxxoxoxxoxoxxoooooxxxxxxxoxx.xxxxo.xoxxoox.xxo", ".ooxxxxxxoooxooxxxxxoxxooxxxxoxxoxxooxxxxoxxoxox.o", "oxxxxxoxxoxxxxooooxxxoxxoxx.oxooooxxxx.xxxxxx.xx.x", "ooxooooxooxxxxoxoxoxxxxxxoo.ooxoxxxxx.ooooox.ooxo.", "ooxxxoooxx.o.xoxxooxo.oxooooxoxoxxxoxoxxxxoxoooxoo", "oxo..ooxxooxxoox.xoxxooxxoooxxoxxxoxxxoxoxxxoxoxox", "ooxo.ooxooxxoxxxoxoxxxoo.ooxo.xoxxoxoxooxooxxxxoxx", "oxooooooxxxoxxxooxxxxxooxxooooooxoooo.xxxoxo.x.xx.", "oxooooxox.xoxoxxxxxoxxooxxoooooxxxxooooxoxoxoxoooo", "xoxxxxxoooxxoxx.ooxxoxxxxoxxooxoxooooox.xxxxoxxoxx", "xoxoxxoxxoxoooooxxxxxx.xxxxxxoxoooxoooxxxxoxxxxox.", "xxxxooxoxoxoxooxoooo.x.oo..xoxoxoxxxxoo.xxo..xoox.", ".xoxxxox.oxxxooooxxxooxxxooxoxxxxxoxxoxooxoooxxxoo", ".oxxxxooxoxooxxoxooxooxoxooxoxx.x.xxxxxooxxoooooxo", "ooxxoooooxxoxxxooxxoooxoxxo.ox.ooxoooo.ooxoxooxx.o", "xooxxxxxooxxxxxxxo.xoxxooox.xoxoxxxxoxoooxooxxxooo", "oxxo.xxxxoxoxxoxxoxxxxoxxxxoxoxoxxxxxxxooxxoxoxoox", "xooxo.xoxoxxoxoxoxxo.xxxooxx.xooooxxx.xxoxxxxooxxx", "xxo.oo.xoooxxxx.oooxoxx.ox.x.xoxoxoxoooxxoxxooooxo", "ooxoxo..xoxxoxxoxxxooo.oooxooooxoox.oxx.xxoxoxxxxo", "xxxooooooxoxxoxxo.xxox.xoxoxooo.ooooox.ooxxooo.xxx", "oxoooxxoo.xooxooooooooo.oxoxxoxooxoxoxxxoooxoxoxox", "xooooxoxxo.xxxxxooxxxxoooxoooxooxooxxo.oxxo.xooxx.", "oxxxoxoxooo.o.oxxxxxxxoooxoxxxxoooxoxoxox.xxoxxoox", "xxoxoxxooxoooxxxxxxoxxooxooxx.ooxxxxooxoxo.xoxoxoo", "xxoxxoxxoxxxo.ooo.oooxxoooxxxxoo..xxoooooxo.oxoxxo", "ooxxox.xoox.xoxxoxoxxxxxxxx.xxxooooxxxxooooooooooo", "oxoxoxooxoooxxxxxxooo.oxoxxxoxoxxoxooxxoooxoxooxxx", "oxxxxxoxxooxoxooooxxooxxxoxooooxoxxxxxooxx.ooxxo.x", "oxooxxoxoxoxoxxooxxoxo...xxxxoo.x.ooxooxx.ooxxoo.x", "xoxooxxxxxxoxoxoooxxxo.o.xooxxox.xoxxxxx.oxo.oxo..", "oxooxxooxoxxxxoxooxxxxoooxxxx.xoooxooxo.oxooooxxoo", "oxxxoxxxxxxxxxxxxxxxxoooooxoooooxxxxxxoooxoxxxxxxo", "oo.oooxo.ooooxxxoxxoooxxxxxoxxxoxxxxxxxxxxxxoxxoxo", "xooooxoxooxooxxooooxoxxox.oxxxxoxxoxoxxoxooxooxoox", "ooxxoxxxxooxxoxoxxxxxooxxxoooxoooxxxxoxxooxxoxxoxx" }, fallingsand.simulate(board));
    }

    @Test
    public void case31() {
        String[] board = { "oooox.o..x.xxoxxxo.ooxo.oxxxoox...xx..xx..xx.x.x.o", "........x.o....xo...x.o..x.oox.x.xxx..x.o.oox..o.x", "oxxxxo.xx.xoxxo..x..ooo.oxxxxo..oox.x...xxxo....xx", "xxx...x..x..xxo.ooo.o.xxxxxo.oxoo..x.oxxxx.oxox.ox", "oxo...x.x..x....ox.x.o....ooo..x.o..oxx.oxx.....oo", "xxox.oxox.xxo.x.xo.....x.xo..o....x.xxooo.o.x.o.x.", "o..o.x.o.oxxx.oo...x.xoxooxoxx...xxx.ooo...ox...oo", "..ox.oxxooxooox....xx.o.x.x.xxo..xxoxo.o.oxx.ox.x.", "...xx..oxoo..x..ox..ooo...x.ooxxo.o.xxx.xx.xo.x.oo", "xxxx..xo.xxxxxx..xx.ox.o.oxxxooxxx..x.o.x.....xooo", "..o.x.oxx.oxooxoxoxox...x...x.xx.x..ox.x.xo..ooo.x", ".x.x.xo.....o..x.x.xx..x....x.ooox..xxx..ox.oxx.oo", ".oxoo...o.ooox..x.xxxooxo.xx.xx..o..xxoxoxx..o.xx.", "x.x.x.xxo...x..o.x.x...xx.xx.oox.oxx...o.xox...xxo", "xx.xxx.x.o....x.xxxxxxx.xo..x.xxoxooo.x.x..x..oo.o", "xx.o.x.xoxoooxxo.xxxooxx...x.o..o..o.x.oo.o.xx...x", ".oxxox.x.o.o....x.xooxxoxx.x.xox.xo.x..xx..xxo.oxx", "xxx..x....x.oxoxx.ooxo...oxx..xo.oxo....xx.o..oox.", "xx.oo...x.o.x...o.x..o...oxoo..xxox.x.xoxx.xo.o...", "x.oxxx..xo.ooxxx.xx.o.oo..xoo.ox.x.xx.oxxo..oxo.xo", "x..x.xxxxxxxxooox..x.o.x.xo...oo..ox.x.xo.x.x..xxx", "xo...ox.x.xoxxxoxxx.oxo.xo.oo..xxx.xoxxo.o.x.o.o.x", ".o.xx..oxx.x.o.oo.x.xoxo.oxx.x.oox..o.xxxx..o.x.xx", ".oxx.ox.ox.o.oo.oo.ooxoox....xooxo.oo...oxxxxx.x.x", "..x..xxxxo..o.oxx.ox..x..xx...oxx....ooxx..x.o.o..", "o.xxox.xxx.ooxxxo.xx..x......o.ox...o..o..x.x.xx..", ".ooxooox.o.xo.x.oo....o.xo.xooxx...o.o.xox.xooxx..", ".x.x..o..xoxxo..xx..ox...ox..oo.x..o....xoo.ox.xxx", "x.oo..o.ox.....xooo....x..oo...xxo..o.xooxxoo.o.o.", "ooooxxxxx..oooxoxx.xxoo.x.x.x.xx...x.xx.xoo.o..xx.", "xox....oo..x...x.xxxoox...x....xoxxo.o.x.xx..xo...", "o.x..ox.x.xoo.o.xo.x..ooxox..xxx.xo...xoo.oo......", "x.o..xxoxx..x.oxxxxxo.xx.o...xo..oxx..ooxoxx.x.xo.", ".oo.x.o...xxxx.o.x..o.xx.xxxxoxxo.o..x.o.....oox.o", "ooxxx.xx....oox.xx...xxxxoo.xoxxxx.xox..x.o.xoo.oo", "x...oxxo..x...xxxxx.x.o..x...xxx.x..x.xo...o.ox.ox", "xxoxoxx.xxx.o.ooox.xx..ooo.xoxo..xo.o.o.ox...oxoo.", "......o..oxxxx..o.o..x.x....o...o.xo.xooo.xxoooo.o", "o...ooxooooooo.o.xxx.ooxx..o..o...o.xxx.xxx.....o.", "x.o.xxx...xo....xx..xxoxx.oxx..oo.xxx.oxox..xx.xxx", "x..xox.x.x..o.xx....xo.x..ox.oxxoxxxo...ooxx.xo.o.", "xx.ox....xo.oxx.xxoox.x..o.x..xxxxox.o.oooo.oooxxo", "ooxxx.....xx.....xoxx..x.o.o..o..xxo..xxx..o..xo.o", "..xx.oo...xoxoxxo...oo.xooo.x.x.ox....oxox..o.xo..", ".ox..x..xx..x....oxxx..o.ox.oo.xoxo.x.xxxoo.x...oo", "ox.o..x....xooxxx.xxo.xooxxx.xooxoxo.xxxxx.xoxxo.o", "ooxxx..xx...ox.ooo....ox..x...xoo.x...oo.o..xxx.oo", "x..xx.xo..oxooo....o.ox.xo.o..xxx...o...oxoxx.o.oo", ".ox...oxoo.o..ooxxx...o.xxxo...o.x..xxx.oxx..xxo.o", "x..o.o...x....x.oo..oxx.o.ooxoxx..oooo.o.ooxxox..x" };
        assertArrayEquals(new String[] { "....x....x.xx.xxx...oxo..xxxoox...xx..xx..xx.x.x.o", "oooo....x.o..o.x.o..x.o.ox.oox.x.xxx..x.o.o.x....x", "oxxxx.oxx.x.xx..ox....o.oxxxx.....x.x...xxx.....xx", "xxx...x..x.oxxo.oo.o..xxxxx..oxo...x.oxxxx.ox.x.ox", "ox...ox.x..x..o.ox.x.o....o..o.x.o..oxx..xxo....o.", "xx.x.oxox.xxo.x.x...oo.x.xo.oo...ox.xx.....ox...x.", "..oo.x.o.oxxx.o....xox.xo.xoxx..oxxx.oo.o.oox.o.oo", "..ox..xxoox..ox..o.xx...x.xoxxo.oxx.xoooooxx..x.xo", "o.oxx..oxoooox...xo.oo....xoo.xxo...xxxoxx.x.ox..o", "xxxx..xo.xxxxxxooxx.ox....xxx.oxxx..x..ox....oxooo", "....xo.xx..xo.xoxoxox.oox...xoxx.x..oxox.xo..oooox", ".xox.xo.....oo.x.x.xx.ox....xoo..x..xxx..ox..xxoo.", "..x.o.o.....ox..x.xxx.oxo.xx.xxo.oooxx.x.xx....xxo", "xoxox.xx....x....x.x.ooxxoxx..ox.oxx..o.ox.xo..xxo", "xx.xxx.x.oo...x.xxxxxxx.xo..xoxx.x....xox..xoo...o", "xx.o.x.xoxo..xxo.xxxooxx.o.x.o..o.o.ox.oo...xx...x", ".oxx.x.xo.ooo..ox.x.oxx.xx.x.xoxoxoox..xx..xx...xx", "xxx.ox..o.xoox.xx.o.x.....xx..xoooxo....xx.o...ox.", "xx.oo...xo.ox.o...xo.o.o.ox....xxoxox.xoxxoxoooo..", "x..xxx..xooooxxxoxxo.o.o.oxo...x.x.xx..xx.o.oxooxo", "x..x.xxxxxxxxoo.x..xooox.x.o...o...x.xox.ox.x.oxxx", "x.....x.x.xoxxxoxxx.oxo.x.oo...xxx.x.xxooo.x..o..x", "..oxxo..xx.x...oo.x.xox..oxx.xooox....xxxx..ooxoxx", ".oxx.oxoox...oooo..o.xo.xo...xoox.......oxxxxx.x.x", ".ox..xxxxo.ooooxx.ox..x..xx...oxx......xx..x...o..", ".oxx.x.xxx.ooxxxooxx..x.....o.oox......o..x.xoxx..", ".o.x..ox.o.xo.x.oo.....ox..xo.xx...o...xox.x.oxx..", "oxoxo.o..x.xx...xx..ox.o..x.o...x..o.oo.xoo..x.xxx", "x.o.ooo.ox.....xoo..o.ox..o.oooxxo.o.ox.oxx.....o.", "o.o.xxxxx..o..xoxxoxx.o.xox.xoxx.ooxoxxoxoo....xx.", "x.x.....o.oxo..x.xxx..x..ox..o.x.xx.o..x.xxoox....", "o.x..ox.x.x.oo..xo.x..ooxox..xxx.xooo.x.o.ooo.o...", "xooo.xxoxx.oxooxxxxxooxx.o.o.xo.o.xxoo..x.xxoxox..", ".ooox.oo..xxxxo..x..ooxx.xxxxoxxoo..ox......o.ox.o", "ooxxx.xx......xoxx..oxxxxo..xoxxxx.xoxoox...xoo.oo", "xo...xx...x.o.xxxxx.x....x...xxx.xo.x.xo.o...ox.ox", "xx.xoxx.xxx.oo...x.xx..o...x.x...xo...oooxoo.ox.o.", "....o.o...xxxx..o.o..x.xo...o.....x.oxooo.xx.o.oo.", "o...ooxo.oo....ooxxx.ooxx..oo.o.o.ooxxxoxxx.oo.ooo", "x...xxxo.ox...ooxx..xxoxx..xx.ooo.xxx..xox..xxoxxx", "x.oxox.x.x.oooxx....x.ox.oox..xxoxxx....o.xx.xo.o.", "xxoox....xoooxx.xx.ox.x..oox..xxxxox..oooo....oxx.", "..xxx.....xxo....xoxx..x.oo...o..xx...xxxo..o.x..o", ".oxx.o..o.x.x.xx..o.o..x.oo.xox.ox..o.oxox..o.x..o", "oox..xo.xx.oxo..o.xxx..o.oxo.o.xoxo.xoxxxo.oxo...o", "ox.o..x....x.oxxx.xx..xooxxx.xoox.x..xxxxxoxoxx..o", "o.xxx..xx....x...o...ooxo.x...xoo.x......oo.xxxo.o", "x..xx.xo...xo.o.oo...ox.xo.o..xxxo.oo.o..xoxx.oooo", ".ox....x.o..o.ooxxx.ooo.xxxoo..o.x.oxxxooxx..xxooo", "xo.o.oo.oxooooxooo.ooxx.o.ooxoxx..oooo.ooooxxoxoox" }, fallingsand.simulate(board));
    }

    @Test
    public void case32() {
        String[] board = { "oo.oo.ooxxox...oxo..ooo..xoooooooooo.oxo..o.oxoooo", "ooo...oox...oooooooox...o.o.xo.ooxx..o.ooo.o...x..", "x..ooooo..oooooxx.oxooo.o...o.xooxx.o.oo...ooooxoo", "xooo.oo.xooo.oox..o..x.oo..xo..ooooooo.o..o.ooo..o", ".oooo.xoo.oo.o.x..oo.oo.xoooox.oo.xoo.oooxx.x..ooo", "..ox.o.ooo.ox.oo.xoo.xx.o.ooox.oo.oooo..oooo.xx...", ".ox.oxxoooo.xo..x.ooooo.x.oooxox...ox.o.xooooxx.xo", "x..ooxox.oooxooo.ooo.o..x.o.oxx.o..o..o..x..oxxoxo", "oxx....ooo.xoo.ooooo.o.xoo.o.xooo.o..ooo..x.ox..xo", "o.xooooo.xxxo.o...x.ooxoooooox.xo.oo...oox.o.o.ooo", ".o..x.xoxxxoooxo.ooooooo.xo..xxoxooo.oooxooxo.xx.o", "x.x..oo.oo.x..xxox.ooo.o.ooxoox.o.oo.o.xoooo.xooo.", "ox.o..xx...x..ooxoxoxo.ooox.oxxxooooxo....oxox.oo.", "oox.xxx.oooooo.o...oo..o..ooxxoo.ooo..o....o.oo.xx", "..oxxoooo.oo..oo..oxo.xxoo.x..x.x.ooxoxxxo.ooo..o.", "o.oo..o.xooxoo.ooooxo.o.oooxoo.xxox...xo..xooxoox.", ".o.xoo.x..o.xxxxxoxoxoooo.ooo.x.xoooo.xxoo.o...oox", "xoox.xo.xoxoooxooox.x.x.oxxooo.ooooox...ox..xo.ooo", "xoxxo....xoooo.ooooox...oxo.o.x.ox.oxoxooox...ooo.", "..xoxoxxx..o...ooooo..x....ooxxx.o..oooox.oxo.oo..", "o..ooo.xooxo...oooooo.o..oxoxooooo.oo...o...x.xoo.", "o.oo.o..ox.oox.xo.xxxooooxoooxxo..ooo..oooo.x.x..o", ".oox.o...o.oxo.o.oo.ooxooxo....xoo.o.o.xoxooxxoooo", "...o..ooo.oxo.ooox...ooo.ooo..xo.o.o..o.x.oo..ooxx", "x..o.oo.oooo.xooo.ooo.xo.xo.o.oxoo..ox..oo.oxo..xo", "xoo.ooooooo.ooo.o..o..o..oox..ox..ooo.xo.o.oox.xox", ".o.oooo.oox.xo..ox..o..o..xo.ooo.xoox.oo.o...o.x.o", ".x.o.o..oo.oo...o.oo..oooxooo.oo.o.oo..o.ooooo.xo.", ".o.xox.ooo....o...xxoo....oooo..oxo.o.o..ooooooo.o", ".xxoooo.x.xo.xo.oo.x.xoo....xoooo....o.ooooxo.oxoo", "ooxoox.xoxox.o.x.oxoooo.o.ooo.x.ooo.oooo.o.o.o..oo", "xo.o.ooo...oo.oooox.o.xox..oo.x.oo..o.o..x..o..ox.", "ooo.oooxooxooo..o..oo.oxooxooo.ooxx.ox.ooo..oooxo.", "xxoo.o.oxxooxoooooo.oo.ooxooooxo.oo.ooo.o.ooooo.ox", "oooo.xooo...xx.oxoo.oo..oo....o.oo.xooo.ooo...oo.o", "o...ooxoo..ooo..ooooo..xox.ooxxxo.oo.ooxxoxoo..oox", ".oo.ooooxoooooo...x..oo.oxoxooxoooo..xx...ooo.ox.o", "oo.ox.o.ooooo.o.oxoooxo...o.oooxxx...oooo.ooo..ooo", "ooo.xo...ooxo.....oxoxox..ooxxooxxxooo..o.oxx.oxoo", "..ooo..xoo.ox..o.x..xo.xx.x.ooxo.x....x..ooo...oxo", "o.o...xoox...x.o.xxoooooxoooo.x..x.oo....o....oo.o", ".o.o...oo.o.ooxoo.ooo.xoo...oxo.oo.oo.ooox.oooo.o.", "oooo..oo.o.o.ooooo..o.o.oxxooo.x..xoxoxooooox..xox", "ooooo.o...oooxo.oxox..oox..ooxoxoooo..ox...xoo...o", "x.ooo.oooooxxxoo.oxx.o.oxxoxoooxoooooxoxx..ooo.o.x", "o.o.xoox.x.o..o.x.oo.x...o.xooox..o.o...x..oox..x.", "o.o...oox.ox....oo.oo.oox.ooxoo.ooo.o.xoo....o.x.x", "oooo.ox.oooox.oo.ox..ooxoooox.ooooooooooooxxoxxooo", "oxoox.o.oooxox.....xooxoxooo..o.xooxooo...oxoooox.", "ox.o.o.o..o.xxoo.o.o.oo.oxox.oooo.o.ox.oo...xxx.xo" };
        assertArrayEquals(new String[] { "o.....o.xx.x...ox...o....x..o..o.oo...x......x.o..", "o..o..oox......oo.ooxo..o...x.oooxx.........o..x..", "x.oo..oo.......xx.ox.oo.o..o.oxooxx.o.....o.o.ox..", "xooo.ooox.ooo..x.oo..xo.o.ox.o.oo.o.o..oooo.ooo.o.", ".oooooxo.oooo.ox.oo..oo.x.o.ox.oo.x.o..ooxx.xoo.oo", ".ooxoo.o.ooox.o..xoo.xx.o.o.ox.oo...o..ooo.o.xx.oo", ".ox.oxxoooooxoo.x.oo....x.oooxoxo...x..oxooo.xx.xo", "xo..ox.xooooxooo..ooo..oxooooxx.o.o...oo.xoo.xxoxo", ".xx.o.o.ooox.ooo.oooo.ox.oooox.oo.o...oo..xo.x.oxo", "o.x.o.oooxxx.ooo.oxoo.xo.ooooxoxo.o...ooox.o...o.o", "o...x.xoxxxo.oxooo.oo..o.xoooxx.x.o...oox..xooxxoo", "xoxo.ooo...xooxxoxooo..o..oxooxo.oo...ox...oox..oo", ".x.o.oxxo..xoo.ox.xox..o..x.oxxxooooxoo...oxox..oo", "..xoxxx.o.oooo.o...oo.oo.o.oxxo.oooo.oo.ooo.oo..xx", "o..xx...oooooooo..oxo.xx.oox..xoxoooxoxxxoo.oo..o.", "o.oo.o.oxooxoooooooxo.o..ooxo..xxoxo.oxo.oxooxoox.", "o.ox.oox.oo.xxxxxox.x.o..oo.o.x.xo.oooxxoo.oo.oo.x", "x.oxoxo.xoxo..xo.oxoxox..xx.oo...o.oxo..ox.ox.oo..", "x.xxo.o..x.o...o.oooxo...x..ooxo.x.oxox.o.xo..ooo.", "..xox.xxx.oooo.o.ooo.ox.o.oooxxx...o.o.ox..xo.ooo.", ".o.o.o.x.oxooo.oooooooo.ooxoxooo...o.o.ooo..x.xooo", ".o.o.o..ox.oox.xooxxxoo.oxoo.xxo.o.ooo.ooo..xoxooo", "oo.x.o..o..ox...oo...ox.oxoo...x.o.ooo.xox..xx.ooo", "oo...o..o.ox.o..ox...ooooooo..xo.o.oooo.x..o...oxx", "xo.o.o..ooo.ox..o....oxooxoo...xoo.ooxo..o.oxo.oxo", "xo.o.o..ooo.o...o.oo.o.oo.oxo.oxooooo.x..o.o.x.x.x", ".ooo.o..oox.x...oxoo.o.ooox.o.o.oxoox....ooo...x..", ".xoo.ooooo.o.o.oo.ooooooox..o.o.oooo.....ooo...xo.", ".ooxoxoooo.o.o.oo.xxooooo..oo.o.oxoo.....oooo..oo.", ".xx.ooooxoxo.x.oo..xoxooo.oox.o.o.oo..oo.ooxo..xoo", "oox.oxox.x.xo..xo.x.o.ooo.oo.oxooooo.oooooo.o...oo", "xo..ooooo.o.oo..oox.o.xox.ooooxooooo.ooooxo.o..oxo", "oo..oooxooxoooo.oo..o..x.oxooo.ooxxooxooo.o.o..x.o", "xx..ooo.xx.oxoo.ooo.oo...x.oooxoo..oooooo.ooo....x", "....oxo.o..oxxo.xooooo.ooo.ooooooo.xooooo.ooo..ooo", "....o.xoo..oo.o..ooooo.xoxoooxxxooo.oooxx.xoo..oox", "..ooo..oxo.oo.o..oxoooo.oxoxooxoooo.oxx..o.ooooxo.", "o.oox..o.o.oo.o..x.ooxo.o.o.oooxxxo.o....o.ooooooo", "o.oox.oo.o.xooo...oxoxoxo.o.xxo.xxx.o.o..o.xxooxoo", "o.oo..ox.oo.xoo..xo.x.oxx.x.o.x..x..o.x..o...oo.xo", "oooo..x..xo..xoooxx...o.x..oooxo.x.oo..ooo.o.ooo.o", "oooo...oo.oo.oxoo..o..x.ooooox.o...oooooox.ooooo.o", "ooooo.ooo.oooo.ooooo.o.ooxxoooox..xoxoxoo.ooxoox.x", "ooooo.ooooooox.ooxox.o.ox..ooxoxo.oo.o.xo.ox.oo.oo", "xooooooooooxxxooo.xx.oooxx.xo.oxoooooxoxx.o.ooo.ox", "ooooxooxoxoo..oox...oxoo..oxo.oxooooo.o.x.oooxoox.", "oooo.oo.x.ox..oo.oooo.ooxoooxoo.ooooo.x...ooooox.x", "oooo.ox...oox.oo.oxooooxooooxoo.oooooo.oo.xxoxx.o.", "oxooxo.ooooxoxoo.o.xoox.xooo.oooxooxoooooo.xooooxo", "oxoo.oooooo.xxoooo.ooooooxox.oooooo.oxooooo.xxxoxo" }, fallingsand.simulate(board));
    }

    @Test
    public void case33() {
        String[] board = { "..o.oxooo..o....o.o...o.oo...oo.oo.o.o...o..o..oxo", ".xo.oo.o.oox..oxoo..ooo.o...o.o..ooxo..xo.xo..o.xo", "ooo.....xoo.ooo..o.....ooo.o..o....xo..o.ooxo..o.o", ".ooooxoxox.oo.oo....oooxooo.ooo..ooooxo..o.o.o...o", "o.o....oxoo.o.ooooo..o......o...x.oo.xx....oxo.oo.", ".xo.o..o.xoxxo..o.ox.o.....x....x.x.x..o.x....xoxo", "x..oxooo...ooooo.o.oo.o..o..oo.o..xo.oo...oo.xoxox", "xx.x.oooox..o.x.ooo.ooxooo.....oox.oooo.ooo......o", ".o.ooo.oo.o..o.oooo..o...oxooo..oo.oox...oo....ooo", "xoxoo.o.o....x.ooo.o..ooo.xoo...oo.o.ooo...o.oo.oo", "xxo..xoo.oooo.o.xo..o...x.ooo.ooo.xo.xoo.o.o.o..o.", ".oox.....oooooooo...xoo...o.oo........o...ooo...oo", "..ooo..oo.x.oo..ooooo...x.oo..o.oo.oo.oooooooxo.oo", "oo.oo....oooooo.ooxoo...oo..ooxo.oooooxoxo.o.o.o..", ".oo..xo.o..ooxo.o.o.ooox.oooxoo.oooo.oo..xooox.o.o", "o.oo.oooo.ooox..ooooo.o..o.ooo.ox...o.oo..o.o..oo.", "..o..o....ooooxx...o.ox.o.o.ooooxooo.oo.oo.oo...o.", "oooooo..o.ox..ooooo..o..ooo...ooox..o.....oooooox.", "...xxoo.o.o..o.oo.o....x.o.o.o...ooooxo.oo.ooo.ooo", "ooo..o.oo...oo.oooo.oxoox.oo.oo..o.ooo.oooo..o.o..", "..o..oo....xo..o..ox..x..ooo.xo.xxxx.....oo..o....", "o.ooo.o.....o.xoo.oox..ooxxxo..x.oo.oo.o.oo.x..o..", ".oo.......oo.....o.oo..xoo.ooo..o.oooo.oo..oo.oooo", "o.oo....o.xo.o..oooo.oo.o.o.oo.oox.o..xo.......ooo", ".oxo.ooooo.ooooooo..oooooo...o....o.o...oo.oo...oo", "xo....o.....ox...ox..o.o..o.o.ooo.o..o.oo...o.oooo", ".o.ooooooox..o..o.xo..o....x..o.x.o..o.o.oo..oo...", ".ooo.o...oo.....oo.ox.ooooxo.oooo.x.o.oo..x..o.o..", "............oo...oo.ooo..o...o...o.ooo..oxxooo..ox", "o.o..oooo.o.o.o...o..oooo.xoooox...ooo..o.oooo..oo", "xoo.oxo.o.xoxo.ooo...o.....oooooo.o.ooo.o....oxxoo", "o..oox.o..x.oo......o....xoxox.x...x.oo..o.o....oo", "ooo..o..o.o.o..o.o.ooox.o.o...xoooooooooo.....ooo.", "oo.oo.ooo..xxoox....oxo..o.oooo.o..ooo.oooo.o..ooo", "o.ooo..o...x...o...ooxxx..o.oox....o...oooo..o.ooo", ".oooooo.xoo..ooo...oxoo.o.oxoo..xo..o..oooo..xoooo", ".oxoo..ox.o.oo..o..ooooo...o..xo.o.o.o.oooooo.o.oo", "..o..o.oo.ooo..ooxo.ooox..o...ooo..o.o..o..o.xoooo", "o..o..o...o..xoxoooo...ooooo.o..xx..xooooooo...xoo", ".o.oo.oo....oo.oooo.oox.ooo..xox...x.o..ooxoooo..o", "...ooo.o.oxx..ooxooo..oooo..o.oooxo...oo.ooo.o.o.o", "xo..oxoox.oooxooooo..o.xooo.o.oo.o.o.xo.o..oox..xo", ".o.oxo....x..x..o.x.xo..oo.o.oooo.oo.oo.o.ooo.o.xo", "...oo.......xooox..o....o.ooo.oo...oo.o.o..oxo..oo", "..xo.o...x.oo.o..oooooo.ooo.oooo.oo..oo.o.x.o..oo.", "oo.o..o...oooxo.ooo.ooooxx.o.xoo..o.oo.....ooo...o", ".oo....xoxxo....x..o.oo.xoooooo.ox.ooxox...oooooo.", ".x.oooox.xo..oo.....xxoo......oo.xo.o..x.oo...o.ox", ".ooox..o..ooo.o..ooo..ooo.oo.ooo.x.oo.o.ox...o....", "oo.xo...ooooxo..x.oooo.o.oooo..oooo.o.ooooxo..oxoo" };
        assertArrayEquals(new String[] { ".....x.....o.......................o............x.", ".x.....ooo.x...x...................x...x..xo....xo", "....oo.oxo..o.o........o..........oxoo...o.xo..o.o", ".oo.ox.xox..o.o.o.....ox........o.o.oxo..o..o..o.o", "ooo.o...xo.oo.o.o.....o.o..o....xoo.oxx..o..xooooo", "oxooo....xoxxoo.o..x..o.o..xo...xox.x....x...oxoxo", "x.oox.....o..oo.o...o.o.o...o....ox..o.......x.x.x", "xxox.o...xo..ox.o.o.o.x.o.o.o.o..x.o.oo...........", ".oo..o....o..o..o.o.o...o.x.o.o....o.xo...........", "xoxo.o....o..x..o.o.oo..oox.ooo.o..o.oo..o......o.", "xx.o.x....oo...ox.o.oo..xo..ooo.o.xo.xo.oo...o..o.", "...x......oo.o.o..o.xo...o..ooo.oo.o..o.oo...o..o.", "..o.......xo.ooo..o..oooxo.oooo.oo.o..o.oo...x..o.", "..o.o......o.ooo..x..ooo.ooooox.oo.o..x.xo...o..o.", "..ooox.....ooxoo...o.oox.oooxo.ooo.o.....xo.ox..o.", "..ooo......ooxoo...o.oo..ooo.o.oxo.o.o....o.o...o.", "..ooo......oo.xx.o.ooox.oooo.o.oxooo.o....o.o...o.", "..ooo.....oxo....ooooo..oooo.o.o.xoo.o....o.o...xo", "..oxx.....o.o....ooooo.xoooo.o.o.ooo.x....o.o..o.o", "o.o.....o.o.o....ooooxo.xooo.o.ooooo..o...o.o..o.o", "o.o..o..o.oxooo..ooxo.xo.ooo.x.oxxxxo.o...o.o..o.o", "o.o..o..o.o.oox..oo.x..o.xxx...x....o.o..oo.x..o.o", "o.o..o..o.o.oo..ooo....x......o..oo.o.o..ooo...o.o", "o.o..o..o.x.oo..ooo...........o.oxo.o.x..ooo..oo.o", "o.x..o..o...oo..ooo..........oo.o.o.o....ooo..oo.o", "x....o..o...ox.ooox.o.....oo.oo.o.o.o..o.ooo.ooooo", ".....o.oo.x.o..ooox.ooo...ox.ooox.o.oo.o.ooo.ooooo", ".o...oooo...o..ooo..xoo..ox..ooo..xooo.oooxo.ooooo", ".o...oooo.o.o..ooo...oo..o.o.ooo...ooo.ooxxo.oooox", "oo...oooo.ooo..ooo...oo..oxo.oox...ooo.oo..o.oooo.", "xooo.xooo.xox..ooo..oooooo.o.ooo...ooo.oo..o.oxxo.", ".ooooxooo.xooo.ooo..ooooox.x.xoxo..xoo.oo..o.o..o.", ".oooo.ooo..ooo.ooo..ooxoo...o.x.o...oo.oo..o.o..oo", ".oooo.ooo..xxo.xoo..oxooo...o.o.o...oo.oo.oooo.ooo", ".oooo.ooo..x.o..oo.ooxxxo..oo.x.oo.ooo.oo.oooo.ooo", ".oooo.oox.o..o.ooooox...o..xoo..xo.ooo.oo.ooox.ooo", "ooxoo.ooxoo..o.ooooo..ooo...ooxo.o.ooo.oo.ooo..ooo", "oo.ooooo.oo..o.ooxoo..oxo.o.oo.ooo.oooooo.ooox.ooo", "oo.ooooo.oo..xoxo.oo.oo.ooo.oo.oxx.oxoooo.ooo..xoo", "oo.ooooo.oooo.o.o.ooooxoooo.oxox...x.oooooxooo..oo", "oo.oooooooxxooo.x.oooo.oooo.o.o..x...ooooo.ooo..oo", "xo.ooxooxoo.oxo.o.oooo.xooo.o.oo.....xoooo.ooxo.xo", ".o.ox.oo.ox.oxo.o.xoxo..ooooo.oo..o...ooooooo.o.xo", ".ooo..oo.o..x.o.xo.o.o..oooooooo..o..ooooooox.o..o", ".oxo..oo.x.o.oo..o.o.oo.oooooooo.oo.ooooooxo..o..o", ".o.o..oo..oo.xo.oo.oooo.xxoooxoo.ooooooooo.o..o.oo", ".o.oo.ox.xxoo.ooxooooooox.ooo.oooxoooxoxoo.o.ooooo", ".x.oooox.xooo.oo.oooxxoo..ooo.oooxooo.oxoo.oooooox", "ooooxoo.o.oooooo.ooo..oo.ooooooooxooo.o.oxooooooo.", "oooxooooooooxoooxoooooooooooooooooooo.ooooxooooxoo" }, fallingsand.simulate(board));
    }

    @Test
    public void case34() {
        String[] board = { "xxxxxxxxxxxxxxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxxxx", "xxxxxxxxxxxxxxxx.xxxx.xxxxxxxxxxxxxxxxx.xxxxx..xxx", "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.", "xxx.xxxxxxxxxxxxxxxxxxxxxxxxxx.xxxxxxxxx.xxxxxxxxx", "xxxxxxxxxxxxxxxxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxx", "xxxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxx.xxxxxxx.xxxx.", "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.xxxxx.x", "xxxxxxxxxxxxxxxxxxxxxxxxxxx.xx.xxxxxxxxxxxxxxxxxxx", "xxxxxxxxxxxxxxxxxxxxxxxxxx.x.xxxxx.xxxxxxxxxxxxxxx", "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.xxxxxxxx", "xxxxxx.x.xxxxxxxx..xxxxxxxxxxxxx.xxxxxxxxx.xxxx.xx", "xxx.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx", "xxxx.xxxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx", "xxxxxxxxxxxxxxxxxxxxxxxxx.xxxxxxxxx.xxxxxxxxxxxxxx", "xx.xxxxxx.xxxxxxxxxxxx.xxxxxx.xxxxxxxxx.xxxxxxxxxx", "xxxx.xxxxxxxxxxxxxxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxxx", "xxxxxxxx.xxxxxxxxxxxxxxxxxxxxxx.xxxxxxxxxx.x.xxxxx", ".x.xxxxxxxxxxxxxxxxxxxxx..xxxxxxxxxxxxxxxxxxxxxxxx", "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.xxxx...x..xxxxxxx", "xxxxxxxxxxxxxxxxxx.xxxxxxxxx.xxxxxxx.x.xxxxxxx.xxx", "xxxx.xxxxxx.x.xxxxxxxxxxxxxxxxxxxxxxxxxx..xxxxxxxx", "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.xxxxxx.xxxxxxx", "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.xxxxxxx.", "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx", "xxxxxx.xxx.xxxxxxxxxxxxxxxxxxxxxxxxxxxx.xxxx.xxxxx", "xxx.xxxxxxxx.xxxxxxxxxxxxxxxxxxxx.xxxxxxxxxxxxxxxx", "xxxxxx.xxxxxxxxxxxxxxxx.xxxxxxxxxxx..xxxxxxxx.xxx.", "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.xxxxxxxxxxxxxx", "xxxxxxxxxxxxx.xxxxxxxxxxxxxxxxxxxx.xxxx.xxxxxxxxxx", "xxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx", "xxxxxxxxx.xxxxxxx..xxxxxxxxxxx.xxxxxxxxxxxxx.xxxxx", "xxx..xxxx.xxxxx.xxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxxxx", "xxx.xxx.x..xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx", "xxxxxxxxxxxx..xxxxxxxxxxxxxxxxx.xxxxxxxxxxxxxxxxxx", "xxxxxxxxxxxxx.xxx..xxxx.xxxxxxxxxxxxxxxx.x.xxxx.xx", "xxxxxxxxxxxxxxxx.xxxxxxxxxxxxxxx.x.xx.x.xxxxxxxxxx", ".xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.xxxxxx.xx", "xxxx.xxxxxxxx.xxxxxxxx..xxxxxxxxxxx.xxxxxxxxxxxxxx", "xxxxxxxxx.xxxxx.xxxxx.xxxxxxxx.xxxxxxxxxxxxxxxxxxx", "xx.xxxxxxxxxxxxxxxxxxxxxxxx.xxxxxxxxxxxxxxx.xxxxxx", "xxxxxxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxx.xx.xxxx.xxxxx", "xxxxxxx.xxxxxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxxxxx", "x.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.xxxxxxxxxx", ".xxxxxxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx", "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx", "xxxxxxxxxxxxxxxxxxxxxxxx.xxxx.xxxxxxxx.x.xxxxxxxxx", "xxxxxxxxxxx.xxxxx.xxxxxxx.xxxxxxxxxxxxxxx.xxxxxxxx", "xxxxxxxxxxxxxxx.xxxxxxxxxxxxxxxx.xxxxxxxxxxxxxxxx.", "xxxxxxxxxxxxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx", ".xxxxxxxxxxxxx.xxxx.xxxxxxxxxxxxxxxx.xxxxxx.xxxx.x" };
        assertArrayEquals(new String[] { "xxxxxxxxxxxxxxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxxxx", "xxxxxxxxxxxxxxxx.xxxx.xxxxxxxxxxxxxxxxx.xxxxx..xxx", "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.", "xxx.xxxxxxxxxxxxxxxxxxxxxxxxxx.xxxxxxxxx.xxxxxxxxx", "xxxxxxxxxxxxxxxxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxx", "xxxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxx.xxxxxxx.xxxx.", "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.xxxxx.x", "xxxxxxxxxxxxxxxxxxxxxxxxxxx.xx.xxxxxxxxxxxxxxxxxxx", "xxxxxxxxxxxxxxxxxxxxxxxxxx.x.xxxxx.xxxxxxxxxxxxxxx", "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.xxxxxxxx", "xxxxxx.x.xxxxxxxx..xxxxxxxxxxxxx.xxxxxxxxx.xxxx.xx", "xxx.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx", "xxxx.xxxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx", "xxxxxxxxxxxxxxxxxxxxxxxxx.xxxxxxxxx.xxxxxxxxxxxxxx", "xx.xxxxxx.xxxxxxxxxxxx.xxxxxx.xxxxxxxxx.xxxxxxxxxx", "xxxx.xxxxxxxxxxxxxxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxxx", "xxxxxxxx.xxxxxxxxxxxxxxxxxxxxxx.xxxxxxxxxx.x.xxxxx", ".x.xxxxxxxxxxxxxxxxxxxxx..xxxxxxxxxxxxxxxxxxxxxxxx", "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.xxxx...x..xxxxxxx", "xxxxxxxxxxxxxxxxxx.xxxxxxxxx.xxxxxxx.x.xxxxxxx.xxx", "xxxx.xxxxxx.x.xxxxxxxxxxxxxxxxxxxxxxxxxx..xxxxxxxx", "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.xxxxxx.xxxxxxx", "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.xxxxxxx.", "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx", "xxxxxx.xxx.xxxxxxxxxxxxxxxxxxxxxxxxxxxx.xxxx.xxxxx", "xxx.xxxxxxxx.xxxxxxxxxxxxxxxxxxxx.xxxxxxxxxxxxxxxx", "xxxxxx.xxxxxxxxxxxxxxxx.xxxxxxxxxxx..xxxxxxxx.xxx.", "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.xxxxxxxxxxxxxx", "xxxxxxxxxxxxx.xxxxxxxxxxxxxxxxxxxx.xxxx.xxxxxxxxxx", "xxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx", "xxxxxxxxx.xxxxxxx..xxxxxxxxxxx.xxxxxxxxxxxxx.xxxxx", "xxx..xxxx.xxxxx.xxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxxxx", "xxx.xxx.x..xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx", "xxxxxxxxxxxx..xxxxxxxxxxxxxxxxx.xxxxxxxxxxxxxxxxxx", "xxxxxxxxxxxxx.xxx..xxxx.xxxxxxxxxxxxxxxx.x.xxxx.xx", "xxxxxxxxxxxxxxxx.xxxxxxxxxxxxxxx.x.xx.x.xxxxxxxxxx", ".xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.xxxxxx.xx", "xxxx.xxxxxxxx.xxxxxxxx..xxxxxxxxxxx.xxxxxxxxxxxxxx", "xxxxxxxxx.xxxxx.xxxxx.xxxxxxxx.xxxxxxxxxxxxxxxxxxx", "xx.xxxxxxxxxxxxxxxxxxxxxxxx.xxxxxxxxxxxxxxx.xxxxxx", "xxxxxxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxx.xx.xxxx.xxxxx", "xxxxxxx.xxxxxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxxxxx", "x.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.xxxxxxxxxx", ".xxxxxxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx", "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx", "xxxxxxxxxxxxxxxxxxxxxxxx.xxxx.xxxxxxxx.x.xxxxxxxxx", "xxxxxxxxxxx.xxxxx.xxxxxxx.xxxxxxxxxxxxxxx.xxxxxxxx", "xxxxxxxxxxxxxxx.xxxxxxxxxxxxxxxx.xxxxxxxxxxxxxxxx.", "xxxxxxxxxxxxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx", ".xxxxxxxxxxxxx.xxxx.xxxxxxxxxxxxxxxx.xxxxxx.xxxx.x" }, fallingsand.simulate(board));
    }

    @Test
    public void case35() {
        String[] board = { "....o....o.o..o...................................", "..o........o......o....o.o...........oo......o...o", ".ooo.o....o.......oo..o.o....o.....o..o..o...oo..o", ".....oo........o.......o........o.oo....o.o.......", "...o........oo.......oo.o...........o.......o....o", "o.o...o...o....................o.o..oo.....o....o.", "....o......o..........o.....o............o.o...oo.", "..o..o....o.............o.................oo......", "....oo..oo.o.....o..........o..o..o.o..oo....o....", "....o.........o................o.....oo........o..", "..oo......ooo............o................o.....o.", "......oo............o..ooo...........ooo.....o..o.", "....o........o.........o.......oo.o.o.o...........", "..o.........o..........o.o.......o..o..o..o.......", "..........o.oo..........o..o......o.........o.o..o", "o..o.o.........ooo..o....oo......o....o........o.o", ".........o...o.......o.o...o........ooo..........o", ".......oo.......o..o......o..o.....o...o..........", "o..o........oo...oo.......o............o......o..o", "...o.oo.o...............o..........o..oo....o.....", "....o..o....o.oo....o..o.o......o.................", "........o..o..o...o....o..o........o.o.o...o......", ".o..o....oo............................oo..o....oo", "...o.....o......o.....o.....o......oo...o.oo......", "o...............o...o....o...o.o.o..o...o..o......", "......o.o..o.......oo........o...o.........oo.....", "..ooo..............o......o.o..o..................", "......o.o................o.......o.o..o....o..o...", "...........o....o..oo......ooo..o.....o..o...o....", "o...o.........o......ooo......o...o..o.......o....", "...o......oo.....o..o..o.o.......oo...............", ".o..oo..oo...........o.o..........................", ".....o.ooo......o.o.......oo..............o.o.o...", ".o.o......o....o.o......o..o.....o....o........o..", "......oo....o................oo..o..o.........o...", "...o.......................................oo.....", "...........o...o.......o.......oo.o......o......o.", ".o..o...o..o.......o...........o...oo.....o....o.o", "...o.o......o..o...o..o....o........o.o...o.......", "...o.o..o.o..o.....o..o...................oo....o.", "..o..o...o.o...........oo..o...o.oo....o..o..o....", "..........o......o....o...o...............oo......", ".o.........o...o.o....oo.o..o....oo....oo....o....", ".....o..ooo...o..o...o.............o.oo...oo......", "...o..o..o...o..o......o...........o.o....o..o..o.", ".o.o....o....o..o.o..o...o....oo.............oo..o", "........o...........o.o.o...o.o....o..o.o........o", "............o.oo...........o......o.............o.", "..o..........o....o....o.o.............o..........", "...............o......ooo..o..o...o.......o..o...o" };
        assertArrayEquals(new String[] { "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", ".......................o..........................", ".......................o..........................", "...o...................o..........................", "...o...................o..............o...o.......", "...o....o..o...........o..............o...oo......", "...o.o..o..o...........o.o............o...oo.....o", "...ooo..o.oo..........oo.o.......oooo.oo..oo.o...o", "...ooo..oooo..........oooo.....o.oooo.oo..oo.o...o", "..oooo..oooooo.o......oooo.o...o.ooooooo..oo.o..oo", "..ooooo.oooooo.ooo.oo.oooo.o...o.ooooooo..oo.o..oo", ".oooooo.ooooooooooooo.ooooooo..o.oooooooo.oo.oo.oo", ".oooooo.oooooooooooooooooooooo.o.oooooooo.ooooo.oo", "ooooooooooooooooooooooooooooooooooooooooo.oooooooo", "oooooooooooooooooooooooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooooooooooooooooooooooo" }, fallingsand.simulate(board));
    }

    @Test
    public void case36() {
        String[] board = { ".oooooooooooooooo...oo.o..oo.oo.oo.o.o.oooooooo.oo", "oooooooooo.ooooooo.ooooooo.ooo..oooooo.o.oooooo..o", "ooooooooooooo.oo.oooooo.oooo.oo.oooo.oo.ooooooooo.", "oo.o..oo.oooooooo.oo...oo.oo.o.ooo...o.ooooooo...o", "oo...oooo.oo.oo.oo.ooooooo.ooo.o..ooooo...o..ooo.o", "oooooo.ooooooo.ooooo.ooooo..o.ooo.o.oooooooo..o.oo", ".o.oooooo.oooooo.o....o.o.oo.ooooo.o.oooo.o.oooooo", ".oooooooooooooooooooo..oo.oooooo.oooo.ooooooo.ooo.", "ooooooo.oooooooooo..oo.ooooooooo.oooo.oooooooooooo", "oo.ooooooo.ooooo.ooooo.o.oo.oo.ooooo.oo.oo..o.ooo.", "o.oooooo.oo.o..ooooo.oooooo.o.o.oo.oooo...oooo.ooo", "o..o..ooo.ooooo.o..o.ooooooooooooo.ooooo.oooooo.oo", ".oo.oooo.oo.oo.o.o.oooo..ooo..ooooooooo.oo.ooo..oo", ".oooooo.ooo.o..o..ooo.o.ooooo.ooo.o..oo.o.oooo.ooo", "ooooooo.oooooo.ooooo..ooo.oo.oo.ooo.o.oooo.oooooo.", "o.o.ooo.....o.o.ooooo.ooo.oooo.ooo.oooo.oo.oooo.oo", "ooo.ooooo.oooooooooooooo..o..oooo.oooo.oo.ooo.oo.o", "...o..oooo.ooo.oooooooo.oooo.oooooooooooo.oooooooo", ".oooo.ooo.ooo...oooooooooooooo..oooo.oooooo.oooooo", ".oo.oooo.ooooo.ooo.oooo.ooooo.oo..oo.o.ooooooooooo", "oo.oooo..ooooo.oooooooooooo.o.o.oooo.oo.oooooooooo", "oooo.ooooooo.ooo.ooo.oooo.oo.o..o..oo..ooooooo.o.o", "o..oo...oo...ooo.oooooooooooo.ooooooooooooo.ooo...", "oooooo..ooooo....o.oo..oooo.oooo.oo.oooooooo.o.ooo", "ooooooooooooo.ooo.ooo..oooo..ooooo..ooooo.ooooooo.", ".ooo.ooooo.ooooooooo.ooooooo..oooo.o.oooo.oooooooo", "o.ooooooooo..oo.oooooooooooo.oo.oooooooooooooooooo", "o.oooooo.ooo..o.ooooooooooooo.o.ooooo.oo..oo.ooooo", "o.oooooooooo.ooooooooooooooo.o.o.oooo.oooooooooo.o", "..oo.oo.oo.oooooo.ooo.oooooo.ooooo..oooooo.oo.o.oo", "oooooo.oooo..ooooooooooooo.o.oooo.ooooooooooo.oooo", "ooo.o.ooooo.o.oo.oo.oooooooooooooo..o.oo.oo.oo...o", "ooo.oo.ooooooooo.oooooooo..ooooooooooooo.oo.o.oooo", "..oo.ooooooo..ooo.ooooooo..o.o...oooooo.oooooo.ooo", "ooooooooooooooooo.oooooo.oo.oooo.o.oo.oooooo..ooo.", "o.oo..oo.oooooo.ooo.ooooooooooooooo.oooo.oo..ooooo", ".oooo.oooooooooo.o.o.oo.o.oo.o.o.oooooo..ooo.oo.oo", "..o.oooo.oooo.oooo...o..ooo.ooooo.oo.ooo.oooooooo.", "..oo.oooooooooooo.oooooooooo.oooo.ooooooooo.oo....", "oooo.ooooooooo.o.oooo..ooooooo.ooooooo..oo.o..oo.o", "...oo.ooo.ooooooooooo.ooo.oooooooooooooo..o.oo.ooo", "oo..o.ooo.oooo.oo.oooooooooooo.o.oooo.o.o.o..ooooo", "o.oooooooooooo.oo.ooo.oooo.ooo.ooooo.ooo.o.oo.o..o", "oo..ooooo.o.oooooooooo..o.ooooooooooooo..ooo.oooo.", "oooooo.oo..ooo.ooooooooooooooo..oo.oo.oooo.oo..oo.", "oooo.oooooooo.oooo..ooooo.ooooooo.oo...ooooooooooo", "oooo.oo...o.o.oo..ooooooo..oooo.o.oo.oo...ooooo.oo", "oo...oooo...oo.oooooooo.ooooo.oo..o.oooo.ooo.ooooo", "ooooo.oo.ooooooo.oo.ooo...o..oo.....o..oooo.ooooo.", "o.oooooooooo..ooooooooooo.ooo..ooo.o..o.oo..oo.ooo" };
        assertArrayEquals(new String[] { "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "......o.................o.........................", "......o.................o.........................", "......o........o...o....o.o.......................", "......oo..o.o..o...o....o.o...........o...o.......", "......oo..o.o..o...oo.o.o.oo..........o...o.......", "...o.oooo.ooo..o...oo.ooo.oo.o.....o..o...o.oo..o.", "..oo.oooooooo..o.oooooooo.oo.o..o..o..o..oo.ooo.oo", "..oo.oooooooo..o.oooooooo.oo.o..oo.o.oo..oooooo.oo", "..oooooooooooo.oooooooooo.oo.o.ooo.o.oo..ooooooooo", "o.ooooooooooooooooooooooo.oo.ooooooooooooooooooooo", "ooooooooooooooooooooooooo.oo.ooooooooooooooooooooo", "oooooooooooooooooooooooooooo.ooooooooooooooooooooo", "oooooooooooooooooooooooooooo.ooooooooooooooooooooo", "oooooooooooooooooooooooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooooooooooooooooooooooo" }, fallingsand.simulate(board));
    }

    @Test
    public void case37() {
        String[] board = { "xoxxooooooxooxxxoooooxxxxoxxooooxooxoooxooooooooox", "oooxooxxooxxxxoxxoxxoxxoooxxoxoxooooxooxxooxxoooox", "ooooxxoooxxxxxooxoxxxxxooooxxxoxooxooooooxxxoxoooo", "xxxoooooooxxoxoxooxoooooxooxoxoxxoooxooxxooxooooox", "xooxxoxooxoooxxxooxxxoxoxooxxxoooxxooxxoooxxxxoooo", "ooxoooooxoxxxoxoxooxxooooooxoxxooooxooxoxoxoooxxox", "ooooxooxoxoxoxxooooooooxxoooxxoxoooxoooxxxxxooxoox", "xxxxoxxxoxxxxooooxxoooxxoxoxoxxxooxxoxoooxooooxoxx", "xxoooxxxxxxoooooooooxoxxoooxooxoxoxoxoooxooooxxxxx", "ooooooooxxxoxxxoxooxxxxxoxoooxoooxoooxxoxooxxoooox", "xooooooxxxxoxoxoxoxxxoxooooooxxooxoooxooxoooxxooox", "oooooooxoxxoxoxooooxoxxoxxoxooxooxoxooxxoxxoxoxooo", "xxooxxoxoxxxxooxoxxoooxxooooooxooxooxxxxoxoxoooxoo", "xooxooooxooxxooooooxoooxxoxooooooooxooxooooooooooo", "oooxxxxooxoxooxxooooxoxoooooxxxxxoooxxxxxoxoxoxoox", "oxoxxooxoxooxoooxxxooooxooxooooooxoooooxoooxxxxooo", "xoxxooxxoxxoooxoxoxxoooxooxoooooxooxxxxxxoxoxxoxox", "oxxxxxxooxoxoxxxxoooxoxoxxoxoxxooxooxoxxxxooooxoox", "oxooxxxxxooooooooooxoxxoxoooooooxoooooooxoooxoooxo", "ooxoooxoooxoxoxooxooxxxoxxxxoooxxxoxooxoooxooxxxxo", "ooxooxxxoxxooxxooxoxxxooxoxoxoooooooxxoxooooxooooo", "oxxoooxooxooooooooooxoooxooxooooooxooooxoxxoxoxooo", "xooxxoxxooooxoooxxoooxoxoooxooxoxooooxxooxxoxoooxx", "oxoxxoooxxoooxoxooooooooxxoooxoooxxoxxxxoxxoooooxo", "xoxxxooxxoooooxoxxxoooooooxoxooooxoxoooxxoxxoxxxox", "xoxooxooxoxoxoxooxxooxxxoxoxoooxxoxxoxooooxoxxooxo", "ooxoxooooxoooooooooooxoxxoxoxoxoxoxoooxoooxoxxxxoo", "xoxooooxxxxxxxoooxxooxxoxxooxxooooxxooxoxoxoxooooo", "oxxooooxoxoxooxxooxxooxoooooxooooooxooxxxxooooxxoo", "xoooooooxooxxooooooooooooxooxoxxooooxxxoxooxooooxo", "xoxoxooooooxxoxoxoxxxoxoooxxoxooxoxooxoooxoooxxoxo", "xxxxoooooxxxoxxxxxoooxoxooxxxxxxooxoooxoxooxoxxoxx", "oxoxxxoxxoxxoxooxooxoxxoxoxooxxxoxoxoxooooxxxxooxx", "oooxoxxoxoxoxoxoxoxoooooooxxoxxxxxxoxxxxoooooxoxoo", "xxoxooxooooxxooxoxoxxxxoxxxooooxoxoxxoxxoxxoxoxxxo", "oxxxxoxxxooxxxxoxoxxxoooxooooooxoooxxoxoxooxoxxooo", "ooooxooooooxxxxooxxoooxoooooxxooxxxoxxooxoooxoooxx", "ooooxoxxoxxooxoooxoxxooxooooxooooxoooxxxooxoooxoxx", "ooxxxxxxoxxxooxxxxooxxxoxooooxoxoxooooooxooxoooxxo", "xoxoxxoxoooxoooxooxooooxxoooooxoooxoxoxxoxxooooxox", "ooooooxxooxooxooooooxooooxxxoxxooooxooooooxxxxxoxx", "xoooxooooooxooxxoxxxxooooooooooxxxxxoxxoxxooxooxoo", "oooooooxoxoooooooooxxxoxxooooxoxooxooooxoooooooooo", "ooxoxoooxoxooooooxooxoooxooxxooxxooxoooxooxoxxooxo", "xoooooooooxxoooxoooooxoooooxooxooxooxooxoxxxxooxox", "ooxoooooxxoxoxooxxoooxxxoooxoooxxoooooxxxxoxxoooox", "ooxoxxoxxooxxooxxoxooxoxxxooxoooxoxooooxxooxoxoxxo", "ooooxxooooxoxooooxoxoxoxooooxxoooxooxoooooxxxooooo", "oxooooxooooxoxooooxoooxxoooxoxoxooooxxoooxxoxoxxxo", "xxooooooxxooxxooxoxxxooooxxooxoooxoxxxxoxoxxxooooo" };
        assertArrayEquals(new String[] { "xoxxooooooxooxxxoooooxxxxoxxooooxooxoooxooooooooox", "oooxooxxooxxxxoxxoxxoxxoooxxoxoxooooxooxxooxxoooox", "ooooxxoooxxxxxooxoxxxxxooooxxxoxooxooooooxxxoxoooo", "xxxoooooooxxoxoxooxoooooxooxoxoxxoooxooxxooxooooox", "xooxxoxooxoooxxxooxxxoxoxooxxxoooxxooxxoooxxxxoooo", "ooxoooooxoxxxoxoxooxxooooooxoxxooooxooxoxoxoooxxox", "ooooxooxoxoxoxxooooooooxxoooxxoxoooxoooxxxxxooxoox", "xxxxoxxxoxxxxooooxxoooxxoxoxoxxxooxxoxoooxooooxoxx", "xxoooxxxxxxoooooooooxoxxoooxooxoxoxoxoooxooooxxxxx", "ooooooooxxxoxxxoxooxxxxxoxoooxoooxoooxxoxooxxoooox", "xooooooxxxxoxoxoxoxxxoxooooooxxooxoooxooxoooxxooox", "oooooooxoxxoxoxooooxoxxoxxoxooxooxoxooxxoxxoxoxooo", "xxooxxoxoxxxxooxoxxoooxxooooooxooxooxxxxoxoxoooxoo", "xooxooooxooxxooooooxoooxxoxooooooooxooxooooooooooo", "oooxxxxooxoxooxxooooxoxoooooxxxxxoooxxxxxoxoxoxoox", "oxoxxooxoxooxoooxxxooooxooxooooooxoooooxoooxxxxooo", "xoxxooxxoxxoooxoxoxxoooxooxoooooxooxxxxxxoxoxxoxox", "oxxxxxxooxoxoxxxxoooxoxoxxoxoxxooxooxoxxxxooooxoox", "oxooxxxxxooooooooooxoxxoxoooooooxoooooooxoooxoooxo", "ooxoooxoooxoxoxooxooxxxoxxxxoooxxxoxooxoooxooxxxxo", "ooxooxxxoxxooxxooxoxxxooxoxoxoooooooxxoxooooxooooo", "oxxoooxooxooooooooooxoooxooxooooooxooooxoxxoxoxooo", "xooxxoxxooooxoooxxoooxoxoooxooxoxooooxxooxxoxoooxx", "oxoxxoooxxoooxoxooooooooxxoooxoooxxoxxxxoxxoooooxo", "xoxxxooxxoooooxoxxxoooooooxoxooooxoxoooxxoxxoxxxox", "xoxooxooxoxoxoxooxxooxxxoxoxoooxxoxxoxooooxoxxooxo", "ooxoxooooxoooooooooooxoxxoxoxoxoxoxoooxoooxoxxxxoo", "xoxooooxxxxxxxoooxxooxxoxxooxxooooxxooxoxoxoxooooo", "oxxooooxoxoxooxxooxxooxoooooxooooooxooxxxxooooxxoo", "xoooooooxooxxooooooooooooxooxoxxooooxxxoxooxooooxo", "xoxoxooooooxxoxoxoxxxoxoooxxoxooxoxooxoooxoooxxoxo", "xxxxoooooxxxoxxxxxoooxoxooxxxxxxooxoooxoxooxoxxoxx", "oxoxxxoxxoxxoxooxooxoxxoxoxooxxxoxoxoxooooxxxxooxx", "oooxoxxoxoxoxoxoxoxoooooooxxoxxxxxxoxxxxoooooxoxoo", "xxoxooxooooxxooxoxoxxxxoxxxooooxoxoxxoxxoxxoxoxxxo", "oxxxxoxxxooxxxxoxoxxxoooxooooooxoooxxoxoxooxoxxooo", "ooooxooooooxxxxooxxoooxoooooxxooxxxoxxooxoooxoooxx", "ooooxoxxoxxooxoooxoxxooxooooxooooxoooxxxooxoooxoxx", "ooxxxxxxoxxxooxxxxooxxxoxooooxoxoxooooooxooxoooxxo", "xoxoxxoxoooxoooxooxooooxxoooooxoooxoxoxxoxxooooxox", "ooooooxxooxooxooooooxooooxxxoxxooooxooooooxxxxxoxx", "xoooxooooooxooxxoxxxxooooooooooxxxxxoxxoxxooxooxoo", "oooooooxoxoooooooooxxxoxxooooxoxooxooooxoooooooooo", "ooxoxoooxoxooooooxooxoooxooxxooxxooxoooxooxoxxooxo", "xoooooooooxxoooxoooooxoooooxooxooxooxooxoxxxxooxox", "ooxoooooxxoxoxooxxoooxxxoooxoooxxoooooxxxxoxxoooox", "ooxoxxoxxooxxooxxoxooxoxxxooxoooxoxooooxxooxoxoxxo", "ooooxxooooxoxooooxoxoxoxooooxxoooxooxoooooxxxooooo", "oxooooxooooxoxooooxoooxxoooxoxoxooooxxoooxxoxoxxxo", "xxooooooxxooxxooxoxxxooooxxooxoooxoxxxxoxoxxxooooo" }, fallingsand.simulate(board));
    }

    @Test
    public void case38() {
        String[] board = { "o", "o", "o", "o", ".", ".", ".", "." };
        assertArrayEquals(new String[] { ".", ".", ".", ".", "o", "o", "o", "o" }, fallingsand.simulate(board));
    }

    @Test
    public void case39() {
        String[] board = { ".ox.", "o.oo", "oxox", "..xx" };
        assertArrayEquals(new String[] { "..x.", ".ooo", "oxox", "o.xx" }, fallingsand.simulate(board));
    }

    @Test
    public void case40() {
        String[] board = { "ooooo", "..x..", "....x", "....o", "....o" };
        assertArrayEquals(new String[] { "..o..", "..x.o", "....x", "....o", "oo.oo" }, fallingsand.simulate(board));
    }

    @Test
    public void case41() {
        String[] board = { "o", "o", ".", "." };
        assertArrayEquals(new String[] { ".", ".", "o", "o" }, fallingsand.simulate(board));
    }

    @Test
    public void case42() {
        String[] board = { "o", "o", ".", "x", "o", "o", "." };
        assertArrayEquals(new String[] { ".", "o", "o", "x", ".", "o", "o" }, fallingsand.simulate(board));
    }

    @Test
    public void case43() {
        String[] board = { ".o.o.o", "o.o.o." };
        assertArrayEquals(new String[] { "......", "oooooo" }, fallingsand.simulate(board));
    }

    @Test
    public void case44() {
        String[] board = { "o", "o", ".", "x", "o", "o", ".", "x", "o", "o", "o", ".", "." };
        assertArrayEquals(new String[] { ".", "o", "o", "x", ".", "o", "o", "x", ".", ".", "o", "o", "o" }, fallingsand.simulate(board));
    }

    @Test
    public void case45() {
        String[] board = { "oooooooooxx", ".....x..o.o" };
        assertArrayEquals(new String[] { ".....o..oxx", "oooooxooo.o" }, fallingsand.simulate(board));
    }

    @Test
    public void case46() {
        String[] board = { "ooo", "...", "ooo", "...", "ooo", "...", "xxx", "ooo", "...", "ooo", "..." };
        assertArrayEquals(new String[] { "...", "...", "...", "ooo", "ooo", "ooo", "xxx", "...", "...", "ooo", "ooo" }, fallingsand.simulate(board));
    }

    @Test
    public void case47() {
        String[] board = { "oxxxxooo", "xooooxxx", "..xx.ooo", "oooox.o.", "..x....." };
        assertArrayEquals(new String[] { "oxxxxooo", "x.oo.xxx", "..xxo...", ".oo.x.o.", "ooxo.ooo" }, fallingsand.simulate(board));
    }

    @Test
    public void case48() {
        String[] board = { "o", ".", "o", ".", "o", ".", "." };
        assertArrayEquals(new String[] { ".", ".", ".", ".", "o", "o", "o" }, fallingsand.simulate(board));
    }

    @Test
    public void case49() {
        String[] board = { "o", ".", "o", ".", ".", "." };
        assertArrayEquals(new String[] { ".", ".", ".", ".", "o", "o" }, fallingsand.simulate(board));
    }

    @Test
    public void case50() {
        String[] board = { "o", "o", "." };
        assertArrayEquals(new String[] { ".", "o", "o" }, fallingsand.simulate(board));
    }

}
