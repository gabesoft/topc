package topc.test.easy;

import junit.framework.*;
import org.junit.Test;
import static org.junit.Assert.*;
import topc.easy.*;

public class CountryGroupTest {
    CountryGroup countrygroup = new CountryGroup();

    @Test
    public void case1() {
        int[] a = { 2, 2, 3, 3, 3 };
        assertEquals(2, countrygroup.solve(a));
    }

    @Test
    public void case2() {
        int[] a = { 1, 1, 1, 1, 1 };
        assertEquals(5, countrygroup.solve(a));
    }

    @Test
    public void case3() {
        int[] a = { 3, 3 };
        assertEquals(-1, countrygroup.solve(a));
    }

    @Test
    public void case4() {
        int[] a = { 4, 4, 4, 4, 1, 1, 2, 2, 3, 3, 3 };
        assertEquals(5, countrygroup.solve(a));
    }

    @Test
    public void case5() {
        int[] a = { 2, 1, 2, 2, 1, 2 };
        assertEquals(-1, countrygroup.solve(a));
    }

    @Test
    public void case6() {
        int[] a = { 100 };
        assertEquals(-1, countrygroup.solve(a));
    }

    @Test
    public void case7() {
        int[] a = { 1 };
        assertEquals(1, countrygroup.solve(a));
    }

    @Test
    public void case8() {
        int[] a = { 2 };
        assertEquals(-1, countrygroup.solve(a));
    }

    @Test
    public void case9() {
        int[] a = { 2, 2, 2, 2, 4, 4, 4, 4 };
        assertEquals(3, countrygroup.solve(a));
    }

    @Test
    public void case10() {
        int[] a = { 5, 4, 3, 2, 1 };
        assertEquals(-1, countrygroup.solve(a));
    }

    @Test
    public void case11() {
        int[] a = { 1, 2, 2, 1 };
        assertEquals(3, countrygroup.solve(a));
    }

    @Test
    public void case12() {
        int[] a = { 3, 1, 3, 3 };
        assertEquals(-1, countrygroup.solve(a));
    }

    @Test
    public void case13() {
        int[] a = { 7, 7, 7, 7, 7, 7, 7, 7 };
        assertEquals(-1, countrygroup.solve(a));
    }

    @Test
    public void case14() {
        int[] a = { 1, 2, 2, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 1, 1, 3, 3, 3, 1, 1, 1, 2, 2, 3, 3, 3, 1, 1, 1, 1, 1 };
        assertEquals(25, countrygroup.solve(a));
    }

    @Test
    public void case15() {
        int[] a = { 3, 2, 2 };
        assertEquals(-1, countrygroup.solve(a));
    }

    @Test
    public void case16() {
        int[] a = { 1, 2, 3, 4, 5 };
        assertEquals(-1, countrygroup.solve(a));
    }

    @Test
    public void case17() {
        int[] a = { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
        assertEquals(100, countrygroup.solve(a));
    }

    @Test
    public void case18() {
        int[] a = { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 };
        assertEquals(10, countrygroup.solve(a));
    }

    @Test
    public void case19() {
        int[] a = { 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99 };
        assertEquals(-1, countrygroup.solve(a));
    }

    @Test
    public void case20() {
        int[] a = { 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51 };
        assertEquals(2, countrygroup.solve(a));
    }

    @Test
    public void case21() {
        int[] a = { 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 2, 2, 1, 4, 4, 4, 4, 4, 4, 4, 4, 1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 1, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 1, 3, 3, 3, 2, 2, 5, 5, 5, 5, 5, 4, 4, 4, 4, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 2, 2, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 3, 2, 2, 3, 3, 3, 4, 4, 4, 4 };
        assertEquals(31, countrygroup.solve(a));
    }

    @Test
    public void case22() {
        int[] a = { 5, 5, 5, 5, 5, 1, 1, 2, 2, 1, 2, 2, 1, 1, 1, 2, 2, 5, 5, 5, 5, 5, 4, 4, 4, 4, 5, 5, 5, 5, 5, 1, 5, 5, 5, 5, 5, 1, 5, 5, 5, 5, 5, 2, 2, 4, 4, 4, 4, 5, 5, 5, 5, 5, 4, 4, 4, 4, 1, 3, 3, 3, 1, 4, 4, 4, 4, 1, 1, 1, 5, 5, 5, 5, 5, 3, 3, 3, 2, 2, 1, 5, 5, 5, 5, 5, 2, 2, 5, 5, 5, 5, 5, 3, 3, 3, 1 };
        assertEquals(37, countrygroup.solve(a));
    }

    @Test
    public void case23() {
        int[] a = { 2, 2, 5, 5, 5, 5, 5, 2, 2, 3, 3, 3, 1, 5, 5, 5, 5, 5, 1, 2, 2, 2, 2, 3, 3, 3, 2, 2, 3, 3, 3, 5, 5, 5, 5, 5, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 1, 3, 3, 3, 5, 5, 5, 5, 5, 4, 4, 4, 4, 3, 3, 3 };
        assertEquals(32, countrygroup.solve(a));
    }

    @Test
    public void case24() {
        int[] a = { 1, 5, 5, 5, 5, 5, 1, 3, 3, 3, 5, 5, 5, 5, 5, 2, 2, 5, 5, 5, 5, 5, 2, 2, 1, 1, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 4, 4, 4, 4, 3, 3, 3, 2, 2, 2, 2, 4, 4, 4, 4, 1, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 4, 4, 4, 4, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5 };
        assertEquals(31, countrygroup.solve(a));
    }

    @Test
    public void case25() {
        int[] a = { 3, 3, 3, 4, 4, 4, 4, 1, 2, 2, 1, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 1, 1, 2, 2, 5, 5, 5, 5, 5, 4, 4, 4, 4, 1, 1, 5, 5, 5, 5, 5, 1, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 4, 4, 4, 4, 2, 2, 3, 3, 3, 2, 2, 4, 4, 4, 4, 2, 2, 2, 2, 5, 5, 5, 5, 5, 2, 2, 1, 2, 2, 3, 3, 3, 4, 4, 4, 4 };
        assertEquals(36, countrygroup.solve(a));
    }

    @Test
    public void case26() {
        int[] a = { 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 3, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3, 5, 5, 5, 5, 5, 4, 4, 4, 4, 1, 2, 2, 1, 4, 4, 4, 4, 2, 2, 2, 2, 4, 4, 4, 4, 1, 5, 5, 5, 5, 5, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 5, 5, 5, 5, 5, 2, 2, 2, 2, 1, 1, 4, 4, 4, 4, 3, 3, 3, 4, 4, 4, 4, 2, 2, 1, 2, 2 };
        assertEquals(40, countrygroup.solve(a));
    }

    @Test
    public void case27() {
        int[] a = { 2, 2, 5, 5, 5, 5, 5, 2, 2, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 5, 5, 5, 5, 5, 4, 4, 4, 4, 5, 5, 5, 5, 5, 4, 4, 4, 4, 1, 4, 4, 4, 4, 3, 3, 3, 1, 3, 3, 3, 2, 2, 3, 3, 3, 4, 4, 4, 4, 2, 2, 2, 2, 1, 2, 2, 5, 5, 5, 5, 5, 2, 2, 1, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 3, 3, 3, 2, 2, 4, 4, 4, 4, 2, 2, 1 };
        assertEquals(33, countrygroup.solve(a));
    }

    @Test
    public void case28() {
        int[] a = { 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 3, 3, 3, 1, 2, 2, 5, 5, 5, 5, 5, 1, 5, 5, 5, 5, 5, 3, 3, 3, 4, 4, 4, 4, 1, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 3, 3, 3, 4, 4, 4, 4, 2, 2, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 5, 5, 5, 5, 5, 3, 3, 3, 2, 2 };
        assertEquals(28, countrygroup.solve(a));
    }

    @Test
    public void case29() {
        int[] a = { 3, 3, 3, 2, 2, 2, 2, 1, 5, 5, 5, 5, 5, 1, 1, 1, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 1, 3, 3, 3, 1, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 1, 1, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 4, 4, 4, 4, 1, 3, 3, 3, 5, 5, 5, 5, 5, 2, 2, 5, 5, 5, 5, 5 };
        assertEquals(33, countrygroup.solve(a));
    }

    @Test
    public void case30() {
        int[] a = { 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 3, 3, 3, 5, 5, 5, 5, 5, 1, 3, 3, 3, 5, 5, 5, 5, 5, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 3, 3, 3, 5, 5, 5, 5, 5, 4, 4, 4, 4, 3, 3, 3, 2, 2, 5, 5, 5, 5, 5, 4, 4, 4, 4, 1, 1, 1, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 5, 5, 5, 5, 5, 2, 2, 1, 5, 5, 5, 5, 5 };
        assertEquals(30, countrygroup.solve(a));
    }

    @Test
    public void case31() {
        int[] a = { 2, 2, 3, 3, 3, 2, 2, 3, 3, 3, 2, 2, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 3, 3, 3, 4, 4, 4, 4, 2, 2, 4, 4, 4, 4, 2, 2, 1, 3, 3, 3, 3, 3, 3, 1, 3, 3, 3, 1, 3, 3, 3, 3, 3, 3, 1, 4, 4, 4, 4, 2, 2, 2, 2, 5, 5, 5, 5, 5, 1, 2, 2, 2, 2, 4, 4, 4, 4, 2, 2, 4, 4, 4, 4 };
        assertEquals(35, countrygroup.solve(a));
    }

    @Test
    public void case32() {
        int[] a = { 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 1, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 1, 4, 4, 4, 4, 5, 5, 5, 5, 5, 3, 3, 3, 2, 2, 4, 4, 4, 4, 2, 2, 5, 5, 5, 5, 5, 1, 1, 2, 2, 4, 4, 4, 4, 5, 5, 5, 5, 5, 1, 1, 1, 4, 4, 4, 4, 2, 2, 4, 4, 4, 4, 2, 2, 4, 4, 4, 4, 2, 2, 3, 3, 3, 2, 2, 3, 3, 3, 1, 3, 3, 3 };
        assertEquals(34, countrygroup.solve(a));
    }

    @Test
    public void case33() {
        int[] a = { 3, 3, 3, 5, 5, 5, 5, 5, 1, 4, 4, 4, 4, 1, 5, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 5, 5, 5, 5, 5, 4, 4, 4, 4, 5, 5, 5, 5, 5, 1, 2, 2, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 4, 4, 4, 4, 1, 2, 2, 1, 3, 3, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 2, 2, 1, 1, 4, 4, 4, 4, 3, 3, 3, 4, 4, 4, 4 };
        assertEquals(35, countrygroup.solve(a));
    }

    @Test
    public void case34() {
        int[] a = { 3, 3, 3, 3, 3, 3, 1, 2, 2, 4, 4, 4, 4, 3, 3, 3, 5, 5, 5, 5, 5, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 5, 5, 5, 5, 5, 3, 3, 3, 5, 5, 5, 5, 5, 2, 2, 1, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 5, 5, 5, 5, 5, 3, 3, 3, 4, 4, 4, 4, 1, 1, 2, 2, 1, 1, 5, 5, 5, 5, 5, 1, 1 };
        assertEquals(34, countrygroup.solve(a));
    }

    @Test
    public void case35() {
        int[] a = { 5, 5, 5, 5, 5, 4, 4, 4, 4, 5, 5, 5, 5, 5, 2, 2, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 5, 5, 5, 5, 5, 3, 3, 3, 2, 2, 1, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 3, 3, 3, 5, 5, 5, 5, 5, 1, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 5, 5, 5, 5, 5, 4, 4, 4, 4, 1, 1, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 1 };
        assertEquals(29, countrygroup.solve(a));
    }

    @Test
    public void case36() {
        int[] a = { 2, 2, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 5, 5, 5, 5, 5, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 2, 2, 5, 5, 5, 5, 5, 4, 4, 4, 4, 5, 5, 5, 5, 5, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4 };
        assertEquals(31, countrygroup.solve(a));
    }

    @Test
    public void case37() {
        int[] a = { 2, 2, 2, 2, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 1, 4, 4, 4, 4, 5, 5, 5, 5, 5, 1, 1, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 5, 5, 5, 5, 5, 4, 4, 4, 4, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5 };
        assertEquals(30, countrygroup.solve(a));
    }

    @Test
    public void case38() {
        int[] a = { 5, 5, 5, 5, 5, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 3, 3, 3, 1, 3, 3, 3, 2, 2, 1, 5, 5, 5, 5, 5, 2, 2, 3, 3, 3, 2, 2, 2, 2, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 3, 3, 3, 5, 5, 5, 5, 5, 1, 2, 2, 1, 5, 5, 5, 5, 5, 2, 2, 1, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1 };
        assertEquals(32, countrygroup.solve(a));
    }

    @Test
    public void case39() {
        int[] a = { 4, 4, 4, 4, 2, 2, 1, 4, 4, 4, 4, 1, 1, 1, 1, 2, 2, 1, 4, 4, 4, 4, 1, 4, 4, 4, 4, 2, 2, 5, 5, 5, 5, 5, 1, 2, 2, 2, 2, 5, 5, 5, 5, 5, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 1, 3, 3, 3, 5, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 1, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4 };
        assertEquals(37, countrygroup.solve(a));
    }

    @Test
    public void case40() {
        int[] a = { 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 1, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 1, 4, 4, 4, 4, 1, 3, 3, 3, 1, 2, 2, 4, 4, 4, 4, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 1, 3, 3, 3, 1, 1, 1, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 1, 3, 3, 3, 2, 2 };
        assertEquals(37, countrygroup.solve(a));
    }

    @Test
    public void case41() {
        int[] a = { 5, 5, 5, 5, 5, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 6, 6, 6, 6, 6, 6, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16 };
        assertEquals(7, countrygroup.solve(a));
    }

    @Test
    public void case42() {
        int[] a = { 3, 3, 3, 1, 9, 9, 9, 9, 9, 9, 9, 9, 9, 1, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 7, 7, 7, 7, 7, 7, 7, 1, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 2, 2 };
        assertEquals(12, countrygroup.solve(a));
    }

    @Test
    public void case43() {
        int[] a = { 1, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 1, 5, 5, 5, 5, 5, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 2, 2, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 6, 6, 6, 6, 6, 6, 1 };
        assertEquals(12, countrygroup.solve(a));
    }

    @Test
    public void case44() {
        int[] a = { 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 2, 2, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 1, 5, 5, 5, 5, 5, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31 };
        assertEquals(7, countrygroup.solve(a));
    }

    @Test
    public void case45() {
        int[] a = { 7, 7, 7, 7, 7, 7, 7, 5, 5, 5, 5, 5, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 1, 1, 7, 7, 7, 7, 7, 7, 7, 3, 3, 3, 1, 7, 7, 7, 7, 7, 7, 7, 5, 5, 5, 5, 5, 2, 2, 8, 8, 8, 8, 8, 8, 8, 8, 5, 5, 5, 5, 5 };
        assertEquals(13, countrygroup.solve(a));
    }

    @Test
    public void case46() {
        int[] a = { 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 5, 5, 5, 5, 5, 3, 3, 3, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 7, 7, 7, 7, 7, 2, 2 };
        assertEquals(6, countrygroup.solve(a));
    }

    @Test
    public void case47() {
        int[] a = { 2, 2, 9, 9, 9, 9, 9, 9, 9, 9, 9, 4, 4, 4, 4, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 2, 2, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22 };
        assertEquals(8, countrygroup.solve(a));
    }

    @Test
    public void case48() {
        int[] a = { 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 2, 2, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 8, 8, 8, 8, 8, 8, 8, 8 };
        assertEquals(6, countrygroup.solve(a));
    }

    @Test
    public void case49() {
        int[] a = { 4, 4, 4, 4, 1, 1, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 3, 3, 3, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 2, 2, 2, 2 };
        assertEquals(11, countrygroup.solve(a));
    }

    @Test
    public void case50() {
        int[] a = { 9, 9, 9, 9, 9, 9, 9, 9, 9, 1, 2, 2, 1, 2, 2, 2, 2, 4, 4, 4, 4, 2, 2, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 1, 1, 5, 5, 5, 5, 5, 1, 5, 5, 5, 5, 5, 1, 1 };
        assertEquals(17, countrygroup.solve(a));
    }

    @Test
    public void case51() {
        int[] a = { 4, 4, 4, 4, 4, 4, 4, 4, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 3, 3, 3, 1, 8, 8, 8, 8, 8, 8, 8, 8, 4, 4, 4, 4, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 5, 5, 5, 5, 5, 1 };
        assertEquals(10, countrygroup.solve(a));
    }

    @Test
    public void case52() {
        int[] a = { 2, 2, 5, 5, 5, 5, 5, 2, 2, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 6, 6, 6, 6, 6, 6, 4, 4, 4, 4, 2, 2, 5, 5, 5, 5, 5, 2, 2, 4, 4, 4, 4, 2, 2, 1, 3, 3, 3, 3, 3, 3, 1, 3, 3, 3, 4, 4, 4, 4 };
        assertEquals(18, countrygroup.solve(a));
    }

    @Test
    public void case53() {
        int[] a = { 3, 3, 3, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 9, 9, 9, 9, 9, 9, 9, 9, 9, 1, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 2, 2, 7, 7, 7, 7, 7, 7, 7, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 8, 8, 8, 8, 6, 6, 6, 6, 6, 6, 4, 4, 4, 4, 3, 3, 3 };
        assertEquals(15, countrygroup.solve(a));
    }

    @Test
    public void case54() {
        int[] a = { 1, 8, 8, 8, 8, 8, 8, 8, 8, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 3, 3, 3, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 5, 5, 5, 5, 5, 7, 7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 1, 5, 5, 5, 5, 5, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15 };
        assertEquals(13, countrygroup.solve(a));
    }

    @Test
    public void case55() {
        int[] a = { 3, 3, 3, 1, 2, 2, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 3, 3, 3, 5, 5, 5, 5, 5, 1, 1, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 2, 2, 4, 4, 4, 4, 1 };
        assertEquals(14, countrygroup.solve(a));
    }

    @Test
    public void case56() {
        int[] a = { 5, 5, 5, 5, 5, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 2, 2, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 5, 5, 5, 5, 5, 2, 2, 2, 2, 3, 3, 3, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13 };
        assertEquals(9, countrygroup.solve(a));
    }

    @Test
    public void case57() {
        int[] a = { 3, 3, 3, 3, 3, 3, 1, 1, 1, 4, 4, 4, 4, 1, 2, 2, 1, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 1, 2, 2, 5, 5, 5, 5, 5, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 1, 2, 2, 2, 2 };
        assertEquals(18, countrygroup.solve(a));
    }

    @Test
    public void case58() {
        int[] a = { 1, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 5, 5, 5, 5, 5, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 7, 7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 2, 1, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 3, 3, 3, 5, 5, 5, 5, 5 };
        assertEquals(-1, countrygroup.solve(a));
    }

    @Test
    public void case59() {
        int[] a = { 8, 8, 8, 8, 8, 8, 8, 8, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 2, 2, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 4, 4, 4, 4, 7, 7, 7, 7, 7, 7, 7, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13 };
        assertEquals(8, countrygroup.solve(a));
    }

    @Test
    public void case60() {
        int[] a = { 3, 3, 3, 9, 9, 9, 9, 9, 9, 9, 9, 9, 1, 2, 2, 4, 4, 4, 4, 2, 2, 6, 6, 6, 6, 6, 6, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 4, 4, 4, 4, 5, 5, 5, 5, 5, 1, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 7, 7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 5, 5, 5, 5, 5, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 2, 2 };
        assertEquals(20, countrygroup.solve(a));
    }

    @Test
    public void case61() {
        int[] a = { 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 };
        assertEquals(-1, countrygroup.solve(a));
    }

    @Test
    public void case62() {
        int[] a = {};
        assertEquals(1, countrygroup.solve(a));
    }

    @Test
    public void case63() {
        int[] a = { 4, 4, 4, 4, 1, 1, 2, 2, 3, 3, 3 };
        assertEquals(5, countrygroup.solve(a));
    }

    @Test
    public void case64() {
        int[] a = { 2, 1 };
        assertEquals(-1, countrygroup.solve(a));
    }

    @Test
    public void case65() {
        int[] a = { 2, 2, 1, 1, 3, 3, 3, 2, 2 };
        assertEquals(5, countrygroup.solve(a));
    }

    @Test
    public void case66() {
        int[] a = { 2, 1, 1 };
        assertEquals(-1, countrygroup.solve(a));
    }

    @Test
    public void case67() {
        int[] a = { 3, 3, 3, 1, 3, 3, 3 };
        assertEquals(3, countrygroup.solve(a));
    }

    @Test
    public void case68() {
        int[] a = { 3, 1, 3 };
        assertEquals(-1, countrygroup.solve(a));
    }

    @Test
    public void case69() {
        int[] a = { 2, 2, 2, 2 };
        assertEquals(2, countrygroup.solve(a));
    }

    @Test
    public void case70() {
        int[] a = { 3, 3 };
        assertEquals(-1, countrygroup.solve(a));
    }

    @Test
    public void case71() {
        int[] a = { 1, 2 };
        assertEquals(-1, countrygroup.solve(a));
    }

    @Test
    public void case72() {
        int[] a = { 1, 2, 2, 2 };
        assertEquals(-1, countrygroup.solve(a));
    }

    @Test
    public void case73() {
        int[] a = { 3, 3, 3, 3, 3, 3 };
        assertEquals(2, countrygroup.solve(a));
    }

    @Test
    public void case74() {
        int[] a = { 2, 2, 2 };
        assertEquals(-1, countrygroup.solve(a));
    }

    @Test
    public void case75() {
        int[] a = { 2 };
        assertEquals(-1, countrygroup.solve(a));
    }

    @Test
    public void case76() {
        int[] a = { 2, 2, 3, 3, 3 };
        assertEquals(2, countrygroup.solve(a));
    }

    @Test
    public void case77() {
        int[] a = { 4, 3, 4, 4 };
        assertEquals(-1, countrygroup.solve(a));
    }

    @Test
    public void case78() {
        int[] a = { 2, 1, 2 };
        assertEquals(-1, countrygroup.solve(a));
    }

    @Test
    public void case79() {
        int[] a = { 2, 3 };
        assertEquals(-1, countrygroup.solve(a));
    }

    @Test
    public void case80() {
        int[] a = { 4, 1, 1, 4, 1, 1 };
        assertEquals(-1, countrygroup.solve(a));
    }

    @Test
    public void case81() {
        int[] a = { 4, 4, 4, 3 };
        assertEquals(-1, countrygroup.solve(a));
    }

    @Test
    public void case82() {
        int[] a = { 2, 1, 2, 2, 1, 1 };
        assertEquals(-1, countrygroup.solve(a));
    }

    @Test
    public void case83() {
        int[] a = { 3, 1, 2, 3, 2, 3, 1 };
        assertEquals(-1, countrygroup.solve(a));
    }

    @Test
    public void case84() {
        int[] a = { 2, 2, 1, 2, 2 };
        assertEquals(3, countrygroup.solve(a));
    }

    @Test
    public void case85() {
        int[] a = { 1 };
        assertEquals(1, countrygroup.solve(a));
    }

    @Test
    public void case86() {
        int[] a = { 1, 2, 2, 3, 2, 3, 3, 2 };
        assertEquals(-1, countrygroup.solve(a));
    }

    @Test
    public void case87() {
        int[] a = { 1, 2, 2, 1 };
        assertEquals(3, countrygroup.solve(a));
    }

    @Test
    public void case88() {
        int[] a = { 2, 1, 2, 1 };
        assertEquals(-1, countrygroup.solve(a));
    }

}
