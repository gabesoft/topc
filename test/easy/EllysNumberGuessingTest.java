package topc.test.easy;

import junit.framework.*;
import org.junit.Test;
import static org.junit.Assert.*;
import topc.easy.*;

public class EllysNumberGuessingTest {
  EllysNumberGuessing ellysnumberguessing = new EllysNumberGuessing();

  @Test
  public void case1() {
    int[] guesses = { 600, 594 };
    int[] answers = { 6, 12 };
    assertEquals(606, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case2() {
    int[] guesses = { 100, 50, 34, 40 };
    int[] answers = { 58, 8, 8, 2 };
    assertEquals(42, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case3() {
    int[] guesses = { 500000, 600000, 700000 };
    int[] answers = { 120013, 220013, 79987 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case4() {
    int[] guesses = { 500000000 };
    int[] answers = { 133742666 };
    assertEquals(-1, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case5() {
    int[] guesses = { 76938260, 523164588, 14196746, 296286419, 535893832, 41243148, 364561227, 270003278, 472017422, 367932361, 395758413, 301278456, 186276934, 316343129, 336557549, 52536121, 98343562, 356769915, 89249181, 335191879 };
    int[] answers = { 466274085, 20047757, 529015599, 246925926, 7318513, 501969197, 178651118, 273209067, 71194923, 175279984, 147453932, 241933889, 356935411, 226869216, 206654796, 490676224, 444868783, 186442430, 453963164, 208020466 };
    assertEquals(543212345, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case6() {
    int[] guesses = { 42 };
    int[] answers = { 42 };
    assertEquals(84, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case7() {
    int[] guesses = { 999900000 };
    int[] answers = { 100001 };
    assertEquals(999799999, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case8() {
    int[] guesses = { 5000 };
    int[] answers = { 400 };
    assertEquals(-1, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case9() {
    int[] guesses = { 500000000 };
    int[] answers = { 600000000 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case10() {
    int[] guesses = { 400, 1 };
    int[] answers = { 1, 398 };
    assertEquals(399, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case11() {
    int[] guesses = { 404, 4 };
    int[] answers = { 200, 200 };
    assertEquals(204, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case12() {
    int[] guesses = { 204, 604 };
    int[] answers = { 200, 200 };
    assertEquals(404, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case13() {
    int[] guesses = { 42, 42, 42, 42, 42 };
    int[] answers = { 13, 13, 13, 13, 13 };
    assertEquals(-1, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case14() {
    int[] guesses = { 13000000, 55000000 };
    int[] answers = { 42000000, 84000000 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case15() {
    int[] guesses = { 999999900, 999999699 };
    int[] answers = { 200, 401 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case16() {
    int[] guesses = { 66240353, 47870518, 238409894, 532118809, 92378085, 380647593, 277211645, 50770326, 278301330, 524334170, 533206556, 287962180, 458537233, 44310482, 522732361, 486929629, 169714822, 130861005, 490168882, 379270900, 198528634, 327046706, 11119308, 317598058, 49512378, 197989924, 454008318, 219536369, 288106830, 22060350, 443992845, 23864600, 311868799, 345138157, 153992619, 431865524, 34416669, 247945129, 344698070, 340824503, 331307956, 336891844, 156181980, 259654558, 381426114 };
    int[] answers = { 54339956, 131586540, 366072441, 483822609, 203350056, 347335562, 516118864, 35403446, 179339889, 475376978, 34141492, 359744795, 339683819, 83199721, 175714738, 42787537, 474900176, 400707293, 467753546, 209933457, 242736933, 33838173, 283049458, 303791734, 443655751, 417646270, 361897390, 197520092, 219326256, 501637242, 511146685, 347958159, 55003851, 362912620, 304851247, 129192326, 325199042, 163474518, 118178232, 447824672, 38264052, 450629022, 45602978, 204485471, 63804893 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case17() {
    int[] guesses = { 168499840, 49490546, 526629815, 50600822, 191186832, 473488282, 521619476, 217674635, 392571917, 243938158, 282121494, 73773019, 407058860, 240474701, 535155506, 188679187, 536238158, 449892703, 259568045, 306523402, 325842849, 502117309, 411281881, 277386029, 122718257, 386966475, 488220183 };
    int[] answers = { 325144048, 60114236, 483547152, 174616284, 164771126, 33186853, 192132018, 108808105, 213729946, 42211892, 122177091, 227012862, 368772108, 276862081, 275855837, 390006680, 105209991, 106463754, 21493469, 25736248, 534823166, 425178828, 58206345, 202568679, 55733238, 8881392, 25320390 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case18() {
    int[] guesses = { 327231321, 485251353, 225838016, 250443149, 203886539, 115179511, 103108613, 266352433, 284030040, 445135082, 495519635, 243555435, 83620985, 270921761, 338426527, 413531531, 5686016, 305258044, 294590373, 387057003, 150454752, 227124472, 110627096, 110897587, 283233268, 349532862, 487358213, 192679186, 381047152, 156047646, 109761605, 151529780, 220935993, 451879648, 398309150 };
    int[] answers = { 214484086, 48976806, 355422370, 298071696, 40893768, 270991947, 520900375, 25149508, 466294959, 495106143, 70921499, 398569848, 398633847, 273582911, 243923365, 316389910, 120528368, 60706732, 226794274, 177048890, 343218322, 29335523, 326097294, 447547060, 185616473, 323947112, 463110583, 89712739, 496745184, 389029449, 483057898, 422018049, 375674776, 180463235, 232431540 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case19() {
    int[] guesses = { 111047846, 517663067, 461066304, 163902986, 415972312, 334999798, 150784368, 466898725, 2715516, 437616712, 501714090, 466214973, 196692883, 354986247, 344166392, 74823158, 291270133, 8682028, 457739629, 418986647, 210153233, 400472389, 458856906, 528795983, 421267030, 496082387, 143344244, 440146230, 82246359, 3539087, 96335985, 292864975 };
    int[] answers = { 163765613, 165355581, 202728250, 220394683, 13335221, 500890777, 228217278, 26609602, 351584840, 386704915, 372124844, 370538859, 220821120, 258183761, 412564763, 154790725, 526410835, 28249551, 7396537, 101344715, 267310233, 113926645, 45554285, 410490311, 363645441, 461329320, 24008925, 103788411, 117002657, 224330879, 176047874, 260340509 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case20() {
    int[] guesses = { 458450245, 36741326, 232515917, 268783548, 56157058, 192738856, 136946125, 427768864, 344048296, 322882897, 70084466, 386791567, 322636969, 508534239, 6497497, 429166431, 108664493, 252115143, 298775348, 42379857, 532276619, 358507493, 324453303, 80760344, 299456768, 23882444, 140350513, 499463712, 415318379, 532110956, 382849919, 439102779, 223315407, 278778912, 475629730, 85223682, 277907672, 237197005, 450237394 };
    int[] answers = { 73026037, 33185798, 244731846, 296329888, 492433662, 450670353, 8627514, 56817979, 173804838, 471247909, 296377186, 251242895, 318242027, 31360748, 522629242, 137747481, 394096709, 493202789, 176200819, 93559986, 352064566, 18803776, 208635490, 347845794, 48516903, 62200342, 497027950, 393482678, 410616953, 421467176, 305106839, 340146925, 443670656, 231210116, 68737346, 178479199, 488081959, 59954011, 455608091 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case21() {
    int[] guesses = { 82517499, 105526177, 233155773, 118250515, 499181581, 385002519, 409597156, 84949369, 33853523, 490274168, 42227351, 55340554, 282686355, 408901386, 300722387, 351771158, 409796130, 469112041, 219740821, 26626963, 157836286, 342886331, 430443217, 220362782, 95279146, 318652850, 209738760, 386875267, 328911605, 96305870, 80460797, 293445905, 241569231, 464793426, 181779025, 277577508, 168202229, 185002282, 130187678, 57511329, 129236854 };
    int[] answers = { 465211099, 252633749, 98622327, 123829480, 525462824, 377019677, 126996120, 334655671, 118852436, 479755480, 55991696, 19330249, 45262619, 338169375, 279765205, 479280200, 321831068, 158385257, 394210545, 106572817, 527882607, 446683224, 444797339, 365088827, 41170881, 429240852, 210321114, 172574163, 31823204, 374798181, 382813674, 38258602, 176986062, 129135487, 529118414, 435058686, 250223710, 51958469, 395664859, 309831409, 177516498 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case22() {
    int[] guesses = { 484150042, 317364612, 106746295, 126210320, 231100269, 131567265, 390740577, 368341133, 438514581, 295455655, 328921028, 94035669, 88283632, 224741272, 379123150, 351646858, 213763328, 331671824, 535305165, 325701953, 476356529, 38171969, 78525939, 306595318, 78122624, 245279115, 352677614, 446765195, 218213842, 10994399, 110514154, 234282772, 136894990, 531274800, 286925963, 7145746, 451197676, 404531211, 362521766, 470166437, 58733652, 204010484 };
    int[] answers = { 487626377, 213023982, 170809026, 321970177, 517091326, 499042020, 67208931, 320850070, 422105706, 494495656, 347863565, 168664958, 505465432, 227016538, 279189748, 224311955, 327348792, 93060033, 390801233, 85462954, 248170366, 411613949, 45593114, 325768377, 398813341, 245440032, 420664292, 387987791, 238158484, 500880023, 298787677, 413859269, 329495744, 203825028, 52973238, 213842863, 351992476, 489232817, 199523034, 43411403, 61816541, 407421342 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case23() {
    int[] guesses = { 115365827, 269280950, 490412541, 48515717, 421970817, 453093423, 310810567, 419920371, 437238066, 500578244, 457964563, 178963614, 439487732, 529692765, 533239908, 184182197, 208065704, 99766441, 300152364, 270149572, 165709148, 317805509, 504469220, 487406899, 167738138, 506951079, 287372365, 354815314, 151350516, 411629113, 30456495, 163998352, 268482844, 177009487, 9671557, 60447615, 302176516, 103441993, 496170157, 471689944 };
    int[] answers = { 202269828, 282973054, 340461675, 457822883, 191158967, 444473057, 183568429, 396295541, 266667165, 341848756, 204766689, 254120332, 443413384, 82504157, 430639155, 417286473, 304365169, 5676015, 361412677, 458702629, 296112016, 64992491, 192397096, 308242704, 55501993, 28336067, 284158254, 418771125, 323376108, 189186195, 258611148, 327867732, 373833442, 203346374, 148304641, 319534359, 189612200, 255459548, 382974657, 493888056 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case24() {
    int[] guesses = { 468235771, 43075068, 400453291, 486438688, 63773228, 265148524, 317376907, 411633528, 194497898, 194393403, 247723051, 127902278, 86150185, 530386179, 398620281, 469337117, 511525122, 349623808, 519890532, 268577384, 102224120, 528026487, 23467451, 149438282, 226847450, 138469230, 279237532, 359016025, 135708801, 317297933, 213759628, 106992114, 188655417, 67896485, 361965827, 425384024, 29357675 };
    int[] answers = { 44298009, 417222987, 522301602, 368662136, 91369375, 216749000, 54477994, 150809077, 107701446, 150115391, 460965493, 287560142, 113458601, 130271592, 206631828, 334003831, 385241334, 250391859, 267175938, 295234429, 533233995, 27489544, 511347914, 246290785, 239928752, 392263081, 391756209, 236608449, 30792081, 298363542, 100790158, 137792188, 479571397, 95310801, 94235905, 198019230, 376910440 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case25() {
    int[] guesses = { 358747794, 322723700, 214959907, 455670753, 257332150, 208753098, 466258187, 309961892, 170544469, 154696447, 410417907, 360072690, 410552247, 151304180, 190515616, 232435790, 20605888, 428663599, 359162282, 456644571, 314470013, 470598952, 305037726, 100083442, 239697643, 299071929, 498542855, 267261064, 498952964, 415060018, 354050061, 468456818, 271643539, 499946559, 336065742, 414928569, 54765351, 505372468, 140186420, 352046451, 68161453, 152678116 };
    int[] answers = { 448603917, 401175793, 520584681, 278917677, 218549464, 420617593, 325760830, 409663760, 340180356, 193729263, 493609622, 488062730, 427397149, 193375606, 462413073, 457816323, 465434739, 300476845, 28190583, 217051170, 496611859, 104569194, 347812565, 173948259, 9272290, 512884085, 370852884, 462145834, 185694131, 328038117, 15280367, 380035327, 431424153, 235364524, 32824103, 451135433, 132364609, 222960878, 343137626, 37985109, 509450141, 467697736 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case26() {
    int[] guesses = { 353690321, 239638597, 246233452, 76237199, 325045595, 132887074, 199087779, 414185111, 76547239, 63086708, 504415641, 275023586, 340443453, 401094122, 267730661, 229297610, 328781809, 456893255, 229667736, 40066034, 304327222, 520311213, 89682986, 229127887, 216638146, 332328082, 270149046, 282912833, 64837106, 358571282, 465484674, 145199985, 481817455, 531964609, 117504960, 172828423, 316963261, 246505427, 100879877, 194550137, 215464497, 150126767, 102689271, 38709752, 303068034, 355470103, 499101431, 108048076 };
    int[] answers = { 276972694, 231613942, 534337479, 253627923, 7424935, 247397184, 303872086, 243517435, 18447912, 120108252, 226116419, 218750451, 502476351, 338846610, 302540059, 390206564, 450436464, 36341712, 66645563, 17980230, 266367828, 197264330, 10453764, 207036646, 57699424, 106553076, 393613265, 204595751, 334714773, 447178894, 423421233, 493974394, 376716582, 140568301, 531582400, 430074666, 192316642, 397282641, 279091371, 442111794, 217128812, 378882115, 164612860, 434215033, 239994150, 363606540, 238957839, 70958161 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case27() {
    int[] guesses = { 417474838, 351897874, 109182696, 261270695, 242974788, 375707428, 360537347, 396785198, 477440051, 23281623, 310150683, 228060486, 283183861, 501946392, 303842496, 208303207, 17294637, 527835907, 329993806, 441192369, 90129586 };
    int[] answers = { 371993328, 428276964, 47587769, 434207223, 17233320, 1535839, 140752585, 477446012, 114596123, 95559202, 417018774, 459606951, 326622080, 65726963, 312482598, 351019669, 22910012, 419801118, 234105212, 416632262, 57193572 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case28() {
    int[] guesses = { 58375234, 325609878, 238210624, 375267377, 155146569, 380141486, 306392748, 4290930, 305303405, 144285233, 141860025, 167775605, 198142876, 13780778, 240885127, 14300586, 378143913, 153335053, 22660784, 200795958, 532546717, 61065483 };
    int[] answers = { 263635491, 157122903, 465685060, 30875034, 477891657, 10120209, 481601121, 252322047, 415491789, 386734865, 193453476, 514772404, 284870052, 250825743, 385574640, 241133761, 176068135, 416444767, 338541267, 135958239, 306606880, 188558829 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case29() {
    int[] guesses = { 272309639, 394520785, 506000378, 294043259, 195754747, 251047479, 69426683, 322572889, 319378541, 154764186, 321361359, 120817415, 159379313, 155265357, 288817394, 265691681, 306602549, 354917965, 39409699, 366854530, 455461786, 236685771, 524176932, 103642048, 415592021, 356541842, 439456541, 328938484, 182994501, 536400766, 152946165, 169290362, 476190931, 184746238, 129313000, 379577102, 110564417, 422480557, 146661667, 473137402, 317944014 };
    int[] answers = { 147649445, 234699949, 480115455, 188582822, 353239481, 351625515, 467173917, 403880370, 201701745, 53600325, 313423064, 217813339, 314197060, 173507498, 323301113, 516053370, 40670425, 527212114, 53936536, 148852873, 265120415, 427878996, 48074227, 293797773, 174657935, 276878673, 286811697, 149349634, 441467724, 138724516, 341018325, 247988189, 225644317, 294909981, 315159102, 161137308, 486741934, 330066222, 474707519, 430229823, 364375963 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case30() {
    int[] guesses = { 458164969, 58219313, 79300473, 461886499, 301541788, 247200673, 359564801, 152404137, 87597287, 173038308, 111293047, 209268769, 170151077, 44884608, 149877578, 478283355, 502873142, 416154466, 279375477, 198160479, 217920461, 377563146, 389466498, 224644764, 205545843, 461572129 };
    int[] answers = { 485123823, 99096867, 314343961, 60089557, 126533747, 164081738, 396794589, 467787398, 271793571, 226265199, 187614956, 454817210, 151182209, 56942254, 442365935, 413481244, 504814375, 190340445, 331407180, 223991695, 375675190, 6078408, 448099301, 100181947, 424327207, 137615540 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case31() {
    int[] guesses = { 267751959, 248226029, 394646441, 187575927, 364011790, 476356313, 66956605, 386518276, 250485255, 430419588, 180605525, 382111239, 93913631, 167472967, 371022369, 51124156, 292926549, 20689523, 192388164, 215982048, 25671231, 180405527, 69451826, 18523618, 378564597, 438173990, 199318926, 78335347, 451876728, 437363095, 315499721, 107655816, 330784128, 185817015, 495136076, 13322743, 40795062, 422101709, 182748790, 200075204, 223273132, 516335218, 137243659, 2430955, 332648286, 366359220 };
    int[] answers = { 177347127, 28974013, 489379776, 109141345, 429683554, 425747767, 109662467, 335207162, 519319465, 439469839, 408802454, 76238400, 390700749, 515695258, 410730325, 169372074, 473964584, 162021464, 492472906, 511420762, 93038948, 458563096, 162905765, 286897328, 53041255, 165907496, 465134077, 520646519, 27916876, 524888971, 149974512, 499992942, 376129107, 199280115, 511430948, 229555114, 4781638, 162357196, 23770925, 390302893, 346307826, 262175290, 149405744, 429627499, 271274597, 373994529 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case32() {
    int[] guesses = { 6429844, 502087545, 93933454, 352038391, 25616451, 184223196, 34393072, 63054273, 384853160, 535274528, 11023288, 98095342, 359838924, 329425306, 396473451, 22978943, 200213233, 130265903, 2668301, 514462058, 66028312, 217383566, 30044244, 16442474, 193164948, 216711524, 278428044, 223369295, 87538939, 493215762, 235854379, 43115617, 521883412, 56083030, 174534050, 334537106, 523951750, 443279474, 288599638, 457865934 };
    int[] answers = { 504095839, 11027884, 227919770, 520308748, 115101507, 4448743, 402056356, 129392987, 428720523, 502650770, 486368368, 414673903, 479536673, 112200604, 56063529, 97898498, 295322049, 170258708, 224062904, 503918382, 257315628, 247085481, 482121278, 360581656, 271044290, 296396936, 396411068, 126781328, 257149507, 452777570, 51067719, 393117627, 317262893, 456156175, 6686145, 213788318, 154093677, 472486774, 400717966, 255451864 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case33() {
    int[] guesses = { 326186328, 389556713, 441125287, 194189820, 526851973, 222954365, 28069284, 74790742, 465576438, 428233452, 394152382, 243215713, 427105913, 402748535, 182853342, 467500289, 224255443, 418759798, 326745414, 496556032, 93291957, 87606926, 451211895, 110471017, 411529152, 161162772, 457198706, 205168187 };
    int[] answers = { 57896745, 81225398, 382570580, 367819884, 354697280, 166845353, 438316642, 97368952, 394811665, 169956827, 72478130, 393197709, 436684255, 256629541, 130015590, 466210815, 393874027, 193155592, 440394742, 258387145, 38457707, 410628330, 346784898, 319960832, 213488289, 423470813, 457170754, 439706464 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case34() {
    int[] guesses = { 29621485, 355678360, 93239276, 269838945, 204664106, 221164964, 9218007, 316852353, 270812180, 138961640, 323587301, 286350456, 65203784, 163253239, 74094707, 63307773, 209390890, 477711242, 400271525, 308367843, 149298208, 155379799, 79970620, 65768851, 425578101, 6050088, 174384344, 94058972, 174704887, 268865976, 339039357, 261136751, 360755266, 397802181, 407795400, 491580776, 236386588, 56520277, 306398259, 92302591, 88098530, 324583992, 60549997, 310328140, 243655991, 87786228, 179834081 };
    int[] answers = { 183240607, 257286031, 332382039, 485264506, 15213379, 164694642, 368186683, 347010126, 306818609, 413189314, 294659050, 369084595, 349025854, 260631945, 30114919, 421098616, 132076550, 119558002, 416211625, 387705531, 348390107, 77240794, 140266948, 228810409, 465424541, 95190933, 475133148, 371156788, 57602180, 520037160, 467450747, 259318145, 303859329, 113573043, 208460412, 228789718, 470271707, 170051231, 65455747, 37389707, 346503272, 473950252, 301103507, 231043364, 353971026, 406487090, 352050373 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case35() {
    int[] guesses = { 271856460, 405160201, 57544647, 493632520, 252810989, 154642429, 289196409, 505851981, 329001262, 494357384, 348127076, 468264450, 464564718, 474443253, 14389681, 504842354, 497162738, 446231323, 515578738, 216047381, 130859047, 176715750, 212658033, 95328304, 177541816, 360274103, 480303797, 467717300, 247178341, 174490711, 65847691, 58048646, 48174325, 202407504, 256636196, 244567345, 265910692, 487775989, 423268564, 110329375, 56999243, 204765511, 485189089 };
    int[] answers = { 214367009, 413648129, 81637611, 235479219, 391118326, 312825564, 385431131, 476399881, 25913728, 489861856, 399886847, 137178322, 468167449, 516822412, 136508867, 124139698, 12412679, 149403386, 212473679, 124480997, 382019536, 203913298, 218750210, 126463453, 187408470, 55318824, 286556800, 535155886, 407564101, 165187299, 8944147, 197646968, 329066086, 244520202, 499861466, 358684278, 231152141, 382729455, 122005052, 164959653, 519514059, 392152297, 157837518 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case36() {
    int[] guesses = { 320157356, 81920795, 98384056, 221788400, 230730852, 534796834, 387611663, 262225104, 42731289, 395331667, 418838384, 487754396, 259856680, 429558858, 503922829, 177924254, 293652933, 176218385, 461245782, 474834424 };
    int[] answers = { 428522165, 412080135, 190747609, 39819109, 79318593, 155840300, 510536274, 206067266, 106615134, 437384621, 375042919, 522118102, 522012997, 274563707, 488271125, 362905937, 458515463, 522991848, 341611197, 76588767 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case37() {
    int[] guesses = { 322710655, 392048768, 138006003, 503114690, 174321290, 515735595, 10684442, 502079367, 241933409, 163945734, 413216779, 327083408, 353173520, 144008943, 275500151, 264960989, 18716616, 189415121, 289569948, 97941707, 138516356, 368028748, 219255596, 229500442, 58479142, 284844598, 503565972, 263147232, 72658292, 448935061, 112469545, 30832694, 387544607, 75892171, 96453560, 207246921, 501314615, 379446632, 449882499, 403418677, 265836623, 526158868, 338653221, 250682989, 236024192, 91269202, 61934645, 41056054, 202426228 };
    int[] answers = { 367120381, 535610032, 31476819, 291595179, 66826692, 450451028, 466260565, 412645094, 13190875, 472390074, 366975865, 515197706, 54549591, 443579251, 176964457, 93500387, 140498277, 371101077, 92051534, 26227223, 455752061, 34824120, 416633937, 383367354, 280871622, 394927810, 105683125, 261536346, 15276826, 345083430, 251338678, 216501614, 176853872, 2494399, 373673323, 216402562, 254029182, 519063721, 12848096, 82594197, 25848949, 269976848, 146012740, 351806052, 62799129, 37450632, 135650192, 320976584, 455139434 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case38() {
    int[] guesses = { 57231386, 322006400, 146745211, 163790271, 484275596, 139816745, 505456973, 371440390, 474138665, 245976271, 179520348, 409006031, 415792707, 75226381, 264782182, 277615926, 340960261, 499625896, 41804074, 534717619, 344817802, 383065756, 495066752, 292286963, 436570123 };
    int[] answers = { 508972608, 236583036, 524790899, 427086856, 468968288, 378123087, 160173936, 42849051, 9677187, 245849601, 423641354, 220151612, 379913665, 43990978, 482791030, 46784836, 262251496, 522454203, 326585621, 471951742, 358373409, 35861164, 277304417, 68401013, 252241342 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case39() {
    int[] guesses = { 250193071, 252084379, 112654059, 374671308, 20847230, 98070387, 161873960, 423387240, 367526642, 285163010, 3281704, 142831196, 60255422, 332028000, 115653784, 56412831, 148150303, 292724537, 527752169, 298156871, 500725720, 120499930, 501150798, 244850642, 3476477, 219504565, 204274584, 356143472, 255029091, 27719363, 417188835 };
    int[] answers = { 335236263, 372359175, 470380491, 21996165, 49617567, 486700312, 488531126, 367435916, 104734569, 523065926, 134277052, 34824436, 292841467, 213155278, 145646096, 54878484, 523632368, 443571455, 55252164, 264747127, 151372329, 468287798, 94413343, 198304687, 402837796, 499267368, 533313646, 282185683, 297311244, 386088142, 512757258 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case40() {
    int[] guesses = { 83824656, 261185656, 169778055, 18505042, 157694075, 128218150, 132037920, 511036518, 205004736, 250322784, 61574092, 232275686, 83500887, 318115153, 169107149, 408883430, 129931478, 294774665, 146806968, 229142755, 344454253, 418912336, 197529437, 527098451, 23742144, 234737748, 423615799, 313964319, 373980306, 364424925, 56906337, 104524411, 220541401, 487312112, 509293000, 204014083, 12965618, 134963701, 420274380, 394453413, 173189695, 93874276, 170473670 };
    int[] answers = { 143288806, 324036134, 168204090, 488270036, 344972909, 344862626, 454757347, 306314905, 288705017, 5821620, 80217795, 228604790, 285376383, 35879161, 234512893, 379476739, 433701490, 296545489, 159153035, 504585580, 472429724, 255290115, 463124441, 127249213, 307595175, 153006735, 467538574, 466556199, 112601741, 449183192, 310866555, 216648730, 235872516, 381669661, 57787119, 257370054, 493802365, 44921148, 324260247, 115186612, 202189196, 83784164, 125911316 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case41() {
    int[] guesses = { 531199451, 492843305, 227275349, 280648406, 390169433, 266574503, 250963405, 402248311, 106566666, 387129064, 452023925, 288882325, 115860093, 488882814, 160738193, 86236464, 145870299, 231648522, 247991663, 104308167, 156247555, 518608345, 49851362, 128928577, 384507794, 493166508, 496331926, 314567458, 185514188, 341808498, 432642112, 201067775, 22382776, 310087653, 451071927 };
    int[] answers = { 485857349, 447501203, 181933247, 235306304, 344827331, 221232401, 205621303, 356906209, 61224564, 341786962, 406681823, 243540223, 70517991, 443540712, 115396091, 40894362, 100528197, 186306420, 202649561, 58966065, 110905453, 473266243, 4509260, 83586475, 339165692, 447824406, 450989824, 269225356, 140172086, 296466396, 387300010, 155725673, 22959326, 264745551, 405729825 };
    assertEquals(45342102, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case42() {
    int[] guesses = { 192754879, 211091441, 501026087, 413915395, 240093602, 499481410, 173922320, 41507389, 270891456, 310483089, 257009424, 171923598, 506141445, 438346071, 333980580, 174978591, 520908794, 391574155, 259438872, 130727684, 528626137, 258319687, 79445265, 481081681, 428501721, 499879031, 410737516, 343871020, 195205274, 422400483, 412518076, 461325632, 342064204, 378393993 };
    int[] answers = { 150662017, 168998579, 458933225, 371822533, 198000740, 457388548, 131829458, 585473, 228798594, 268390227, 214916562, 129830736, 464048583, 396253209, 291887718, 132885729, 478815932, 349481293, 217346010, 88634822, 486533275, 216226825, 37352403, 438988819, 386408859, 457786169, 368644654, 301778158, 153112412, 380307621, 370425214, 419232770, 299971342, 336301131 };
    assertEquals(42092862, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case43() {
    int[] guesses = { 178734973, 79691503, 471585732, 421494552, 230638413, 80348916, 356710880, 402517115, 130297140, 409881535, 511909758, 115492616, 59454187, 67150768, 11418412, 25417038, 252012483, 125959763, 136221119, 500574718, 184063273, 468674118, 108699121, 102055315, 308918906, 295109181, 310559950, 500519490, 344355252, 533711951, 376765125, 215397310, 490416562, 425559992, 84103260, 336082146, 63928163, 378689538, 326426023, 450711826, 196180763, 68498258, 216509707, 283173355, 349399702, 215436993, 92381841 };
    int[] answers = { 321018379, 420061849, 28167620, 78258800, 269114939, 419404436, 143042472, 97236237, 369456212, 89871817, 12156406, 384260736, 440299165, 432602584, 488334940, 474336314, 247740869, 373793589, 363532233, 821366, 315690079, 31079234, 391054231, 397698037, 190834446, 204644171, 189193402, 766138, 155398100, 33958599, 122988227, 284356042, 9336790, 74193360, 415650092, 163671206, 435825189, 121063814, 173327329, 49041526, 303572589, 431255094, 283243645, 216579997, 150353650, 284316359, 407371511 };
    assertEquals(499753352, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case44() {
    int[] guesses = { 270033207, 26302705, 159569086, 270255696, 488116322, 297068097, 238591375, 402856680, 130527374, 193990309, 218616227, 176523193, 404085673, 213612933, 275478547, 262700250, 9236052, 130828821, 446296903, 61478107, 60049934, 464121070, 264472579, 422488995, 21384232, 11007538, 182611367, 233535786, 89213514, 53081048, 36083008 };
    int[] answers = { 253469385, 497199887, 363933506, 253246896, 35386270, 226434495, 284911217, 120645912, 392975218, 329512283, 304886365, 346979399, 119416919, 309889659, 248024045, 260802342, 514266540, 392673771, 77205689, 462024485, 463452658, 59381522, 259030013, 101013597, 502118360, 512495054, 340891225, 289966806, 434289078, 470421544, 487419584 };
    assertEquals(523502592, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case45() {
    int[] guesses = { 66768726, 102511394, 153624263, 222198409, 267032013, 289838372, 123579940, 414934742, 83270472, 370891701, 388827289, 371442347, 395202565, 42868857, 252390732, 490152668, 477942816, 309514489, 224977781, 44026404, 156207799, 31333885, 158237769, 223078711, 54766853, 263279196, 21919341, 158246709, 385040358, 348506459, 238699468, 172566172, 422148623, 72368132 };
    int[] answers = { 62128738, 26386070, 24726799, 93300945, 138134549, 160940908, 5317524, 286037278, 45626992, 241994237, 259929825, 242544883, 266305101, 86028607, 123493268, 361255204, 349045352, 180617025, 96080317, 84871060, 27310335, 97563579, 29340305, 94181247, 74130611, 134381732, 106978123, 29349245, 256142894, 219608995, 109802004, 43668708, 293251159, 56529332 };
    assertEquals(128897464, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case46() {
    int[] guesses = { 137949238, 252348825, 500619304, 271059424, 310526441, 68243234, 162349425, 192801093, 373520492, 473327902, 321934773, 515696314, 350405041, 528216318, 388171876, 130269258, 377800519, 276250011, 249913203, 384679214, 35735122, 183134913, 137943342, 488504385, 68834326, 226294241, 108550852, 34768773, 112353210, 61188901, 456424879, 314014138, 77408515, 226042380, 291884565, 263504643, 225877106, 322578984, 140692834, 109849831, 307586063, 494795604, 242860045, 423498831, 35814625, 121554159, 97128542, 292092611 };
    int[] answers = { 292315701, 177916114, 70354365, 159205515, 119738498, 362021705, 267915514, 237463846, 56744447, 43062963, 108330166, 85431375, 79859898, 97951379, 42093063, 299995681, 52464420, 154014928, 180351736, 45585725, 394529817, 247130026, 292321597, 58239446, 361430613, 203970698, 321714087, 395496166, 317911729, 369076038, 26159940, 116250801, 352856424, 204222559, 138380374, 166760296, 204387833, 107685955, 289572105, 320415108, 122678876, 64530665, 187404894, 6766108, 394450314, 308710780, 333136397, 138172328 };
    assertEquals(430264939, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case47() {
    int[] guesses = { 307857736, 231965774, 416063775, 298035102, 314031428, 483554547, 457043377, 435924096, 81030702, 392093341, 459197704, 499000794, 209038003, 322099838, 400411586, 285013622, 471939933, 60656257, 314117759, 1609138, 151661437, 527611349, 261750029, 374697728, 19062659, 389649658, 162216949, 226687860, 335632762, 3731105, 273018850, 484737667, 332557960, 182720219, 257693340, 366720643, 488986228 };
    int[] answers = { 108787051, 32895089, 216993090, 98964417, 114960743, 284483862, 257972692, 236853411, 118039983, 193022656, 260127019, 299930109, 9967318, 123029153, 201340901, 85942937, 272869248, 138414428, 115047074, 197461547, 47409248, 328540664, 62679344, 175627043, 180008026, 190578973, 36853736, 27617175, 136562077, 195339580, 73948165, 285666982, 133487275, 16350466, 58622655, 167649958, 289915543 };
    assertEquals(199070685, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case48() {
    int[] guesses = { 108933058, 217413021, 142496549, 262946073, 19688127, 101663730, 398960721, 169255065, 419078393, 52526650, 227898596, 53601946, 259509714, 502669298, 155459541, 511583476, 449477901, 507106757, 323287554, 373814940, 429485129, 5441204, 259568403, 482061363, 516748689, 164716296, 452926784, 6455164, 419032409, 329276028, 220937278, 82951230, 223054461, 245300122 };
    int[] answers = { 161216949, 52736986, 127653458, 7203934, 250461880, 168486277, 128810714, 100894942, 148928386, 217623357, 42251411, 216548061, 10640293, 232519291, 114690466, 241433469, 179327894, 236956750, 53137547, 103664933, 159335122, 264708803, 10581604, 211911356, 246598682, 105433711, 182776777, 263694843, 148882402, 59126021, 49212729, 187198777, 47095546, 24849885 };
    assertEquals(270150007, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case49() {
    int[] guesses = { 102963038, 346661579, 438563337, 422689330, 285681151, 204614657, 218084569, 441400591, 532464531, 446639937, 51827331, 79042276, 230796625, 116693512, 118753696, 251215952, 143554002, 263073043, 455100229, 201624736, 245817565, 111145127, 471226870, 482100885, 112416669, 123779647, 447705366, 261413299, 490658178, 15120519, 494155015, 505195956, 308853340, 531471106, 500033468, 53204777, 520848306, 77016539, 138777867, 312745132, 421604247, 246004990, 410168626, 168700574, 265741357, 351727606, 372679638, 395661161, 167604679, 243201824 };
    int[] answers = { 258608846, 14910305, 76991453, 61117446, 75890733, 156957227, 143487315, 79828707, 170892647, 85068053, 309744553, 282529608, 130775259, 244878372, 242818188, 110355932, 218017882, 98498841, 93528345, 159947148, 115754319, 250426757, 109654986, 120529001, 249155215, 237792237, 86133482, 100158585, 129086294, 346451365, 132583131, 143624072, 52718544, 169899222, 138461584, 308367107, 159276422, 284555345, 222794017, 48826752, 60032363, 115566894, 48596742, 192871310, 95830527, 9844278, 11107754, 34089277, 193967205, 118370060 };
    assertEquals(361571884, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case50() {
    int[] guesses = { 319342897, 132392055, 256853441, 351081332, 401264914, 168972714, 474279365, 77403107, 271247303, 382826418, 447691164, 380232659, 158050625, 413447572, 14032380, 469584965, 272140810, 161855555, 491824434, 88398512, 105120178, 428873722, 468795840, 187362237, 471586049, 275509220, 336363563, 438771506, 311969732, 361253358, 490417537, 232836334, 172549375, 88054133, 354439559, 81749099, 148025708, 191587987, 272423193, 225119420, 112339541, 521159718 };
    int[] answers = { 119231416, 67719426, 56741960, 150969851, 201153433, 31138767, 274167884, 122708374, 71135822, 182714937, 247579683, 180121178, 42060856, 213336091, 186079101, 269473484, 72029329, 38255926, 291712953, 111712969, 94991303, 228762241, 268684359, 12749244, 271474568, 75397739, 136252082, 238660025, 111858251, 161141877, 290306056, 32724853, 27562106, 112057348, 154328078, 118362382, 52085773, 8523494, 72311712, 25007939, 87771940, 321048237 };
    assertEquals(200111481, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case51() {
    int[] guesses = { 268164611, 143844792, 276539948, 333209135, 404030787, 100037846, 470067746, 85230375, 524628350, 307473044, 138629885, 178378918, 529179976, 235379330, 300134681, 263414897, 290680129, 534256165, 481813740, 48351969, 399507934, 316125526, 248072360, 399113475, 282885043, 315441722, 203492647, 250200412, 312384693, 139306144, 320699922, 366713804, 504841325, 160257924, 48715206, 83460269, 342295377, 240595126, 279398756, 450234890, 205288074, 389712780, 527962657 };
    int[] answers = { 176002568, 51682749, 184377905, 241047092, 311868744, 7875803, 377905703, 6931668, 432466307, 215311001, 46467842, 86216875, 437017933, 143217287, 207972638, 171252854, 198518086, 442094122, 389651697, 43810074, 307345891, 223963483, 155910317, 306951432, 190723000, 223279679, 111330604, 158038369, 220222650, 47144101, 228537879, 274551761, 412679282, 68095881, 43446837, 8701774, 250133334, 148433083, 187236713, 358072847, 113126031, 297550737, 435800614 };
    assertEquals(92162043, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case52() {
    int[] guesses = { 526602190, 492731428, 299444729, 403532163, 448917315, 430450581, 86744874, 364625018, 373157167, 245017072, 179836906, 126907723, 187696894, 250855138, 194370242, 465392088, 408196457, 12154907, 73378685, 316629328, 423107320, 210677978, 347889474, 233549412, 79871052, 13399604, 76482152, 389612471, 383277332, 70288341, 230501530, 102395798, 57574743, 121254149, 244158518, 349421430, 138144459, 442098721, 103391803 };
    int[] answers = { 251062943, 217192181, 23905482, 127992916, 173378068, 154911334, 188794373, 89085771, 97617920, 30522175, 95702341, 148631524, 87842353, 24684109, 81169005, 189852841, 132657210, 263384340, 202160562, 41090081, 147568073, 64861269, 72350227, 41989835, 195668195, 262139643, 199057095, 114073224, 107738085, 205250906, 45037717, 173143449, 217964504, 154285098, 31380729, 73882183, 137394788, 166559474, 172147444 };
    assertEquals(275539247, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case53() {
    int[] guesses = { 326357193, 330848486, 310723375, 67400116, 77876999, 136226527, 172568227, 224740258, 295759166, 92614358, 521005815, 166076826, 176576660, 365959305, 149154110, 84063274, 174773909, 405261196, 153663194, 78292455, 228814117, 43572550, 485778469, 264733899, 377347886, 279890398, 123016075, 106259482, 479246150, 479432524, 432061175, 144200940, 102286347, 7986051, 80002744, 340283968 };
    int[] answers = { 317125248, 321616541, 301491430, 58168171, 68645054, 126994582, 163336282, 215508313, 286527221, 83382413, 511773870, 156844881, 167344715, 356727360, 139922165, 74831329, 165541964, 396029251, 144431249, 69060510, 219582172, 34340605, 476546524, 255501954, 368115941, 270658453, 113784130, 97027537, 470014205, 470200579, 422829230, 134968995, 93054402, 1245894, 70770799, 331052023 };
    assertEquals(9231945, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case54() {
    int[] guesses = { 476244546, 211911728, 104767103, 170084896, 184672660, 69295951, 186436076, 361353422, 143902380, 266340805, 152318683, 38391743, 283203962, 362105260, 147677917, 397818995, 265936986, 412880524, 418072773, 279916649, 132618300, 449612190, 421868588, 194582365, 366335935, 326824691, 4950908, 503691686, 212412289, 401112013, 191275088, 385817259, 429717495, 205914531, 400226541, 282151952, 258247696, 519176347, 490970026, 468472563, 480746104, 306645109, 99478401, 395369390 };
    int[] answers = { 352597179, 88264361, 18880264, 46437529, 61025293, 54351416, 62788709, 237706055, 20255013, 142693438, 28671316, 85255624, 159556595, 238457893, 24030550, 274171628, 142289619, 289233157, 294425406, 156269282, 8970933, 325964823, 298221221, 70934998, 242688568, 203177324, 118696459, 380044319, 88764922, 277464646, 67627721, 262169892, 306070128, 82267164, 276579174, 158504585, 134600329, 395528980, 367322659, 344825196, 357098737, 182997742, 24168966, 271722023 };
    assertEquals(123647367, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case55() {
    int[] guesses = { 520250529, 205717754, 154407059, 371668291, 393690083, 215213119, 202996668, 399482729, 336250236, 473294189, 454051707, 434764740, 70915891, 290386926, 387237870, 231682932, 414462267, 411160907, 515713184, 350661899, 316739881, 7005117, 91307408, 1300737, 460034601, 536280464, 30645675, 295571260, 528024061, 391243780, 245559585, 237781839, 256006013, 282732501, 97134448, 120306782, 487659451, 386827237, 152285249, 532579286, 159579553, 180550424, 213302593, 82515809, 198473121, 436261445 };
    int[] answers = { 379744486, 65211711, 13901016, 231162248, 253184040, 74707076, 62490625, 258976686, 195744193, 332788146, 313545664, 294258697, 69590152, 149880883, 246731827, 91176889, 273956224, 270654864, 375207141, 210155856, 176233838, 133500926, 49198635, 139205306, 319528558, 395774421, 109860368, 155065217, 387518018, 250737737, 105053542, 97275796, 115499970, 142226458, 43371595, 20199261, 347153408, 246321194, 11779206, 392073243, 19073510, 40044381, 72796550, 57990234, 57967078, 295755402 };
    assertEquals(140506043, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case56() {
    int[] guesses = { 29673096, 273968754, 140239630, 81687432, 446010332, 314984304, 505457556, 124696642, 453532760, 1938355, 384365060, 108186432, 374170754, 424463135, 336341656, 396851442, 222472062, 362305877, 16475528, 508106653, 317596460, 396207136, 244372793, 86002254, 115479331, 28816792, 196822656, 521587626, 382474665, 67090367, 147273413, 141072039, 488656094, 427632775, 149072371, 4997651, 380932396, 86480409, 223044563, 528880210, 528573006 };
    int[] answers = { 4994754, 239300904, 105571780, 47019582, 411342482, 280316454, 470789706, 90028792, 418864910, 32729495, 349697210, 73518582, 339502904, 389795285, 301673806, 362183592, 187804212, 327638027, 18192322, 473438803, 282928610, 361539286, 209704943, 51334404, 80811481, 5851058, 162154806, 486919776, 347806815, 32422517, 112605563, 106404189, 453988244, 392964925, 114404521, 29670199, 346264546, 51812559, 188376713, 494212360, 493905156 };
    assertEquals(34667850, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case57() {
    int[] guesses = { 167157589, 189116889, 69768937, 88816039, 252377509, 57106499, 378540329, 239253530, 282825518, 406724958, 277148496, 498663093, 532174938, 434974548, 324421531, 324276420, 532893327, 110436785, 342708049, 159425078, 385455797, 229594811, 268993764, 48585700, 168442695, 347855955, 302757425, 464352541, 97780989, 305265629, 311685768 };
    int[] answers = { 315589841, 293630541, 412978493, 393931391, 230369921, 425640931, 104207101, 243493900, 199921912, 76022472, 205598934, 15915663, 49427508, 47772882, 158325899, 158471010, 50145897, 372310645, 140039381, 323322352, 97291633, 253152619, 213753666, 434161730, 314304735, 134891475, 179990005, 18394889, 384966441, 177481801, 171061662 };
    assertEquals(482747430, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case58() {
    int[] guesses = { 45415997, 219847708, 142075863, 364105190, 56475717, 252027014, 320562391, 315200154, 458814756, 354189805, 483728930, 452959120, 286697805, 371984826, 516297219, 328326611, 325417543, 138581776, 43312962, 389016677, 532210715, 499187496, 63425156, 478112009, 504944135, 41007661, 448479727, 369829221, 523427118, 536538747, 380891181, 272273697, 272927566, 492863446, 478048947, 251847993, 165156145, 284140569, 506669339, 449232563, 65076195 };
    int[] answers = { 250516641, 76084930, 153856775, 68172552, 239456921, 43905624, 24629753, 19267516, 162882118, 58257167, 187796292, 157026482, 9234833, 76052188, 220364581, 32393973, 29484905, 157350862, 252619676, 93084039, 236278077, 203254858, 232507482, 182179371, 209011497, 254924977, 152547089, 73896583, 227494480, 240606109, 84958543, 23658941, 23005072, 196930808, 182116309, 44084645, 130776493, 11792069, 210736701, 153299925, 230856443 };
    assertEquals(295932638, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case59() {
    int[] guesses = { 514617973, 426585593, 425186960, 166572805, 205983654, 307195723, 62437719, 188261321, 430687258, 25867028, 286307361, 478807746, 227801222, 130252404, 407929702, 301177262, 346677033, 131982872, 60596747, 156091365, 107350634, 298236101, 181917182, 296187366, 221964722, 367329561, 235777040, 165685895, 505740165, 483340965, 418664002, 95382719, 327167250, 409778331, 177894511, 318077519, 367522092, 441015946, 82839936, 388303084, 524984880, 499358971, 281681434, 367788323, 373332868, 406103225, 157464386, 42571600, 488156904, 264260290 };
    int[] answers = { 457824369, 369791989, 368393356, 109779201, 149190050, 250402119, 5644115, 131467717, 373893654, 30926576, 229513757, 422014142, 171007618, 73458800, 351136098, 244383658, 289883429, 75189268, 3803143, 99297761, 50557030, 241442497, 125123578, 239393762, 165171118, 310535957, 178983436, 108892291, 448946561, 426547361, 361870398, 38589115, 270373646, 352984727, 121100907, 261283915, 310728488, 384222342, 26046332, 331509480, 468191276, 442565367, 224887830, 310994719, 316539264, 349309621, 100670782, 14222004, 431363300, 207466686 };
    assertEquals(56793604, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case60() {
    int[] guesses = { 14622405, 500671601, 162498381, 96450511, 132675032, 499788474, 494296799, 172803537, 187261882, 453753051, 507071060, 285378992, 412281940, 103780630, 246802136, 161596357, 306497642, 301394045, 25977807, 200925819, 158075133, 167019193, 292660278, 93201949, 414457433, 54780345, 128248768, 399945783, 441874414, 21259178, 26479389, 347377055, 288912879, 150696615, 94106319, 104266597, 208845979, 343635254, 418422403, 194424672, 261470286, 318061901, 31206434, 15666620, 531766861, 361476933, 499879976, 45472317 };
    int[] answers = { 169405528, 316643668, 21529552, 87577422, 51352901, 315760541, 310268866, 11224396, 3233949, 269725118, 323043127, 101351059, 228254007, 80247303, 62774203, 22431576, 122469709, 117366112, 158050126, 16897886, 25952800, 17008740, 108632345, 90825984, 230429500, 129247588, 55779165, 215917850, 257846481, 162768755, 157548544, 163349122, 104884946, 33331318, 89921614, 79761336, 24818046, 159607321, 234394470, 10396739, 77442353, 134033968, 152821499, 168361313, 347738928, 177449000, 315852043, 138555616 };
    assertEquals(184027933, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case61() {
    int[] guesses = { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
    int[] answers = { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
    assertEquals(2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case62() {
    int[] guesses = { 999900000 };
    int[] answers = { 100001 };
    assertEquals(999799999, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case63() {
    int[] guesses = { 500000000 };
    int[] answers = { 500000001 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case64() {
    int[] guesses = { 100, 100 };
    int[] answers = { 5, 5 };
    assertEquals(-1, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case65() {
    int[] guesses = { 500000, 600000, 700000 };
    int[] answers = { 120013, 220013, 79987 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case66() {
    int[] guesses = { 1, 1, 1, 1 };
    int[] answers = { 2, 2, 2, 1 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case67() {
    int[] guesses = { 500000000, 5 };
    int[] answers = { 500000001, 10 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case68() {
    int[] guesses = { 4, 4 };
    int[] answers = { 2, 2 };
    assertEquals(-1, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case69() {
    int[] guesses = { 1 };
    int[] answers = { 999999999 };
    assertEquals(1000000000, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case70() {
    int[] guesses = { 2, 2 };
    int[] answers = { 1, 1 };
    assertEquals(-1, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case71() {
    int[] guesses = { 999999999, 999999998 };
    int[] answers = { 1, 2 };
    assertEquals(1000000000, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case72() {
    int[] guesses = { 5 };
    int[] answers = { 6 };
    assertEquals(11, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case73() {
    int[] guesses = { 3, 4 };
    int[] answers = { 3, 4 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case74() {
    int[] guesses = { 10 };
    int[] answers = { 999999999 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case75() {
    int[] guesses = { 999999999 };
    int[] answers = { 999999999 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case76() {
    int[] guesses = { 2 };
    int[] answers = { 999999999 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case77() {
    int[] guesses = { 999999999 };
    int[] answers = { 1 };
    assertEquals(-1, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case78() {
    int[] guesses = { 1000 };
    int[] answers = { 10 };
    assertEquals(-1, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case79() {
    int[] guesses = { 2, 2, 2, 2 };
    int[] answers = { 1, 1, 1, 1 };
    assertEquals(-1, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case80() {
    int[] guesses = { 400, 400, 400 };
    int[] answers = { 12, 12, 12 };
    assertEquals(-1, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case81() {
    int[] guesses = { 5 };
    int[] answers = { 999999999 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case82() {
    int[] guesses = { 500000000 };
    int[] answers = { 600000000 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case83() {
    int[] guesses = { 2, 2, 2 };
    int[] answers = { 1, 1, 1 };
    assertEquals(-1, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case84() {
    int[] guesses = { 18 };
    int[] answers = { 6 };
    assertEquals(-1, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case85() {
    int[] guesses = { 500000000, 500000000 };
    int[] answers = { 133742666, 133742666 };
    assertEquals(-1, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case86() {
    int[] guesses = { 500000000 };
    int[] answers = { 999999999 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case87() {
    int[] guesses = { 1, 2 };
    int[] answers = { 10, 11 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case88() {
    int[] guesses = { 500000001 };
    int[] answers = { 500000001 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case89() {
    int[] guesses = { 15, 15, 15 };
    int[] answers = { 5, 5, 5 };
    assertEquals(-1, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case90() {
    int[] guesses = { 5, 5 };
    int[] answers = { 2, 2 };
    assertEquals(-1, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case91() {
    int[] guesses = { 1 };
    int[] answers = { 5 };
    assertEquals(6, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case92() {
    int[] guesses = { 999999999, 999999999, 999999999 };
    int[] answers = { 999999999, 999999999, 999999999 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case93() {
    int[] guesses = { 10 };
    int[] answers = { 20 };
    assertEquals(30, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case94() {
    int[] guesses = { 999999999 };
    int[] answers = { 999999998 };
    assertEquals(1, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case95() {
    int[] guesses = { 1 };
    int[] answers = { 300 };
    assertEquals(301, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case96() {
    int[] guesses = { 500000001 };
    int[] answers = { 500000000 };
    assertEquals(1, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case97() {
    int[] guesses = { 5, 5 };
    int[] answers = { 3, 3 };
    assertEquals(-1, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case98() {
    int[] guesses = { 5, 5, 4 };
    int[] answers = { 2, 2, 1 };
    assertEquals(3, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case99() {
    int[] guesses = { 1000000000, 1000000000 };
    int[] answers = { 999999999, 999999999 };
    assertEquals(1, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case100() {
    int[] guesses = { 999900000 };
    int[] answers = { 100000 };
    assertEquals(-1, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case101() {
    int[] guesses = { 400000000 };
    int[] answers = { 600000000 };
    assertEquals(1000000000, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case102() {
    int[] guesses = { 300000000 };
    int[] answers = { 800000000 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case103() {
    int[] guesses = { 2, 2 };
    int[] answers = { 7, 1 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case104() {
    int[] guesses = { 999999999, 888888888, 777777777 };
    int[] answers = { 999999998, 888888887, 777777776 };
    assertEquals(1, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case105() {
    int[] guesses = { 700000001 };
    int[] answers = { 700000001 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case106() {
    int[] guesses = { 1000000000, 1000000000 };
    int[] answers = { 1, 1 };
    assertEquals(999999999, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case107() {
    int[] guesses = { 2 };
    int[] answers = { 3 };
    assertEquals(5, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case108() {
    int[] guesses = { 100, 100 };
    int[] answers = { 1, 1 };
    assertEquals(-1, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case109() {
    int[] guesses = { 999999999, 999999999 };
    int[] answers = { 1, 1 };
    assertEquals(-1, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case110() {
    int[] guesses = { 50, 50, 50, 50 };
    int[] answers = { 25, 25, 25, 25 };
    assertEquals(-1, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case111() {
    int[] guesses = { 500000000 };
    int[] answers = { 500000000 };
    assertEquals(1000000000, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case112() {
    int[] guesses = { 600, 594, 606 };
    int[] answers = { 6, 12, 1 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case113() {
    int[] guesses = { 10, 10 };
    int[] answers = { 5, 5 };
    assertEquals(-1, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case114() {
    int[] guesses = { 3, 3 };
    int[] answers = { 2, 2 };
    assertEquals(-1, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case115() {
    int[] guesses = { 600000000 };
    int[] answers = { 600000000 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case116() {
    int[] guesses = { 1 };
    int[] answers = { 1 };
    assertEquals(2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case117() {
    int[] guesses = { 100, 100 };
    int[] answers = { 58, 58 };
    assertEquals(-1, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case118() {
    int[] guesses = { 999999999 };
    int[] answers = { 23 };
    assertEquals(999999976, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case119() {
    int[] guesses = { 1, 2 };
    int[] answers = { 999999999, 1 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case120() {
    int[] guesses = { 3, 3 };
    int[] answers = { 1, 2 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case121() {
    int[] guesses = { 4, 4 };
    int[] answers = { 3, 3 };
    assertEquals(-1, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case122() {
    int[] guesses = { 1000000000, 999999999 };
    int[] answers = { 999999600, 999999599 };
    assertEquals(400, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case123() {
    int[] guesses = { 3, 3 };
    int[] answers = { 1, 1 };
    assertEquals(-1, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case124() {
    int[] guesses = { 7, 3 };
    int[] answers = { 1, 3 };
    assertEquals(6, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case125() {
    int[] guesses = { 888888888 };
    int[] answers = { 888888888 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case126() {
    int[] guesses = { 50000000 };
    int[] answers = { 999999999 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case127() {
    int[] guesses = { 5, 6 };
    int[] answers = { 1, 1 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case128() {
    int[] guesses = { 5 };
    int[] answers = { 7 };
    assertEquals(12, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case129() {
    int[] guesses = { 999999999, 999999999 };
    int[] answers = { 2, 2 };
    assertEquals(999999997, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case130() {
    int[] guesses = { 500000000 };
    int[] answers = { 500000002 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case131() {
    int[] guesses = { 4, 4, 8 };
    int[] answers = { 3, 3, 1 };
    assertEquals(7, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case132() {
    int[] guesses = { 5, 5 };
    int[] answers = { 1, 2 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case133() {
    int[] guesses = { 1, 2, 3, 4, 5, 6 };
    int[] answers = { 9, 8, 7, 7, 5, 4 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case134() {
    int[] guesses = { 1, 1 };
    int[] answers = { 3, 4 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case135() {
    int[] guesses = { 5, 50 };
    int[] answers = { 10, 5 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case136() {
    int[] guesses = { 20, 100 };
    int[] answers = { 5, 5 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case137() {
    int[] guesses = { 42 };
    int[] answers = { 50 };
    assertEquals(92, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case138() {
    int[] guesses = { 4, 10 };
    int[] answers = { 3, 3 };
    assertEquals(7, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case139() {
    int[] guesses = { 999999999, 55 };
    int[] answers = { 2, 2 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case140() {
    int[] guesses = { 42 };
    int[] answers = { 42 };
    assertEquals(84, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case141() {
    int[] guesses = { 10, 10 };
    int[] answers = { 12, 11 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case142() {
    int[] guesses = { 2, 3, 55 };
    int[] answers = { 1, 1, 1 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case143() {
    int[] guesses = { 500000000 };
    int[] answers = { 500000010 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case144() {
    int[] guesses = { 2, 2 };
    int[] answers = { 3, 3 };
    assertEquals(5, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case145() {
    int[] guesses = { 100, 110 };
    int[] answers = { 120, 30 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case146() {
    int[] guesses = { 2 };
    int[] answers = { 4 };
    assertEquals(6, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case147() {
    int[] guesses = { 5, 6, 100 };
    int[] answers = { 3, 4, 80 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case148() {
    int[] guesses = { 555555555 };
    int[] answers = { 999999999 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case149() {
    int[] guesses = { 600, 600 };
    int[] answers = { 6, 6 };
    assertEquals(-1, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case150() {
    int[] guesses = { 2, 1 };
    int[] answers = { 1, 1 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case151() {
    int[] guesses = { 4, 4, 4, 4 };
    int[] answers = { 3, 3, 3, 3 };
    assertEquals(-1, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case152() {
    int[] guesses = { 600000000 };
    int[] answers = { 400000000 };
    assertEquals(-1, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case153() {
    int[] guesses = { 10, 20, 50 };
    int[] answers = { 5, 5, 1 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case154() {
    int[] guesses = { 10, 11 };
    int[] answers = { 999999999, 999999998 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case155() {
    int[] guesses = { 600, 400, 600 };
    int[] answers = { 100, 100, 100 };
    assertEquals(500, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case156() {
    int[] guesses = { 294, 306 };
    int[] answers = { 6, 6 };
    assertEquals(300, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case157() {
    int[] guesses = { 50, 50 };
    int[] answers = { 8, 8 };
    assertEquals(-1, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case158() {
    int[] guesses = { 12, 13 };
    int[] answers = { 7, 2 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case159() {
    int[] guesses = { 5, 5 };
    int[] answers = { 1, 10 };
    assertEquals(-2, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case160() {
    int[] guesses = { 6, 6 };
    int[] answers = { 2, 2 };
    assertEquals(-1, ellysnumberguessing.getNumber(guesses, answers));
  }

  @Test
  public void case161() {
    int[] guesses = { 5, 5 };
    int[] answers = { 1, 1 };
    assertEquals(-1, ellysnumberguessing.getNumber(guesses, answers));
  }

}
