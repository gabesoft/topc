package topc.test.easy;

import junit.framework.*;
import org.junit.Test;
import static org.junit.Assert.*;
import topc.easy.*;

public class SysFailureTest {
  SysFailure sysfailure = new SysFailure();

  @Test
  public void case1() {
    int n = 4;
    String[] state = { "00000", "00000", "11111" };
    assertEquals(3, sysfailure.critical(n, state));
  }

  @Test
  public void case2() {
    int n = 6;
    String[] state = { "01010", "10001", "11011", "10001", "01010" };
    assertEquals(0, sysfailure.critical(n, state));
  }

  @Test
  public void case3() {
    int n = 4;
    String[] state = { "111", "111" };
    assertEquals(0, sysfailure.critical(n, state));
  }

  @Test
  public void case4() {
    int n = 2;
    String[] state = { "101" };
    assertEquals(-1, sysfailure.critical(n, state));
  }

  @Test
  public void case5() {
    int n = 3;
    String[] state = { "111", "100" };
    assertEquals(1, sysfailure.critical(n, state));
  }

  @Test
  public void case6() {
    int n = 1000;
    String[] state = {};
    assertEquals(-1, sysfailure.critical(n, state));
  }

  @Test
  public void case7() {
    int n = 1000;
    String[] state = {};
    assertEquals(0, sysfailure.critical(n, state));
  }

  @Test
  public void case8() {
    int n = 12;
    String[] state = { "110111011101110", "111000100000001", "100000011111111" };
    assertEquals(0, sysfailure.critical(n, state));
  }

  @Test
  public void case9() {
    int n = 13;
    String[] state = { "110111011101110", "111000100000001", "100000011111111" };
    assertEquals(1, sysfailure.critical(n, state));
  }

  @Test
  public void case10() {
    int n = 23;
    String[] state = { "110111011101110", "111000100000001", "100000011111111" };
    assertEquals(15, sysfailure.critical(n, state));
  }

  @Test
  public void case11() {
    int n = 15;
    String[] state = { "110111011101110", "111000100000001", "100000011111111" };
    assertEquals(3, sysfailure.critical(n, state));
  }

  @Test
  public void case12() {
    int n = 16;
    String[] state = { "110111011101110", "111000100000001", "100000011111111" };
    assertEquals(4, sysfailure.critical(n, state));
  }

  @Test
  public void case13() {
    int n = 1;
    String[] state = { "1" };
    assertEquals(1, sysfailure.critical(n, state));
  }

  @Test
  public void case14() {
    int n = 4;
    String[] state = { "1111111" };
    assertEquals(1, sysfailure.critical(n, state));
  }

  @Test
  public void case15() {
    int n = 5;
    String[] state = { "1110", "0111" };
    assertEquals(0, sysfailure.critical(n, state));
  }

  @Test
  public void case16() {
    int n = 598;
    String[] state = { "0000000000000000100", "0100000010000000100", "0000100000000000000", "0000000000000000000", "0000010000000001000", "0010000100001000001", "0001000000000000000", "0001100000000000000", "0000010100010000010", "0000000000100000100", "0000100000000000001", "0000000000000000000", "0010000000000100000", "0000000000100000000", "0001000000000010000", "0000000000000001000", "1000000000000000101", "0000000100000100010", "0001000000000000000", "0000000001000000000", "0010100000000000000", "1001000000000000100", "1010000000100000000", "1100000100100100000", "0000010000000000000", "0100000100000000000", "0001000000000000000", "0100100000000000010", "0000001000000000000", "1001000100000000000", "1000000000000000000", "0010011001000000000", "0000110000000100000", "0000000001000000010", "0000001000000000000", "0100100000100000000", "0100001000000001000", "0000000000000000000", "0000000000000000010" };
    assertEquals(-1, sysfailure.critical(n, state));
  }

  @Test
  public void case17() {
    int n = 72;
    String[] state = { "0100011000001000", "1000001001101000", "0010001000000000", "0100100001000000", "0000010000100010", "1000000000110100", "1110110110000001", "0000000000001000", "0011101000111000", "0011000001000001", "0010011000100000", "0000010001001010", "0100010100010000", "0011100101101100", "1101000000000001", "1110000101110100", "0001010000000011", "0100011000000101", "1111011001100001", "1010001001111001", "0100010000101111", "1111010000000010", "0011110100101101", "0000100100110100", "1110000000010011", "0110001000100100", "1001001010101010", "0000110010101000", "0101000000111001", "0010000100000101", "0100000011101000", "0010110000000100", "0000100110011010", "0101001001100000", "0000011000000000", "0101101010001101", "0000000111000001", "1000001011010000", "1110000101010011", "1000011100100010", "0010000010000001", "0000001000010000", "1000100110010000", "1010011000011101", "1100010110010011", "1001000011001001" };
    assertEquals(-1, sysfailure.critical(n, state));
  }

  @Test
  public void case18() {
    int n = 748;
    String[] state = { "11110111011100101011111", "11101111101110111111101", "11111111111011111100111", "01111111000111111101111", "11010010111111111111111", "11100010100100111111111", "00110001111011111110101", "11111111101110111110111", "11101111111100111011011", "11110110110011111110111", "11111111111111000110011", "01111110111110011111111", "11111111111001110101001", "01101111111111101101110", "01111111011001011111111", "10001110100011111111111", "10011100111111011000010", "10110101111111111111111", "11111011011111011111010", "10110111111101111011111", "11110111111011111111011", "01111111111111011110111", "01011110111011111101111", "11111111111110110110110", "01111111111110111110010", "11011111111111111010111", "11011111111111111111110", "00111111111011011110111", "10101111111110110111101", "11110111111110110111111", "00111111100111111111101", "11110110111111111111111", "01111111110111111111011", "10111011001011111011011", "10101110111111111111011", "11111111110101111101111", "10111111000111110111101", "10111100111100011010111" };
    assertEquals(-1, sysfailure.critical(n, state));
  }

  @Test
  public void case19() {
    int n = 143;
    String[] state = { "1011111011110001001111110", "1000011011010111001000111", "1010111110111110111000000", "1011111001011001101101010", "1110111101010111111001011", "1010010100111100100111111" };
    assertEquals(-1, sysfailure.critical(n, state));
  }

  @Test
  public void case20() {
    int n = 925;
    String[] state = {};
    assertEquals(-1, sysfailure.critical(n, state));
  }

  @Test
  public void case21() {
    int n = 16;
    String[] state = { "1100110000011", "1000001010010" };
    assertEquals(-1, sysfailure.critical(n, state));
  }

  @Test
  public void case22() {
    int n = 5;
    String[] state = { "00", "00", "00", "01", "10", "00", "00", "00", "01", "00", "10", "00", "00", "10", "01", "00", "00", "00", "00", "00", "00", "10", "01", "00", "10", "00", "00", "00", "00", "01", "00", "01", "01", "01", "10", "10", "11", "10", "00", "10", "00", "00", "10", "00", "00", "00", "00", "00", "01", "11" };
    assertEquals(2, sysfailure.critical(n, state));
  }

  @Test
  public void case23() {
    int n = 6;
    String[] state = { "00", "00", "00", "01", "10", "00", "00", "00", "01", "00", "10", "00", "00", "10", "01", "00", "00", "00", "00", "00", "00", "10", "01", "00", "10", "00", "00", "00", "00", "01", "00", "01", "01", "01", "10", "10", "11", "10", "00", "10", "00", "00", "10", "00", "00", "00", "00", "00", "01", "11" };
    assertEquals(3, sysfailure.critical(n, state));
  }

  @Test
  public void case24() {
    int n = 7;
    String[] state = { "00", "00", "00", "01", "10", "00", "00", "00", "01", "00", "10", "00", "00", "10", "01", "00", "00", "00", "00", "00", "00", "10", "01", "00", "10", "00", "00", "00", "00", "01", "00", "01", "01", "01", "10", "10", "11", "10", "00", "10", "00", "00", "10", "00", "00", "00", "00", "00", "01", "11" };
    assertEquals(4, sysfailure.critical(n, state));
  }

  @Test
  public void case25() {
    int n = 8;
    String[] state = { "00", "00", "00", "01", "10", "00", "00", "00", "01", "00", "10", "00", "00", "10", "01", "00", "00", "00", "00", "00", "00", "10", "01", "00", "10", "00", "00", "00", "00", "01", "00", "01", "01", "01", "10", "10", "11", "10", "00", "10", "00", "00", "10", "00", "00", "00", "00", "00", "01", "11" };
    assertEquals(8, sysfailure.critical(n, state));
  }

  @Test
  public void case26() {
    int n = 6;
    String[] state = { "000000110000000000001001000", "001000000000000010000000000", "000000000001000000100000000", "001001000000000000000000000", "001000000000000000001000000", "100000000000000000000001011", "100010000000010000000000000", "000001010000001000000000010", "000010000000000000000000000", "000000000000000000000010000", "100000010100110000000000000", "000001001010000000000000010", "000010010100000000000100000", "000000000100100000010000000", "000000001000000000000000001", "000000000000000000000000000", "000000000100000000001001100", "010000001101000010001000000", "000100000000010000000000000", "000000101101000001001001010", "010000000100000000100000000", "000000000000000001000000000", "000000010000000000000010001", "001000000000000100000001010", "000000000000000100000000001", "000000010100000100000000000", "100000000001000000000101000", "100010001000100000000010000", "000000000000000000000000000", "000000000000000010000000000", "000000000000100000000000000", "100000000000000000000000100", "000000100000101000010100000", "000000000000000101000000000", "000000000100000000000000000", "000000000000100000100000010", "000000000000000000000000000", "001000000000000000000010001", "000010000000000000000000000", "000010000101000000000000000", "010000000000000000000000100", "000000000000000010000000000", "000000110000001100000000000", "000000001000000000000000010" };
    assertEquals(2, sysfailure.critical(n, state));
  }

  @Test
  public void case27() {
    int n = 7;
    String[] state = { "000000110000000000001001000", "001000000000000010000000000", "000000000001000000100000000", "001001000000000000000000000", "001000000000000000001000000", "100000000000000000000001011", "100010000000010000000000000", "000001010000001000000000010", "000010000000000000000000000", "000000000000000000000010000", "100000010100110000000000000", "000001001010000000000000010", "000010010100000000000100000", "000000000100100000010000000", "000000001000000000000000001", "000000000000000000000000000", "000000000100000000001001100", "010000001101000010001000000", "000100000000010000000000000", "000000101101000001001001010", "010000000100000000100000000", "000000000000000001000000000", "000000010000000000000010001", "001000000000000100000001010", "000000000000000100000000001", "000000010100000100000000000", "100000000001000000000101000", "100010001000100000000010000", "000000000000000000000000000", "000000000000000010000000000", "000000000000100000000000000", "100000000000000000000000100", "000000100000101000010100000", "000000000000000101000000000", "000000000100000000000000000", "000000000000100000100000010", "000000000000000000000000000", "001000000000000000000010001", "000010000000000000000000000", "000010000101000000000000000", "010000000000000000000000100", "000000000000000010000000000", "000000110000001100000000000", "000000001000000000000000010" };
    assertEquals(3, sysfailure.critical(n, state));
  }

  @Test
  public void case28() {
    int n = 8;
    String[] state = { "000000110000000000001001000", "001000000000000010000000000", "000000000001000000100000000", "001001000000000000000000000", "001000000000000000001000000", "100000000000000000000001011", "100010000000010000000000000", "000001010000001000000000010", "000010000000000000000000000", "000000000000000000000010000", "100000010100110000000000000", "000001001010000000000000010", "000010010100000000000100000", "000000000100100000010000000", "000000001000000000000000001", "000000000000000000000000000", "000000000100000000001001100", "010000001101000010001000000", "000100000000010000000000000", "000000101101000001001001010", "010000000100000000100000000", "000000000000000001000000000", "000000010000000000000010001", "001000000000000100000001010", "000000000000000100000000001", "000000010100000100000000000", "100000000001000000000101000", "100010001000100000000010000", "000000000000000000000000000", "000000000000000010000000000", "000000000000100000000000000", "100000000000000000000000100", "000000100000101000010100000", "000000000000000101000000000", "000000000100000000000000000", "000000000000100000100000010", "000000000000000000000000000", "001000000000000000000010001", "000010000000000000000000000", "000010000101000000000000000", "010000000000000000000000100", "000000000000000010000000000", "000000110000001100000000000", "000000001000000000000000010" };
    assertEquals(8, sysfailure.critical(n, state));
  }

  @Test
  public void case29() {
    int n = 319;
    String[] state = { "011101110110010111011010", "100000100011100111011110", "100011010101011011111111", "111011111111110111001011", "001100101110100101100011", "110011111111010110110101", "111111111110111011011001", "011111111001110101101010", "111011110111111011101111", "110110111111110001111111", "011110011101010011111111", "111101011011010011001011", "011010111111101111110011", "110111110011111111011101", "111111011111111111101110", "111011111011111110101010", "111111111111111111101001", "000101001111011011111110", "100110100111010111111111" };
    assertEquals(1, sysfailure.critical(n, state));
  }

  @Test
  public void case30() {
    int n = 320;
    String[] state = { "011101110110010111011010", "100000100011100111011110", "100011010101011011111111", "111011111111110111001011", "001100101110100101100011", "110011111111010110110101", "111111111110111011011001", "011111111001110101101010", "111011110111111011101111", "110110111111110001111111", "011110011101010011111111", "111101011011010011001011", "011010111111101111110011", "110111110011111111011101", "111111011111111111101110", "111011111011111110101010", "111111111111111111101001", "000101001111011011111110", "100110100111010111111111" };
    assertEquals(1, sysfailure.critical(n, state));
  }

  @Test
  public void case31() {
    int n = 321;
    String[] state = { "011101110110010111011010", "100000100011100111011110", "100011010101011011111111", "111011111111110111001011", "001100101110100101100011", "110011111111010110110101", "111111111110111011011001", "011111111001110101101010", "111011110111111011101111", "110110111111110001111111", "011110011101010011111111", "111101011011010011001011", "011010111111101111110011", "110111110011111111011101", "111111011111111111101110", "111011111011111110101010", "111111111111111111101001", "000101001111011011111110", "100110100111010111111111" };
    assertEquals(2, sysfailure.critical(n, state));
  }

  @Test
  public void case32() {
    int n = 322;
    String[] state = { "011101110110010111011010", "100000100011100111011110", "100011010101011011111111", "111011111111110111001011", "001100101110100101100011", "110011111111010110110101", "111111111110111011011001", "011111111001110101101010", "111011110111111011101111", "110110111111110001111111", "011110011101010011111111", "111101011011010011001011", "011010111111101111110011", "110111110011111111011101", "111111011111111111101110", "111011111011111110101010", "111111111111111111101001", "000101001111011011111110", "100110100111010111111111" };
    assertEquals(4, sysfailure.critical(n, state));
  }

  @Test
  public void case33() {
    int n = 323;
    String[] state = { "011101110110010111011010", "100000100011100111011110", "100011010101011011111111", "111011111111110111001011", "001100101110100101100011", "110011111111010110110101", "111111111110111011011001", "011111111001110101101010", "111011110111111011101111", "110110111111110001111111", "011110011101010011111111", "111101011011010011001011", "011010111111101111110011", "110111110011111111011101", "111111011111111111101110", "111011111011111110101010", "111111111111111111101001", "000101001111011011111110", "100110100111010111111111" };
    assertEquals(5, sysfailure.critical(n, state));
  }

  @Test
  public void case34() {
    int n = 324;
    String[] state = { "011101110110010111011010", "100000100011100111011110", "100011010101011011111111", "111011111111110111001011", "001100101110100101100011", "110011111111010110110101", "111111111110111011011001", "011111111001110101101010", "111011110111111011101111", "110110111111110001111111", "011110011101010011111111", "111101011011010011001011", "011010111111101111110011", "110111110011111111011101", "111111011111111111101110", "111011111011111110101010", "111111111111111111101001", "000101001111011011111110", "100110100111010111111111" };
    assertEquals(8, sysfailure.critical(n, state));
  }

  @Test
  public void case35() {
    int n = 325;
    String[] state = { "011101110110010111011010", "100000100011100111011110", "100011010101011011111111", "111011111111110111001011", "001100101110100101100011", "110011111111010110110101", "111111111110111011011001", "011111111001110101101010", "111011110111111011101111", "110110111111110001111111", "011110011101010011111111", "111101011011010011001011", "011010111111101111110011", "110111110011111111011101", "111111011111111111101110", "111011111011111110101010", "111111111111111111101001", "000101001111011011111110", "100110100111010111111111" };
    assertEquals(325, sysfailure.critical(n, state));
  }

  @Test
  public void case36() {
    int n = 318;
    String[] state = { "011101110110010111011010", "100000100011100111011110", "100011010101011011111111", "111011111111110111001011", "001100101110100101100011", "110011111111010110110101", "111111111110111011011001", "011111111001110101101010", "111011110111111011101111", "110110111111110001111111", "011110011101010011111111", "111101011011010011001011", "011010111111101111110011", "110111110011111111011101", "111111011111111111101110", "111011111011111110101010", "111111111111111111101001", "000101001111011011111110", "100110100111010111111111" };
    assertEquals(0, sysfailure.critical(n, state));
  }

  @Test
  public void case37() {
    int n = 4;
    String[] state = { "00", "00", "00", "01", "10", "00", "00", "00", "01", "00", "10", "00", "00", "10", "01", "00", "00", "00", "00", "00", "00", "10", "01", "00", "10", "00", "00", "00", "00", "01", "00", "01", "01", "01", "10", "10", "11", "10", "00", "10", "00", "00", "10", "00", "00", "00", "00", "00", "01", "11" };
    assertEquals(0, sysfailure.critical(n, state));
  }

  @Test
  public void case38() {
    int n = 9;
    String[] state = { "00", "00", "00", "01", "10", "00", "00", "00", "01", "00", "10", "00", "00", "10", "01", "00", "00", "00", "00", "00", "00", "10", "01", "00", "10", "00", "00", "00", "00", "01", "00", "01", "01", "01", "10", "10", "11", "10", "00", "10", "00", "00", "10", "00", "00", "00", "00", "00", "01", "11" };
    assertEquals(-1, sysfailure.critical(n, state));
  }

  @Test
  public void case39() {
    int n = 24;
    String[] state = { "111111", "011110", "001100", "001100", "011110", "111111" };
    assertEquals(24, sysfailure.critical(n, state));
  }

  @Test
  public void case40() {
    int n = 23;
    String[] state = { "111111", "011110", "001100", "001100", "011110", "111111" };
    assertEquals(0, sysfailure.critical(n, state));
  }

  @Test
  public void case41() {
    int n = 22;
    String[] state = { "111111", "011110", "001000", "001000", "011110", "111111" };
    assertEquals(22, sysfailure.critical(n, state));
  }

  @Test
  public void case42() {
    int n = 21;
    String[] state = { "111111", "011110", "001000", "001000", "011110", "111111" };
    assertEquals(2, sysfailure.critical(n, state));
  }

  @Test
  public void case43() {
    int n = 305;
    String[] state = { "01001100000000010011", "00111110001110011100", "01110110110011011111", "11010000111001010010", "10110101010110011111", "11101110011101111010", "01111000111011111011", "11000101010110011011", "10110010001111111001", "10000011101001001101", "10101101100010111000", "11100110001100100111", "01011110110110111111", "11011101111010001111", "01010110011000110101", "01001011111010000000", "11000011000110110101", "10000000110100001101", "00110000111101010111", "00101110001011010111", "11011111001101111110", "00110100111110011100", "00101110110111111010", "01011010000011111011", "10000011001111001010", "10110010011001101111", "01100100110110010000", "00010000001101100011", "00010010110000001010", "00000110101100011111", "10100011010111111111", "10011111100000110000", "01011101100001101110", "10100011010101000010", "10111101010001101001", "00100011111010000110", "00101010101111011011", "00111111101100010111", "00101000111000100111", "01111111000001011110", "01101101110001000010", "00101011000100101001", "10100011000001101111", "11011010110011110100", "01100000101100000011", "01101011001100010101", "11000101000111100010", "10010000000110001101", "01111100010011000100", "01010100100010111011" };
    assertEquals(1, sysfailure.critical(n, state));
  }

  @Test
  public void case44() {
    int n = 304;
    String[] state = { "01001100000000010011", "00111110001110011100", "01110110110011011111", "11010000111001010010", "10110101010110011111", "11101110011101111010", "01111000111011111011", "11000101010110011011", "10110010001111111001", "10000011101001001101", "10101101100010111000", "11100110001100100111", "01011110110110111111", "11011101111010001111", "01010110011000110101", "01001011111010000000", "11000011000110110101", "10000000110100001101", "00110000111101010111", "00101110001011010111", "11011111001101111110", "00110100111110011100", "00101110110111111010", "01011010000011111011", "10000011001111001010", "10110010011001101111", "01100100110110010000", "00010000001101100011", "00010010110000001010", "00000110101100011111", "10100011010111111111", "10011111100000110000", "01011101100001101110", "10100011010101000010", "10111101010001101001", "00100011111010000110", "00101010101111011011", "00111111101100010111", "00101000111000100111", "01111111000001011110", "01101101110001000010", "00101011000100101001", "10100011000001101111", "11011010110011110100", "01100000101100000011", "01101011001100010101", "11000101000111100010", "10010000000110001101", "01111100010011000100", "01010100100010111011" };
    assertEquals(0, sysfailure.critical(n, state));
  }

  @Test
  public void case45() {
    int n = 310;
    String[] state = { "01001100000000010011", "00111110001110011100", "01110110110011011111", "11010000111001010010", "10110101010110011111", "11101110011101111010", "01111000111011111011", "11000101010110011011", "10110010001111111001", "10000011101001001101", "10101101100010111000", "11100110001100100111", "01011110110110111111", "11011101111010001111", "01010110011000110101", "01001011111010000000", "11000011000110110101", "10000000110100001101", "00110000111101010111", "00101110001011010111", "11011111001101111110", "00110100111110011100", "00101110110111111010", "01011010000011111011", "10000011001111001010", "10110010011001101111", "01100100110110010000", "00010000001101100011", "00010010110000001010", "00000110101100011111", "10100011010111111111", "10011111100000110000", "01011101100001101110", "10100011010101000010", "10111101010001101001", "00100011111010000110", "00101010101111011011", "00111111101100010111", "00101000111000100111", "01111111000001011110", "01101101110001000010", "00101011000100101001", "10100011000001101111", "11011010110011110100", "01100000101100000011", "01101011001100010101", "11000101000111100010", "10010000000110001101", "01111100010011000100", "01010100100010111011" };
    assertEquals(2, sysfailure.critical(n, state));
  }

  @Test
  public void case46() {
    int n = 350;
    String[] state = { "01001100000000010011", "00111110001110011100", "01110110110011011111", "11010000111001010010", "10110101010110011111", "11101110011101111010", "01111000111011111011", "11000101010110011011", "10110010001111111001", "10000011101001001101", "10101101100010111000", "11100110001100100111", "01011110110110111111", "11011101111010001111", "01010110011000110101", "01001011111010000000", "11000011000110110101", "10000000110100001101", "00110000111101010111", "00101110001011010111", "11011111001101111110", "00110100111110011100", "00101110110111111010", "01011010000011111011", "10000011001111001010", "10110010011001101111", "01100100110110010000", "00010000001101100011", "00010010110000001010", "00000110101100011111", "10100011010111111111", "10011111100000110000", "01011101100001101110", "10100011010101000010", "10111101010001101001", "00100011111010000110", "00101010101111011011", "00111111101100010111", "00101000111000100111", "01111111000001011110", "01101101110001000010", "00101011000100101001", "10100011000001101111", "11011010110011110100", "01100000101100000011", "01101011001100010101", "11000101000111100010", "10010000000110001101", "01111100010011000100", "01010100100010111011" };
    assertEquals(2, sysfailure.critical(n, state));
  }

  @Test
  public void case47() {
    int n = 420;
    String[] state = { "01001100000000010011", "00111110001110011100", "01110110110011011111", "11010000111001010010", "10110101010110011111", "11101110011101111010", "01111000111011111011", "11000101010110011011", "10110010001111111001", "10000011101001001101", "10101101100010111000", "11100110001100100111", "01011110110110111111", "11011101111010001111", "01010110011000110101", "01001011111010000000", "11000011000110110101", "10000000110100001101", "00110000111101010111", "00101110001011010111", "11011111001101111110", "00110100111110011100", "00101110110111111010", "01011010000011111011", "10000011001111001010", "10110010011001101111", "01100100110110010000", "00010000001101100011", "00010010110000001010", "00000110101100011111", "10100011010111111111", "10011111100000110000", "01011101100001101110", "10100011010101000010", "10111101010001101001", "00100011111010000110", "00101010101111011011", "00111111101100010111", "00101000111000100111", "01111111000001011110", "01101101110001000010", "00101011000100101001", "10100011000001101111", "11011010110011110100", "01100000101100000011", "01101011001100010101", "11000101000111100010", "10010000000110001101", "01111100010011000100", "01010100100010111011" };
    assertEquals(2, sysfailure.critical(n, state));
  }

  @Test
  public void case48() {
    int n = 480;
    String[] state = { "01001100000000010011", "00111110001110011100", "01110110110011011111", "11010000111001010010", "10110101010110011111", "11101110011101111010", "01111000111011111011", "11000101010110011011", "10110010001111111001", "10000011101001001101", "10101101100010111000", "11100110001100100111", "01011110110110111111", "11011101111010001111", "01010110011000110101", "01001011111010000000", "11000011000110110101", "10000000110100001101", "00110000111101010111", "00101110001011010111", "11011111001101111110", "00110100111110011100", "00101110110111111010", "01011010000011111011", "10000011001111001010", "10110010011001101111", "01100100110110010000", "00010000001101100011", "00010010110000001010", "00000110101100011111", "10100011010111111111", "10011111100000110000", "01011101100001101110", "10100011010101000010", "10111101010001101001", "00100011111010000110", "00101010101111011011", "00111111101100010111", "00101000111000100111", "01111111000001011110", "01101101110001000010", "00101011000100101001", "10100011000001101111", "11011010110011110100", "01100000101100000011", "01101011001100010101", "11000101000111100010", "10010000000110001101", "01111100010011000100", "01010100100010111011" };
    assertEquals(2, sysfailure.critical(n, state));
  }

  @Test
  public void case49() {
    int n = 481;
    String[] state = { "01001100000000010011", "00111110001110011100", "01110110110011011111", "11010000111001010010", "10110101010110011111", "11101110011101111010", "01111000111011111011", "11000101010110011011", "10110010001111111001", "10000011101001001101", "10101101100010111000", "11100110001100100111", "01011110110110111111", "11011101111010001111", "01010110011000110101", "01001011111010000000", "11000011000110110101", "10000000110100001101", "00110000111101010111", "00101110001011010111", "11011111001101111110", "00110100111110011100", "00101110110111111010", "01011010000011111011", "10000011001111001010", "10110010011001101111", "01100100110110010000", "00010000001101100011", "00010010110000001010", "00000110101100011111", "10100011010111111111", "10011111100000110000", "01011101100001101110", "10100011010101000010", "10111101010001101001", "00100011111010000110", "00101010101111011011", "00111111101100010111", "00101000111000100111", "01111111000001011110", "01101101110001000010", "00101011000100101001", "10100011000001101111", "11011010110011110100", "01100000101100000011", "01101011001100010101", "11000101000111100010", "10010000000110001101", "01111100010011000100", "01010100100010111011" };
    assertEquals(3, sysfailure.critical(n, state));
  }

  @Test
  public void case50() {
    int n = 482;
    String[] state = { "01001100000000010011", "00111110001110011100", "01110110110011011111", "11010000111001010010", "10110101010110011111", "11101110011101111010", "01111000111011111011", "11000101010110011011", "10110010001111111001", "10000011101001001101", "10101101100010111000", "11100110001100100111", "01011110110110111111", "11011101111010001111", "01010110011000110101", "01001011111010000000", "11000011000110110101", "10000000110100001101", "00110000111101010111", "00101110001011010111", "11011111001101111110", "00110100111110011100", "00101110110111111010", "01011010000011111011", "10000011001111001010", "10110010011001101111", "01100100110110010000", "00010000001101100011", "00010010110000001010", "00000110101100011111", "10100011010111111111", "10011111100000110000", "01011101100001101110", "10100011010101000010", "10111101010001101001", "00100011111010000110", "00101010101111011011", "00111111101100010111", "00101000111000100111", "01111111000001011110", "01101101110001000010", "00101011000100101001", "10100011000001101111", "11011010110011110100", "01100000101100000011", "01101011001100010101", "11000101000111100010", "10010000000110001101", "01111100010011000100", "01010100100010111011" };
    assertEquals(4, sysfailure.critical(n, state));
  }

  @Test
  public void case51() {
    int n = 494;
    String[] state = { "01001100000000010011", "00111110001110011100", "01110110110011011111", "11010000111001010010", "10110101010110011111", "11101110011101111010", "01111000111011111011", "11000101010110011011", "10110010001111111001", "10000011101001001101", "10101101100010111000", "11100110001100100111", "01011110110110111111", "11011101111010001111", "01010110011000110101", "01001011111010000000", "11000011000110110101", "10000000110100001101", "00110000111101010111", "00101110001011010111", "11011111001101111110", "00110100111110011100", "00101110110111111010", "01011010000011111011", "10000011001111001010", "10110010011001101111", "01100100110110010000", "00010000001101100011", "00010010110000001010", "00000110101100011111", "10100011010111111111", "10011111100000110000", "01011101100001101110", "10100011010101000010", "10111101010001101001", "00100011111010000110", "00101010101111011011", "00111111101100010111", "00101000111000100111", "01111111000001011110", "01101101110001000010", "00101011000100101001", "10100011000001101111", "11011010110011110100", "01100000101100000011", "01101011001100010101", "11000101000111100010", "10010000000110001101", "01111100010011000100", "01010100100010111011" };
    assertEquals(4, sysfailure.critical(n, state));
  }

  @Test
  public void case52() {
    int n = 495;
    String[] state = { "01001100000000010011", "00111110001110011100", "01110110110011011111", "11010000111001010010", "10110101010110011111", "11101110011101111010", "01111000111011111011", "11000101010110011011", "10110010001111111001", "10000011101001001101", "10101101100010111000", "11100110001100100111", "01011110110110111111", "11011101111010001111", "01010110011000110101", "01001011111010000000", "11000011000110110101", "10000000110100001101", "00110000111101010111", "00101110001011010111", "11011111001101111110", "00110100111110011100", "00101110110111111010", "01011010000011111011", "10000011001111001010", "10110010011001101111", "01100100110110010000", "00010000001101100011", "00010010110000001010", "00000110101100011111", "10100011010111111111", "10011111100000110000", "01011101100001101110", "10100011010101000010", "10111101010001101001", "00100011111010000110", "00101010101111011011", "00111111101100010111", "00101000111000100111", "01111111000001011110", "01101101110001000010", "00101011000100101001", "10100011000001101111", "11011010110011110100", "01100000101100000011", "01101011001100010101", "11000101000111100010", "10010000000110001101", "01111100010011000100", "01010100100010111011" };
    assertEquals(5, sysfailure.critical(n, state));
  }

  @Test
  public void case53() {
    int n = 496;
    String[] state = { "01001100000000010011", "00111110001110011100", "01110110110011011111", "11010000111001010010", "10110101010110011111", "11101110011101111010", "01111000111011111011", "11000101010110011011", "10110010001111111001", "10000011101001001101", "10101101100010111000", "11100110001100100111", "01011110110110111111", "11011101111010001111", "01010110011000110101", "01001011111010000000", "11000011000110110101", "10000000110100001101", "00110000111101010111", "00101110001011010111", "11011111001101111110", "00110100111110011100", "00101110110111111010", "01011010000011111011", "10000011001111001010", "10110010011001101111", "01100100110110010000", "00010000001101100011", "00010010110000001010", "00000110101100011111", "10100011010111111111", "10011111100000110000", "01011101100001101110", "10100011010101000010", "10111101010001101001", "00100011111010000110", "00101010101111011011", "00111111101100010111", "00101000111000100111", "01111111000001011110", "01101101110001000010", "00101011000100101001", "10100011000001101111", "11011010110011110100", "01100000101100000011", "01101011001100010101", "11000101000111100010", "10010000000110001101", "01111100010011000100", "01010100100010111011" };
    assertEquals(6, sysfailure.critical(n, state));
  }

  @Test
  public void case54() {
    int n = 515;
    String[] state = { "01001100000000010011", "00111110001110011100", "01110110110011011111", "11010000111001010010", "10110101010110011111", "11101110011101111010", "01111000111011111011", "11000101010110011011", "10110010001111111001", "10000011101001001101", "10101101100010111000", "11100110001100100111", "01011110110110111111", "11011101111010001111", "01010110011000110101", "01001011111010000000", "11000011000110110101", "10000000110100001101", "00110000111101010111", "00101110001011010111", "11011111001101111110", "00110100111110011100", "00101110110111111010", "01011010000011111011", "10000011001111001010", "10110010011001101111", "01100100110110010000", "00010000001101100011", "00010010110000001010", "00000110101100011111", "10100011010111111111", "10011111100000110000", "01011101100001101110", "10100011010101000010", "10111101010001101001", "00100011111010000110", "00101010101111011011", "00111111101100010111", "00101000111000100111", "01111111000001011110", "01101101110001000010", "00101011000100101001", "10100011000001101111", "11011010110011110100", "01100000101100000011", "01101011001100010101", "11000101000111100010", "10010000000110001101", "01111100010011000100", "01010100100010111011" };
    assertEquals(33, sysfailure.critical(n, state));
  }

  @Test
  public void case55() {
    int n = 517;
    String[] state = { "01001100000000010011", "00111110001110011100", "01110110110011011111", "11010000111001010010", "10110101010110011111", "11101110011101111010", "01111000111011111011", "11000101010110011011", "10110010001111111001", "10000011101001001101", "10101101100010111000", "11100110001100100111", "01011110110110111111", "11011101111010001111", "01010110011000110101", "01001011111010000000", "11000011000110110101", "10000000110100001101", "00110000111101010111", "00101110001011010111", "11011111001101111110", "00110100111110011100", "00101110110111111010", "01011010000011111011", "10000011001111001010", "10110010011001101111", "01100100110110010000", "00010000001101100011", "00010010110000001010", "00000110101100011111", "10100011010111111111", "10011111100000110000", "01011101100001101110", "10100011010101000010", "10111101010001101001", "00100011111010000110", "00101010101111011011", "00111111101100010111", "00101000111000100111", "01111111000001011110", "01101101110001000010", "00101011000100101001", "10100011000001101111", "11011010110011110100", "01100000101100000011", "01101011001100010101", "11000101000111100010", "10010000000110001101", "01111100010011000100", "01010100100010111011" };
    assertEquals(517, sysfailure.critical(n, state));
  }

  @Test
  public void case56() {
    int n = 508;
    String[] state = { "01001100000000010011", "00111110001110011100", "01110110110011011111", "11010000111001010010", "10110101010110011111", "11101110011101111010", "01111000111011111011", "11000101010110011011", "10110010001111111001", "10000011101001001101", "10101101100010111000", "11100110001100100111", "01011110110110111111", "11011101111010001111", "01010110011000110101", "01001011111010000000", "11000011000110110101", "10000000110100001101", "00110000111101010111", "00101110001011010111", "11011111001101111110", "00110100111110011100", "00101110110111111010", "01011010000011111011", "10000011001111001010", "10110010011001101111", "01100100110110010000", "00010000001101100011", "00010010110000001010", "00000110101100011111", "10100011010111111111", "10011111100000110000", "01011101100001101110", "10100011010101000010", "10111101010001101001", "00100011111010000110", "00101010101111011011", "00111111101100010111", "00101000111000100111", "01111111000001011110", "01101101110001000010", "00101011000100101001", "10100011000001101111", "11011010110011110100", "01100000101100000011", "01101011001100010101", "11000101000111100010", "10010000000110001101", "01111100010011000100", "01010100100010111011" };
    assertEquals(8, sysfailure.critical(n, state));
  }

  @Test
  public void case57() {
    int n = 509;
    String[] state = { "01001100000000010011", "00111110001110011100", "01110110110011011111", "11010000111001010010", "10110101010110011111", "11101110011101111010", "01111000111011111011", "11000101010110011011", "10110010001111111001", "10000011101001001101", "10101101100010111000", "11100110001100100111", "01011110110110111111", "11011101111010001111", "01010110011000110101", "01001011111010000000", "11000011000110110101", "10000000110100001101", "00110000111101010111", "00101110001011010111", "11011111001101111110", "00110100111110011100", "00101110110111111010", "01011010000011111011", "10000011001111001010", "10110010011001101111", "01100100110110010000", "00010000001101100011", "00010010110000001010", "00000110101100011111", "10100011010111111111", "10011111100000110000", "01011101100001101110", "10100011010101000010", "10111101010001101001", "00100011111010000110", "00101010101111011011", "00111111101100010111", "00101000111000100111", "01111111000001011110", "01101101110001000010", "00101011000100101001", "10100011000001101111", "11011010110011110100", "01100000101100000011", "01101011001100010101", "11000101000111100010", "10010000000110001101", "01111100010011000100", "01010100100010111011" };
    assertEquals(10, sysfailure.critical(n, state));
  }

  @Test
  public void case58() {
    int n = 170;
    String[] state = { "0001", "1111", "1111", "1111", "1111", "1111", "0111", "1011", "1111", "1111", "1111", "1111", "1111", "1011", "0111", "1111", "1111", "1011", "1011", "1110", "1011", "1111", "1111", "1111", "1111", "1010", "1011", "1111", "1111", "1110", "1111", "1111", "1111", "1111", "1111", "1111", "1111", "1111", "1111", "1111", "0111", "1110", "1111", "1111", "1111", "1111", "1111" };
    assertEquals(0, sysfailure.critical(n, state));
  }

  @Test
  public void case59() {
    int n = 171;
    String[] state = { "0001", "1111", "1111", "1111", "1111", "1111", "0111", "1011", "1111", "1111", "1111", "1111", "1111", "1011", "0111", "1111", "1111", "1011", "1011", "1110", "1011", "1111", "1111", "1111", "1111", "1010", "1011", "1111", "1111", "1110", "1111", "1111", "1111", "1111", "1111", "1111", "1111", "1111", "1111", "1111", "0111", "1110", "1111", "1111", "1111", "1111", "1111" };
    assertEquals(171, sysfailure.critical(n, state));
  }

  @Test
  public void case60() {
    int n = 172;
    String[] state = { "0001", "1111", "1111", "1111", "1111", "1111", "0111", "1011", "1111", "1111", "1111", "1111", "1111", "1011", "0111", "1111", "1111", "1011", "1011", "1110", "1011", "1111", "1111", "1111", "1111", "1010", "1011", "1111", "1111", "1110", "1111", "1111", "1111", "1111", "1111", "1111", "1111", "1111", "1111", "1111", "0111", "1110", "1111", "1111", "1111", "1111", "1111" };
    assertEquals(-1, sysfailure.critical(n, state));
  }

  @Test
  public void case61() {
    int n = 2;
    String[] state = { "101" };
    assertEquals(-1, sysfailure.critical(n, state));
  }

  @Test
  public void case62() {
    int n = 6;
    String[] state = { "01010", "10001", "11011", "10001", "01010" };
    assertEquals(0, sysfailure.critical(n, state));
  }

  @Test
  public void case63() {
    int n = 1000;
    String[] state = {};
    assertEquals(0, sysfailure.critical(n, state));
  }

  @Test
  public void case64() {
    int n = 999;
    String[] state = {};
    assertEquals(0, sysfailure.critical(n, state));
  }

  @Test
  public void case65() {
    int n = 4;
    String[] state = { "111", "111" };
    assertEquals(0, sysfailure.critical(n, state));
  }

  @Test
  public void case66() {
    int n = 4;
    String[] state = { "111", "111", "111", "111" };
    assertEquals(0, sysfailure.critical(n, state));
  }

  @Test
  public void case67() {
    int n = 1000;
    String[] state = {};
    assertEquals(0, sysfailure.critical(n, state));
  }

  @Test
  public void case68() {
    int n = 1000;
    String[] state = {};
    assertEquals(0, sysfailure.critical(n, state));
  }

}
