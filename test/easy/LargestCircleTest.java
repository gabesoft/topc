package topc.test.easy;

import junit.framework.*;
import org.junit.Test;
import static org.junit.Assert.*;
import topc.easy.*;

public class LargestCircleTest {
  LargestCircle largestcircle = new LargestCircle();

  @Test
  public void case1() {
    String[] grid = { "####", "#..#", "#..#", "####" };
    assertEquals(1, largestcircle.radius(grid));
  }

  @Test
  public void case2() {
    String[] grid = { "############", "###......###", "##.######.##", "#.########.#", "#.##..####.#", "#.##..####.#", "#.########.#", "#.########.#", "#.########.#", "##.######.##", "###......###", "############" };
    assertEquals(5, largestcircle.radius(grid));
  }

  @Test
  public void case3() {
    String[] grid = { ".........." };
    assertEquals(0, largestcircle.radius(grid));
  }

  @Test
  public void case4() {
    String[] grid = { "#######", "#######", "#######", "#######", "#######" };
    assertEquals(0, largestcircle.radius(grid));
  }

  @Test
  public void case5() {
    String[] grid = { "#####.......", "#####.......", "#####.......", "............", "............", "............", "............", "............", "............", "............" };
    assertEquals(4, largestcircle.radius(grid));
  }

  @Test
  public void case6() {
    String[] grid = {};
    assertEquals(0, largestcircle.radius(grid));
  }

  @Test
  public void case7() {
    String[] grid = {};
    assertEquals(24, largestcircle.radius(grid));
  }

  @Test
  public void case8() {
    String[] grid = { "###########......########", "###......#.######.#######", "##..####..########......#", "##.######.########.####.#", "##.######.########.####.#", "##.######.########.####.#", "##.######.########.####.#", "##..####..########......#", "###......#.######.#######", "###########......########" };
    assertEquals(5, largestcircle.radius(grid));
  }

  @Test
  public void case9() {
    String[] grid = {};
    assertEquals(25, largestcircle.radius(grid));
  }

  @Test
  public void case10() {
    String[] grid = {};
    assertEquals(24, largestcircle.radius(grid));
  }

  @Test
  public void case11() {
    String[] grid = {};
    assertEquals(6, largestcircle.radius(grid));
  }

  @Test
  public void case12() {
    String[] grid = {};
    assertEquals(11, largestcircle.radius(grid));
  }

  @Test
  public void case13() {
    String[] grid = {};
    assertEquals(0, largestcircle.radius(grid));
  }

  @Test
  public void case14() {
    String[] grid = {};
    assertEquals(0, largestcircle.radius(grid));
  }

  @Test
  public void case15() {
    String[] grid = { ".................................................." };
    assertEquals(0, largestcircle.radius(grid));
  }

  @Test
  public void case16() {
    String[] grid = { "..................................................", ".................................................." };
    assertEquals(1, largestcircle.radius(grid));
  }

  @Test
  public void case17() {
    String[] grid = { ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", "." };
    assertEquals(0, largestcircle.radius(grid));
  }

  @Test
  public void case18() {
    String[] grid = { "..", "..", "..", "..", "..", "..", "..", "..", "..", "..", "..", "..", "..", "..", "..", "..", "..", "..", "..", "..", "..", "..", "..", "..", "..", "..", "..", "..", "..", "..", "..", "..", "..", "..", "..", "..", "..", "..", "..", "..", "..", "..", "..", "..", "..", "..", "..", "..", "..", ".." };
    assertEquals(1, largestcircle.radius(grid));
  }

  @Test
  public void case19() {
    String[] grid = { "." };
    assertEquals(0, largestcircle.radius(grid));
  }

  @Test
  public void case20() {
    String[] grid = { "..", ".." };
    assertEquals(1, largestcircle.radius(grid));
  }

  @Test
  public void case21() {
    String[] grid = { "...", "...", "..." };
    assertEquals(1, largestcircle.radius(grid));
  }

  @Test
  public void case22() {
    String[] grid = { "...", ".#.", "..." };
    assertEquals(0, largestcircle.radius(grid));
  }

  @Test
  public void case23() {
    String[] grid = { "......####", ".####.####", ".####.####", ".####.####", ".####.####", "......####", "######....", "######.##.", "######.##.", "######...." };
    assertEquals(3, largestcircle.radius(grid));
  }

  @Test
  public void case24() {
    String[] grid = { "######....", "######.##.", "######.##.", "######....", "......####", ".####.####", ".####.####", ".####.####", ".####.####", "......####" };
    assertEquals(3, largestcircle.radius(grid));
  }

  @Test
  public void case25() {
    String[] grid = { "....######", ".##.######", ".##.######", "....######", "####......", "####.####.", "####.####.", "####.####.", "####.####.", "####......" };
    assertEquals(3, largestcircle.radius(grid));
  }

  @Test
  public void case26() {
    String[] grid = { "####......", "####.####.", "####.####.", "####.####.", "####.####.", "####......", "....######", ".##.######", ".##.######", "....######" };
    assertEquals(3, largestcircle.radius(grid));
  }

  @Test
  public void case27() {
    String[] grid = {};
    assertEquals(25, largestcircle.radius(grid));
  }

  @Test
  public void case28() {
    String[] grid = { "#..........#...#.#.#..###.#......##....#", "...#......#..#....#...#..#......#......#", ".#.........#..#.....#.......##...#.#....", "..#......#...#...#..##..#..#.#........#.", "..#.....#......#.#........#.....#...#..#", ".......#...#..#.#.....#......##...#..#..", "..###..#.#..#.##.....#.....#.........##.", "..#....#.#..............##.....#......#.", "..#...#.....#..#...#....#.#..#....##.#..", "...........#.####...#.......#.##.##....#", "#...##....#.###...#####.....#....#.....#", "##............#.....#....###.#.....#...#", ".#..###...#...##..#....##........#....#.", "..#.#...................#....#...#...#..", "..#....##.#....#....#...#...#..#....#..#", "....#..............##.##...#.#...#...#.#", "#...............#.#...#..#.###...#...##.", ".#..#........##......##...#.#..#.#...#..", "....##........#.......##...####........#", "..........###..#......##..#..##..#...#..", ".....#............#.......##..#.#..#...#", "....#...#.#....#...#..#..##...#...#.....", "#.....##..#.#.........##.#..#....###....", "#.#.....#.#.##....#...#..#...#..#.#..#..", ".....#.#..#............#..#.#..#.......#", "..#..........#.##.#..#..........#..##...", ".....#..........#...#.......##..........", "#.....#...#...#..#...#.#......#...#.....", ".#.##.......#.........##.#..#..####.....", ".......#.#####..#....#..#......#.#......", "............#....#..##.#.#........###.##", "..#...#..#.#.#.......#...#.......#...#..", "......#........#...#...........#.....#.#", "#..#....##..#............#..#......#....", ".##...#...#......#..#....#......##...#.#", "...#..#...#..#.##...#......#...#.......#", "......#......#....#.#.#...#..##.........", "#........##........###....###...........", "....#....#...........##.#......##.....#.", "...........#..##............###.##.##...", "###.....#....#...#...#...#........#####.", "##.#..........#...#......#.#.#.....###.#", ".....#.#.#.#......#..#.#.....#.....#....", ".#.##......#...#.....#.#.#..#....#.....#", ".#......#......#.#..#......#.......##...", "##...#....#.#.........#.....#.#..#......", "....#.....####.##..##.....#.#...#....#..", ".#....#..#.#..##...#..##....##..#.##....", "........#.....##....#........##.....#..#", "##.##.#...#......#.#.#..#....##...##.#.." };
    assertEquals(4, largestcircle.radius(grid));
  }

  @Test
  public void case29() {
    String[] grid = { "......#.#..##.#....#.#...#..##..##..##........#..#", ".....##.#...#.#...#...#.....#..#.....#........#..#", "............##.#....#.......#...##..#..##..#....#.", "#......#...#....###.##.....##...........#.#.......", "..........##.........#.#..........#...#.#.......#.", "#..#...#....#...........#....##.#..#.#....#......#", "........#...........#...#.##..#...#....#......##..", ".#.#.....#....#.#....#......#....##............##.", ".####.#.##..##......##.###...#.........###.....#..", ".......#.#.#.#..#...#.#...........##...#.....#...#", "..............#.#..........##.##....#...#.###.....", "..............#.....#....#....#.#....#.......##...", ".......................#.#......#.#...##..........", "..............##.###.##.....#..#........#........#", "#..##...#...#.....#..........#...#...#..#...#.....", ".#.........#.####.....#.......#...................", "....#...##.....#.#..#....#..............#...##...#", "......#.#.#.####..#....##.#..#..###..#.#..#.......", ".###...........#..#.#..........#.#.###.#...#......", "##.#......##.#...#.....##..#...#....##.#....#.....", "#.#..........#.##........#........#.....####.#.#..", "...##...#...#.#...............#....##.#.#...#..#..", "......##........##.#....#....####.#....#.#...#...#", "...#..#.....#....#.............#...#...#.#.#...##.", "..#.......##....#.#.#..##.....#...#...#..#....#..#", "#.#......##..#.#....#..##......#.#..##..#.#.#....#", ".................##.....#...##.....##.#....#....#.", "...........#.......#..........#.......#.#..#.#....", "#...#............##....#........#.....#...#...#.#.", ".#..#..#........#......#..#.............##........", ".........##.........###....#.......#..........#...", "..........#....#..##...#...#...#............##....", "#........#............#.##.......##......#.....#.#", "#...##.#........##...#............##..#..#....#...", "#...#..#.....#.......#.#.#........#..#.#........#.", ".#.#.#.........#...#...#.......##...#..#.##.##...#", "...#..##....#..##..#..#........#.....#....#....#..", "....###....#..###...#.......#........#.##.......#.", ".#..##..#..#..#.#.#..####......#............##..#.", ".......#.....###.###...#.........##............#.." };
    assertEquals(5, largestcircle.radius(grid));
  }

  @Test
  public void case30() {
    String[] grid = {};
    assertEquals(5, largestcircle.radius(grid));
  }

  @Test
  public void case31() {
    String[] grid = {};
    assertEquals(24, largestcircle.radius(grid));
  }

  @Test
  public void case32() {
    String[] grid = { "############", "###......###", "##.######.##", "#.########.#", "#.##..####.#", "#.##..####.#", "#.########.#", "#.########.#", "#.########.#", "##.######.##", "###......###", "############" };
    assertEquals(5, largestcircle.radius(grid));
  }

  @Test
  public void case33() {
    String[] grid = { "#####.......", "#####.......", "#####.......", "............", "............", "............", "............", "............", "............", "............" };
    assertEquals(4, largestcircle.radius(grid));
  }

}
