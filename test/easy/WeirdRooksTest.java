package topc.test.easy;

import junit.framework.*;
import org.junit.Test;
import static org.junit.Assert.*;
import topc.easy.*;

public class WeirdRooksTest {
  WeirdRooks weirdrooks = new WeirdRooks();

  @Test
  public void case1() {
    int[] cols = { 10, 10, 10, 10, 10, 10, 10, 10 };
    assertEquals("0,801,631,641,651,661,671,681,691,701,711,721,731,741,751,761,771,781,792,482,492,502,512,522,532,542,552,562,572,582,592,602,612,622,632,642,652,662,672,682,692,702,712,722,732,742,752,762,773,353,363,373,383,393,403,413,423,433,443,453,463,473,483,493,503,513,523,533,543,553,563,573,583,593,603,613,623,633,643,653,663,673,683,693,703,713,723,733,744,244,254,264,274,284,294,304,314,324,334,344,354,364,374,384,394,404,414,424,434,444,454,464,474,484,494,504,514,524,534,544,554,564,574,584,594,604,614,624,634,644,654,664,674,684,694,705,155,165,175,185,195,205,215,225,235,245,255,265,275,285,295,305,315,325,335,345,355,365,375,385,395,405,415,425,435,445,455,465,475,485,495,505,515,525,535,545,555,565,575,585,595,605,615,625,635,645,656,86,96,106,116,126,136,146,156,166,176,186,196,206,216,226,236,246,256,266,276,286,296,306,316,326,336,346,356,366,376,386,396,406,416,426,436,446,456,466,476,486,496,506,516,526,536,546,556,566,576,586,597,37,47,57,67,77,87,97,107,117,127,137,147,157,167,177,187,197,207,217,227,237,247,257,267,277,287,297,307,317,327,337,347,357,367,377,387,397,407,417,427,437,447,457,467,477,487,497,507,517,528,08,18,28,38,48,58,68,78,88,98,108,118,128,138,148,158,168,178,188,198,208,218,228,238,248,258,268,278,288,298,308,318,328,338,348,358,368,378,388,398,408,418,428,438,44", weirdrooks.describe(cols));
  }

  @Test
  public void case2() {
    int[] cols = { 3, 3, 3 };
    assertEquals("0,91,41,51,61,71,82,12,22,32,42,52,63,03,13,23,3", weirdrooks.describe(cols));
  }

  @Test
  public void case3() {
    int[] cols = { 1, 2, 3 };
    assertEquals("0,61,31,41,52,12,22,33,0", weirdrooks.describe(cols));
  }

  @Test
  public void case4() {
    int[] cols = { 1 };
    assertEquals("0,11,0", weirdrooks.describe(cols));
  }

  @Test
  public void case5() {
    int[] cols = { 1, 2, 3, 4, 5, 6, 7, 8 };
    assertEquals("0,361,281,291,301,311,321,331,341,352,212,222,232,242,252,262,272,282,292,302,312,322,333,153,163,173,183,193,203,213,223,233,243,253,263,273,283,293,304,104,114,124,134,144,154,164,174,184,194,204,214,224,234,244,254,265,65,75,85,95,105,115,125,135,145,155,165,175,185,195,205,216,36,46,56,66,76,86,96,106,116,126,136,146,157,17,27,37,47,57,67,77,88,0", weirdrooks.describe(cols));
  }

  @Test
  public void case6() {
    int[] cols = { 1, 3, 5, 7, 9 };
    assertEquals("0,251,161,171,181,191,201,211,221,231,242,92,102,112,122,132,142,152,162,172,182,192,202,212,223,43,53,63,73,83,93,103,113,123,133,143,153,163,173,183,194,14,24,34,44,54,64,74,84,94,104,114,124,134,144,155,05,15,25,35,45,55,65,75,85,95,10", weirdrooks.describe(cols));
  }

  @Test
  public void case7() {
    int[] cols = { 2, 9 };
    assertEquals("0,111,21,31,41,51,61,71,81,91,102,02,12,22,32,42,52,62,72,8", weirdrooks.describe(cols));
  }

  @Test
  public void case8() {
    int[] cols = { 1, 1, 2, 2, 3, 3, 4, 4 };
    assertEquals("0,201,121,131,141,151,161,171,181,192,62,72,82,92,102,112,122,132,142,152,162,173,23,33,43,53,63,73,83,93,103,113,123,133,144,04,14,24,34,44,54,64,74,84,94,10", weirdrooks.describe(cols));
  }

  @Test
  public void case9() {
    int[] cols = { 2, 2, 2, 3, 3, 4, 5 };
    assertEquals("0,211,131,141,151,161,171,181,191,202,72,82,92,102,112,122,132,142,152,162,172,183,33,43,53,63,73,83,93,103,113,123,133,143,154,14,24,34,44,54,64,74,84,94,104,115,05,15,25,35,45,55,6", weirdrooks.describe(cols));
  }

  @Test
  public void case10() {
    int[] cols = { 3, 3, 3, 3, 4, 4, 8, 10 };
    assertEquals("0,381,281,291,301,311,321,331,341,351,361,372,192,202,212,222,232,242,252,262,272,282,292,302,312,322,332,342,353,123,133,143,153,163,173,183,193,203,213,223,233,243,253,263,273,283,293,303,313,324,64,74,84,94,104,114,124,134,144,154,164,174,184,194,204,214,224,234,244,254,264,274,285,25,35,45,55,65,75,85,95,105,115,125,135,145,155,165,175,185,195,205,215,225,236,06,16,26,36,46,56,66,76,86,96,106,116,126,136,146,156,166,17", weirdrooks.describe(cols));
  }

  @Test
  public void case11() {
    int[] cols = { 1, 1, 1, 1, 10, 10, 10, 10 };
    assertEquals("0,441,311,321,331,341,351,361,371,381,391,401,411,421,432,202,212,222,232,242,252,262,272,282,292,302,312,322,332,342,352,362,372,382,392,402,413,113,123,133,143,153,163,173,183,193,203,213,223,233,243,253,263,273,283,293,303,313,323,333,343,353,363,373,384,44,54,64,74,84,94,104,114,124,134,144,154,164,174,184,194,204,214,224,234,244,254,264,274,284,294,304,314,324,334,345,05,15,25,35,45,55,65,75,85,95,105,115,125,135,145,155,165,175,185,195,205,215,225,235,245,255,265,275,285,29", weirdrooks.describe(cols));
  }

  @Test
  public void case12() {
    int[] cols = { 1, 1, 1, 1, 1, 1, 10, 10 };
    assertEquals("0,261,151,161,171,181,191,201,211,221,231,241,252,62,72,82,92,102,112,122,132,142,152,162,172,182,192,202,212,222,233,03,13,23,33,43,53,63,73,83,93,103,113,123,133,143,153,163,173,183,193,20", weirdrooks.describe(cols));
  }

  @Test
  public void case13() {
    int[] cols = { 5, 6, 7, 8, 9, 10, 10, 10 };
    assertEquals("0,651,531,541,551,561,571,581,591,601,611,621,631,642,422,432,442,452,462,472,482,492,502,512,522,532,542,552,562,572,582,592,602,612,623,323,333,343,353,363,373,383,393,403,413,423,433,443,453,463,473,483,493,503,513,523,533,543,553,563,573,583,594,234,244,254,264,274,284,294,304,314,324,334,344,354,364,374,384,394,404,414,424,434,444,454,464,474,484,494,504,514,524,534,544,555,155,165,175,185,195,205,215,225,235,245,255,265,275,285,295,305,315,325,335,345,355,365,375,385,395,405,415,425,435,445,455,465,475,485,495,506,86,96,106,116,126,136,146,156,166,176,186,196,206,216,226,236,246,256,266,276,286,296,306,316,326,336,346,356,366,376,386,396,406,416,426,436,447,37,47,57,67,77,87,97,107,117,127,137,147,157,167,177,187,197,207,217,227,237,247,257,267,277,287,297,307,317,327,337,347,357,367,378,08,18,28,38,48,58,68,78,88,98,108,118,128,138,148,158,168,178,188,198,208,218,228,238,248,258,268,278,288,29", weirdrooks.describe(cols));
  }

  @Test
  public void case14() {
    int[] cols = { 7, 7, 8, 8, 9, 9, 10, 10 };
    assertEquals("0,681,541,551,561,571,581,591,601,611,621,631,641,651,661,672,422,432,442,452,462,472,482,492,502,512,522,532,542,552,562,572,582,592,602,612,622,632,642,653,313,323,333,343,353,363,373,383,393,403,413,423,433,443,453,463,473,483,493,503,513,523,533,543,553,563,573,583,593,603,613,624,224,234,244,254,264,274,284,294,304,314,324,334,344,354,364,374,384,394,404,414,424,434,444,454,464,474,484,494,504,514,524,534,544,554,564,574,585,145,155,165,175,185,195,205,215,225,235,245,255,265,275,285,295,305,315,325,335,345,355,365,375,385,395,405,415,425,435,445,455,465,475,485,495,505,515,525,536,86,96,106,116,126,136,146,156,166,176,186,196,206,216,226,236,246,256,266,276,286,296,306,316,326,336,346,356,366,376,386,396,406,416,426,436,446,456,466,477,37,47,57,67,77,87,97,107,117,127,137,147,157,167,177,187,197,207,217,227,237,247,257,267,277,287,297,307,317,327,337,347,357,367,377,387,397,408,08,18,28,38,48,58,68,78,88,98,108,118,128,138,148,158,168,178,188,198,208,218,228,238,248,258,268,278,288,298,308,318,32", weirdrooks.describe(cols));
  }

  @Test
  public void case15() {
    int[] cols = { 1, 4, 7, 10, 10, 10, 10 };
    assertEquals("0,521,391,401,411,421,431,441,451,461,471,481,491,501,512,282,292,302,312,322,332,342,352,362,372,382,392,402,412,422,432,442,452,462,472,482,493,193,203,213,223,233,243,253,263,273,283,293,303,313,323,333,343,353,363,373,383,393,403,413,423,433,443,453,464,114,124,134,144,154,164,174,184,194,204,214,224,234,244,254,264,274,284,294,304,314,324,334,344,354,364,374,384,394,404,414,425,55,65,75,85,95,105,115,125,135,145,155,165,175,185,195,205,215,225,235,245,255,265,275,285,295,305,315,325,335,345,355,365,376,16,26,36,46,56,66,76,86,96,106,116,126,136,146,156,166,176,186,196,206,216,226,236,246,256,266,276,286,296,306,317,07,17,27,37,47,57,67,77,87,97,107,117,127,137,147,157,167,177,187,197,207,217,227,237,24", weirdrooks.describe(cols));
  }

  @Test
  public void case16() {
    int[] cols = { 1, 4, 7, 10 };
    assertEquals("0,221,121,131,141,151,161,171,181,191,201,212,52,62,72,82,92,102,112,122,132,142,152,162,172,182,193,13,23,33,43,53,63,73,83,93,103,113,123,133,143,153,164,04,14,24,34,44,54,64,74,84,94,104,114,12", weirdrooks.describe(cols));
  }

  @Test
  public void case17() {
    int[] cols = { 3, 5, 7, 9 };
    assertEquals("0,241,151,161,171,181,191,201,211,221,232,82,92,102,112,122,132,142,152,162,172,182,192,202,213,33,43,53,63,73,83,93,103,113,123,133,143,153,163,173,184,04,14,24,34,44,54,64,74,84,94,104,114,124,134,14", weirdrooks.describe(cols));
  }

  @Test
  public void case18() {
    int[] cols = { 3, 4, 5, 6, 7, 8, 9, 10 };
    assertEquals("0,521,421,431,441,451,461,471,481,491,501,512,332,342,352,362,372,382,392,402,412,422,432,442,452,462,472,482,493,253,263,273,283,293,303,313,323,333,343,353,363,373,383,393,403,413,423,433,443,453,464,184,194,204,214,224,234,244,254,264,274,284,294,304,314,324,334,344,354,364,374,384,394,404,414,425,125,135,145,155,165,175,185,195,205,215,225,235,245,255,265,275,285,295,305,315,325,335,345,355,365,376,76,86,96,106,116,126,136,146,156,166,176,186,196,206,216,226,236,246,256,266,276,286,296,306,317,37,47,57,67,77,87,97,107,117,127,137,147,157,167,177,187,197,207,217,227,237,248,08,18,28,38,48,58,68,78,88,98,108,118,128,138,148,158,16", weirdrooks.describe(cols));
  }

  @Test
  public void case19() {
    int[] cols = { 9, 9, 9, 9, 10, 10, 10, 10 };
    assertEquals("0,761,601,611,621,631,641,651,661,671,681,691,701,711,721,731,741,752,462,472,482,492,502,512,522,532,542,552,562,572,582,592,602,612,622,632,642,652,662,672,682,692,702,712,722,733,343,353,363,373,383,393,403,413,423,433,443,453,463,473,483,493,503,513,523,533,543,553,563,573,583,593,603,613,623,633,643,653,663,673,683,693,704,244,254,264,274,284,294,304,314,324,334,344,354,364,374,384,394,404,414,424,434,444,454,464,474,484,494,504,514,524,534,544,554,564,574,584,594,604,614,624,634,644,654,665,155,165,175,185,195,205,215,225,235,245,255,265,275,285,295,305,315,325,335,345,355,365,375,385,395,405,415,425,435,445,455,465,475,485,495,505,515,525,535,545,555,565,575,585,595,605,616,86,96,106,116,126,136,146,156,166,176,186,196,206,216,226,236,246,256,266,276,286,296,306,316,326,336,346,356,366,376,386,396,406,416,426,436,446,456,466,476,486,496,506,516,526,536,546,557,37,47,57,67,77,87,97,107,117,127,137,147,157,167,177,187,197,207,217,227,237,247,257,267,277,287,297,307,317,327,337,347,357,367,377,387,397,407,417,427,437,447,457,467,477,488,08,18,28,38,48,58,68,78,88,98,108,118,128,138,148,158,168,178,188,198,208,218,228,238,248,258,268,278,288,298,308,318,328,338,348,358,368,378,388,398,40", weirdrooks.describe(cols));
  }

  @Test
  public void case20() {
    int[] cols = { 9, 10, 10, 10, 10, 10, 10, 10 };
    assertEquals("0,791,631,641,651,661,671,681,691,701,711,721,731,741,751,761,771,782,482,492,502,512,522,532,542,552,562,572,582,592,602,612,622,632,642,652,662,672,682,692,702,712,722,732,742,752,763,353,363,373,383,393,403,413,423,433,443,453,463,473,483,493,503,513,523,533,543,553,563,573,583,593,603,613,623,633,643,653,663,673,683,693,703,713,723,734,244,254,264,274,284,294,304,314,324,334,344,354,364,374,384,394,404,414,424,434,444,454,464,474,484,494,504,514,524,534,544,554,564,574,584,594,604,614,624,634,644,654,664,674,684,695,155,165,175,185,195,205,215,225,235,245,255,265,275,285,295,305,315,325,335,345,355,365,375,385,395,405,415,425,435,445,455,465,475,485,495,505,515,525,535,545,555,565,575,585,595,605,615,625,635,646,86,96,106,116,126,136,146,156,166,176,186,196,206,216,226,236,246,256,266,276,286,296,306,316,326,336,346,356,366,376,386,396,406,416,426,436,446,456,466,476,486,496,506,516,526,536,546,556,566,576,587,37,47,57,67,77,87,97,107,117,127,137,147,157,167,177,187,197,207,217,227,237,247,257,267,277,287,297,307,317,327,337,347,357,367,377,387,397,407,417,427,437,447,457,467,477,487,497,507,518,08,18,28,38,48,58,68,78,88,98,108,118,128,138,148,158,168,178,188,198,208,218,228,238,248,258,268,278,288,298,308,318,328,338,348,358,368,378,388,398,408,418,428,43", weirdrooks.describe(cols));
  }

  @Test
  public void case21() {
    int[] cols = { 8, 8, 8, 8, 8, 8, 8, 8 };
    assertEquals("0,641,491,501,511,521,531,541,551,561,571,581,591,601,611,621,632,362,372,382,392,402,412,422,432,442,452,462,472,482,492,502,512,522,532,542,552,562,572,582,592,602,613,253,263,273,283,293,303,313,323,333,343,353,363,373,383,393,403,413,423,433,443,453,463,473,483,493,503,513,523,533,543,553,563,573,584,164,174,184,194,204,214,224,234,244,254,264,274,284,294,304,314,324,334,344,354,364,374,384,394,404,414,424,434,444,454,464,474,484,494,504,514,524,534,545,95,105,115,125,135,145,155,165,175,185,195,205,215,225,235,245,255,265,275,285,295,305,315,325,335,345,355,365,375,385,395,405,415,425,435,445,455,465,475,485,496,46,56,66,76,86,96,106,116,126,136,146,156,166,176,186,196,206,216,226,236,246,256,266,276,286,296,306,316,326,336,346,356,366,376,386,396,406,416,426,437,17,27,37,47,57,67,77,87,97,107,117,127,137,147,157,167,177,187,197,207,217,227,237,247,257,267,277,287,297,307,317,327,337,347,357,368,08,18,28,38,48,58,68,78,88,98,108,118,128,138,148,158,168,178,188,198,208,218,228,238,248,258,268,278,28", weirdrooks.describe(cols));
  }

  @Test
  public void case22() {
    int[] cols = { 1, 1, 1, 1, 1, 1, 1, 1 };
    assertEquals("0,81,01,11,21,31,41,51,61,7", weirdrooks.describe(cols));
  }

  @Test
  public void case23() {
    int[] cols = { 1, 1, 1, 1, 1, 1, 1, 2 };
    assertEquals("0,91,11,21,31,41,51,61,71,82,02,12,22,32,42,52,6", weirdrooks.describe(cols));
  }

  @Test
  public void case24() {
    int[] cols = { 1, 1, 1, 1, 1, 1, 1, 10 };
    assertEquals("0,171,71,81,91,101,111,121,131,141,151,162,02,12,22,32,42,52,62,72,82,92,102,112,122,132,14", weirdrooks.describe(cols));
  }

  @Test
  public void case25() {
    int[] cols = { 10 };
    assertEquals("0,101,01,11,21,31,41,51,61,71,81,9", weirdrooks.describe(cols));
  }

  @Test
  public void case26() {
    int[] cols = { 5 };
    assertEquals("0,51,01,11,21,31,4", weirdrooks.describe(cols));
  }

  @Test
  public void case27() {
    int[] cols = { 7, 7, 8, 8, 9, 9, 10, 10 };
    assertEquals("0,681,541,551,561,571,581,591,601,611,621,631,641,651,661,672,422,432,442,452,462,472,482,492,502,512,522,532,542,552,562,572,582,592,602,612,622,632,642,653,313,323,333,343,353,363,373,383,393,403,413,423,433,443,453,463,473,483,493,503,513,523,533,543,553,563,573,583,593,603,613,624,224,234,244,254,264,274,284,294,304,314,324,334,344,354,364,374,384,394,404,414,424,434,444,454,464,474,484,494,504,514,524,534,544,554,564,574,585,145,155,165,175,185,195,205,215,225,235,245,255,265,275,285,295,305,315,325,335,345,355,365,375,385,395,405,415,425,435,445,455,465,475,485,495,505,515,525,536,86,96,106,116,126,136,146,156,166,176,186,196,206,216,226,236,246,256,266,276,286,296,306,316,326,336,346,356,366,376,386,396,406,416,426,436,446,456,466,477,37,47,57,67,77,87,97,107,117,127,137,147,157,167,177,187,197,207,217,227,237,247,257,267,277,287,297,307,317,327,337,347,357,367,377,387,397,408,08,18,28,38,48,58,68,78,88,98,108,118,128,138,148,158,168,178,188,198,208,218,228,238,248,258,268,278,288,298,308,318,32", weirdrooks.describe(cols));
  }

  @Test
  public void case28() {
    int[] cols = { 10, 10, 10, 10, 10, 10, 10, 10 };
    assertEquals("0,801,631,641,651,661,671,681,691,701,711,721,731,741,751,761,771,781,792,482,492,502,512,522,532,542,552,562,572,582,592,602,612,622,632,642,652,662,672,682,692,702,712,722,732,742,752,762,773,353,363,373,383,393,403,413,423,433,443,453,463,473,483,493,503,513,523,533,543,553,563,573,583,593,603,613,623,633,643,653,663,673,683,693,703,713,723,733,744,244,254,264,274,284,294,304,314,324,334,344,354,364,374,384,394,404,414,424,434,444,454,464,474,484,494,504,514,524,534,544,554,564,574,584,594,604,614,624,634,644,654,664,674,684,694,705,155,165,175,185,195,205,215,225,235,245,255,265,275,285,295,305,315,325,335,345,355,365,375,385,395,405,415,425,435,445,455,465,475,485,495,505,515,525,535,545,555,565,575,585,595,605,615,625,635,645,656,86,96,106,116,126,136,146,156,166,176,186,196,206,216,226,236,246,256,266,276,286,296,306,316,326,336,346,356,366,376,386,396,406,416,426,436,446,456,466,476,486,496,506,516,526,536,546,556,566,576,586,597,37,47,57,67,77,87,97,107,117,127,137,147,157,167,177,187,197,207,217,227,237,247,257,267,277,287,297,307,317,327,337,347,357,367,377,387,397,407,417,427,437,447,457,467,477,487,497,507,517,528,08,18,28,38,48,58,68,78,88,98,108,118,128,138,148,158,168,178,188,198,208,218,228,238,248,258,268,278,288,298,308,318,328,338,348,358,368,378,388,398,408,418,428,438,44", weirdrooks.describe(cols));
  }

  @Test
  public void case29() {
    int[] cols = { 8, 8, 9, 9, 9, 9, 10, 10 };
    assertEquals("0,721,571,581,591,601,611,621,631,641,651,661,671,681,691,701,712,442,452,462,472,482,492,502,512,522,532,542,552,562,572,582,592,602,612,622,632,642,652,662,672,682,693,323,333,343,353,363,373,383,393,403,413,423,433,443,453,463,473,483,493,503,513,523,533,543,553,563,573,583,593,603,613,623,633,643,653,664,224,234,244,254,264,274,284,294,304,314,324,334,344,354,364,374,384,394,404,414,424,434,444,454,464,474,484,494,504,514,524,534,544,554,564,574,584,594,604,614,625,145,155,165,175,185,195,205,215,225,235,245,255,265,275,285,295,305,315,325,335,345,355,365,375,385,395,405,415,425,435,445,455,465,475,485,495,505,515,525,535,545,555,565,576,86,96,106,116,126,136,146,156,166,176,186,196,206,216,226,236,246,256,266,276,286,296,306,316,326,336,346,356,366,376,386,396,406,416,426,436,446,456,466,476,486,496,506,517,37,47,57,67,77,87,97,107,117,127,137,147,157,167,177,187,197,207,217,227,237,247,257,267,277,287,297,307,317,327,337,347,357,367,377,387,397,407,417,427,437,448,08,18,28,38,48,58,68,78,88,98,108,118,128,138,148,158,168,178,188,198,208,218,228,238,248,258,268,278,288,298,308,318,328,338,348,358,36", weirdrooks.describe(cols));
  }

  @Test
  public void case30() {
    int[] cols = { 9, 10, 10, 10, 10, 10, 10, 10 };
    assertEquals("0,791,631,641,651,661,671,681,691,701,711,721,731,741,751,761,771,782,482,492,502,512,522,532,542,552,562,572,582,592,602,612,622,632,642,652,662,672,682,692,702,712,722,732,742,752,763,353,363,373,383,393,403,413,423,433,443,453,463,473,483,493,503,513,523,533,543,553,563,573,583,593,603,613,623,633,643,653,663,673,683,693,703,713,723,734,244,254,264,274,284,294,304,314,324,334,344,354,364,374,384,394,404,414,424,434,444,454,464,474,484,494,504,514,524,534,544,554,564,574,584,594,604,614,624,634,644,654,664,674,684,695,155,165,175,185,195,205,215,225,235,245,255,265,275,285,295,305,315,325,335,345,355,365,375,385,395,405,415,425,435,445,455,465,475,485,495,505,515,525,535,545,555,565,575,585,595,605,615,625,635,646,86,96,106,116,126,136,146,156,166,176,186,196,206,216,226,236,246,256,266,276,286,296,306,316,326,336,346,356,366,376,386,396,406,416,426,436,446,456,466,476,486,496,506,516,526,536,546,556,566,576,587,37,47,57,67,77,87,97,107,117,127,137,147,157,167,177,187,197,207,217,227,237,247,257,267,277,287,297,307,317,327,337,347,357,367,377,387,397,407,417,427,437,447,457,467,477,487,497,507,518,08,18,28,38,48,58,68,78,88,98,108,118,128,138,148,158,168,178,188,198,208,218,228,238,248,258,268,278,288,298,308,318,328,338,348,358,368,378,388,398,408,418,428,43", weirdrooks.describe(cols));
  }

}
