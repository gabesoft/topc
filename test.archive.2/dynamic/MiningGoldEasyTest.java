package topc.test.dynamic;

import junit.framework.*;
import org.junit.Test;
import static org.junit.Assert.*;
import topc.dynamic.*;

public class MiningGoldEasyTest {
  MiningGoldEasy mininggoldeasy = new MiningGoldEasy();

  @Test
  public void case1() {
    int N = 2;
    int M = 2;
    int[] event_i = { 0 };
    int[] event_j = { 0 };
    assertEquals(4, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case2() {
    int N = 2;
    int M = 2;
    int[] event_i = { 0, 2 };
    int[] event_j = { 0, 1 };
    assertEquals(7, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case3() {
    int N = 3;
    int M = 3;
    int[] event_i = { 0, 3, 3 };
    int[] event_j = { 0, 3, 0 };
    assertEquals(15, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case4() {
    int N = 3;
    int M = 4;
    int[] event_i = { 0, 3 };
    int[] event_j = { 4, 1 };
    assertEquals(11, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case5() {
    int N = 5;
    int M = 6;
    int[] event_i = { 0, 4, 2, 5, 0 };
    int[] event_j = { 3, 4, 5, 6, 0 };
    assertEquals(48, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case6() {
    int N = 205;
    int M = 993;
    int[] event_i = { 144, 4, 65, 73, 173 };
    int[] event_j = { 344, 939, 707, 372, 257 };
    assertEquals(5742, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case7() {
    int N = 955;
    int M = 550;
    int[] event_i = { 407 };
    int[] event_j = { 202 };
    assertEquals(1505, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case8() {
    int N = 168;
    int M = 224;
    int[] event_i = { 130 };
    int[] event_j = { 75 };
    assertEquals(392, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case9() {
    int N = 881;
    int M = 909;
    int[] event_i = { 325, 877, 8, 437, 39, 399 };
    int[] event_j = { 733, 535, 422, 856, 863, 899 };
    assertEquals(9964, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case10() {
    int N = 807;
    int M = 198;
    int[] event_i = { 271 };
    int[] event_j = { 156 };
    assertEquals(1005, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case11() {
    int N = 997;
    int M = 103;
    int[] event_i = { 254, 950 };
    int[] event_j = { 33, 22 };
    assertEquals(2189, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case12() {
    int N = 557;
    int M = 919;
    int[] event_i = { 81, 509, 428, 6, 448, 149, 77, 142, 40, 405, 109, 247 };
    int[] event_j = { 653, 887, 770, 477, 53, 637, 201, 863, 576, 393, 512, 243 };
    assertEquals(16255, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case13() {
    int N = 27;
    int M = 706;
    int[] event_i = { 15, 21, 20, 6, 17, 18 };
    int[] event_j = { 390, 474, 363, 535, 163, 147 };
    assertEquals(4377, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case14() {
    int N = 629;
    int M = 139;
    int[] event_i = { 56, 229, 225, 387, 10, 314, 264, 125, 235, 429, 88, 265, 20, 549, 384, 606, 203, 4 };
    int[] event_j = { 124, 60, 92, 28, 10, 103, 61, 2, 111, 108, 11, 82, 16, 137, 31, 114, 105, 54 };
    assertEquals(13121, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case15() {
    int N = 845;
    int M = 869;
    int[] event_i = { 697, 115, 254, 486, 755, 600, 753, 395, 545, 433, 96, 205, 12, 292, 58, 200, 666, 526 };
    int[] event_j = { 400, 400, 732, 36, 754, 476, 149, 669, 50, 100, 656, 480, 235, 182, 515, 625, 744, 773 };
    assertEquals(28585, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case16() {
    int N = 800;
    int M = 8;
    int[] event_i = { 734, 415 };
    int[] event_j = { 6, 3 };
    assertEquals(1613, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case17() {
    int N = 193;
    int M = 596;
    int[] event_i = { 35, 186, 77, 189, 28, 166, 3, 178, 190, 189, 136, 52, 86, 107, 31 };
    int[] event_j = { 35, 25, 417, 14, 123, 58, 22, 185, 142, 553, 536, 474, 189, 364, 523 };
    assertEquals(11252, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case18() {
    int N = 233;
    int M = 141;
    int[] event_i = { 8, 76, 223, 88, 45, 155, 142, 130, 71, 110, 106, 228, 31, 135 };
    int[] event_j = { 131, 105, 68, 91, 9, 36, 86, 19, 31, 78, 28, 39, 31, 77 };
    assertEquals(4956, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case19() {
    int N = 207;
    int M = 575;
    int[] event_i = { 119, 59, 87, 100, 86, 44, 105, 41, 40, 75, 92, 28, 79, 146, 132, 83, 84 };
    int[] event_j = { 218, 16, 546, 114, 490, 511, 472, 388, 187, 244, 375, 99, 418, 325, 555, 285, 284 };
    assertEquals(12885, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case20() {
    int N = 707;
    int M = 401;
    int[] event_i = { 441, 167, 159, 403, 198, 112, 590, 163, 189 };
    int[] event_j = { 16, 44, 346, 155, 170, 347, 226, 28, 211 };
    assertEquals(9370, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case21() {
    int N = 442;
    int M = 868;
    int[] event_i = { 3, 232, 92, 71, 20, 430, 220, 345, 276, 255, 114, 260, 168, 232, 244, 327 };
    int[] event_j = { 289, 93, 849, 347, 395, 407, 391, 609, 60, 531, 346, 39, 864, 449, 759, 205 };
    assertEquals(20161, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case22() {
    int N = 458101;
    int M = 597131;
    int[] event_i = { 215159, 104091, 72505, 110670, 88209, 31613, 112241 };
    int[] event_j = { 195050, 420840, 288813, 428358, 361783, 185582, 125142 };
    assertEquals(7140881, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case23() {
    int N = 643082;
    int M = 428602;
    int[] event_i = { 592583, 573765, 405640, 530655, 195116, 486681 };
    int[] event_j = { 210330, 211900, 174917, 168013, 179139, 122526 };
    assertEquals(6310786, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case24() {
    int N = 73751;
    int M = 637180;
    int[] event_i = { 56476, 72127, 40716, 52325, 44798, 34101, 58265, 25120, 60853, 51717, 17027, 17427, 20482, 37629, 71117 };
    int[] event_j = { 278115, 561527, 506321, 329801, 73886, 50362, 353583, 1407, 628328, 539156, 193085, 360960, 18452, 548526, 514079 };
    assertEquals(10434497, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case25() {
    int N = 123260;
    int M = 350558;
    int[] event_i = { 93843, 74004 };
    int[] event_j = { 314878, 184226 };
    assertEquals(927797, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case26() {
    int N = 590179;
    int M = 444631;
    int[] event_i = { 307615, 291931, 44564, 222692, 280718, 417385, 136006, 79988, 461028, 312967, 86648, 237742, 385552, 473426, 441138, 428883, 146099, 488128, 529578 };
    int[] event_j = { 189310, 58689, 78130, 110815, 11562, 63607, 291585, 342214, 221904, 373324, 206292, 51587, 250331, 161496, 238803, 194919, 104566, 88853, 324602 };
    assertEquals(18519852, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case27() {
    int N = 688262;
    int M = 424329;
    int[] event_i = { 408128, 316061, 21962, 664523, 352802, 580602, 49157, 514737, 322195, 572264, 676817, 69871 };
    int[] event_j = { 142058, 349604, 320979, 234185, 319423, 195768, 184087, 4461, 198889, 207141, 249488, 269025 };
    assertEquals(12572912, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case28() {
    int N = 532084;
    int M = 819383;
    int[] event_i = { 359644, 465377, 500312, 215462, 375456, 509839, 363941, 114496, 305984 };
    int[] event_j = { 350503, 206067, 512601, 376013, 449348, 258906, 418356, 184123, 632460 };
    assertEquals(11446060, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case29() {
    int N = 728219;
    int M = 946600;
    int[] event_i = { 621272, 507178, 504281, 660064, 164356, 496385, 95146, 392515, 70916, 227976, 119463, 258277, 702837, 416123, 77974, 179823, 625633, 486274, 401309, 291023, 61041, 574671, 329308, 713786, 11566, 357260, 231867, 414141, 168078, 335058, 400892, 98262, 151148, 176953, 67239, 315505, 710471 };
    int[] event_j = { 151090, 514312, 328521, 900851, 197887, 497281, 147808, 669819, 432501, 476067, 345183, 819394, 810272, 572502, 941635, 112616, 351754, 813930, 267810, 294934, 790621, 786210, 843429, 268888, 931344, 274694, 79837, 159706, 671350, 663023, 435965, 822440, 230735, 764486, 184111, 782643, 315166 };
    assertEquals(57134282, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case30() {
    int N = 194298;
    int M = 284090;
    int[] event_i = { 154616, 183446, 194290, 26099, 12727, 168030, 128852, 146271, 152035, 59707, 139512, 82225, 2385, 164448, 89874, 132879, 90971, 12444, 168293, 112178, 7561, 166764, 13239, 66544, 78094, 159836, 187345, 130434, 2598, 179722, 32120, 157214, 168869, 135311, 183313, 181597 };
    int[] event_j = { 165767, 228178, 108720, 8885, 12432, 191156, 54221, 192644, 260960, 182658, 169293, 144987, 78088, 202059, 56858, 221865, 171756, 198285, 191108, 110447, 204335, 174208, 143491, 277999, 88641, 41282, 51994, 43430, 57958, 206681, 23080, 223725, 150768, 92022, 192831, 123422 };
    assertEquals(15909839, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case31() {
    int N = 96228;
    int M = 501754;
    int[] event_i = { 55188, 30667, 24275, 28794, 85780, 19798, 24280, 54256, 35912, 44489, 10110, 84579, 39752, 28950, 23027, 17953, 9755, 57477, 73511, 81308, 59869 };
    int[] event_j = { 379427, 274950, 251238, 284924, 493206, 384981, 397501, 193643, 282140, 243119, 110646, 125347, 119475, 134115, 384442, 191165, 6714, 399154, 427412, 33679, 461212 };
    assertEquals(12251497, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case32() {
    int N = 122801;
    int M = 477683;
    int[] event_i = { 71114, 20378, 13463, 82630, 93024, 3841, 71636, 102914, 75502, 48604, 50267, 68655, 87090, 105349, 5464, 96970, 61233, 76315, 92927, 47855, 71559 };
    int[] event_j = { 242296, 129248, 263864, 76007, 277305, 464859, 150726, 154138, 205621, 215850, 113086, 365239, 345395, 76154, 341569, 154249, 209962, 253059, 87791, 168612, 173091 };
    assertEquals(12123660, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case33() {
    int N = 319270;
    int M = 782627;
    int[] event_i = { 289869, 7637, 41940, 93402, 150620, 312080, 194341, 21963, 62221 };
    int[] event_j = { 597287, 429978, 17633, 335596, 184414, 109315, 456481, 381052, 733618 };
    assertEquals(9246794, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case34() {
    int N = 233417;
    int M = 280870;
    int[] event_i = { 12894, 186279, 189134, 141441, 101823, 231178, 177062, 185647, 101866, 157220, 5229, 189137, 149429, 69688, 92339, 16013, 132986, 95135, 115957, 97141, 24512, 168548, 38201, 194634, 100471, 98771, 13779, 173915, 40532, 76209, 167785, 53426, 29070, 123501, 194868, 92846, 83213, 100464, 45075, 147032, 219637, 50304, 102751, 97600, 81944, 195090, 113614, 214930, 18759, 229571 };
    int[] event_j = { 239479, 114268, 95955, 141926, 95300, 88672, 110181, 232245, 263327, 62472, 181765, 124403, 191432, 73044, 244380, 228755, 272239, 61481, 268147, 72915, 58480, 110938, 202919, 92957, 68778, 65486, 275837, 129545, 126937, 2207, 147651, 141563, 116475, 243607, 58636, 267793, 51408, 168817, 219168, 89883, 6436, 120062, 270304, 253886, 249124, 233813, 201770, 240492, 70442, 189047 };
    assertEquals(23790496, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case35() {
    int N = 584693;
    int M = 22946;
    int[] event_i = { 348340, 349580, 215436, 537095, 137892, 200864, 424150, 116532, 13380, 315847 };
    int[] event_j = { 19491, 3601, 9249, 11169, 11812, 18716, 18337, 6358, 21616, 13572 };
    assertEquals(6033286, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case36() {
    int N = 835559;
    int M = 270608;
    int[] event_i = { 46142, 535943, 370301 };
    int[] event_j = { 8183, 130787, 23149 };
    assertEquals(3195897, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case37() {
    int N = 3339;
    int M = 302516;
    int[] event_i = { 1876, 2830, 2896, 1571, 1406, 1151, 1763 };
    int[] event_j = { 138167, 111995, 158888, 120790, 195981, 277967, 83233 };
    assertEquals(2137511, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case38() {
    int N = 695738;
    int M = 697700;
    int[] event_i = { 172528, 496373, 35182, 324223, 285227, 554492, 555305, 509071, 677306, 373945 };
    int[] event_j = { 355254, 577922, 117513, 587040, 10512, 297808, 118907, 162148, 212253, 378225 };
    assertEquals(12771887, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case39() {
    int N = 470789;
    int M = 956587;
    int[] event_i = { 274548, 50034, 404321, 346243, 174224, 470702, 140442, 81804, 393220, 441254, 165702, 21311, 124259, 391603, 163560, 72998, 12523, 51198, 51974, 333181, 93244, 149170 };
    int[] event_j = { 345649, 920733, 113426, 315796, 41442, 747126, 294702, 192992, 715998, 690486, 793810, 359865, 772469, 140530, 192384, 756602, 703378, 27556, 279678, 603344, 446236, 29910 };
    assertEquals(29156402, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case40() {
    int N = 129052;
    int M = 934424;
    int[] event_i = { 128814, 50590, 102526, 91335, 81605, 120708, 31151, 19383, 90136, 104981, 22503, 55771, 86053, 110955, 67410, 111829, 64147, 62199, 106336, 14382, 110862, 32946, 51456, 101133, 77585, 50426 };
    int[] event_j = { 600302, 156421, 529208, 176425, 385822, 922021, 682262, 693535, 815613, 918336, 683417, 257687, 257022, 45258, 559611, 884321, 687075, 347001, 718280, 566393, 586625, 563568, 659132, 456980, 279111, 798817 };
    assertEquals(26971067, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case41() {
    int N = 390789;
    int M = 713598;
    int[] event_i = { 188858, 241404, 262557, 167180, 156461, 135363, 105756, 383157, 37146, 264093, 243050, 140376, 51440, 25085, 148973, 132199, 363515, 364199, 54826, 341984, 6319, 348499, 175584, 174712, 122880, 76633, 269552, 184461, 239437, 188139, 18411, 37505, 336945, 188370, 204685, 102617, 231136, 217843, 2386, 268282, 389339, 152838 };
    int[] event_j = { 664355, 380052, 502077, 236900, 587953, 148196, 618904, 263749, 153732, 562384, 255320, 659283, 113080, 149335, 171015, 504722, 426433, 377066, 317216, 581845, 705034, 620775, 663842, 667054, 509277, 115253, 307494, 551730, 460212, 238465, 104669, 146711, 618517, 606746, 383612, 228614, 41344, 24660, 228107, 644418, 587045, 483427 };
    assertEquals(43449991, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case42() {
    int N = 1000000;
    int M = 1000000;
    int[] event_i = { 599753, 238473, 440990, 310559, 91417, 770668, 234344, 896721, 852317, 881632, 394426, 647866, 445010, 738610, 408184, 912570, 604070, 282789, 623465, 843256, 411494, 549022, 506926, 384846, 375290, 777192, 523104, 835409, 421244, 413081, 953152, 539496, 170054, 394142, 368554, 261471, 683309, 602899, 158191, 535625, 484530, 552617, 701990, 929540, 809726, 110174, 360608, 413795, 911463, 984073 };
    int[] event_j = { 775551, 841457, 51594, 282476, 226302, 426884, 578168, 749407, 262292, 517911, 162487, 733944, 575906, 851041, 646585, 944461, 112511, 329893, 547359, 270702, 384017, 31888, 823319, 86006, 479927, 151543, 714680, 359035, 565339, 626143, 343107, 859389, 986099, 913201, 141864, 212400, 340085, 238531, 480306, 120876, 756442, 642794, 854820, 850848, 493834, 501404, 795308, 124845, 349796, 342666 };
    assertEquals(93667160, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case43() {
    int N = 1000000;
    int M = 1000000;
    int[] event_i = { 625849, 628299, 128518, 969981, 292870, 141935, 967837, 666512, 126874, 263233, 822284, 993283, 378802, 767499, 394361, 72770, 485588, 645384, 181193, 370778, 664010, 276443, 966866, 977468, 330365, 721448, 971125, 343497, 801721, 991691, 97304, 946069, 138488, 225822, 434549, 431358, 367758, 920885, 97870, 13131, 184118, 438653, 6414, 81419, 206152, 400775, 154189, 210239, 564658, 853883 };
    int[] event_j = { 99517, 228667, 130325, 66382, 206135, 460690, 306329, 177259, 804188, 108049, 687449, 419991, 572618, 825937, 645813, 7166, 775795, 532070, 446550, 392164, 545202, 630668, 830817, 551616, 230586, 555468, 470890, 903276, 284207, 35548, 757158, 383724, 264215, 887483, 450106, 988850, 866672, 756435, 684609, 670859, 382983, 372057, 90849, 955601, 716494, 255162, 481266, 492288, 787232, 927817 };
    assertEquals(92515235, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case44() {
    int N = 1000000;
    int M = 1000000;
    int[] event_i = { 33297, 279405, 996716, 411341, 915989, 566880, 508613, 480297, 879312, 475574, 773825, 524218, 100418, 557003, 97118, 469540, 977724, 310328, 106917, 474609, 899937, 765522, 177791, 666249, 878808, 758931, 936603, 816420, 596148, 547390, 892126, 629445, 345294, 407341, 559286, 261282, 974221, 586398, 260078, 853532, 61971, 33903, 896250, 680889, 109405, 511867, 668929, 87128, 822195, 775846 };
    int[] event_j = { 561738, 722132, 59866, 258028, 906880, 938674, 535458, 843482, 273592, 131605, 909371, 165718, 279550, 254664, 573059, 838836, 34446, 65778, 425233, 294524, 919311, 5703, 846927, 334059, 686592, 956332, 845926, 355520, 561960, 186619, 649865, 642197, 427250, 228230, 418724, 334129, 685403, 954182, 696110, 958996, 85786, 123979, 643213, 365336, 897144, 734771, 722671, 931590, 800549, 147903 };
    assertEquals(91022913, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case45() {
    int N = 1000000;
    int M = 1000000;
    int[] event_i = { 312326, 3229, 385957, 57363, 567877, 728871, 535983, 500908, 406415, 111650, 326359, 585112, 495011, 660423, 73915, 163741, 569578, 317467, 450845, 40562, 930671, 492819, 899355, 659517, 257908, 550220, 998201, 568426, 426853, 85035, 80723, 257678, 606764, 466680, 315041, 693140, 714051, 369523, 194048, 638965, 481173, 38906, 224076, 976184, 699329, 816491, 658425, 787406, 133957, 627769 };
    int[] event_j = { 827969, 583127, 120587, 245822, 761144, 896995, 796042, 277843, 465420, 741394, 362878, 546144, 999072, 969643, 531323, 314112, 181281, 763873, 683635, 893829, 402837, 683307, 932735, 145412, 177990, 632063, 961904, 836415, 937969, 614360, 464183, 765937, 715987, 103269, 11758, 995630, 264, 326299, 273472, 465684, 586193, 636351, 530327, 585264, 124492, 580150, 417876, 305773, 344022, 620010 };
    assertEquals(93177554, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case46() {
    int N = 1000000;
    int M = 1000000;
    int[] event_i = { 879243, 118980, 840584, 208956, 480747, 175185, 293170, 262202, 836281, 51689, 940009, 159843, 480271, 960432, 979541, 74009, 932700, 167047, 6644, 506017, 971771, 875320, 965842, 423370, 230341, 717843, 116259, 970318, 53525, 999274, 584012, 451268, 636753, 943096, 660224, 117500, 636780, 953394, 898202, 473061, 523582, 838210, 151403, 3852, 798641, 130944, 77861, 249839, 297991, 84505 };
    int[] event_j = { 755856, 269762, 478324, 240196, 211631, 708666, 958039, 846390, 197482, 530064, 845664, 299993, 981332, 915, 243088, 641555, 118415, 879869, 594949, 535116, 871429, 118530, 373325, 22831, 640883, 690465, 672275, 718744, 940305, 488766, 321749, 214659, 277027, 800073, 454856, 488658, 508738, 931394, 853547, 224719, 461457, 217709, 524713, 961288, 218625, 286300, 121342, 855540, 166168, 234790 };
    assertEquals(90847192, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case47() {
    int N = 1000000;
    int M = 1000000;
    int[] event_i = { 777213, 243131, 397002, 658756, 966489, 976620, 75053, 606183, 736416, 366217, 137262, 759072, 246199, 390179, 736952, 318702, 337450, 690875, 991292, 524628, 930482, 186562, 539485, 176570, 151114, 700757, 322002, 659396, 952345, 241710, 686080, 248056, 3340, 601582, 425311, 488328, 96700, 18863, 94511, 351616, 385080, 231773, 110687, 149778, 140451, 847639, 468481, 477901, 57013, 978272 };
    int[] event_j = { 2528, 505994, 683333, 60513, 201064, 834447, 761270, 523066, 12342, 232113, 764776, 216921, 998669, 286615, 337002, 423979, 774943, 952203, 442843, 869454, 303818, 346422, 619726, 933005, 496201, 760177, 780644, 483181, 238078, 356156, 979952, 759106, 862150, 181783, 819619, 63213, 534730, 99387, 586279, 547072, 850000, 869554, 282492, 848668, 156168, 619495, 791147, 931112, 571697, 752489 };
    assertEquals(92296467, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case48() {
    int N = 1000000;
    int M = 1000000;
    int[] event_i = { 410372, 463998, 902762, 291924, 28157, 657259, 768536, 175741, 204105, 321993, 386093, 444272, 191326, 600457, 586998, 75667, 946038, 658246, 15967, 289156, 375976, 771216, 322807, 143770, 707639, 787947, 829184, 240552, 524333, 524883, 975013, 453204, 507380, 877774, 263627, 535538, 535032, 32162, 711279, 257636, 872656, 97371, 701909, 63981, 697828, 288906, 139648, 643865, 465651, 674115 };
    int[] event_j = { 451521, 841628, 445330, 774328, 503897, 671469, 80774, 851581, 430520, 123606, 376463, 405532, 95309, 883843, 283305, 358937, 937880, 336836, 391099, 649158, 594473, 782254, 265029, 296381, 846235, 962857, 103786, 504382, 125221, 87936, 178497, 95241, 448063, 142326, 388068, 951961, 332294, 468842, 803541, 762814, 592448, 698503, 168345, 687758, 100844, 970150, 46694, 38724, 306986, 956293 };
    assertEquals(91933018, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case49() {
    int N = 1000000;
    int M = 1000000;
    int[] event_i = { 783750, 699268, 245759, 606150, 776857, 185376, 334891, 374427, 802698, 635756, 889993, 155272, 657936, 895263, 682700, 904800, 334203, 963558, 721519, 271520, 829129, 937741, 70931, 829670, 341116, 733410, 533735, 106573, 934908, 104647, 779573, 237157, 803916, 543831, 843307, 99271, 729208, 178198, 992198, 50404, 332453, 400689, 724176, 508888, 814452, 925375, 932188, 148654, 888932, 653706 };
    int[] event_j = { 938674, 718061, 109945, 9605, 66229, 969561, 743015, 599964, 76133, 196421, 704611, 374205, 433578, 27025, 918037, 276885, 644797, 647244, 973583, 155493, 697648, 824535, 556183, 940323, 333423, 370634, 865698, 265610, 37787, 754629, 437815, 976462, 991189, 547760, 504566, 57417, 517320, 247580, 175880, 111953, 962501, 398991, 486158, 396079, 944516, 404194, 191463, 589312, 569937, 165045 };
    assertEquals(90275325, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case50() {
    int N = 1000000;
    int M = 1000000;
    int[] event_i = { 981377, 419357, 103054, 843542, 161090, 680702, 690531, 953415, 864010, 365178, 383141, 714444, 778345, 153731, 387672, 156267, 710369, 800028, 273638, 868541, 623957, 297938, 717253, 211104, 90920, 56197, 994678, 616900, 395772, 650281, 741926, 895648, 69637, 844981, 739190, 230727, 44181, 948220, 702641, 908191, 831897, 604281, 141134, 610242, 758013, 47305, 766509, 986881, 847333, 558647 };
    int[] event_j = { 373921, 989789, 856585, 91173, 719393, 466005, 665870, 714070, 601404, 580141, 364350, 861830, 475788, 952487, 225309, 733477, 701713, 269490, 681697, 404353, 696180, 513593, 8634, 837314, 642334, 285146, 403118, 408843, 790526, 768950, 485989, 682946, 758739, 342573, 292618, 478131, 808578, 958488, 710700, 928482, 538628, 593550, 790311, 532916, 64535, 15619, 784892, 766249, 285109, 466588 };
    assertEquals(92188281, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case51() {
    int N = 1000000;
    int M = 1000000;
    int[] event_i = { 769230, 354968, 12146, 760177, 600727, 402047, 480421, 210507, 328793, 284941, 745546, 170303, 295501, 78519, 946646, 924673, 268895, 225729, 136, 564299, 573517, 979264, 853541, 743642, 885560, 591471, 100954, 289581, 281655, 59279, 773698, 569385, 932747, 304343, 329561, 533473, 224889, 328481, 262479, 553682, 613422, 8024, 242485, 908923, 605043, 707630, 352095, 873938, 933359, 870731 };
    int[] event_j = { 956736, 25375, 849994, 810277, 769017, 735554, 920247, 869971, 543634, 720401, 447749, 835832, 289785, 380495, 658674, 137846, 432467, 883564, 466327, 213445, 955745, 79749, 221469, 198229, 507171, 345011, 905860, 859266, 737448, 357717, 729996, 694184, 383092, 579990, 22959, 152108, 834043, 943206, 540579, 377676, 663606, 506827, 732007, 471891, 887323, 390681, 609737, 838289, 792744, 76063 };
    assertEquals(93148095, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case52() {
    int N = 1000000;
    int M = 1000000;
    int[] event_i = { 258663 };
    int[] event_j = { 496447 };
    assertEquals(2000000, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case53() {
    int N = 1000000;
    int M = 1000000;
    int[] event_i = { 948753, 926295 };
    int[] event_j = { 221748, 105103 };
    assertEquals(3977542, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case54() {
    int N = 1000000;
    int M = 1000000;
    int[] event_i = { 762720, 894458 };
    int[] event_j = { 264830, 155244 };
    assertEquals(3890414, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case55() {
    int N = 1000000;
    int M = 1000000;
    int[] event_i = { 467142, 942426 };
    int[] event_j = { 90851, 33144 };
    assertEquals(3942293, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case56() {
    int N = 1000000;
    int M = 1000000;
    int[] event_i = { 707132, 528653 };
    int[] event_j = { 481717, 133485 };
    assertEquals(3821521, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case57() {
    int N = 1000000;
    int M = 1000000;
    int[] event_i = { 258329, 783217, 638693, 315530, 681539, 866232, 926932, 297464, 377461, 635103, 359432, 126420, 797619, 819811, 647438, 646461, 59913, 569010, 520764, 610106, 216069, 916440, 859661, 125994, 61023, 213575, 392250, 515112, 351134, 874979 };
    int[] event_j = { 690884, 609463, 658196, 329576, 443492, 339734, 195807, 370423, 155698, 91768, 5525, 33629, 736688, 321644, 371939, 384125, 486604, 431852, 953136, 7367, 560458, 687704, 923807, 938618, 332197, 503330, 152193, 724448, 536941, 503327 };
    assertEquals(56944222, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case58() {
    int N = 1000000;
    int M = 1000000;
    int[] event_i = { 22720, 605008, 196602, 890571, 898976, 225229, 674743, 967881, 222822, 700354, 670449, 991021, 759361, 485317, 603542, 848598, 442878, 79601, 343307, 155110, 275603, 499341, 927130, 193094, 748008, 188598, 538791, 781880, 59177, 594474 };
    int[] event_j = { 517293, 81897, 199481, 713895, 490968, 98457, 457623, 165710, 584837, 680445, 384563, 773785, 189964, 143924, 777601, 312006, 511021, 738978, 391607, 854329, 412588, 185709, 353669, 339717, 378804, 101676, 46814, 917595, 402056, 105991 };
    assertEquals(54941350, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case59() {
    int N = 1000000;
    int M = 1000000;
    int[] event_i = { 280575, 895882, 465918, 608663, 748439, 99237, 94895, 374521, 348072, 759170, 857233, 475978, 304472, 543852, 409060, 168435, 667279, 599307, 884796, 900783, 796775, 914324, 121640, 909563, 912121, 291408, 628495, 887955, 228416, 811545 };
    int[] event_j = { 214969, 508991, 225926, 199386, 117653, 974365, 298623, 212549, 348885, 165194, 490218, 724618, 159672, 794690, 268469, 87231, 481624, 454247, 205037, 366419, 355029, 1811, 280743, 476669, 911375, 711363, 768078, 58368, 599317, 514993 };
    assertEquals(55853495, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case60() {
    int N = 1000000;
    int M = 1000000;
    int[] event_i = { 206761, 649827, 607628, 209797, 185464, 825038, 504939, 853521, 465389, 368704, 871875, 793980, 829485, 471782, 905628, 661340, 788167, 841259, 441487, 683464, 788304, 279425, 787684, 524008, 796483, 827680, 318454, 591480, 771217, 922965 };
    int[] event_j = { 254252, 496478, 91290, 861880, 706275, 795254, 205416, 729713, 648774, 670805, 616916, 520648, 983285, 446401, 992430, 407411, 626240, 299096, 767170, 67726, 982560, 555473, 865651, 770243, 597980, 662133, 116422, 916434, 772113, 406138 };
    assertEquals(55926002, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case61() {
    int N = 10;
    int M = 10;
    int[] event_i = { 3, 3, 0, 0, 2, 0, 4, 4, 6, 2, 9, 9, 5, 9, 8, 0, 5, 2, 9, 0, 0, 3, 4, 7, 0, 2, 9, 3, 5, 3, 4, 7, 4, 2, 7, 6, 0, 0, 9, 6, 1, 5, 3, 6, 1, 0, 4, 6, 2, 1 };
    int[] event_j = { 6, 0, 4, 8, 7, 4, 8, 6, 8, 3, 7, 10, 10, 1, 2, 4, 5, 2, 2, 1, 9, 3, 6, 1, 10, 8, 10, 1, 1, 10, 2, 8, 0, 6, 5, 5, 9, 1, 0, 6, 4, 6, 5, 1, 5, 7, 3, 10, 8, 5 };
    assertEquals(922, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case62() {
    int N = 10;
    int M = 10;
    int[] event_i = { 7, 9, 9, 8, 6, 6, 8, 9, 9, 9, 0, 9, 10, 1, 7, 4, 2, 0, 1, 3, 8, 9, 7, 10, 3, 2, 8, 7, 9, 4, 8, 3, 3, 6, 1, 7, 10, 9, 6, 8, 5, 6, 6, 2, 6, 0, 4, 8, 10, 5 };
    int[] event_j = { 10, 5, 4, 6, 3, 7, 8, 0, 1, 4, 5, 9, 7, 6, 2, 6, 2, 1, 2, 8, 7, 7, 2, 0, 7, 6, 10, 0, 3, 9, 6, 2, 3, 8, 6, 4, 2, 3, 5, 3, 5, 8, 10, 0, 3, 10, 6, 5, 9, 9 };
    assertEquals(925, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case63() {
    int N = 10;
    int M = 10;
    int[] event_i = { 9, 4, 1, 7, 5, 8, 10, 2, 9, 8, 5, 1, 8, 4, 5, 1, 1, 8, 0, 9, 10, 1, 4, 6, 4, 7, 4, 3, 7, 8, 6, 6, 0, 5, 0, 5, 0, 10, 5, 10, 5, 0, 9, 0, 2, 1, 2, 1, 8, 2 };
    int[] event_j = { 8, 5, 1, 0, 0, 5, 5, 2, 7, 2, 9, 0, 8, 9, 6, 6, 1, 4, 3, 6, 1, 9, 4, 10, 7, 4, 1, 9, 3, 7, 9, 10, 1, 10, 8, 1, 3, 2, 1, 8, 4, 10, 8, 1, 6, 1, 5, 7, 4, 9 };
    assertEquals(905, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case64() {
    int N = 10;
    int M = 10;
    int[] event_i = { 3, 5, 5, 5, 7, 1, 7, 4, 3, 9, 2, 7, 9, 8, 1, 10, 3, 2, 5, 9, 7, 2, 8, 10, 3, 8, 8, 1, 8, 0, 3, 9, 5, 6, 4, 0, 8, 9, 4, 9, 7, 6, 3, 3, 3, 4, 0, 4, 6, 5 };
    int[] event_j = { 2, 0, 7, 9, 10, 8, 4, 5, 7, 2, 5, 0, 0, 0, 6, 2, 0, 1, 0, 2, 8, 5, 7, 9, 8, 10, 2, 6, 2, 7, 0, 2, 5, 6, 0, 3, 3, 5, 8, 0, 5, 3, 9, 3, 1, 2, 6, 10, 4, 4 };
    assertEquals(922, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case65() {
    int N = 10;
    int M = 10;
    int[] event_i = { 3, 2, 0, 10, 7, 3, 7, 2, 3, 9, 7, 3, 3, 7, 5, 5, 5, 3, 3, 5, 7, 9, 1, 8, 7, 4, 6, 4, 9, 7, 0, 2, 9, 0, 10, 3, 2, 7, 5, 5, 3, 1, 6, 6, 9, 10, 9, 1, 2, 1 };
    int[] event_j = { 5, 9, 8, 6, 4, 4, 8, 10, 9, 7, 4, 7, 7, 3, 6, 6, 6, 8, 0, 10, 0, 3, 9, 4, 8, 7, 3, 6, 7, 5, 6, 1, 2, 3, 5, 4, 6, 3, 4, 4, 8, 8, 9, 4, 9, 2, 10, 3, 10, 9 };
    assertEquals(928, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case66() {
    int N = 10;
    int M = 10;
    int[] event_i = { 2, 4, 6, 0, 3, 5, 0, 4, 6, 8, 10, 2, 7, 10, 3, 7, 2, 0, 8, 7, 7, 2, 4, 3, 8, 2, 10, 3, 0, 10, 6, 0, 3, 0, 9, 4, 3, 8, 8, 9, 3, 5, 0, 10, 3, 3, 4, 5, 4, 1 };
    int[] event_j = { 1, 9, 3, 6, 10, 1, 6, 9, 2, 6, 6, 8, 5, 8, 6, 3, 1, 9, 0, 8, 8, 4, 0, 8, 1, 3, 10, 6, 9, 1, 5, 8, 10, 7, 3, 9, 6, 8, 5, 8, 3, 0, 3, 6, 8, 10, 10, 8, 6, 8 };
    assertEquals(901, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case67() {
    int N = 4;
    int M = 10;
    int[] event_i = { 0, 0, 3, 2, 1, 2, 1, 3, 2, 3, 1, 0, 2, 1, 4, 3, 3, 0, 3, 1, 1, 0, 2, 1, 1, 4, 3, 2, 0, 3, 0, 0, 0, 3, 0, 1, 3, 1, 1, 0, 1, 3, 0, 0, 1, 2, 4, 2, 2, 4 };
    int[] event_j = { 4, 4, 9, 8, 6, 10, 0, 10, 9, 0, 9, 3, 8, 1, 2, 8, 10, 7, 10, 6, 1, 0, 10, 6, 10, 3, 10, 8, 10, 5, 4, 3, 8, 2, 9, 3, 1, 8, 2, 8, 8, 9, 9, 3, 8, 0, 10, 5, 6, 7 };
    assertEquals(653, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case68() {
    int N = 9;
    int M = 7;
    int[] event_i = { 7, 1, 1, 7, 5, 6, 6, 7, 7, 1, 4, 9, 4, 2, 2, 3, 9, 3, 8, 0, 8, 5, 8, 8, 8, 8, 0, 7, 2, 8, 7, 2, 0, 8, 9, 5, 4, 7, 5, 3, 8, 1, 2, 4, 3, 7, 8, 2, 2, 6 };
    int[] event_j = { 4, 5, 1, 1, 1, 4, 5, 7, 5, 7, 1, 4, 5, 1, 7, 5, 7, 3, 6, 4, 5, 3, 5, 3, 5, 1, 4, 5, 7, 7, 4, 4, 4, 5, 5, 5, 1, 2, 4, 6, 1, 5, 3, 7, 7, 2, 4, 6, 5, 2 };
    assertEquals(744, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case69() {
    int N = 9;
    int M = 9;
    int[] event_i = { 7, 6, 6, 1, 5, 1, 9, 8, 8, 7, 4, 1, 4, 1, 2, 8, 3, 8, 3, 7, 0, 2, 8, 2, 8, 2, 0, 5, 3, 1, 3, 0, 9, 9, 3, 4, 0, 2, 5, 1, 1, 1, 2, 8, 3, 6, 6, 6, 6, 1 };
    int[] event_j = { 5, 7, 5, 5, 1, 4, 9, 4, 9, 2, 7, 4, 4, 6, 3, 7, 0, 5, 2, 7, 6, 5, 9, 1, 3, 2, 9, 2, 0, 6, 5, 7, 5, 1, 2, 8, 5, 1, 2, 6, 4, 9, 2, 0, 7, 5, 8, 0, 2, 0 };
    assertEquals(828, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case70() {
    int N = 367715;
    int M = 323561;
    int[] event_i = { 83152, 211522, 306962, 214075, 153020, 31550, 189092, 153513, 46242, 113027, 314853, 122419, 301791, 177215, 5590, 362452, 174570 };
    int[] event_j = { 271177, 191855, 190847, 252496, 40232, 8289, 34916, 149019, 48777, 194577, 322020, 297269, 265171, 47930, 239576, 246240, 39755 };
    assertEquals(10744128, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case71() {
    int N = 448070;
    int M = 59239;
    int[] event_i = { 237519 };
    int[] event_j = { 38916 };
    assertEquals(507309, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case72() {
    int N = 825207;
    int M = 757565;
    int[] event_i = { 600305, 795176, 30996, 470240, 804571, 169629, 251888, 94074, 378311, 380014, 705875, 467691, 270474, 654845, 376767, 668866, 681050, 28313, 198031, 572127, 776438, 167135, 83863 };
    int[] event_j = { 379013, 431680, 624408, 120446, 528268, 144180, 120698, 534991, 463951, 540100, 542903, 165704, 101083, 266290, 489036, 548213, 51036, 750076, 267321, 262395, 374941, 587392, 396944 };
    assertEquals(33387256, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case73() {
    int N = 630244;
    int M = 728285;
    int[] event_i = { 441036, 94412, 175510, 176196, 209140, 209900, 138540, 590023, 351360, 39647, 213828, 218904, 543571, 68703, 73712, 569161, 51916, 528129, 138221, 438397, 171444, 363509, 90939, 621920, 493684, 557512, 605559, 462732, 511180, 56738, 309535, 83038, 542463, 485046, 20301, 121358, 456013, 158841, 472448 };
    int[] event_j = { 605630, 193029, 135480, 12178, 106225, 711739, 306678, 338875, 141343, 641383, 124981, 46366, 227239, 572936, 656564, 525521, 440854, 53635, 539714, 412341, 550310, 75042, 396417, 179682, 400285, 545529, 360624, 129147, 471737, 446391, 514477, 349081, 142900, 649957, 593025, 249125, 633410, 403183, 91480 };
    assertEquals(48668128, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case74() {
    int N = 191934;
    int M = 505771;
    int[] event_i = { 22620, 84715, 75639, 61340, 30182, 179937, 70634, 63704, 5553, 175694, 164803, 36481, 50331, 191778, 94309, 157362, 10418, 75281, 28008, 170396, 144723, 122953 };
    int[] event_j = { 149499, 402115, 88697, 193278, 140354, 446160, 297845, 295484, 219645, 261593, 303557, 383164, 444182, 124107, 434589, 1113, 395623, 143225, 341739, 414264, 133689, 10641 };
    assertEquals(14436634, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case75() {
    int N = 966228;
    int M = 951573;
    int[] event_i = { 303020, 586818, 790734 };
    int[] event_j = { 690404, 816215, 782148 };
    assertEquals(5627592, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case76() {
    int N = 204612;
    int M = 4665;
    int[] event_i = { 164011, 58267, 58929 };
    int[] event_j = { 307, 3273, 4007 };
    assertEquals(624203, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case77() {
    int N = 288475;
    int M = 450346;
    int[] event_i = { 10020, 282801, 74535, 166787, 61771, 124014, 263270, 30595, 260351, 162238, 221656, 237514, 97780, 178725, 242700, 183880, 252145, 272555, 12722, 182221, 109030, 199352, 73736, 269711, 98184, 52018, 195229, 252214, 1809, 286943, 143520, 11829, 281268, 218056, 110312 };
    int[] event_j = { 403819, 397561, 66802, 22865, 280919, 136024, 443887, 129815, 445773, 263959, 284354, 8008, 347634, 138749, 140651, 84822, 16546, 268877, 327218, 94427, 106187, 365854, 392370, 195827, 424189, 283637, 181008, 3056, 201685, 11860, 360591, 376352, 180270, 198241, 399217 };
    assertEquals(23421611, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case78() {
    int N = 480130;
    int M = 167554;
    int[] event_i = { 395434, 292949, 283518 };
    int[] event_j = { 163355, 142041, 24809 };
    assertEquals(1912307, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case79() {
    int N = 441138;
    int M = 533494;
    int[] event_i = { 24972, 353098, 403349, 70674, 258231, 327988, 393401, 55363, 17047, 364053, 11125, 170129, 162274, 340393, 229816, 336215, 293529, 327216, 249757, 355708, 364993, 103271, 70936, 402736, 380358, 2825, 375478, 332421, 100721, 169562, 426362, 106698, 81521, 388572, 158376, 320756, 256425, 110638, 357123, 273472 };
    int[] event_j = { 18314, 80450, 446112, 439688, 466324, 188193, 106847, 63623, 302966, 265703, 372795, 443580, 296202, 283389, 169642, 520637, 45951, 58031, 384716, 66003, 384266, 282369, 179880, 297180, 415601, 601, 277111, 201790, 505005, 364844, 505476, 357046, 279021, 251820, 263239, 211850, 273741, 203814, 275474, 43212 };
    assertEquals(36715163, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case80() {
    int N = 975083;
    int M = 754309;
    int[] event_i = { 595690, 72744, 104013, 205218, 7420, 719196, 130771, 734449, 699954, 841074, 588328, 352575, 654533, 329633, 435400, 483371, 748939, 493166, 934083, 291796, 753845, 382104, 754440, 129559, 793330, 497197 };
    int[] event_j = { 120267, 13062, 285988, 692347, 465286, 90988, 84825, 17455, 554086, 129727, 901, 593525, 753922, 425380, 73967, 754208, 428857, 250714, 183080, 91917, 146085, 159401, 530103, 657110, 635608, 253969 };
    assertEquals(42028725, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case81() {
    int N = 557;
    int M = 919;
    int[] event_i = { 81, 509, 428, 6, 448, 149, 77, 142, 40, 405, 109, 247 };
    int[] event_j = { 653, 887, 770, 477, 53, 637, 201, 863, 576, 393, 512, 243 };
    assertEquals(16255, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case82() {
    int N = 5;
    int M = 6;
    int[] event_i = { 0, 4, 2, 5, 0 };
    int[] event_j = { 3, 4, 5, 6, 0 };
    assertEquals(48, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case83() {
    int N = 557;
    int M = 918;
    int[] event_i = { 81, 509, 428, 6, 448, 149, 77, 142, 40, 405, 109, 247 };
    int[] event_j = { 653, 887, 770, 477, 53, 637, 201, 863, 576, 393, 513, 243 };
    assertEquals(16243, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

  @Test
  public void case84() {
    int N = 1000000;
    int M = 1000000;
    int[] event_i = { 44, 24, 2, 34, 34, 24, 234, 234, 2, 2, 23, 3, 3, 23, 32, 323, 1, 434, 4, 1, 23, 412, 412, 4214, 24, 32, 214, 214, 23, 4, 231, 34, 124, 4, 12, 423, 4234, 234, 12, 23, 234, 44, 99, 234, 23, 23, 123, 234, 324 };
    int[] event_j = { 1, 12, 44, 24, 2, 34, 34, 24, 234, 234, 2, 2, 23, 3, 3, 23, 32, 323, 1, 434, 4, 1, 23, 412, 412, 4214, 24, 324, 214, 214, 23, 4, 231, 34, 124, 4, 12, 423, 4234, 234, 12, 23, 234, 234, 324, 234, 234, 234, 234 };
    assertEquals(97997094, mininggoldeasy.GetMaximumGold(N, M, event_i, event_j));
  }

}
