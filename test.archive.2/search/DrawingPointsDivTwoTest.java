package topc.test.search;

import junit.framework.*;
import org.junit.Test;
import static org.junit.Assert.*;
import topc.search.*;

public class DrawingPointsDivTwoTest {
  DrawingPointsDivTwo drawingpointsdivtwo = new DrawingPointsDivTwo();

  @Test
  public void case1() {
    String[] points = { "*..*" };
    assertEquals(1, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case2() {
    String[] points = { "********************", "********************", "********************", "********************", "********************", "********************", "********************", "********************", "********************", "********************", "********************", "********************", "********************", "********************", "********************", "********************", "********************", "********************", "********************", "********************" };
    assertEquals(-1, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case3() {
    String[] points = { "...", ".*." };
    assertEquals(-1, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case4() {
    String[] points = { "*.*" };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case5() {
    String[] points = { "..*.", "*...", "...*" };
    assertEquals(1, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case6() {
    String[] points = { "....................", "..........*.........", "....................", ".........*..........", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "....................", ".*..................", "....................", "*.............**....", "....................", "....................", "................*...", "....................", "...................." };
    assertEquals(11, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case7() {
    String[] points = { "...................", "...................", "...................", "...................", "...................", "........*..........", "...................", "...................", "........*.......*..", "...................", "..............*.*..", "............*......", ".............*.....", "...................", "...................", "...................", "...................", "..................." };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case8() {
    String[] points = { "................*.", "..................", "..................", "..................", "...............*..", ".........*.......*", "..................", "..................", "..................", "..................", ".............*....", "..................", "....*.............", "..................", "..........*.......", "...........*......", "..................", "..................", ".................." };
    assertEquals(3, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case9() {
    String[] points = { "......*............", "...................", "...................", "...................", ".*.................", "...................", "...................", "...................", "...................", "...................", "...................", "...................", "...................", "...................", "..*........*.......", "..........*......*.", "...................", "........*..........", ".......**.........." };
    assertEquals(4, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case10() {
    String[] points = { "...................", "...................", "...................", "...................", "...................", "............*......", "...................", "...................", "...................", "....*..............", "...................", "...................", "...*...............", "...................", "....*..............", "...................", "...................", "...................", "...................", "..................." };
    assertEquals(3, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case11() {
    String[] points = { "....................", "....................", "....................", "....................", "....................", "..........*.........", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "...................." };
    assertEquals(-1, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case12() {
    String[] points = { "...................", "...................", "...................", ".....*.........*...", "...................", "...................", "...................", "....*..........*...", "...................", "...................", "...................", "...........*.......", "...................", ".............*.....", "..............*....", "...................", ".*.................", "..............*....", "..................." };
    assertEquals(1, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case13() {
    String[] points = { "...................", "...................", "...................", "...................", "...................", "..........*........", "...................", "................*..", "...................", "...................", "...................", "....*..............", "...................", "...................", "...................", "...................", "...................", "..................." };
    assertEquals(10, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case14() {
    String[] points = { "....................", "..................*.", ".......*............", "................*...", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "..........*.......*.", "....................", "....................", "....................", "....................", "....................", "..................*.", "....................", "...................." };
    assertEquals(4, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case15() {
    String[] points = { "....................", "...............*....", "....................", "..........*.........", "...............*....", "....................", "......*.............", "....................", "....................", "....................", "....................", "....................", "..................*.", "....................", "....................", "....................", "....................", "...................." };
    assertEquals(1, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case16() {
    String[] points = { "....................", "...........*........", "....................", "....................", "....................", ".................*..", "....................", "....................", "...........*....*...", "....................", "....................", "....................", "....................", "............*.......", "....................", "............*.......", "....................", "....................", ".............*......" };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case17() {
    String[] points = { "..................", "..................", "..................", "..................", "..................", "..................", "..................", "..................", "..................", "..................", "..................", "..................", "..................", "..................", "..................", ".............*....", "..................", "...............*..", "..................", ".................." };
    assertEquals(-1, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case18() {
    String[] points = { "...*..............", "..................", "..................", "..................", "..................", "...........*......", "...............*..", "................*.", ".....*............", ".....*............", "..................", ".............*....", "..................", "..................", ".*................", "..................", "..................", ".................." };
    assertEquals(3, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case19() {
    String[] points = { "..................", "..................", "..................", "..................", "..................", "..................", "..................", "..................", ".................*", "..................", ".........*........", "..................", "..................", "..............*...", "..................", "..................", "...............*..", "..................", ".................." };
    assertEquals(6, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case20() {
    String[] points = { "....................", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "..........*.........", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "...................." };
    assertEquals(-1, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case21() {
    String[] points = { "....................", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "...........*........", "...................." };
    assertEquals(-1, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case22() {
    String[] points = { "..................", "..................", "..................", "..................", "..................", "...............*..", "..................", "...............*..", "..................", ".........*........", "..................", "..................", "..................", "..................", "..................", "..................", "..................", "..................", ".................." };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case23() {
    String[] points = { "...............*....", "....................", "....................", ".*..*...............", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "...............*....", "....................", "....................", "....................", "...*................", "...........*.....*..", "...................." };
    assertEquals(1, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case24() {
    String[] points = { "..................", "..................", "..................", "..................", "...*..............", "..................", "..................", "..................", "..................", "..................", "..................", "..................", "..................", "..................", "..................", "..................", "..................", "..................", ".................." };
    assertEquals(-1, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case25() {
    String[] points = { "..................", "..................", "..................", "..................", "..................", "............*.....", "..................", "............*.*...", "...........*......", "..................", "..................", "..................", ".........*......*.", "...*..............", "..................", "..................", "..................", "..................", "..................", "......*..........." };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case26() {
    String[] points = { "...*...............", "...................", ".............*.....", "...................", "...................", "...................", "...................", "..*................", "..................*", "...........*.......", "...................", "...................", "*..................", ".*.......*.......*.", "...................", "...................", "..*................", "...................", "...................", "..................." };
    assertEquals(4, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case27() {
    String[] points = { "....................", "....................", "....................", "....................", "........*...........", ".........*..........", "....................", "....................", "....................", "....................", "....................", "*...................", "....................", "....................", "........*...........", "....................", "....................", "....*...............", "*...................", "...................." };
    assertEquals(5, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case28() {
    String[] points = { "*....*....*.........", "....*...............", "....................", "....................", "....................", "..................*.", "...................*", "......*......*......", "....................", "................*...", "....................", "....................", "....................", "................*...", "....................", "....................", "....................", "....................", "....................", "...................." };
    assertEquals(2, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case29() {
    String[] points = { "..................", "...........*..*...", ".................*", "..............*...", "..................", "..................", "..............*...", "..................", ".*................", "..................", "..................", "........*.........", "..................", "..................", "..................", "..................", "..................", "..................", "...*..............", ".................." };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case30() {
    String[] points = { "...................", "...................", "...................", "...................", "...................", ".................*.", "...................", "...................", "...................", "...................", "...................", "...................", "...................", "...................", "...................", "...................", "...................", "..................." };
    assertEquals(-1, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case31() {
    String[] points = { "..................", "..*...............", "..................", "..................", "..................", "......*...........", "..................", "..................", "..................", "..................", "..................", "..................", "..................", "..................", "..................", "..................", ".............*....", ".................." };
    assertEquals(-1, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case32() {
    String[] points = { "...................", "...................", "...................", "...................", "...................", "...................", "...*...............", "*....*.............", "...................", "...................", "...................", "...................", ".*.................", ".....*.............", "...................", "...................", "...................", ".*.................", "..................." };
    assertEquals(3, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case33() {
    String[] points = { "...................", "...................", "...................", "...................", ".....*.............", "...............*...", ".........*.........", "...................", "...................", "...................", "...................", "...................", "...................", "...................", "...................", "............*......", "...................", ".....*.............", "...................", "..................." };
    assertEquals(8, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case34() {
    String[] points = { "..................", "..................", "..................", "..................", "..................", "..................", "..................", "..................", "..................", "..................", "..................", "..................", "..................", "..................", "..................", "..................", "..................", ".........*........", "..................", ".................." };
    assertEquals(-1, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case35() {
    String[] points = { "...................", "................*..", "...................", ".....*.............", "...................", "....*..............", "...................", ".............*.....", "...................", "...................", "...................", "...................", "................*..", "..............*....", ".*.................", "...*...............", "...................", "...................", "...................", ".......*..........." };
    assertEquals(4, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case36() {
    String[] points = { "...................", "...................", "...................", "...................", "...................", "...................", "...................", ".......*...*.......", "...................", "...................", "...................", "...................", "...............*...", "...................", ".*.................", "...................", "...................", "...................", "...................", "..................." };
    assertEquals(2, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case37() {
    String[] points = { "..................", "..................", "..................", "..*...............", ".......*..........", "..................", "..................", "..................", "...............*.*", "..................", "...*..............", "..................", "..*...............", "*.................", ".............*....", "..................", "..................", "..........*.......", "..................", ".................." };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case38() {
    String[] points = { "..................", "......*........*..", "..................", "..................", "..................", "..................", "..................", "..................", "..................", "..................", "...........*......", "..................", "..................", "..................", "..................", "..................", "................*.", ".................." };
    assertEquals(7, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case39() {
    String[] points = { "..................", ".....*............", "..................", "..................", "..............*...", "..................", "..................", "..................", ".......*..........", "..................", "...........*......", "..................", "..................", "..................", "...*..............", "..................", "..................", "...*.............." };
    assertEquals(1, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case40() {
    String[] points = { "..................", "..................", ".............*....", ".................*", "..................", "..................", "..................", "..................", "..................", "..................", ".................*", ".................*", "..................", "......**..........", "..................", "..........*.......", "..................", "..................", "....*.............", ".................." };
    assertEquals(4, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case41() {
    String[] points = { "..................", "..................", "..................", "..................", "..................", "..................", "..................", "..*...............", "..................", "....*.............", "..................", "..................", "..................", "..................", "..................", "..................", "..................", "..................", "..................", ".................." };
    assertEquals(-1, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case42() {
    String[] points = { "..................", ".*...*............", "..................", "..................", "..................", "..................", "..................", "..................", "..................", "..................", "..................", "..................", "..................", "..................", "..................", "..................", "..................", "......*.......*...", "..................", ".................." };
    assertEquals(2, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case43() {
    String[] points = { "....................", "....................", "......*.............", "....................", "....................", "....................", "....................", "....................", ".......*............", "....................", ".....*..............", "......*.............", "....................", "....*...............", ".................*..", "*.................*.", "....................", "....................", ".................*..", ".......*............" };
    assertEquals(1, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case44() {
    String[] points = { ".................*", "..................", ".....*............", "..................", "..................", "..................", "......**..........", "..................", "..................", "..................", "..................", "..................", "..................", "..................", "..................", "..................", ".......*..........", "..................", ".................." };
    assertEquals(8, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case45() {
    String[] points = { "...................*", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "..................*.", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "...............*....", "...................." };
    assertEquals(-1, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case46() {
    String[] points = { "..................", "..................", "..................", ".*................", "..................", "..................", ".....*............", "....*.............", "....*.............", "..................", "..................", "..................", "..................", ".................*", "..................", "..................", "..................", ".................." };
    assertEquals(2, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case47() {
    String[] points = { "..................", "..................", "...*..............", "..................", "..................", ".*................", "..................", "..................", ".................*", "....*.............", "..................", "..................", "..................", "..................", "..................", "*.................", "..................", "..................", ".....*..*.........", ".................." };
    assertEquals(1, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case48() {
    String[] points = { "...................", "...................", "...................", "...................", "...................", "...................", "...................", ".............*.....", "...................", "...................", "...................", "...................", "...................", "...................", "...................", ".................*.", "...................", "*.................." };
    assertEquals(15, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case49() {
    String[] points = { "..............*...", "............*.....", "............*.....", "..................", "..................", ".............*....", "..................", "..................", "..................", "..................", "............*.....", "..................", ".*........*.......", "..................", "..................", ".*................", "..................", "....*.......*....." };
    assertEquals(1, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case50() {
    String[] points = { "...................", "...................", "...................", "*..................", "...................", "...................", "...................", "...................", "...................", "...................", "...................", "...................", "...................", "...................", "...................", "...................", "...................", "...*...............", "..................*", "..................." };
    assertEquals(-1, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case51() {
    String[] points = { ".............*......", "..........*.........", "...............*....", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "...................." };
    assertEquals(3, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case52() {
    String[] points = { "..................", "..................", ".........*........", "...*..........*...", "..................", "....*..*..........", "..................", "..................", "..................", "..................", "..................", "...............*..", ".....*............", "..................", "..................", "*.................", "......*...........", ".................." };
    assertEquals(1, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case53() {
    String[] points = { "......**..........", "..................", "..................", "..................", "...*..............", "..................", "..................", "....*.............", ".................*", "..................", "..................", "..................", ".................*", ".*................", ".........*........", "..................", ".........*........", ".................." };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case54() {
    String[] points = { "...................", "...................", "...................", "...................", "...................", "...................", ".....*.............", "...................", "...................", "...................", "...................", "................*..", "...................", "..........*........", "...................", "..........*........", "...................", ".*.................", ".......*..........." };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case55() {
    String[] points = { "...................", "...................", "...................", "...................", "...................", ".................*.", "...................", "..........*........", "..........*........", "...................", "...................", "...........*.......", "...................", "...................", "......*........*...", "...................", "...................", "..................." };
    assertEquals(4, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case56() {
    String[] points = { "...*................", "....................", "......*.............", "....................", "......*.....*.......", "....................", ".............*......", "....................", ".......*............", "....................", ".......*............", "..................*.", "....................", "....................", "...*................", "....................", "....................", "...........*........" };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case57() {
    String[] points = { "*...................", ".*..................", "..*.................", "...*................", "....*...............", ".....*..............", "......*.............", ".......*............", "........*...........", ".........*..........", "..........*.........", "...........*........", "............*.......", ".............*......", "..............*.....", "...............*....", "................*...", ".................*..", "..................*.", "...................*" };
    assertEquals(-1, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case58() {
    String[] points = { "*..................*", ".*..................", "..*.................", "...*................", "....*...............", ".....*..............", "......*.............", ".......*............", "........*...........", ".........*..........", "..........*.........", "...........*........", "............*.......", ".............*......", "..............*.....", "...............*....", "................*...", ".................*..", "..................*.", "...................*" };
    assertEquals(8, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case59() {
    String[] points = { "...................*", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "*..................." };
    assertEquals(-1, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case60() {
    String[] points = { "...................*", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "*..................*" };
    assertEquals(17, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case61() {
    String[] points = { "....**...*.*.." };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case62() {
    String[] points = { "*....*", ".*..*.", "***..*", "...**.", ".*.**.", ".*.*..", "*.**..", ".*****", ".*.***" };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case63() {
    String[] points = { "...**.....***..**", "*.**..**....***.*" };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case64() {
    String[] points = { "***.*.**..******", "*...******..***.", "..****.**.*.....", "********.*.*****", "..*.**.....*.**.", "*..*.****..*..**", "*.****.*.....*.*", ".****.*****..*..", "**.****.**.*****", "**..*.***...**.*", ".*.*..*****....*", "***.**.*..**.***", ".*.**.*..*.***.*" };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case65() {
    String[] points = { ".*.*.", "..*.*", "*.***", "*...*", "...**", "***..", "....*", "*....", ".*..*", ".....", "*....", "...*.", "**.*.", ".*.*.", "...**", "*....", ".....", "*...*", "*****" };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case66() {
    String[] points = { ".*...", "..*..", ".....", "*..*.", "...*.", "**..*", ".....", "...**", "....*", "*....", ".*.**", ".....", ".*...", "*....", ".....", ".....", "..**.", ".*...", ".*..." };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case67() {
    String[] points = { "*....", ".*.**", "*..*.", ".****", "*.***", ".**..", "*..**", "**..*", "****.", "**.**", "*.**.", "**.**" };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case68() {
    String[] points = { "..*..***.*.**.*..*", "..*.*..**...****..", "**.**....**.*.*...", ".***.*.*.***.*.**.", ".*.*...**..**.*..*", "**.*.**.....****.*", "..*****.***.*.*...", "*.**.***....***.**", ".*....********...*", "*.**..*..*.**..*.*" };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case69() {
    String[] points = { "*....", ".*.**", ".**..", "**.*.", ".....", ".*..*", "...*.", "...*.", "*....", "**..*", "*..*.", "...**", "*....", "*.*.*", "..*..", "*....", "*..**", "..*..", "*..*.", ".*.*." };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case70() {
    String[] points = { "**....", "...*.*", "....**", ".*....", ".*.*..", "....*.", "..*.**", ".*..*.", ".**.*.", "..*..*", "......" };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case71() {
    String[] points = { "......*.....", ".........**.", ".*..*.....*.", ".....**....*", ".........*..", "..........*.", "...*........", "............", "..*........*", "...***......", "...*......*.", ".....*......", "......*...*.", "**..........", "............", ".........*..", ".....*......" };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case72() {
    String[] points = { "**...*.*..*.**.**", "*****.****..*.***", "*..*.*******.*..." };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case73() {
    String[] points = { "***....*..*.*....", "...***...*...**.*", "*..*.*.***.*...*.", ".*.****...**.**..", ".*..*......***.*.", "....**...*...*.*.", "..*****.**..****.", ".*....*...*.**.*.", ".**.*.******...*.", ".*****..**..*.*.*", "**....*...**.**..", ".*......***..***.", "*...*..*.**..***.", ".....**.*.*....*.", "*..*.*.**........" };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case74() {
    String[] points = { "**..**", "******", "*..***", ".*****", "..**.*", ".****.", "*..***", "**.**.", "***...", "***.*.", "...***", "...***", "......", "....**", "..**..", ".***..", ".***..", ".***.*" };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case75() {
    String[] points = { "**...*.*.*", ".*...*...*", "..*...**..", "***....*..", ".***.*..*.", ".....*...*", "*.*....*.*", ".****.***.", "*.***.....", "...*..*.*." };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case76() {
    String[] points = { ".*......*........", "...............**", "...*.....*.....*.", "......**......*..", "...........*.....", ".*..........*....", ".................", "..........*.*....", "......*...*......", "...............*.", ".*..*............", ".....*...........", "..............*..", "..........***..*.", "................." };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case77() {
    String[] points = { "....****.**.***.*.", ".***.....**.*..**.", "...**.**.*.*..*.**", "***..*.*..*.*..*.*", ".*..******..**....", "**..**.**..*....**", ".*..***..**.*.**..", "............*.....", "..*.......**....*.", ".**....*.**....**.", ".***..****.*****.*", ".**..***...**....." };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case78() {
    String[] points = { "...*.*..*", ".*....*..", "*.*..*..*", "**.....**", "******.**", ".*....*.*", "....***.*", ".*.**...*", "*...**.*.", "*.*.***..", "*..**...*", ".....*...", "***.**..*", "..**.*...", "*...*.*.*", ".*.*.*..*", "**...**..", "*.*...*..", "..**.*.*." };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case79() {
    String[] points = { "...****.***...*...", "***.******..**.*.*" };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case80() {
    String[] points = { "**......*..*", ".*.****.*.**", "*.**.*.*.***", "**..***..*.*", "*.*...*.*.*.", ".******...*.", "*..*....**.*", "*....*.*.**.", "*.*...*.....", ".*.**.......", "...*.......*", ".**..*..*.**" };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case81() {
    String[] points = { "..........", ".......*..", "....*.....", "......*.*.", "..*..*....", ".......*.." };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case82() {
    String[] points = { ".*.*..*", ".*.****", "*..***." };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case83() {
    String[] points = { "***..*.**.*****", "..***.*.*.*..*.", "****..********.", "...**.**.**..**", "*.**.*..***.*.*", "*...*.***.*.*.*", "*..**********..", "**....**..***.*", "**.****....**..", "**.*...****.*..", "*...*.*.*.****.", "*********.**..*", ".***..****..*.*", ".*.***...*....*", "*******.*.*.***" };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case84() {
    String[] points = { "*...***.*..", ".**..*.*...", "..*.*..****", "*****..****", ".*.*.......", ".*.**....*.", "...*.**..**", "..*..*.*.*.", "**********.", ".*.**....*.", "..*.******.", ".****.*..**", ".*.******..", "...****.*..", ".****.***..", ".**..**..**", "*..**...*.." };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case85() {
    String[] points = { "......", "....*.", "...*..", ".***..", "....*.", ".**..." };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case86() {
    String[] points = { "*.*.**.*......", ".*.*.*********", "**.**..*.**.**", "*********.*.**", "**.***.*..**..", "**.*.****.****", "******.******.", "**.*********.*", "**.*.*...*.*.*", ".********.***.", ".**..*****..*.", "***.**...*****", ".*..*.**.*....", "**.**.*.*.*.**", "*.*.*..*..**.." };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case87() {
    String[] points = { ".", "*", "*", ".", "*", "*", ".", ".", "*", ".", ".", ".", ".", "*", "." };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case88() {
    String[] points = { "*.*..**", "*.*....", ".*.*..*", "...*...", ".....*.", "*....*.", ".....*.", "...****", ".*...*.", "..*.*..", "....*..", "*...*.*", "...*.*.", "..**...", "**.***.", "*.**.**" };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case89() {
    String[] points = { "..............", "...**.*.......", "..............", "..............", "..*......*..*.", ".*............", ".*...........*", "..............", "..............", "**....*...*.*.", "....*.........", ".....*........", "......**......", "*......*.*....", ".......*......", "...*...*......", ".....**......*" };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case90() {
    String[] points = { ".*..***", ".***.**", "....**.", "**.**..", "....**.", ".....**", ".*...**", "*******", ".*..*.*", ".....*.", "....*..", "*.*.**.", "..**...", ".**...*", "*......", ".*.***.", "*..*..*", "*.*..*.", "...****" };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case91() {
    String[] points = { "*" };
    assertEquals(-1, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case92() {
    String[] points = { "*...*.*..**.***.*", "*.**..*.*.**.*..*", "****..*.**.*.***.", "..***.*.***.*...*", ".....****.***....", "*.**.*.***.*.*.*.", "..*...**.....****", "**..*.***.**..*..", "*...***...*******", "*..**....*..****." };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case93() {
    String[] points = { "**", ".*", "**", "**", "**", "..", "**" };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case94() {
    String[] points = { "...", "*.*", ".**", "*.*", "...", "***", "*.*", ".*.", "***", "...", "..*", "...", "...", "***", "*.*", "**." };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case95() {
    String[] points = { "..........", ".*........", "....*.....", "......*...", "......*...", "..........", "..........", "..*.*.....", "..........", "..........", "*.........", "..**......", "..........", "..........", "..........", "..........", "..*.......", "*.........", "...*......", ".........." };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case96() {
    String[] points = { "*.*..**..*...", ".*...*...*.*.", ".*.*.***...*.", ".**....******" };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case97() {
    String[] points = { ".*", ".*", "..", "..", ".*" };
    assertEquals(1, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case98() {
    String[] points = { "**.***.", "....**.", "..**...", ".......", "...**..", "*....**", "..*..*.", "...*.*.", ".......", "**...*.", "..*....", "....**.", "*.****." };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case99() {
    String[] points = { ".*..*.*.**.." };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case100() {
    String[] points = { "*", "*", ".", ".", "." };
    assertEquals(-1, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case101() {
    String[] points = { "......*.*.", "......*...", "...*....*.", "*.*......." };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case102() {
    String[] points = { "*.**.**...***...*", "..**..**.*.*.*...", "*.*.*.....***.**.", "**..******.*****.", "*..******..*.***.", "**.***.*.**.***.*", ".***..**....**...", ".**.*...***.*.*.*", "*...***.***..**.*", ".**..*..*....*...", "****...***.*...*.", "******.....*....*", "*.***....***...*.", "..*..***....*..*.", "**.**.*.......*.*", "**..***.*...****." };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case103() {
    String[] points = { ".........*.......**", "**..*..*...*.......", "...*.*....*........", "..***.......*...*..", "*...*.....*......*.", "....*...****.**.*..", "...*.........**.**.", "*.............*..*.", "...................", "............*......" };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case104() {
    String[] points = { ".*.*.*", "...*..", ".**...", "******" };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case105() {
    String[] points = { ".***...*", ".**.**..", "**.***..", "**..****", "..**.***", ".*****..", ".*****.*", "**.***..", "*...***.", "*****.*.", ".***.***" };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case106() {
    String[] points = { ".*...*", "*.**..", "**.**.", ".**...", "*.*..*", "*..***", "..*...", "..*...", "....*." };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case107() {
    String[] points = { "..", ".*", "**" };
    assertEquals(-1, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case108() {
    String[] points = { ".*", "..", "..", "..", ".." };
    assertEquals(-1, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case109() {
    String[] points = { "*", "*", "*", ".", ".", ".", "*", ".", ".", "*", "*", "*", ".", "*", ".", "*" };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case110() {
    String[] points = { "...*.....", ".........", ".........", ".........", ".........", ".........", ".........", ".........", ".........", ".........", "......*..", ".........", ".........", ".........", "........." };
    assertEquals(-1, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case111() {
    String[] points = { "....................", "..........*.........", "....................", ".........*..........", "....................", "....................", "....................", "....................", "....................", "....................", "....................", "....................", ".*..................", "....................", "*.............**....", "....................", "....................", "................*...", "....................", "...................." };
    assertEquals(11, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case112() {
    String[] points = { "*.*" };
    assertEquals(0, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case113() {
    String[] points = { "*...*", "***.." };
    assertEquals(2, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case114() {
    String[] points = { "**", "**" };
    assertEquals(-1, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case115() {
    String[] points = { "**" };
    assertEquals(-1, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case116() {
    String[] points = { "...", ".*.", "...", "...", "...", "...", "*..", "..*" };
    assertEquals(4, drawingpointsdivtwo.maxSteps(points));
  }

  @Test
  public void case117() {
    String[] points = { "******", "******", "******", "******", "******", "******" };
    assertEquals(-1, drawingpointsdivtwo.maxSteps(points));
  }

}
