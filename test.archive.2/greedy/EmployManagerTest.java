package topc.test.greedy;

import junit.framework.*;
import org.junit.Test;
import static org.junit.Assert.*;
import topc.greedy.*;

public class EmployManagerTest {
    EmployManager employmanager = new EmployManager();

    @Test
    public void case1() {
        int[] value = { 1, 1 };
        String[] earning = { "02", "20" };
        assertEquals(0, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case2() {
        int[] value = { 2, 2 };
        String[] earning = { "01", "10" };
        assertEquals(-1, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case3() {
        int[] value = { 1, 2, 3, 4 };
        String[] earning = { "0121", "1021", "2201", "1110" };
        assertEquals(-1, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case4() {
        int[] value = { 2, 2, 0, 1, 4, 0, 1, 0, 0, 4 };
        String[] earning = { "0100451253", "1010518123", "0102989242", "0020093171", "4590045480", "5189400676", "1893500826", "2121468008", "5247872007", "3321066870" };
        assertEquals(156, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case5() {
        int[] value = { 2, 1, 3, 4, 0, 2, 0, 2 };
        String[] earning = { "00064145", "00133544", "01099618", "63904892", "43940759", "15687082", "44195803", "54829230" };
        assertEquals(116, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case6() {
        int[] value = { 16, 14, 7, 52, 65, 87, 37, 73, 40, 26, 31, 72, 43, 68, 93, 21, 43, 93, 9, 59, 39, 26, 1, 18, 47, 90, 38, 64, 36, 79, 56, 55, 8, 68, 47, 28, 28, 91, 44, 37, 31, 74, 38, 63, 59 };
        String[] earning = { "097592438005479700741046136539993747089872245", "903765012804903112339251893458699935539329800", "730451897872368080075770991341918889197472839", "574078677257346035358155842730061609732369871", "965709752272671178875166468788747759816225911", "251890068374481140267421729122902968005501780", "408670038303327870484887661820931215601334692", "319756309746231051408181638371194775062063553", "827728890101371266305248140184477442747015984", "088223371061031352519762166325120580451857283", "007577040604823359933584199599163522627998548", "542724361140250474048068532450712458150003906", "493364323082093051779787543182161241349542787", "706478237325902842553009839481104370185928606", "938611711130320105943698989773883797778102535", "710011802334081088801194660720673050228162562", "018374756557540806043266558741477912349089574", "020580016294125860565690356810937106136612780", "730382443590759805042115180921108966184464519", "437576800134754046407793040596446563590538554", "195857485938933135270974628083232370011181716", "027114812750706126179040382414932882203131523", "457562884686809969197409870854843348285051122", "610561718248798460534090475894785487519053030", "189847661115589653106384082509801747765899033", "399462634693438655842877809955431476997291305", "631289180692399086008205290986910351983310841", "543771831354147778950488599048398487011601812", "354382278295887241298159058406140441843609719", "981082014590213010163444956860640842479463794", "969079914117118649142987849316098234823668567", "991640397261608773043348031944906330567044767", "398172147032143377862235110800860524340785334", "798679274554237091953834743448235026629574185", "438056174825479510667848475844332204215081717", "759998552028107026630287761712404640566918894", "051780607461317231150225799084853625005810840", "839310064525487243891081698147264216008900665", "997265127170958896401359573139370956580467446", "834325300890591106451100823664607509894068424", "727620361590420681638355991006648781106608881", "292951435783282292481113910193845418007880399", "288897659259765557557510038877573178864483010", "403718958840803678151223304119663819464289101", "509110234386765240946320351294774574056419010" };
        assertEquals(2347, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case7() {
        int[] value = { 14, 11, 16, 18, 19, 24, 32, 49, 5, 44, 50, 24, 35, 27, 31, 16, 22, 3, 21, 41, 30, 23, 23, 6, 42, 47, 7, 50, 27, 46, 11, 26, 44, 39 };
        String[] earning = { "0471077723085139238388438273445787", "4017557259876847847357231907879272", "7100202907588947526464978723234959", "1700482375491893053170535925330037", "0524025971556418723169158374716744", "7508201850494573401395843455828437", "7722510897092559819092602593823203", "7293988069389676690777016778112333", "2507759605409759828008692853699839", "3975107950106745339558208481856176", "0854540341095134516713229590635604", "8789599800905767418760608792502302", "5681642996550006932739502708419380", "1898455677170072430311496036355163", "3449175754360708247207055835729431", "9773839695476280750719661703625720", "2850748683549427061582581569270713", "3425201923113345607617018815204445", "8763319089682070170454953308665327", "3341130705777327564077943151316438", "8567699705163101815706499201605533", "8740952788309179274760138987929556", "4295186062265406509941077135594776", "3373540190200956815493707409849164", "8185832628982651183398770771953806", "2979345784577087583129147012509353", "7022759758990330610508307104170423", "3735453831028653958117591240458298", "4823788168654376226369589514071803", "4733122195301522706102945075703893", "5940683296529595045659493908130626", "7290742381633147743455718342886054", "8753430337008632142335760529092500", "7297473396420310357836646338336400" };
        assertEquals(1676, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case8() {
        int[] value = { 101, 21, 69, 75, 94, 10, 39, 84, 30, 70, 77, 76, 27, 78, 77, 77, 5, 97, 24, 47, 41, 33, 74, 40, 54, 8, 68, 57, 87, 33, 75, 15, 92, 86, 24, 24 };
        String[] earning = { "062552564178644952159561575855270678", "601026482015522652498822576470555960", "210167799244128844220550925402290532", "501092418400774810928158628753417229", "526908149845320677390099774993936983", "267280878011476607578306691410619572", "547418028082615714498479930956529655", "689147200326755777858184287745618496", "429898800273723087032273307196523779", "102480032013162514131474874762787742", "714041827103904248704929854881232432", "854051263330107662096302508540351484", "651734677191055011792579273933331000", "422727152600501974646274696107859822", "428406553247510941551889930726708095", "968866770526099038787311505691499638", "554170178146174309958265442870865891", "224077477482141890072115566315261625", "142935480170765790024018771936132714", "592297953309945857206433561052487092", "980808882146261782460274124858259628", "585103412493528321042026079495975512", "625590787720778161137203430645295534", "120896943492949155834630281280436288", "559676923885269545751042088971685336", "772279380750793046762738809502403939", "565841077448360526114901890894390802", "844794971785917683908462958066178150", "570591549684302971355948709601897608", "502330656210376105628550124610722614", "252496565723387482142924643187005495", "759131212835350966385793809792000598", "050769983721198951279556530872500229", "695295647744080686706552398166452031", "763287597438029392192138330501992300", "802932569224025815428248692084589100" };
        assertEquals(901, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case9() {
        int[] value = { 1, 1 };
        String[] earning = { "05", "50" };
        assertEquals(3, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case10() {
        int[] value = { 64, 0, 6, 105, 98, 29, 86, 90, 20, 15, 4, 80, 79, 108, 22, 21, 26, 76, 9, 59, 94, 75, 96, 70, 74, 9, 32 };
        String[] earning = { "022928959558667981010075581", "204293865652468459882266708", "240491538143011820870857064", "924027302762383699413983131", "299201190687262561205998905", "831710155075775030676975710", "985311028639065034819059469", "563095202210693322376893801", "958205820923815819043745102", "561760629054118641158976785", "554687312506606359229414658", "823275903460255261628817737", "640327068162012118881394567", "661867691105104099312595848", "781325535865240057181858582", "948650038632100011288480291", "852963321456195101004720590", "190910429191897110644880801", "088426830126831206087023706", "187107174522818804809727457", "020356963898121844790232947", "028999087948358478072020961", "765897594711995828223207949", "567385935647458000372070994", "570197481767585258749999067", "806301600853648990054649609", "184150912587782101677194790" };
        assertEquals(171, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case11() {
        int[] value = { 58, 50, 2, 56, 16, 23, 0, 63, 45, 29, 7, 15, 58, 25, 36, 47, 41 };
        String[] earning = { "01566381839573732", "10392319580591469", "53044267837270669", "69404285628739631", "62440426794364317", "33224009589004210", "81682007095605283", "19756970380088197", "85867503078089031", "38329898702707713", "90784950820451534", "55273060074098973", "79736008805907325", "31094458971870046", "74663221075930097", "36631189313724906", "29917037134356760" };
        assertEquals(68, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case12() {
        int[] value = { 33, 30, 3, 32, 7, 33, 2, 13, 20, 31, 3, 31, 3, 15, 8 };
        String[] earning = { "013683932058004", "104663653862545", "340098437115291", "660046693928410", "869402824244291", "338620095264004", "964680084139177", "353929800201260", "237345400065591", "081922120070725", "561246306700556", "825844915000246", "052420125752081", "049190769254805", "451014701566150" };
        assertEquals(161, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case13() {
        int[] value = { 16, 78, 5, 75, 75, 9, 37, 81, 8, 5, 35, 15, 39, 78, 29, 25, 66, 57, 40, 78, 53, 56, 70, 18, 50, 14 };
        String[] earning = { "06219900010879775384941643", "60572873114808170010971474", "25086704195240370935144414", "17800007157741045604983476", "92600079239669890390196690", "98700013137809027069813098", "07007108496456514471880245", "03479380092244516807606929", "01112140084804260625366341", "11953399801753502244231227", "04579762410690076551792350", "88276842876093541349858429", "70446054059901535982906534", "98019964430310982761572338", "71308055250559015305517384", "77749211607438101896504448", "50050746026152510888891951", "30963048625397388012658108", "81309670245486098104367586", "40540917541921568240343291", "99191886327895558633068439", "47489180639507109564604200", "11436306612862741873840425", "64446029323453349152424033", "47179942425233845089302302", "34460859170948481861905320" };
        assertEquals(315, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case14() {
        int[] value = { 31, 44, 42, 38, 7, 47, 5, 12, 51, 26, 46, 29, 49, 30, 20, 40, 37, 6, 3, 37, 45 };
        String[] earning = { "033468877159483765212", "309717330832661147959", "390207575543323628405", "472008079156941661594", "610001167657609364377", "877810200432716870382", "835012080612162157225", "737760804162525990244", "705970040058080499779", "185164610026824337702", "534553165205517331070", "923672228650037290795", "463967150850022308557", "862401628213205345866", "313196250477250758316", "716638194332337000919", "642667599339045006698", "578140709710858060389", "294533227707583963020", "150978247079561198208", "295472549205766989080" };
        assertEquals(290, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case15() {
        int[] value = { 139, 72, 68, 54, 108, 48, 72, 155, 36, 174, 37, 62, 163, 13, 52, 77, 20, 56, 77, 92, 90, 173, 92, 69, 159, 78, 162, 118, 26, 2, 104, 47, 85, 43, 96, 117, 112, 62, 175, 46, 61, 8, 130, 162, 144, 0, 49, 160, 177 };
        String[] earning = { "0016790879859119649148148586166023981252378584242", "0015350647330997607143453452628708948289905565747", "1102090321011246747178627862371193413868635929653", "6520148231883094970211379273924669878902538684778", "7301035944194058349433566353375597071972180567135", "9594300353617964515936432475975987879967304629677", "0008500336731860882853891021623683346691066488784", "8632933053510668639494154298257751291514341719826", "7423453501021458415827708879042209552135614354426", "9711436310634687385452792942843297756233062458881", "8308167506084886591696197958351872378287180855397", "5318913123800154666279198885089345637690398746538", "9013471014400983957120130053441795053964353862325", "1920098646819026535022799245202002094927204645856", "1949566658858204709452767146463090489862756566733", "9764840887643640207914216431436005890067941223599", "6679358643569572024997897995370347548441054602253", "4047418318965300201913221878030459139426532817936", "9770952955167597410141292171337164269907794973766", "1112498484621049991009642267903549994242950596325", "4471335925972251914002770657288673089384061373169", "8381363472690224731920962099651385066859766126028", "1463548177111772822679070756874498048969621013611", "4527639509993961929476707671521465617517335162073", "8379621482780976712202070234704538733260561740900", "5482340289980214981260762077910298887221910942817", "8567572974585443977659573708986310541677428594156", "6223351892853561581779614780126001630126845091020", "1639396208304244303926857991094187109314044448130", "6272772544584063733085720182904881012231671769404", "6814553723191236007381414066440676767141361189066", "0716596722837000341563445230186086646438718571155", "2096988509749090456478963910887801502605525788189", "3839773197255205794935858801716610200397699738945", "9948083257360048512900067856107652070790629068665", "8417774955735989436986413843016400700797297961630", "1838196126873490899496873710927620000729581640821", "2289996512269980449238952261321463777061008005786", "5860769133896266420485616272134309992608318405535", "2982271453704727167249970176411857079180402126805", "3965130360133279057907635948063756625034090611594", "7033806416895054539566236124476129298010904027799", "8558046142083461424016151085411859971882040010136", "5596564734878652689531017950471577096041600063395", "8628628155546462017972164499468783664002121602501", "4594798948562563273636320241899188810556170320552", "2767167848353875297310609810140119668758571355071", "4457378228932539536262170152306584632830993905702", "2738574661785639366598130760046595501655496512120" };
        assertEquals(1088, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case16() {
        int[] value = { 9, 26, 13, 22, 17, 30, 28, 18, 40, 19, 24, 23, 36, 11, 6, 22 };
        String[] earning = { "0022573356083665", "0050733555219629", "2506575246921703", "2060167419414015", "5751099508651393", "7376900524418858", "3357900329154632", "3524553015610044", "5541022109165426", "6569849590165582", "0294641611031697", "8121515166307496", "3914184055170193", "6670386045641008", "6201953428999008", "5935382462763880" };
        assertEquals(179, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case17() {
        int[] value = { 46, 40, 49, 24, 50, 46, 17, 26, 51, 50, 33, 21, 29, 0, 50, 1, 45, 11, 26, 25, 16, 30, 38, 32, 45, 1, 7, 37, 15, 16, 14, 39, 40, 11, 2, 19, 11, 42, 41, 1, 3, 23, 1, 29 };
        String[] earning = { "09286862775708817986389931591044083472517491", "90562104447958244492635579111782613305341202", "25005850845600578671834809977002647236611293", "86002647126484106102426283463655282343806323", "62520608573169468060110774625430327455505815", "81866062812263062014818622747540968438382837", "60540609947480309156471023505923210990621084", "24078290959887239470174692378748326999888500", "74815899045611774238466118361767413478516069", "74427145403908686426721889141130909197990179", "57563279530648330307598436421497099077100018", "79641248696050739073541344620527198079868129", "05086688104502634091622412166561468997833104", "88049307188020825137624737785001129697814877", "82514032763768091879445523158596510350026895", "14706603783332907969844984104066337276869764", "74868299460945170463116211726995083939169480", "94610014243001894085343398466172480682783978", "89706157320793766804806277183795312434038594", "62120460867317993540777362818983139765569286", "36841841475566481387008756921818099516592968", "83321177629422441407007572267657727502691330", "95460814618124546367870431079162015902349919", "95827606184347592323754092652934044315736144", "37087229183413281976573905613348351068340599", "19934232896427341872621250108088117709669952", "51946753314617117418920661048462302234946211", "91762407642268502681267510408354548649596678", "11735758111065846638179238880053717100169623", "07064597714550509179861930430063422063021443", "48053424639260969798156348655600408467620310", "42250038707711665253872488243300298543723628", "06623923490141530431070031357442057254360457", "81482612109962138813921451041209501609114997", "33727806399889073029975417287288710258937151", "43234499410096329647559307261045262064233984", "70345399797799573836100160340664505607097557", "25635809877977069245622589490373498470725097", "53685368591888081705563736951067319207004957", "14100828190631266836994346496222613392003908", "71165218600834699389219609669103047375430449", "42238805010118874952939159266436491950994090", "90921380671207968798631495172412595859504900", "12335740998947540846809492183308771477789000" };
        assertEquals(3150, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case18() {
        int[] value = { 51, 69, 53, 44, 3, 79, 0, 63, 14, 30, 33, 22, 23, 27, 44, 5, 52, 73, 12, 46, 24, 63, 12, 78, 24, 6, 81, 10, 67, 46, 80, 20, 63, 65, 71, 7, 66, 44, 46, 65, 31, 80, 69, 75, 63, 62, 81, 52 };
        String[] earning = { "065187074756045449480625394596465920985126668454", "602958858939965900924382204142960137403178300972", "520794468985459408377243812142372367664322742805", "197097438547333545086233497354828955266066632142", "859906690365469857482105274679033954243403694338", "784760688231568994925266417236344425659409151617", "084466091885839378401480977562142472476837770804", "756398901662997771364332572440175729300768808097", "488808110019589229742366690797465496404314111915", "799532860001544452754003424136844373812632869058", "538463861000147035777266716223037422041151209941", "695751529100003775537659745238874477903021249121", "094345895510066778640244690886295812461415256235", "465366398440602838399977912801388043433894014619", "559398979473620949709085785927325910555974789318", "494589372407789013750648842021714063891530989622", "400459772537734104936395775902563479244870132761", "908574819255889340840022812741722570783924354827", "493049437775637798040893440845852957637980280613", "827882064573490534407726960654892516254359840460", "047625142477099060070767749642855923293427296666", "632212433026290630877065121532512503701820444629", "284306836065478492926603773651060250355667004964", "523356026369475852367530277457042005483373999830", "328424956477697878497172065950478808786178318329", "901971779214918471464277604293269539742426087990", "442747720465025252009137540900448228180790744352", "511362547122889097866564929013093313487207400582", "944573649323802204454355590101908786686537399104", "622496207638617121542217030310997982663510763227", "493803114808233757888500424099069312522636926344", "667234476437982162595164764909601069276025077972", "502834255474585432225202898387910563805743417065", "913994474344809045959520852379305075607932625369", "236552729727141677512050032188166702169067785003", "077545296327230390763305898362293520535824270110", "946226434809445827622734771466528615049121808447", "806645700140635948359058848886270063409239996316", "534639604213135143743153620763265795990106881485", "113044873610489589934863147255607908121090175499", "272600361352197372852267729031324362230901767369", "682639784211544004097073860770653274196010092657", "637661781822207913282409307437904672898170067227", "604395701604518835849409184096271287098769607113", "802241081999649924006449874093677550861572770117", "498136809091263678646698393512390301434436211041", "570431091542311262166263295802476601418965211407", "425287475811598217306940902247425930765997737170" };
        assertEquals(2959, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case19() {
        int[] value = { 67, 49, 60, 26, 65, 73, 47, 14, 28, 46, 50, 6, 9, 55, 66, 3, 16, 61, 68, 51, 5, 17, 51, 30, 39, 7 };
        String[] earning = { "02701402509741747660438845", "20428236776191192764435045", "74063675332605911546458258", "02600289718639549942000374", "18300275049994149722399730", "42622014298677484981876720", "03787106145879534960621011", "26595460893705325795714198", "57370218081516870453455316", "07314949800628076180347792", "96289853100552109491476745", "71669687565081504756290934", "49039770125807780504639339", "11594795682170991288102379", "71951453801579031590914362", "49144832770089300166465909", "72199445069401100193131770", "67597997414752511055120773", "66442869589508969500795304", "04622105301648063500912236", "44403867434261941179037915", "33509721547930163291301312", "85809614576092451052710089", "80237701377933397732930081", "44573219194337607703118809", "55840018625499290346529190" };
        assertEquals(455, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case20() {
        int[] value = { 18, 18, 44, 21, 28, 7, 42, 7, 4, 9, 7 };
        String[] earning = { "05098869792", "50004343659", "00036175496", "90308523483", "84680489677", "83154092394", "64728906224", "93539260774", "76446327054", "95987927504", "29637444440" };
        assertEquals(82, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case21() {
        int[] value = { 0, 2, 7, 3, 10, 9, 8 };
        String[] earning = { "0612152", "6028576", "1200013", "2800622", "1506074", "5712707", "2632470" };
        assertEquals(38, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case22() {
        int[] value = { 0, 49, 67, 94, 4, 16, 92, 76, 32, 79, 90, 95, 78, 98, 46, 50, 61, 19, 45, 5, 95, 46, 30, 18, 97, 6, 77, 19, 98, 65, 27, 27, 66, 31, 71, 95, 48, 45, 36, 39 };
        String[] earning = { "0690924311589462009857879086798772938738", "6028482631750750678739183110890837672913", "9200179935535340394391362128256315377298", "0800564347481696164982754825907228539857", "9415047720917262702472334122926447402749", "2876405379288821906312456705835741227125", "4294750367554635373047069105681188314318", "3693733071066363164373676699405084221523", "1334276707256326199272845274735142627026", "1157097170761978508469931668068000084462", "5754925027017522823302394876093877091932", "8538185656102700796881992198521773517391", "9051784661720836409843017873138404012161", "4736286339578071248371327697935609742053", "6549623627203703673608952737790754553268", "2006215368206130487546901138867870438919", "0631793115874264087854827538918600552066", "0796007690290478802688612664338067822873", "9844263498369837720364232559112965925014", "8739430324388365863089082520933957786657", "5398714776084704586806214498502355809742", "7912227329213186484960314841406145558054", "8137340689390399862023039665421419080141", "7865356743991250213811308892811617241477", "9324469651427721722244980701423442531009", "0118171626818671565548687016447997849231", "8122200976797933365294690109346394968995", "6085255948683778849081521690147693313882", "7829986470051978931954484431061713916995", "9950238036923396131300212444602981322931", "8067651558318507882326113767120287649520", "7832471010874678609931464936792086236357", "7312448840770057066554114999188807155615", "2758718420734940075755972743317670509249", "9635423260050754589785025893936215009261", "3773021228911453522805843461124350004945", "8279274174172238225698011983629659940967", "7928713504931029080670140298995362299031", "3195421226396561671545470398932514646305", "8387958362211389634724179152510759157150" };
        assertEquals(1466, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case23() {
        int[] value = { 12, 7, 2 };
        String[] earning = { "057", "504", "740" };
        assertEquals(-5, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case24() {
        int[] value = { 2, 35, 32, 8, 39, 4, 47, 27, 27, 45, 21, 40, 29, 33, 41, 21, 7, 2, 42, 9, 35, 2, 31, 1, 30, 42, 10, 32, 44, 15, 2, 23, 28, 17, 1 };
        String[] earning = { "01167917261542435042856147267934567", "10821250875820003480575771301247399", "18000272529227729277474255690577959", "62007975702025523787833845974167393", "71070044532414730131481933486132244", "92290089821450664952452221483079451", "15774802707559209632748900365217109", "70254920491978341435815393533449028", "28575874095927191430839617965162052", "67203209900911785444441516033597428", "15922171500834214717681404353562580", "58204459998026885759455179770344615", "42221557213202188043942773145528020", "20754098714620076553191354606361499", "40757623172810014630677652636595890", "30223604981887106228470188810997603", "53930491154586460277459265962909419", "04271964447705622075522280867186474", "48783533341545327707066000918971531", "20771225047933087570449845281384415", "85484478846491644504035093555477164", "57738541348549775264306916343281101", "65431285911521709269560376624008749", "17289293654173612208093001239302176", "47543209110775586804917006234832248", "71553103764934285005366160873575141", "23694435903716689892536228045156786", "60978863635740316618542337406100690", "71046353533056602781534943560027303", "92511024155353599193420385110024511", "34763714696426990878780037502207327", "47772979272481579614718225607470011", "53932410045604864454117121763530004", "69594502528129901731604744890121002", "79934198280509039415419681603171420" };
        assertEquals(1762, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case25() {
        int[] value = { 63, 46, 11, 74, 70, 88, 4, 13, 33, 86, 58, 99, 41, 96, 33, 78, 86, 6, 7, 100, 26, 65, 85, 70, 84, 6, 64, 43, 55, 77, 102, 80, 14, 32, 72, 3 };
        String[] earning = { "082107019797294005409944654854078445", "801303009256112549453455247759753968", "210151680466270347263066679502924032", "131033050188095733612105428378454105", "005304111584749114597710640939302034", "731340648721637963837019383170756923", "006016044262565295580657133609697810", "108514404520496637698320216289502074", "990018440440187818554139225818877128", "724157254082206940115633462145130756", "956882624805073004200898156350450252", "766841200250368486609683900837560751", "212076541203014356506429513164181062", "917943698076106449763849492456974705", "420597567638460967114337166143139391", "053719268904349066140190780585568227", "044316931408546603907433204384139566", "597343578046697630739020171889088797", "442658565126571197013075255817355839", "056193895100061403100265026397239775", "933277084509634079300767698985280197", "940170631686483140027089522624743503", "456011523398243932766807824905648027", "456509709383997030557970257537923409", "626463122419541721206582065365196881", "547248312650196807529225604335029593", "479803365260326041568247540165462491", "875391628138141538839695331074892109", "550737081453654888198203636706301993", "492890998507463549775457555460759308", "079437658145191510322769104837006697", "752505907356873638538442926905003337", "834426727000149898590383692219630002", "490109801727073257871504854193630009", "463032172555609269379020899090930009", "582543048621251767957379131938772990" };
        assertEquals(819, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case26() {
        int[] value = { 40, 32, 48, 38, 59, 25, 26, 24, 47, 16, 33, 36, 6, 2, 41, 38, 62, 33, 36, 24, 19, 50, 20, 2, 33 };
        String[] earning = { "0235044500019676996969978", "2061648854520330201400762", "3608542322849859275640444", "5180075129031563973307371", "0650010328530196527336161", "4447103349869063514169939", "4825030055089692395314341", "5831330091554096103890086", "0522245908669294348771420", "0429895180020596660554130", "0580580560081582254690980", "1243368562801437532766507", "9091099490110469603291147", "6385106025544098071678318", "7356969999836904314336509", "6093632646279840397224162", "9229553136256033013775016", "9077219046530719106038474", "6153745380423147360771858", "9463313875672632707094827", "6040361975969732737903240", "9007694014061864581430646", "9743193041951351048826029", "7647634823804106175244205", "8241191600077892648706950" };
        assertEquals(527, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case27() {
        int[] value = { 0, 4, 2, 5, 5, 5, 0, 2, 3, 4, 0, 6, 3, 2, 2, 5, 6, 0, 4, 2, 4, 4, 5, 2, 3, 3, 0, 2, 6, 2 };
        String[] earning = { "069230665253020606006311046223", "609585163317148711389813980419", "990621959136639116821636220110", "256058539041380820516849229644", "382506954812800953176903886820", "051860571271403948862980306190", "619595061916804825721834316187", "665357607025954831240662427969", "539941170971569742347976791699", "231082909048485227773557621926", "513417127402954951687031343076", "376121651820710622100641701003", "016384895497008096500100641892", "243800056851009407280342997436", "089003449540890046320874503403", "671899887296040087312494212710", "011254234252904801326424221992", "616038512712676710060958770610", "038518723761523330065865781189", "082176244780082126605052505545", "691662107370000260550760300154", "386899869506138449807099210671", "113408367534047925656909236602", "136930426711024448520990074521", "092283347637695227753220034848", "482280129240490127800137300843", "600966671131173210150064400743", "241681196900844796151665887054", "211429869270930191845702444508", "390400799663263020954121833480" };
        assertEquals(1734, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case28() {
        int[] value = { 41, 13, 95, 20, 11, 27, 13, 67, 10, 90, 68, 4, 67, 27, 21, 75, 29, 97, 58, 78, 37 };
        String[] earning = { "089165584877739236294", "801966663294436435812", "910886096028366675138", "198014104568115974691", "668105107590088652251", "566450461253521237777", "560114072379566353385", "869006705862916052455", "436471250509573908004", "820552385078716839328", "792695760707885822669", "748803929870032297975", "743105595780015477864", "336182617183108557198", "966581663652580572823", "246962309882455034105", "337753550329757305989", "655427328927772450975", "281627340369818199052", "913957850267692087502", "428117554895483595220" };
        assertEquals(76, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case29() {
        int[] value = { 13, 88, 95, 76, 42, 69, 9, 30, 96, 26, 106, 94, 42, 56, 29, 13, 18, 8, 74, 3, 50, 65, 90, 43, 32, 64, 1, 14, 34, 36, 106, 94, 57, 27, 51, 97, 45, 5, 21, 45 };
        String[] earning = { "0416078790596684237138513152645039446077", "4043413304964528277238765470925059698827", "1401882362378546988991905560179940116684", "6310612473424723755584287376679373213033", "0486084389984715076220157962708140997995", "7181800411163578476195654527978672211840", "8322400996408576094461461391735674413026", "7334349002722021301430376639627817091236", "9067819008950238157798747842436416984146", "0423916280107397349366299993885298216147", "5934914791094330637264590044431740773378", "9672860250902447407600962322458521480418", "6484438207420302504355590508215785179707", "6557755023343098490934105206448156307608", "8242177239340901565113312445995640144580", "4863586187072810412806575616525482550765", "2297040313645454057648875931805464585360", "3785779054300961500686478898838499795968", "7785664179774052700511856345941591053630", "1295214473263918665032106467428629357467", "3398296396605310481300533944479957069803", "8814051086405436861200780385728090236683", "5792164372595135848157093326327276649939", "1608556749969017775038904542521432335281", "3557741679020525586630340497857539587135", "1453953689035246983493354040091886931831", "5767629349420041394648249402782310481220", "2006271923428656185745627020033591596698", "6916797648442495889447358070043119536537", "4277073238351492034272225983405295923767", "5599885765185855581898717123350621287744", "0093166842757164445690245835126098199566", "3547477119428548699259733819192907437288", "9903024768015602491970629601951870270599", "4612924092741315570302635945592142033752", "4911911981787045895563438389328937300641", "6863713146309740553796957116637970300243", "0860980211347657396486921826577525762007", "7283942344710086663608383329364689544001", "7743506667887805080733915108774689213710" };
        assertEquals(1648, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case30() {
        int[] value = { 73, 58, 85, 11, 43, 54, 48, 49, 80, 44, 75, 75, 35, 86, 28, 23, 32, 17, 65, 44, 92, 44, 88, 36, 23, 75, 47 };
        String[] earning = { "091933917542386003036580544", "909776995407691860699641499", "190678135697187748877398580", "976046391111141828823167364", "377404048316850087453732622", "368640638450801947501007825", "991306029531131677548463146", "193943204107212732804899463", "755188940043070980569547480", "546134510081311143291338221", "409115304807754211356675471", "277160173170894746440908987", "361188120378034945773140369", "898450317159308051400527344", "617101120144480766895968491", "087809679127907083397444724", "064284738414456808726459672", "308877720316516380452494648", "068845585234748374006798598", "397250406954709925004612918", "697331849160305762640308399", "563170485369159444763029038", "849630694370426459910201473", "018727397858078494828910703", "545368144249334766593047020", "498622468278649274919370202", "490425630117941428889833020" };
        assertEquals(196, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case31() {
        int[] value = { 5, 3, 3 };
        String[] earning = { "046", "402", "620" };
        assertEquals(1, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case32() {
        int[] value = { 76, 65, 52, 62, 89, 39, 65, 67, 17, 70, 59, 70, 16, 26, 44, 43, 56, 91, 62, 1, 5, 44, 27, 39, 3, 49, 82, 85, 81, 97, 53, 22, 96, 2, 3 };
        String[] earning = { "08507637029984413940589960529036315", "80897690182435748773895882304559876", "58060802206446756622393613513004807", "09604814433812317487255023959009744", "77040254129078382839988472932791188", "66882020811406160465716458615120946", "39015203606488624624271061595471612", "70244030170667221515154776790720525", "01241861030251328841905666503215675", "28032107307072288734671980248650675", "92639160070437214220486164593164701", "94480446204004682294721580761303826", "83417086573006504148972239443434940", "45628687127460415489963169900602604", "47733162322654023451302173908457616", "14518622281801207409417910506962756", "38672041884245370773686846554327754", "97648465872214447059746305301987977", "47283621432948507504325509272578921", "03279545140489193940192486219937985", "58329721964799346731054443684340226", "89958175078276018429504931634339965", "95358614516123276652440837571723415", "98604407691521198354498063280527777", "68127567686836714008433603671868914", "02332816604099306596317330065551811", "53599657525749955322665260051944074", "20153199049640005071837876505892669", "94392550383130864129441015150309519", "05007147261346493959337585983017090", "35009272156030562873432265490102050", "69491010504342727787093781429720366", "38871965667896677999294798065003029", "17048412770240155728261711761956202", "56748625551604664715655741499006920" };
        assertEquals(902, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case33() {
        int[] value = { 59, 48, 52, 56, 50, 33, 32, 45, 36, 44, 21, 56, 35, 60, 6, 12, 41 };
        String[] earning = { "08746595545148273", "80818303894193611", "78082157703137727", "41803688816308265", "68230789742683243", "53167057533971928", "90588506377253562", "53789760335953168", "58787533057371781", "49014373503302138", "54362375730307036", "11136929333043975", "49308755700401589", "83783133127310675", "26722951710956096", "71264266833787909", "31753828186595690" };
        assertEquals(-32, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case34() {
        int[] value = { 34, 22, 31, 30, 21, 1, 36, 0, 14, 5, 16, 9, 7, 32, 4, 29, 15 };
        String[] earning = { "09962285339249517", "90947268780997432", "99018433858772008", "64103327316796457", "27830579785950481", "22435075982369679", "86327704185912037", "58379540823638423", "37837918070036217", "38518882708145099", "90865253080705401", "29779396017094454", "49795613340907034", "97260928655470038", "54044604204400006", "13058732190533005", "72871973791448650" };
        assertEquals(349, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case35() {
        int[] value = { 6, 7, 0, 1, 1, 1, 1 };
        String[] earning = { "0384659", "3092715", "8906911", "4260862", "6798066", "5116607", "9512670" };
        assertEquals(94, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case36() {
        int[] value = { 1, 6, 1 };
        String[] earning = { "052", "506", "260" };
        assertEquals(5, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case37() {
        int[] value = { 121, 41, 103, 21, 99, 132, 7, 32, 153, 131, 163, 157, 36, 153, 120, 110, 80, 60, 75, 21, 0, 16, 69, 143, 153, 23, 3, 104, 125, 98, 161, 0, 85, 68, 44, 20, 95, 57, 19 };
        String[] earning = { "093429937743849590925616661348366578110", "907673469562258755229816196669349045192", "370524133758228141663234679934601261218", "465034000167797738062754377402121934057", "272300489136235772190955834627207466323", "934400333712275730672974475784230331388", "941043081823426968258500663348654526234", "363083802981402063618576595324392246178", "793093120332641042680589928225275968973", "757117893055151782778906982573382485311", "465631283505062263133461303950854684193", "328762312550730793881401796437336402583", "822722446107026697480915200663086291249", "452937204563205993752372334191089135372", "988755621120650620529371904576242066308", "571777900727696080672701199306391114585", "954373664869992801312806123063707739291", "051820832233730010019733759194583879497", "926016266718475630029417223638180770294", "226697518738852711203969250853435127758", "593202880831029229930558069920176417588", "682799555944933787495015175561799348426", "113557078060177003165104422418857203367", "664454069611521163798540953993091326914", "616384659937239117220149063414140832286", "697737692809030925256725600440483605979", "169745358236044939309523300367547875180", "369467332594615301689549443043766934023", "463028422753697069352619146405558599746", "894274845307316634830183407350665035759", "336122632383002375141780145756045868617", "640203597853884908837959484656402283834", "691170425246692173056971037685520492986", "502943529464210178714323868950824040867", "746363246880936137721402307393689400029", "851461668542156499077836255495832000601", "112033219315233524275439291077689806095", "191528377198470899958261878245138620901", "028738483133928517488674690369746791510" };
        assertEquals(282, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case38() {
        int[] value = { 84, 89, 124, 54, 15, 34, 113, 14, 33, 86, 25, 128, 20, 58, 120, 16, 22, 2, 70, 28, 67, 19, 67, 85, 107, 34, 101, 60, 42, 14, 71, 117, 44, 101, 52, 86, 100, 67, 5, 127, 74, 72, 123, 116 };
        String[] earning = { "06132223897622023075323761494864534299470426", "60984122590613444325839578015573083229639791", "19016486414353422762682273632017626633321830", "38109576902954354725833816564247121163553658", "24690136162884589704386393018192752955170558", "21451000008586001004852143525235961624257877", "22873001057727904515401297825869238400324647", "32666010761782991857445569037349068932588358", "85491007043684518677876781204624359147541847", "99106056404314804339246048249644662998134160", "70422871340440892848816675087181390107031348", "66398577634042005586201458164116078175414619", "21558828814402501883054147638243865952063536", "23344672440220148054134712538131767027381857", "04435099588051084039933897192264224493265066", "24258009109004807197562816898886859247386734", "34249141842518470171216781824723567102280726", "03777058638580011080137647738816161779340796", "72620015734885397809444522235949985035494562", "55254457798634971090900155487241494432622022", "38683844828201952149091204824344668232555962", "23838504741053361340907038457967459816649482", "39236215666144326740170040362541049744186394", "75283125706417887651200094700442064723163717", "67719496847541918425034908975821527687332569", "18363379185872761725480480042253657816732983", "40650580220165188724843790026959617988188694", "91361223048633992338256074204615277061759254", "45248557497488284857472052640090389122394555", "85021283661121287892395482960091195392574220", "67149364248143682144464425519905576693205201", "43772599441631463691471213950150128153679302", "50617920363087285194640056623151073650168896", "38225636569766256689654625178972708901774444", "43612188920857497154899477779568380678241305", "22619649191190421704287768901361696025812419", "92365203490752940733314281862995507204884739", "99335402787527372952264376812233018540085607", "46351235510403232346561137173526172880043315", "73257528433168688492548633859707674188406749", "09130748141431560042596322894459841245360053", "47865863813658077750943759625223843476370031", "29355745464135632962689168955200940130145300", "61088778708967646622224793445012645997593100" };
        assertEquals(1354, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case39() {
        int[] value = { 25, 56, 40, 30, 18, 46, 87, 31, 12, 77, 24, 71, 30, 70, 72, 58, 37, 32, 48, 26, 63, 70, 49, 37, 85, 52, 50, 30, 82, 57, 54, 46, 21, 56, 39, 31, 19, 29, 37, 66, 76 };
        String[] earning = { "06521391398367626166779668826002787762592", "60460725797471351499700240999196428495797", "54009155748074386712754473032049029997773", "26003946744841387297831124746967169872731", "10930127794509322756699415480207451898616", "37191027332061478346217724211268039150323", "92542201900223447602908916709046230496627", "15567710632328791963718955926513851436727", "37777396007381302935664325461265013449997", "99449303004456871999084658839759498147940", "87844202740049328923838143544540107098467", "34085023340005815022449147979272350687862", "67740622854007450539739727679912668539285", "71419138169570021427576999454618006099824", "63333447383840033921481647739234591146514", "25882749072152307934206391496946121848317", "61672871218501370170521967471338207139781", "14727369999054991020418259233987850156234", "69195406392232237206249997752437729886783", "69276623593297140060592736316357500863420", "77786297608475425425037170828376635980424", "70539101683437802149308656497267119410817", "90419788448996161892780354053319976372786", "62414799361179639297163094800214092525259", "64721215254429496593755903814394709651048", "80345465583779717976064430811907659371405", "89074279485964744273840888010276402976756", "29348102634775397351295011107015230602878", "69260196194994961326873041070689671903157", "01092205275296293943323239206071268195477", "09460641654711343835761190718705491025202", "26977863590228468777679447659150441787896", "74014028041360512875619076426244055013763", "82265335190560920520317905037694503481024", "78991901387086117090596299201811530686568", "74988144410650181188943563969107046079505", "69979593449839443586817257700928188701481", "25728066978799689663002511623557316910621", "57776367994828537274487204781428705546027", "99731222946682118382218540575709626082205", "27316377707254471430476985687726348511750" };
        assertEquals(1883, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case40() {
        int[] value = { 23, 41, 147, 33, 103, 115, 190, 123, 105, 133, 202, 9, 134, 125, 209, 160, 76, 201, 102, 125, 203, 143, 88, 144, 191, 188, 16, 194, 210, 204, 127, 194, 160, 107, 201, 127, 152, 182, 176, 216, 89, 61, 45, 83, 149 };
        String[] earning = { "036197369736994115618075866333027986695681982", "301143213487871126036715586235887894572844312", "610086967941814561989598173845086571034370624", "110087255055157274399158792415693344807242244", "948805513797745794433442795398617781504157770", "736750589003658090842348714156875049563315116", "329255007227816069384314200483997485435412239", "616518000457927394681702123778255884860567338", "937539700384274698632569905285506574357412630", "749070243051840517303522706773613355016425644", "384590258503501091150687599658276544367455983", "671573774130513596308126502731812840113934793", "988176892855096929782016460824613769368751345", "971545127401907285077304896418555496159591720", "414758674013670654292717125366046900923223378", "115270036505926091217859117087484681002950783", "126799699199285903204457071530804722509202815", "561440948716954130301139191012030744124340175", "609348366313702223052968895721935244868596965", "138934883050879100507870199569121150702394991", "869932412308272741270347718364856685541874601", "075143375561037841983096262427490903915036647", "719544106282101553674905287487538954337276150", "558828429276647979807650027578214099644024642", "851777219755481101817220033247037006189250191", "687991020090692179991682308777820369423249053", "663254035692065711598277380162240720635387856", "328431472767843050753445271058628893673151675", "334195878753216831266287476502937999946206531", "355586385381486702194778772820459829674734745", "080668925628650480918452082694082360795447595", "288917950171154803325931324235800482754460005", "776375756362356440516084700879200826516612966", "985370485358749677216990037898348088609736578", "897484887544690824458059062992682805340332539", "641419544540960124405349690399026850956604921", "650855483031319051875936146696775639046588372", "973006365161652002604134823747951045406771859", "524743507673893294821574935364546906660757478", "683213454449752923538020223127446736577098122", "847451161253592504997372548503461330875902043", "140275272554113020644664097164702624817820501", "936271236697373781996616108657509559384105091", "812471333489427817690454955734906732757240908", "224406980433508355511702136515556891298231180" };
        assertEquals(-1327, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case41() {
        int[] value = { 16, 38, 37, 3, 39, 8, 35, 28, 19, 35, 24, 30, 35, 17, 10, 22, 13, 30, 3, 23, 17, 29, 31, 21, 7, 24, 22, 4, 16, 28, 4, 22, 35, 28, 23 };
        String[] earning = { "00512478855855099201677159084820057", "00307435782109745130740233862586173", "53079028537788217343039657803085930", "10702181194802505520022648092728575", "27920213184495315102172219663317363", "44012029731540469197309725774219108", "73281202674726521813057203500992030", "85813920425349163880676320776305419", "87511764056579780319844983052657545", "58398372500952819538193310016966521", "52744145600414718136077908465223642", "81784573594048154545113748646084768", "50809424751406087840413742531725867", "59825069924860367950584111193882797", "07253451787103089710185582130607809", "94101626811586804377644744822060784", "95755913098477940802973190157804430", "21351188351589738033876463930036126", "03420918133445170302947435276908520", "10302730986500072320324658410024814", "67001306810145169893022238094847480", "74327057497118847742206950450045809", "70922976437334543674260087732121035", "12662723939771571446290077707067062", "53541202810441849635358701174097347", "93789530308821240358807710549185893", "08806757004651181924047715021201194", "86096707516439325371953074206187127", "42323406265613027060402749160858379", "85073293692078608090801001218004754", "28821190562828060302442698085004855", "06587925763452704684751775178440357", "01953104556787874158480038113783087", "57376031424669083221803649927555806", "73053809512877940604095273479457760" };
        assertEquals(1799, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case42() {
        int[] value = { 11, 24, 29, 12, 16, 16, 44, 11, 27, 33, 27, 23, 58, 0, 32, 44, 40, 47, 0, 38, 14, 38, 45, 27, 20, 8 };
        String[] earning = { "07893438069809646540102621", "70712482879574863317845697", "87067896534095737570747548", "91601611865815345205090207", "32710754222483024016285467", "44867012375076997595409517", "38915107506152535710759190", "82614270903776650601238390", "08582359050533819349791098", "67362700501898161000275749", "99452563010225376288902123", "85084017582078702703965557", "07918757392707799850522617", "94553626385870276195157116", "68730956813772042735362422", "46342935167097409215168972", "63754750916296290672540946", "53520576302781726082482007", "41701910408059317806678010", "07056501908305552260233986", "18702472729951315462078623", "04498053970625664873703735", "25705998152527280283830521", "66524513071561499009675062", "29406199942511274018232607", "17877700893776226706351270" };
        assertEquals(791, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case43() {
        int[] value = { 60, 51, 58, 28, 20, 66, 55, 65, 20, 68, 61, 75, 53, 76, 52, 50, 24, 22, 62, 35, 44, 53, 74, 29, 64, 16, 26, 12, 69, 77, 39, 37 };
        String[] earning = { "08047749729726589941668525881392", "80066291647565882174846344685957", "00061262258138284744327119090578", "46607488691301762823085249922684", "76170381069137921776371281604034", "72243039604571944168266918747027", "49688302041454793310669312764512", "91281920075931611378450131367857", "76260600062828561739950512001623", "24596047605100695005221760687812", "97819415250836257385999500943831", "75131549818031557908745568250920", "26303753203305502403442621645780", "65817141806150126393291809721830", "58279976562551034936710376061306", "88862491695502308543622438406123", "92421431157726480976922269173159", "91787133703943959018413808932839", "47427617308009347103627753907765", "14436808955833636830019306096255", "68303264929742769460007963015831", "64287665529449122121008025697244", "86751690019521022379780121556771", "53122931575568342873901086338135", "24148113160620736050622801954495", "54991821200819689836351610555266", "86096773069267041990065395005670", "88920466084542607309195355005896", "15024747173051163276576845550627", "39560058688978311872827142686068", "95783215213283025365347396792602", "27844727321000639955141556067820" };
        assertEquals(677, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case44() {
        int[] value = { 0, 10, 19, 8, 33, 4, 6, 19, 4, 12, 27, 14 };
        String[] earning = { "020626978976", "205328529734", "050621516733", "636044299171", "222409940418", "681490823173", "955298055053", "721942502187", "896903520160", "977141011085", "733717586807", "643183370570" };
        assertEquals(147, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case45() {
        int[] value = { 12, 45, 49, 27, 21, 17, 61, 8, 22, 66, 12, 77, 11, 17, 78, 29, 4 };
        String[] earning = { "07825445846940689", "70090392443210141", "80073804328638235", "29709461890138091", "50390548444099999", "43845031206196349", "49064309244765873", "52418190844600579", "84384228073926760", "44294044701513028", "63804644310688090", "92610176956062077", "41339960218601703", "00889650638210430", "61209385700074083", "84399477629703808", "91519939080730380" };
        assertEquals(89, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case46() {
        int[] value = { 16, 178, 187, 70, 3, 177, 147, 48, 188, 152, 28, 1, 157, 192, 77, 100, 183, 172, 71, 154, 130, 81, 123, 30, 58, 12, 50, 176, 132, 21, 157, 56, 138, 18, 110, 174, 139, 191, 119, 47, 71, 173, 186, 122, 137, 72 };
        String[] earning = { "0646249990493255433286009898732396363429390428", "6081669330349442352380606798966656932454319467", "4807613553018625769324444995093420528290072497", "6170475365930279974675722519981731491128194106", "2664035047476792718188104430592444446320209275", "4617301559604265105938919418488463864234513629", "9935510194770680767968382616247351004932604772", "9353051018885313927292789859581131860007434239", "9356459105125678950659799364956887826781530565", "0035794850779923696361167180478407297877946705", "4309467817009879566660879543516761539105750556", "9413707827002003942743601198491352698493268417", "3980640559920323762700917924129068523423391279", "2462726369803066393694045712341518131211837401", "5427968172702601319596190168353741401281279150", "5259250383933610286145332691876666465321640562", "4379717996597332030509125513358015235363368911", "3567106259646918300864899020078993135219343375", "3294857706622396000708468002577285353976376554", "2336199263677651587065271512527531310570202871", "8827836956640994060609007401631603403038968907", "6045888291030465948590825581839803262301946792", "0647193771869013184208025973879687991268142779", "0042018896701493296702208182574288397649888078", "9642492997917502598175580758177019452030250353", "8795446831519716500545917035990385260792927376", "9991311568492169120108785304804525698518264699", "8859086940384281302211328540783839372388368442", "7909542594541338305568851987021776692554648644", "3698984857192457577233777908205362456109876605", "2631287168619136887719947043150708981848581406", "3647443184730576092568620358737087686351545805", "9523465380656146198300881823760801083444398095", "6601431177128816535133789559628710529232245988", "3954480882565144213342934263649605013363886052", "6329460629392306335106995697958882103329243015", "3281644067983115553032172082261639330002275466", "4421329078144223329503260753518342330030597859", "2592233087092182617730643918504543620305343855", "9408042717533111396081890288498142392050803763", "3301256459723826333299182923685532822538058905", "9179010334569374647064485266478494847940501277", "0924934406081790836286280748861585635733810359", "4441267257542415935897703364664809004887923006", "2690727360517056175709775794400098516556075004", "8776592955679102154172983692456558256953579640" };
        assertEquals(-208, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case47() {
        int[] value = { 34, 3, 7, 5, 29, 2, 4, 39, 25, 12, 36, 25, 33, 21, 36, 37, 26, 5, 8, 8, 26, 8 };
        String[] earning = { "0025189629337420568360", "0066540267069290149029", "2600774141703955588987", "5600770137382609582536", "1577057113278348991771", "8477508271544765998775", "9040780394078729055702", "6211123054838600483995", "2643179502822798617606", "9717314420473794853144", "3073250884022683358659", "3608747327207262847460", "7932848823270416855854", "4296377677624021601812", "2950462099861202806251", "0059859084326120342982", "5155990468388683051982", "6488995815545004509523", "8982185373875162190280", "3095777961648829952031", "6283770904565158828308", "0976152564904212230180" };
        assertEquals(655, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case48() {
        int[] value = { 8, 4, 4, 0, 4, 12, 3, 7, 12, 2, 1, 6, 7, 6, 13, 13, 3, 6, 1, 6, 0, 10 };
        String[] earning = { "0669207524229583493218", "6012710517307938107579", "6109912994157257384485", "9290094372245779166419", "2790092558188592973016", "0119907826439724718868", "7024270281618205531052", "5593582050135028632489", "2197528506345820382927", "4742861060462924251784", "2312146134009599956553", "2054831346000723694682", "9775898552900130726291", "5927572089571007900696", "8357920222923004078470", "3879245804930740889126", "4131975632967908015535", "9086713385592078108876", "3746381221646089580735", "2544080497562641587020", "1781165828589972373208", "8959682974321606565080" };
        assertEquals(953, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case49() {
        int[] value = { 0, 3 };
        String[] earning = { "05", "50" };
        assertEquals(2, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case50() {
        int[] value = { 10, 13, 3, 14, 5, 14, 9, 5 };
        String[] earning = { "04996091", "40133263", "91097259", "93901555", "63710574", "02255008", "96557006", "13954860" };
        assertEquals(61, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case51() {
        int[] value = { 6, 11, 29, 20, 38, 18, 10, 22, 15 };
        String[] earning = { "079273006", "702980031", "920418796", "294018628", "781103968", "308830967", "007699068", "039266607", "616887870" };
        assertEquals(17, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case52() {
        int[] value = { 1, 6, 2, 0, 1, 2, 5, 2, 4, 1, 3, 0, 0, 3, 5, 1, 2, 1, 4, 3, 5, 3, 2, 0, 1, 0, 2, 2, 6, 5, 5, 5, 3, 0, 1, 5, 2, 0, 4, 1 };
        String[] earning = { "0021717800050660086651941139885330571621", "0023549871138574688838608570645601130529", "2203885609968974125915270195743323192542", "1330422484872844603493161670555730763658", "7584082768134978136791408712628965037296", "1482802417015588196294371561352957181951", "7952220790692903332045158106194682632122", "8864747092723132005516145520476275225881", "0708619904921303526077696539531938479088", "0194870240536308423884490883335620692273", "0198106795047965682365346083360405449975", "5367319223409805807547670693982378295891", "0882452316790899642335676687474978179357", "6598959133988069669745128512610733474248", "6774780300609603490693293635881637776545", "0444883238559930064872888597622035377775", "0616113054686640083105527955345736356017", "8820393022804696807523440686918489105491", "6853662563272904370974155898691337867497", "6894720508353768159038721613395240395175", "5319994178643497027304562560256063192840", "1853145674575532534840562752344164350750", "9621431164366128541755048400285854546187", "4076075499477298245266409087960874315667", "1801818560606838705122890890952043762612", "1516751558066565968657408052852366892848", "3797160238898139589165089509961534890706", "9050216093337257568302070290134764163461", "8675631453394686396323299891097751880867", "8445259733687182419954865563904848772555", "5535824615024012581564502214740026678964", "3637996296439760743201880357780031677141", "3023658732077333383466574636542300504640", "0130572580588375697034443644186100300440", "5117016246421473318313537881876653063128", "7396383279497777506995416996877700600304", "1023712592959467657520652203028740300279", "6556291802983257044187166874859164132063", "2245952887795447199745861406656444207605", "1928612183517855717500772861754100849350" };
        assertEquals(3515, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case53() {
        int[] value = { 2, 12, 77, 106, 11, 51, 45, 74, 3, 68, 61, 50, 99, 29, 14, 52, 69, 27, 85, 60, 80, 83, 87, 103, 67, 67, 43, 64, 97, 94, 24, 85 };
        String[] earning = { "05169706140195689871412583134211", "50103559476872384861073171273444", "11024536115750400201780506727134", "60207062315833849610369039826597", "93470886330704322276733316325652", "75508083706257204785309262983527", "05368805242116880450085159858583", "69626350159657604638489646148843", "14133721010358956551712725638893", "47113045104830372800167341780389", "06550629040905094360246859077127", "18787216389007805273393926457562", "97530515530009767029560291729908", "52034767805790443609294277508604", "63483286930874035194350860354266", "88042080579064306661024575781661", "94092404624573560529180394451893", "88262746583206165078067550945110", "76017853506720962700004409665290", "11106508100399419800693234975917", "40737304712352301006044308960485", "17863088164969528609406412869528", "23093959276304040743460400897333", "51503216738922853542344026831790", "87031654245297679503010203741897", "31696296519617054094820630997313", "12783981670475374969988879044281", "37222854387520585467669349400727", "43765388807798411555097117400899", "24156558831596268129453783278089", "14395284982600669191823991829804", "14472733397284613007583073179940" };
        assertEquals(335, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case54() {
        int[] value = { 8, 7, 6, 14, 14, 21, 13, 13, 18, 15, 3, 25, 27, 13, 19, 14, 7, 28, 14, 32, 16, 26, 14, 28, 8, 25, 31, 23, 16, 21, 25, 1, 17, 23, 4, 20, 30, 24, 28, 2, 23, 3, 15, 10, 31, 25, 31, 12, 0 };
        String[] earning = { "0218034866871823366903409095694831574281550306579", "2070566820944622005713971086001808701428859534007", "1703039233798845672095644180766554499277047371764", "8030845122615400075082395722992855401064788680986", "0508043183104692774428939432269590520511021267019", "3634403424494718467075213727377922869510524252175", "4695330230990402408484642321051281101701308190937", "8821142047412557139497849372509925779281719836536", "6232823406654994568813894177598628354656786133084", "6032340760968348503126220857740646257841273041959", "8976149469027918851020637851788373055892657127737", "7491099156204973897067929925595721741300725679438", "1485440248740112483215479402424266081784054772159", "8684674593991033874891188427854508142088890924492", "2240910594171309345451207226998708903971954232906", "3250282748832390013686472949529774623001087841117", "3060744155884830005256249514872236994469373158303", "6077760360598741002138261396297214382486104929343", "6525478983173453520433547705787862296118105128153", "9700404481002846214064179911237991383245153457615", "0198278912261958533607848761835208468144495944388", "3352854736075116683470100402891171253735911551888", "4963926882694124225181093447972037268380700347610", "0749314492327807464740904207083603755800949314686", "9145932940799872917980340017093934536540143333461", "0017473318894429537974420072520875628851637140671", "9882322775520224190160401708333088040562388589352", "5602271277152769465112777280675132013249702476842", "6079230557754895827288900536009055466181353300480", "9069675094892592798339789237009195658073612342537", "4162971980854489277751233035990146965751119699454", "8858592966372577228921069801011021759711065719600", "3055928224726007316907303783594205452449719453579", "1845021586316884642181734582556150992585597712735", "5744581732070196932342275600469749006560513618195", "7090260755548402989865653241656559001809751923215", "4191091947511233426383856803685922610028053086356", "2420557268837090441217385852107745580010472573418", "8276110854908870681443804564875148602106811697372", "1874101161204811968545000129131195098060455278696", "5807053772670890311149791637361075570484039393456", "5548220187525958700591044380511619155715309537921", "0978148963754047345351093782329597313215990412521", "3536221810167928191495333154336747690562354077032", "0378659334277234522545413487049151128797931706681", "6410720631792421898741743096029932836378372760734", "5079019509741491331638664638454657123436495067071", "7068173385335901045188186754835073915179522383702", "9746957649789267333588061122074095556826611214120" };
        assertEquals(4414, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case55() {
        int[] value = { 10, 1, 12, 18, 8, 17, 0, 0, 3, 3, 18 };
        String[] earning = { "07852723327", "70346815767", "83049497455", "54405961116", "26950092987", "78490006502", "21969004077", "35712640876", "37419508090", "26518077905", "77567276050" };
        assertEquals(180, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case56() {
        int[] value = { 80, 38, 7, 17, 18, 50, 104, 81, 40, 25, 115, 8, 65, 95, 1, 17, 68, 69, 36, 10, 2, 53, 47, 0, 27, 19 };
        String[] earning = { "07886454288997266472208474", "70647761775439288594322362", "86018084141392651227786633", "84102716879143892052804007", "67820766934776487254149085", "47077048243102988667956328", "56816409118954900666605963", "41466890841546919442465502", "27189218051382766722292685", "87473414506006247539840538", "85194381160475680037522931", "94317195304081458239354616", "93947054807806516675112341", "79236246265160146141550655", "22684999726451010901234470", "68598801648514101786000577", "68127809670866010640279704", "45202664750261976031805378", "79255664233374084300250156", "24724762297951160100529028", "23781964285315202825052699", "02804506942515307052509837", "82649655202420409509290977", "43600395659636457310689046", "76308260833145770752937407", "42375832581615074868977670" };
        assertEquals(405, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case57() {
        int[] value = { 0, 2 };
        String[] earning = { "02", "20" };
        assertEquals(0, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case58() {
        int[] value = { 64, 42, 111, 8, 99, 48, 35, 68, 85, 108, 22, 73, 105, 14, 39, 48, 105, 60, 61, 112, 54, 66, 97, 61, 64, 20, 100, 65, 114, 56, 107, 123, 121, 77 };
        String[] earning = { "0249243017969218054811429458634300", "2038428614140963883896999660845715", "4306101821858308275594426604871709", "9860988768694289371505336362903642", "2419072912838600030463488780411214", "4208703113578908751547405305847068", "3818230413013512292534883880134413", "0687914048238676096667327988145827", "1126111408813279649248843786928171", "7418233880344719744924745271248161", "9186850283004591902302338130577736", "6459371314003866542608996369421161", "9084883834430821648597632019600400", "2932695627588083198334471044580446", "1608001771962806570244833361510793", "8389082699161360236164218243440252", "0823072067956152078771736758603818", "5877359944044973700576617347609536", "4351012694228806800924128130798137", "8855455629365321759034496503033416", "1990643642009346772305784199551227", "1645374784287444164450290231344742", "4943448387396482761472049910170088", "2923808244393731312989405398958694", "9966853735862138678640950300743875", "4663738972130032731512933052824866", "5606808887361464543093190507586115", "8042050861099413870391080270364050", "6889481192546554667053197853000333", "3470143424720814009354754286000656", "4513174588710000398314083464000275", "3776204811714472851427068810362079", "0104161276360495133124897615357705", "0592483711610632867672845650365950" };
        assertEquals(62, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case59() {
        int[] value = { 1, 2, 1 };
        String[] earning = { "050", "505", "050" };
        assertEquals(6, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case60() {
        int[] value = { 5, 9, 11, 7, 0, 9, 13, 6, 0 };
        String[] earning = { "025187978", "207587602", "570595313", "155067996", "889608957", "775780610", "963996059", "701951502", "823670920" };
        assertEquals(137, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case61() {
        int[] value = { 26, 15, 53, 124, 178, 100, 108, 117, 175, 92, 40, 38, 83, 101, 179, 165, 149, 173, 111, 41, 69, 156, 167, 60, 96, 172, 104, 160, 3, 33, 32, 122, 6, 191, 110, 168, 129, 122, 65, 98 };
        String[] earning = { "0106997899252766459608596995820332405862", "1054478978030383264304936786918824844187", "0506309248052105650967104666229222472091", "6460168497061241924891260501324229542035", "9431000712062372425688519023175556617047", "9706001859883998057204806212564759855463", "7898010138861282144032071048708669255929", "8924781043419210254712028740202161805893", "9749153409211375897261891406991573157531", "9887298390884501247466314812263806694065", "2000088428025315747622755215160632836883", "5356686118208325361126089190036188270552", "2021231914580213914098729289910944841898", "7312392235332004555839911519995950625565", "6804798170121005786922705768055808236049", "6351282051553450366657384155284317102283", "4269401282739573074471707235030939179448", "5652254594461586704084219624486598146079", "9404574477714566440506060211393792812659", "6398620724610896405028653176411326054366", "0069803166229325780207038374535946587353", "8471842216268927146870606782991120670413", "5912580083707973720606083203165502843144", "9306107291582108016530806357333998436156", "6640961814599154790386360193213625018202", "9765020748212571262137231077654136877429", "9860214401198165321778059708226480540056", "5661328062509985541642373780946499989281", "8923157292109902043459132629007940549123", "2122760096631958389139631524004733745002", "0894548213060554063151533466740394644409", "3822576158619983957391596144973063990653", "3222556670384501399242092389439604721036", "2429699136284087982660285609034340984874", "4845682816828621118056840859576979011725", "0474155059374230741587431748444928100076", "5422755574601562962470368709954014100011", "8100049850858502406334112402104608700050", "6893462936859648475651450258200537271505", "2715739315328593899633462961329364561050" };
        assertEquals(-639, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case62() {
        int[] value = { 2, 0, 0, 2, 2, 0, 1, 0, 0, 2, 1, 0, 1, 1, 0, 1, 1, 1, 2, 1, 1, 1, 1, 0 };
        String[] earning = { "072603683820077550991123", "700489881517706819611745", "200369041680959346933530", "643006880879780398406771", "086006599516876658411261", "399660023855029150752077", "680850006261752738093190", "884892003649014772657157", "311093630215351701787185", "856858262063028852373876", "218715641601886033530630", "070965195310914978733273", "079780703089018718291065", "705872515281102361138019", "769069241864820502061986", "583361777809735035219834", "514955370537160304801991", "096880821238812540297046", "969447067357210282025482", "913015958733936109209605", "113612377303181917590685", "175720111862009890466070", "243767958737618394808708", "350117075603596416255080" };
        assertEquals(1215, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case63() {
        int[] value = { 118, 87, 34, 87, 119, 109, 55, 86, 95, 88, 22, 48, 82, 84, 49, 57, 65, 39, 50, 79, 23, 7, 52, 90, 72, 44, 122, 124, 33, 100, 43, 51, 15, 88, 63, 128, 126, 123, 4 };
        String[] earning = { "022603502643206429449157610560525204100", "200654587799988865996158278963584146591", "200661010853306833639067124301241487577", "666017866749885972462884194307846359140", "056106260098751891339556753416777078610", "341760692846659033394007912830624628806", "550826051248276575233836305425554790507", "081669509645631061271932368090921008822", "270602190435610160412092361486410559127", "678708264013088039557479693023370484614", "495494443101244793661856681442107923975", "393986855310481304790862201556669730989", "293876266024074968200387687014233901326", "080855731848704854621669317145053423903", "686519610841440116058879288568072365906", "488980501073981013832119417242170733876", "263793766390651108732702228670424045540", "953213510934846380348351746291894439127", "496433224567260873058723799172754201987", "493639371569025334503625083278815665686", "969294312710018228830902744870188086046", "110850890488368173769035583107527486280", "556850339756867105220305889039313732856", "787467622962799921352550645976613056529", "621179333662632427707586002216130381097", "172951066980818124984884009987524164396", "084432581311778786934395290558641689209", "593348404045015262128109295083924731543", "660013298245146479777037185807945976629", "031760506326458201280796678370063394733", "552876594316200148781536156990075927751", "284472521706357729518211324246705455981", "541674410079332044458733041453550867693", "214306705497943704260470316793948063493", "048572905823026343068835868379256608386", "467988089430135359156626149164757380732", "155168581699399851960285032567796437080", "097410022178200742884852990423589983804", "017006727459636607766069769393113362040" };
        assertEquals(603, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case64() {
        int[] value = { 11, 179, 58, 21, 157, 127, 61, 198, 72, 101, 107, 106, 55, 197, 139, 11, 72, 51, 130, 74, 44, 202, 49, 136, 98, 102, 77, 3, 138, 157, 46, 156, 86, 55, 117, 28, 138, 192, 143, 138, 155 };
        String[] earning = { "00163704049397881609157954539651409409523", "00303907141662475733240453431220086059906", "13013848352075925830317454882556927105466", "60107499986797877389364741622659189469293", "33370799677482280397982185315676446653639", "79847051582731345483798083931490955883701", "00499502763946075623977625942387131330699", "47899120058701100580752528818059843341728", "01396570018484888107487066640749723933622", "44587865103991193929485330106668056060821", "91267238830922946314314774419907601025159", "36074797499058657107250154723677716572254", "96798340892503794617176201945877261277503", "72572161412830313805618027955110742014635", "84982301819673090328423186804403080178233", "87278470894591904830060895163658906101069", "15570550836743040706844786044706203340468", "67833465193168387055107795663143004930173", "03389828021010230501261582662926055892866", "93097330794775806510386302718327959573904", "12339797443216408123059675668389584887665", "54168975881571264068508892769600714979884", "70742872754068304716980025659783269307778", "94471065037120187753680028351547510776440", "55548822637502898980792209819987760000021", "43415358604417656522525890410171645493765", "54863998614799810667676384002265955415735", "33821341401245064661665511005163353232583", "91225128069355434328899190250783654430517", "62566430769681467193367591217067187770093", "52557985460771050422808487668607076885772", "10696079987770386367903771533770986176540", "40914918706727092009572576936109082405501", "08284534250164800055816164555878806191038", "96796513361612063459449005534766260588866", "40146833900520113985893704424781415005635", "05065834362771704397870709133787098002096", "99593301305274810023797603520056518520336", "59426767681256204189687407755075508603068", "20693092225503366760687426381974036393608", "36639198219435398364548015537320186566880" };
        assertEquals(-286, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case65() {
        int[] value = { 12, 16, 7, 13, 28, 10, 47, 30, 8, 23, 5, 24, 39, 21, 44, 1, 22, 43 };
        String[] earning = { "098446314974233568", "902375087564912861", "820783163719687201", "437082152045796932", "478805300967067506", "653250080293276291", "301130004935182347", "186508007076752379", "473200470133378824", "957092901034288663", "761469373306843470", "449573563460164722", "296702173281083075", "318967857846802419", "327676228834320684", "582952338647046026", "660309472672718200", "811261794302594600" };
        assertEquals(299, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case66() {
        int[] value = { 3, 45, 97, 18, 43, 15, 64, 83, 93, 24, 53, 5, 121, 87, 76, 104, 59, 103, 126, 105, 60, 93, 67, 43, 0, 22, 121, 89, 116, 126 };
        String[] earning = { "052952187711933287819604622761", "507428417165378353082074925977", "270503260292513105517714466638", "945097721035138650570239435344", "520908677984851164671400767544", "283780385298018250119782249765", "142763009430321427445012953077", "816278007214668730536806889778", "770175970841879088312790339519", "712092428012863978234370926414", "169389314106340435910622766204", "152548041260218679861349808831", "935180368832004574575980772016", "371351267641008329378107524490", "383818189308480793161161141195", "231612470946537097805232055087", "850565238737729908902673544951", "735040708859493780567855510284", "805561453298531895069448909745", "181771431316776006602921192408", "927019562401581527920198906949", "607247087363911268491023055931", "071308109724806375429203061525", "444902260029071235818330533686", "694472983978751055919005089715", "226364583260724541090563806393", "256579399668241540926513960219", "796357075428041092749956732093", "673446771103199858404328191908", "178445789441605714589156539380" };
        assertEquals(-86, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case67() {
        int[] value = { 50, 16, 24, 29, 49, 22, 60, 50, 6, 61, 21, 62, 6, 20, 1, 48, 28, 31 };
        String[] earning = { "049053223239642479", "406008583246581096", "960245611839274719", "002081286399944744", "504802808034260864", "385120874849538962", "256288075760744532", "281807701330539865", "331684510202019781", "228308732067028680", "343934630606786447", "969949002760272554", "652925750072083491", "487463431287800222", "214408499862300762", "407789587645427027", "791466368845926201", "969442251074122710" };
        assertEquals(115, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case68() {
        int[] value = { 43, 1, 39, 31, 6, 37, 23, 23, 6, 15 };
        String[] earning = { "0969294058", "9089625072", "6800212383", "9900563634", "2625071171", "9216701196", "4523110935", "0036119059", "5783793503", "8234165930" };
        assertEquals(-13, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case69() {
        int[] value = { 1, 5, 11, 5, 3, 3, 0, 11, 7, 0, 0, 9, 7, 6, 9, 2, 4, 1, 9, 4, 7, 6, 5, 4, 4, 7, 6, 11, 4, 3, 1, 11, 10, 11, 11, 9, 7, 2, 0, 9, 7, 11 };
        String[] earning = { "052993158447543565557822257042077600354520", "507830535634681705408976324436920651064480", "270978307437541460695556447290943495053182", "989045928224020371966056008924683681096733", "937401787305859011647698000917347665876321", "308510182094620319741256612938932833604322", "153971047867817199959491222243881471652536", "530288408576408912567685038033682109027603", "857872780444866223571266498151918272204556", "464230854006591468599186961491660192755218", "433209674005400431359852449793931420477652", "747454764650099981596392922171236916210310", "565086848540054701003004776757857572174606", "484252106909505004695791991639721574962035", "311090786109450770751254775341047803053571", "574303192449707016674101344488976188730428", "606711912638007103017220704267215230386231", "550119923811140630763476298418012957150403", "546967955535067607020378656230663130831212", "509644567959095716200153170135543967184660", "785671971996351473000719948218579848892586", "895062462183072124317057478321073849126501", "275595986859095027751509691210452458709542", "266686156622414106839790355255315177578309", "234006204949797372619463011214931099277360", "524001239642797409574795103630674908594427", "747802288192615448608815130099498534295854", "042999201471763424212322260051473453732783", "439213435997534861331215139502576212841709", "260478331131791878058105409120487425139145", "099639869692870920655043964454042073866621", "724843881633524711647751379778407993014956", "703372128016717652339325148367270748527853", "664668412149558129198841095424097085661706", "059863707921770835364457903512794800087503", "015153192206243807078987984325338500917502", "300086602742190731818175252781805609063047", "565970520571765385389207799343612681608027", "443664274570423060142698745219647177380677", "541733565263605424265553348771698755006059", "288322305151037230168040625804255000427508", "002312636820651813206129074395163632777980" };
        assertEquals(3558, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case70() {
        int[] value = { 208, 103, 126, 183, 87, 133, 205, 137, 48, 54, 139, 165, 180, 58, 8, 199, 93, 61, 202, 112, 138, 42, 146, 108, 87, 47, 114, 117, 47, 192, 14, 97, 49, 177, 7, 15, 94, 47, 98, 205, 56, 120, 22, 188 };
        String[] earning = { "03929794381556705127101450398319093752615509", "30520168250524034659891376821887664242047724", "95099636240718487496890451778306391337549054", "22901343437261836941178097082492816431965890", "90910265741889356952185892370568083726487397", "71632078473100792951752302253032740752421514", "96346706403059169730927210660253747556050321", "48635860147286195762951728445009834432756421", "32247441095441702987017660378339550237724834", "85434704909173402084329993106185682244796984", "10071337590233781226803615312508680884737190", "55728102412049734009601810339313090601858236", "52168058473402240444747239426095249994990077", "64819096133920245972977070531706737586569571", "70483711747722064108908752414832961789676262", "03835969008344608491360310967489786431032531", "54766295221405480252528666506865031474763889", "16499977902049142044512175502548304739462896", "25945536882047095408439020208231938184210413", "79612102746942812480331854886217176027517651", "18811799038679935543037172830156317127377721", "09978525120047062133304381761424140805696700", "11085271793177808291740846783904893191489032", "43408327696820736108138021926172326160576235", "57599012691137516725784207360479185632851891", "06172208035090206504216170029789513305147675", "38703264313345495528877930032313716696175874", "92787564701323160008368262304668689405413286", "81820305862961476286013609240480911970180043", "38345020315307848522149147364064266659185122", "18096350380190386431520778168608451882087802", "97628239958356295817644299380480430557362988", "06380778566027970391318315769244041512538316", "96918443588943683037149281181653408552750137", "34163074020097161486703653691610180418440839", "72347754228695744710181163649685554087937323", "54332553348098837382209630907585151800344736", "22716262744146914947751025650927228700055950", "60594407777895607425364581141103574930028697", "14468255293596736611798754718886354345201158", "57957106467809623207769617530572800745810084", "57083534891205258846770286820189318379610014", "02599122389377638915203397784208133235958106", "94407411440671219631102515463228679360784460" };
        assertEquals(-403, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case71() {
        int[] value = { 1, 3, 0, 4, 3 };
        String[] earning = { "02957", "20952", "99030", "55308", "72080" };
        assertEquals(39, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case72() {
        int[] value = { 68, 31, 77, 0, 84, 52, 6, 54, 71, 20, 28, 56, 77, 29, 36, 68, 82, 47, 38, 73, 72, 80, 51, 2, 66, 83, 71, 67 };
        String[] earning = { "0835657399356962044291908863", "8000412020713940209497090362", "3000233205765581391623938072", "5000146328794086857912156983", "6421087862376642853785922899", "5134804455991798088898212775", "7236740702951539113228568117", "3023847036965990581131381553", "9202650301501549310691808663", "9058252610416148848139969766", "3777399954085063507673335340", "5169795601803913415091748621", "6354611516530439066376915454", "9950675951094080515055133298", "6488493944613803521792770542", "2016289098339030817916342352", "0238801538540558069075298120", "4095581814016121603996761490", "4917383108756517930068270605", "2469782161603079090034890618", "9921892393797591796309238850", "1732588119316526568490411172", "9091925389379173272824067344", "0935216806341374967931601528", "8086228189585302810081710643", "8309871567364253146681356049", "6678971566425945290157424406", "3223957336014822005802483960" };
        assertEquals(233, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case73() {
        int[] value = { 68, 37, 92, 25, 75, 39, 10, 72, 45, 17, 25, 56, 73, 89, 18, 24, 35, 61, 13, 54, 95, 6, 60, 8, 46, 14, 38, 10, 72, 31, 87, 8, 91, 30, 85, 95 };
        String[] earning = { "064254529146038174196442929917654021", "604340057257763536345651084873931987", "440288894185915472780823006808048607", "232029516767077365242066171101080660", "548205999075939432640026991640467089", "408950273003964818357494219801183958", "508592048619957007526740474461991925", "259197408852829016661302801792794342", "974693880072126866025574358354116751", "121700680089231032703723241639634229", "458670157806066185876187537907767629", "675753922960733632234274804097917710", "079099981207058207544802773592919190", "361736522363502811216340394298324590", "835794796163820369433154347906432386", "154348008016283026263432137568974046", "737631016383016203476536675186254535", "462528766252719630492979857003210482", "137263560782524244007710072960173446", "948445262073413679004169391824574960", "650207615364463362740348757765669551", "468004735712831459713046583380258895", "452629407287045337164409256959138602", "213664024374204269098690259309404092", "900192483258733168037522070406079137", "280791705430794375795855703076983550", "946119418174347757217369030858098936", "988168473690529510987393408037323162", "170040695309990680626850075302003796", "738101124977286863045099668720105662", "690041971679934922156214090301086358", "534868991361123751776530789200801174", "418073146477942440349884938335610233", "096609937267153054495860159176312093", "280685245221998438465909353696573909", "177098521990006652601522706262843390" };
        assertEquals(1137, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case74() {
        int[] value = { 19, 7, 24, 20, 15, 4, 18, 24, 0, 4, 13, 23, 8, 25, 23, 17, 26, 18, 2, 8, 27, 24, 0, 10, 26, 9, 16, 10, 24, 6, 13, 10, 23 };
        String[] earning = { "097617528003660943638965834114661", "901929026136835578448796814202995", "710479989806260770802652713789895", "694038236028516568800949854136733", "127305846739166883631140899356027", "799850691177445117031950776074368", "509286049004092454142399722181013", "228349409925284722020400153509441", "869661990943051714460178299456190", "018071099043379334341383458524470", "030237024407145303994046635702598", "366897453370889691255364332920863", "682514020318012082042691028568557", "636164985748101428348309822436319", "050665241959210897199135065392172", "957581477336048093145150670287597", "477681521309829908230374316427537", "380837424431287380166112968023520", "648860104392031121048102181376346", "340033426495449436409365878340900", "882011200145289506890423377325274", "976919341303631131134099208815184", "695445907846903571062900042382392", "562900908364195042253900288011845", "887887712463080639183202012951846", "311597259533226716877048102929967", "443496239852825068187828220985865", "127130154579543240333830999015629", "108357805202639822742181528103425", "429664196420862773605521195530432", "698703041458531555392138898644040", "699326149796517932407894466223400", "155378310083792770604425675952000" };
        assertEquals(1847, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case75() {
        int[] value = { 22, 73, 87, 60, 58, 67, 41, 51, 60, 0, 28, 59, 80, 30, 71, 5, 46, 6, 41, 62, 70, 71, 43, 102, 53, 0, 100, 48, 81, 32, 51, 87, 3, 46, 12, 11, 48 };
        String[] earning = { "0236440353151087701992454114058421195", "2096164790507620612155983743433364937", "3903762152154460326185713416038474768", "6630619548647451375672732472779434797", "4176001124304350290340687535412785647", "4661001585079726170410245503168256061", "0429110717847620515557837097289169411", "3715157031403690250934553536785525046", "5954281305597849992839738971725832785", "3028457150053823808399699807462905807", "1516308450035567743366171695444044921", "5054074095303712414784862333425790776", "1747497373530121967073849945936547522", "0644376688571052485188903784900261943", "8265522942612500236070717962541266847", "7001060093721200065943302116598731873", "7633215298749420079170875448152076235", "0127971590416836705630312541386253591", "1265005028347565950822316335509094650", "9116345983370109168024093357520299784", "9587415339687874732203165559795339984", "2552007499643803002430888688902250636", "4977628576188973833018067296524555318", "5813843539764010711968605588062263236", "4332757389129372526358750656183726467", "1744550598639791453356256043473521541", "1417309370934861443558985409704615737", "4362537617535426815798686390887057624", "0407412774449955135579501478076152538", "5337168826423049580290268708704140011", "8389289552456018269052423347640834792", "4344721589075227020232527560118044250", "2673856230494663759935562215543404205", "1444569525407161634990536157204440160", "1977604078975988256796324576507221091", "9369461480272447395883136432319506909", "5787711657162373510446867174812050190" };
        assertEquals(1178, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case76() {
        int[] value = { 2, 16, 0, 22, 24, 44, 27, 46, 2, 30, 33, 68, 35, 53, 65, 66, 63, 36, 45, 54, 57 };
        String[] earning = { "061558972478341792023", "600471127516536573699", "100257867150122747499", "542013162429206204621", "575101770514484560898", "817310071430446520435", "918170097851323493905", "726677908054906958686", "277201780930073070776", "451454809099741612309", "715213553902048506238", "860940140920787053970", "351244390707039625649", "432084207448306235353", "162646363187960909356", "757255490650629013820", "974062957105230107561", "237400380263559370761", "064684967329633857076", "299293087037455266705", "399185566980936011650" };
        assertEquals(148, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case77() {
        int[] value = { 10, 21, 42, 9, 69, 41, 23, 50, 37, 6, 8, 17, 58, 57, 44, 35, 57, 39, 7, 44 };
        String[] earning = { "03095410275399996675", "30302039028762011927", "03073572934739050605", "90707734635714601274", "52370357894477415912", "40573057709248943158", "13735500668014356710", "09247700351600941798", "20968763058800048688", "72339065509342986146", "58454981890532356719", "37774206835056788527", "96317410043501576907", "92947840022610310594", "90064939093753033936", "91501454485871306405", "61015361866860360104", "69629177617595941017", "72071519841209300105", "57542808869774654750" };
        assertEquals(187, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case78() {
        int[] value = { 1, 4, 3 };
        String[] earning = { "003", "002", "320" };
        assertEquals(-1, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case79() {
        int[] value = { 12, 21, 24, 8, 28, 4, 19 };
        String[] earning = { "0935351", "9019851", "3109542", "5990888", "3858020", "5548206", "1128060" };
        assertEquals(-11, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case80() {
        int[] value = { 24, 65, 21, 29, 35, 79, 48, 13, 86, 35, 45, 21, 36, 71, 75, 21, 67, 78, 75, 7, 34, 9, 41, 37, 65 };
        String[] earning = { "0739773746995061469773893", "7003223451561978913893761", "3004149164783291425212408", "9340870135363912114985398", "7218024364277585019570485", "7247207773048426988181691", "3390470226689598185696827", "7411372029675174598655532", "4563672207104796541135718", "6145436970881757333152803", "9573206618081559733315737", "9686748708806725382017407", "5133789541160183172629481", "0929545177571016497690327", "6791829795528109867149711", "1812568467953690620389547", "4941091553731486010348667", "6121188943387962101599824", "9354985813322770010790366", "7829516611306613357045672", "7918789535112948499405383", "3325016552579099890550628", "8743468578744375683636036", "9609892310308214626782303", "3188517283771717746238630" };
        assertEquals(325, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case81() {
        int[] value = { 22, 24, 20, 23, 1, 21, 7, 31, 8, 13, 31, 46 };
        String[] earning = { "065904858718", "606495000331", "560627456250", "946061691346", "092600893699", "457100603777", "804686000265", "505990003291", "806133030853", "732367228036", "135497695302", "810697513620" };
        assertEquals(47, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case82() {
        int[] value = { 9, 3, 7, 5, 6, 4, 3, 14, 0, 1, 17, 15, 14, 5, 14, 17, 15, 3, 12, 8, 2, 2, 16, 0, 11, 14, 0, 13 };
        String[] earning = { "0804699763254108363848165123", "8019805879850788561366151977", "0107769969366658214629940391", "4970995943395527983394868928", "6879027344202503410618039201", "9069203581269961148366021344", "9595730306918352035067882553", "7899353069189922909965755063", "6764480604093508259784091267", "3993416940046422650956773062", "2833229100088369797923575997", "5569061894801043383189417100", "4065298936810097192898963716", "1765593954300086653091159658", "0852065202649803346055674327", "8887312282937630526254154269", "3529410926731635052995827515", "6618143055989542503795004279", "3143085990732366230546042759", "8363630979918002975030491392", "4629166685289955994302000289", "8694867546398154556020905772", "1198008707549161800409014141", "6546328597716575204900107383", "5108912513573944742105470887", "1939235020917632527327138026", "2792045666901526175987488206", "3718143372706879599292137660" };
        assertEquals(1563, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case83() {
        int[] value = { 14, 17, 7, 3, 3, 13, 11, 8, 3, 8, 10, 12 };
        String[] earning = { "096181354861", "907151163338", "670147876393", "111032116987", "854303333309", "117230703051", "318137072403", "567130703678", "436633230423", "833930464072", "639805072709", "183791383290" };
        assertEquals(173, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case84() {
        int[] value = { 2, 2 };
        String[] earning = { "01", "10" };
        assertEquals(-1, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case85() {
        int[] value = { 2, 2, 0, 1, 4, 0, 1, 0, 0, 4 };
        String[] earning = { "0100451253", "1010518123", "0102989242", "0020093171", "4590045480", "5189400676", "1893500826", "2121468008", "5247872007", "3321066870" };
        assertEquals(156, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case86() {
        int[] value = { 100, 200, 300, 400 };
        String[] earning = { "0123", "1022", "2203", "3230" };
        assertEquals(-13, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case87() {
        int[] value = { 1000, 1000 };
        String[] earning = { "09", "90" };
        assertEquals(-9, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case88() {
        int[] value = { 10, 10 };
        String[] earning = { "02", "20" };
        assertEquals(-2, employmanager.maximumEarnings(value, earning));
    }

    @Test
    public void case89() {
        int[] value = { 999, 0 };
        String[] earning = { "09", "90" };
        assertEquals(0, employmanager.maximumEarnings(value, earning));
    }

}
