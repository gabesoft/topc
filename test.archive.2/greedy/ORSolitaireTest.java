package topc.test.greedy;

import junit.framework.*;
import org.junit.Test;
import static org.junit.Assert.*;
import topc.greedy.*;

public class ORSolitaireTest {
    ORSolitaire orsolitaire = new ORSolitaire();

    @Test
    public void case1() {
        int[] numbers = { 1, 2, 4 };
        int goal = 7;
        assertEquals(1, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case2() {
        int[] numbers = { 1, 2, 4, 7, 8 };
        int goal = 7;
        assertEquals(2, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case3() {
        int[] numbers = { 12571295, 2174218, 2015120 };
        int goal = 1;
        assertEquals(0, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case4() {
        int[] numbers = { 5, 2, 4, 52, 62, 9, 8, 3, 1, 11, 6 };
        int goal = 11;
        assertEquals(3, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case5() {
        int[] numbers = { 271344689, 150290880, 24645430, 27008787, 327151216, 353806624, 444755061, 277114131, 260418283, 267621623, 259159705, 436671399, 221899649, 2544761, 70911883, 496689776, 403433457, 203078200, 101970978, 346919129, 349815985, 362635023, 335226909, 22941464, 499065474, 105915957, 497369755, 480878919, 353189815, 46774426, 139101493, 254501454, 169888097, 119440006, 108814441, 74743752, 277838571, 86215378, 424340989, 45693661, 357218697, 387931043, 141582423, 18331365, 481499765, 23486132, 300125164, 135820799, 198826610, 375446192 };
        int goal = 536870911;
        assertEquals(18, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case6() {
        int[] numbers = { 31, 59, 14, 42, 34, 30, 33, 51, 57, 62, 49, 55, 46, 8, 27, 12, 24, 28, 9, 44, 36, 17, 23, 3, 20, 54, 37, 41, 26, 53, 4, 22, 56, 13, 52, 25, 47, 60, 63, 48, 38, 40, 1, 5, 29, 61, 39, 15, 45, 10 };
        int goal = 63;
        assertEquals(22, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case7() {
        int[] numbers = { 837, 192, 791, 579, 830, 289, 909, 167, 475, 548, 440, 315, 182, 321, 68, 881, 711, 169, 687, 983, 86, 561, 564, 1022, 441, 327, 47, 502, 910, 513, 897, 11, 19, 230, 854, 350, 645, 330, 622, 734, 1003, 412, 673, 248, 324, 836, 688, 721, 656, 101 };
        int goal = 1023;
        assertEquals(19, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case8() {
        int[] numbers = { 7714, 24107, 2194, 23986, 7443, 2715, 1448, 6305, 20747, 21905, 20387, 23840, 23314, 23698, 18435, 1960, 23051, 20633, 443, 20529, 24120, 1560, 17963, 1546, 19258, 24475, 2074, 24225, 20019, 4114, 5299, 2978, 6185, 1722, 21426, 23082, 17066, 23731, 21561, 22546, 2987, 7984, 4251, 2816, 1048, 23833, 16810, 20513, 18475, 20520 };
        int goal = 24507;
        assertEquals(19, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case9() {
        int[] numbers = { 686040155, 643386544, 893899649, 96575361, 50659736, 363436645, 90248447, 118838501, 50692376, 591675520, 591397256, 558154632, 21348752, 388911316, 33931784, 191804442, 587202944, 385741014 };
        int goal = 591774616;
        assertEquals(2, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case10() {
        int[] numbers = { 748543700, 285483932, 519266441, 316159832, 405530603, 302252740, 361164782, 260403486, 184590853, 328864359, 49806381, 620630387, 186736925, 36397396 };
        int goal = 453288957;
        assertEquals(0, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case11() {
        int[] numbers = { 135266370, 291218939, 412090970, 143753730, 411076106, 402752064, 268436506, 135332432, 574720126, 134316610, 89390581, 143754328, 135332352, 402686976, 403703370, 134283848 };
        int goal = 412190298;
        assertEquals(4, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case12() {
        int[] numbers = { 400520856, 723759056, 812258717, 785029606, 829738529, 43393997, 511757302, 443048999, 428863625, 447010270, 661264347, 50759623, 555219514, 114557507 };
        int goal = 534580075;
        assertEquals(0, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case13() {
        int[] numbers = { 269754592, 1310888, 326338960, 445808848, 541865298, 168004, 418609189, 142909512, 100751724, 218438228, 177373380, 442486218, 9699508, 310419608, 9699364, 142610488, 43155548, 176332992 };
        int goal = 446083324;
        assertEquals(2, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case14() {
        int[] numbers = { 8538177, 79711808, 82013250, 281029184, 933613686, 333345697, 69411395, 283331585, 722121932, 69337154, 965912814, 585326653, 274875458, 827345786, 339886656, 75580416, 270598144, 71434817, 274874882 };
        int goal = 350449219;
        assertEquals(3, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case15() {
        int[] numbers = { 644187412, 608006573, 655630339, 789582855, 831197220, 234931221, 672158996, 588571654, 660730886, 744866322, 598835189 };
        int goal = 796260119;
        assertEquals(1, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case16() {
        int[] numbers = { 180942719, 194103179, 270551877, 898422057, 863395157, 93662249, 404021910, 70378157, 315219977, 399915504, 1059409, 3170394, 667626747, 409697563, 340826285, 65608140, 34613399 };
        int goal = 305163231;
        assertEquals(1, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case17() {
        int[] numbers = { 9385, 588785057, 613071355, 589924, 525509, 587245028, 587825188, 1606792, 587728108, 536912105, 51912709, 970276228, 650008466, 18448489, 1582276 };
        int goal = 588883437;
        assertEquals(2, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case18() {
        int[] numbers = { 117702920, 102009860, 37913860, 447326407, 67536896, 85360640, 33819652, 1082376, 51382528, 1050880, 67504132, 1474572, 106300684 };
        int goal = 123112716;
        assertEquals(2, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case19() {
        int[] numbers = { 134754368, 2508800, 671358976, 2242600, 672045088, 671350888, 673376288, 2508864, 671119456, 2287656 };
        int goal = 674166888;
        assertEquals(2, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case20() {
        int[] numbers = { 187630562, 469940601, 518055732, 949711042, 835688796, 733076818, 153227408, 135400336, 243972216, 404883872, 963912793, 691160263, 864525665, 134221986, 402784290, 825035851 };
        int goal = 422747122;
        assertEquals(0, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case21() {
        int[] numbers = { 539501152, 153616576, 7722339, 547357440, 661909666, 480100792, 8388932, 786077461, 905398225, 922228948, 11018498, 681574402, 136847778, 899110530, 343119386, 5962827, 924008690, 673719200, 136494002 };
        int goal = 698917862;
        assertEquals(0, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case22() {
        int[] numbers = { 269164835, 952416340, 650158949, 47854769, 385304542, 722274, 909192557, 9504, 34086947, 889678163, 940676696, 430063636, 8979459, 521182930, 8987905, 441516334, 971397705 };
        int goal = 311125347;
        assertEquals(0, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case23() {
        int[] numbers = { 785290869, 655929338, 985123820, 150068424, 976767689, 734820081, 334824764, 383941852, 558111859, 595343493, 15048058, 830800649, 264241154, 177788354, 569789362, 851421691, 192676120, 11480469, 100928563, 579077120 };
        int goal = 801397875;
        assertEquals(0, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case24() {
        int[] numbers = { 323610868, 100526241, 394989454, 346761715, 545459712, 168002048, 429357237, 426181238, 456441203, 419099193 };
        int goal = 730328588;
        assertEquals(0, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case25() {
        int[] numbers = { 169430356, 34199636, 773591116, 267113985, 740068424, 35214364, 134814040, 672435520, 100763716, 1640520, 671161356, 862671778, 637862984, 772659476 };
        int goal = 773709148;
        assertEquals(4, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case26() {
        int[] numbers = { 558006594, 541615392, 537632768, 737600, 554237986, 541155366, 21562432, 21177602, 541787202, 537617476, 16785506, 298422164, 705536 };
        int goal = 558622054;
        assertEquals(2, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case27() {
        int[] numbers = { 3805604, 908965202, 83955969, 170114363, 973166455, 950587996, 108384765, 130003392, 384017138, 67254401 };
        int goal = 624638453;
        assertEquals(0, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case28() {
        int[] numbers = { 213376006, 920142815, 333550936, 749673313, 765456786, 672932000, 817204584, 14601251, 480394567, 740020151, 236741265, 863040233, 134389925, 380011575, 392165494, 318619081, 231428381, 231135999, 33956004 };
        int goal = 706652391;
        assertEquals(0, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case29() {
        int[] numbers = { 538982400, 613562452, 697526225, 546904426, 3217756, 88140, 167196370, 972071205, 18226502, 605253660, 537932040, 3360852, 460816500, 70412356, 758412060, 537076060, 68301080, 205511345, 363181069, 682469969, 79786968, 603986012, 44939181, 918697826, 8409168, 540156240, 3215444 };
        int goal = 615741788;
        assertEquals(2, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case30() {
        int[] numbers = { 708327146, 28895804, 114222641, 900049430, 200446815, 338822160, 915744590, 495482677, 612809641, 885479745, 604479204, 680291709, 283527916, 827298087, 463140171, 626676300, 417294657, 388675378, 935095711, 77603026, 179187323, 28238324, 780300612, 741085047, 970417808, 211946115, 388281907, 381047501 };
        int goal = 364012754;
        assertEquals(0, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case31() {
        int[] numbers = { 135014428, 134488148, 134758410, 134752554, 134506568, 811324, 135014400, 134742038, 18736, 134506620, 805222, 804966, 26982, 811018, 8298, 134760806, 16486, 803104, 134742398, 134496304, 134744124, 541054, 804922, 134760716, 135029018, 134742126, 543084, 532550, 134766616 };
        int goal = 135031166;
        assertEquals(12, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case32() {
        int[] numbers = { 740310024, 107720487, 341921505, 4197408, 883040585, 131682896, 389658602, 479488767, 304822872, 285005410, 241201448, 233745036, 610283552, 630684477, 855403951, 295688843, 345622916, 180293243, 223097368, 174084104, 64524164, 13489702, 943454289, 543175816, 201612712, 280356738, 724470687, 616702364, 318372928, 296368883, 886779262, 500769058, 318117187, 854178241, 742405416, 758848848 };
        int goal = 778337704;
        assertEquals(1, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case33() {
        int[] numbers = { 614570781, 681386252, 35477764, 538786052, 34627848, 8720388, 538288359, 537673994, 168841224, 579426570, 34961666, 705259786, 679505934, 32876435, 248503972, 1888989, 42993672, 142897156, 706023684, 133406460, 705718534, 1319182, 251067250, 234181460, 350220, 691509697, 671107340, 821162038, 680333574, 681312520, 538732546, 255730804, 637704697, 579684366 };
        int goal = 714963214;
        assertEquals(9, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case34() {
        int[] numbers = { 137454480, 308573710, 213736658, 134352897, 978277716, 750914108, 850968633, 102731243, 5249283, 4325634, 550481979, 741510501, 56815785, 7614832, 710260990, 585544013, 938951987, 415006801, 123203765, 654662629, 788416598, 60003604, 685028827, 135792640, 612466980, 489027424, 134348800, 64731282, 919653112, 719533740, 186280850, 138414338, 54042270, 139595777, 693750401, 619730788, 799515277, 550253760 };
        int goal = 140122371;
        assertEquals(1, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case35() {
        int[] numbers = { 403473924, 52200960, 462439428, 193741828, 429162564, 437831236, 247678827, 279620, 295224388, 320095300, 522759316, 152569408, 311968768, 160433156, 445137988, 973729172, 909688563, 421052932, 403490372, 9454596, 444629056, 193726020, 169099332, 185336836, 790349029, 454312448, 77338749, 160219712, 26772032, 43827264, 270303296, 453542464, 64, 159417412, 176473156, 403457088 };
        int goal = 463259204;
        assertEquals(11, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case36() {
        int[] numbers = { 102774784, 75665928, 42080256, 830242790, 628558220, 828598836, 265203731, 921472500, 35660288, 102793728, 532446224, 100801048, 981212787, 566610331, 820324366, 676695668, 652630446, 99534752, 111196696, 455374883, 111312904, 75532824, 680197795, 312602450, 971808946, 287928392, 190972769, 2131984, 69376528 };
        int goal = 111327768;
        assertEquals(3, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case37() {
        int[] numbers = { 181884181, 146949122, 4379744, 103313029, 21600, 530741261, 155588354, 276000, 268584833, 820437228, 134407168, 29550114, 784419393, 29791072, 134542912, 146978562, 256319135, 89106647, 85909533, 4335104, 837476846, 510519561, 607161367, 318896830, 20975968, 159789602, 85313910, 807972265, 151180320, 138830114, 12740160, 17154, 909378902, 293726647, 138475264, 967891697, 146862914, 134628704 };
        int goal = 164034402;
        assertEquals(6, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case38() {
        int[] numbers = { 338781391, 70950921, 950121520, 73953288, 6844425, 72228873, 207623169, 141590537, 281577997, 5580517, 205718229, 866553364, 93807616, 69211145, 63132555, 599584400, 576926876, 374719942, 69398528, 217717786, 450522414, 4367369, 343654660, 139218944, 209362944, 422219843, 855539816, 521624338, 141959168, 188781758, 4382729, 164371729, 135921664, 273733928, 914641824, 134546876 };
        int goal = 209646601;
        assertEquals(3, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case39() {
        int[] numbers = { 284507998, 266308, 321104504, 283292925, 35852358, 34029660, 491544, 217178, 887292333, 879121810, 217108, 512018, 151552, 53258, 33755226, 409668, 168016, 344076, 2506754, 35913806, 33673308, 905704846, 465319274, 888993149, 33656926 };
        int goal = 36163678;
        assertEquals(3, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case40() {
        int[] numbers = { 636890718, 541066510, 292150709, 780492771, 877205390, 678736890, 764822595, 58212772, 639540114, 143622052, 71350323, 897499723, 789489832, 753297585, 548654187, 885730800, 566049834, 541065482, 501655042, 776588922, 733986475, 8226, 300215660, 59779972, 379035891, 230845108, 107538932, 846929563, 889979242, 542365185, 4333858, 4334854, 191184031, 243746264, 337781241, 537003302 };
        int goal = 541205806;
        assertEquals(2, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case41() {
        int[] numbers = { 159776773, 159784996, 60948772, 151257090, 170139683, 167780615, 58720257, 401413, 8658949, 50594082, 44302624, 873532890, 2228512, 136454176, 169877793, 161874210, 167911712, 192946436, 393218, 142868484, 27402533, 131335, 184549409, 33562624, 10887168, 178651427, 27402528, 136323363, 730972745, 178651143, 168042533, 178389286 };
        int goal = 195436839;
        assertEquals(11, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case42() {
        int[] numbers = { 607191557, 701274963, 7725058, 991716483, 67396101, 90718215, 72409613, 74564110, 625074694, 491580186, 894528153, 2957829, 127576396, 17948674, 6824449, 212841629, 4505602, 393630595, 89129472, 265374474, 23978507, 603985408, 627408905, 542687751, 540655616, 610066446, 842483230, 791525367, 472873194, 286953888, 303869383, 811533, 627687433, 90783752 };
        int goal = 629006863;
        assertEquals(7, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case43() {
        int[] numbers = { 679885318, 273459883, 911180881, 898515625, 134883604, 139528453, 331073218, 138556428, 599053, 75520562, 5450545, 972535526, 809009179, 134809345, 994799808, 928600661, 4733460, 134418693, 139475232, 376700536, 995305825, 998608305, 289240878, 1582368, 695632367, 142062635, 531305318, 812440642, 5311032, 450128322, 985541346 };
        int goal = 140197693;
        assertEquals(3, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case44() {
        int[] numbers = { 167905605, 33687944, 47608477, 181597159, 113895405, 109185294, 268283127, 104988744, 243952114, 37880584, 572915481, 758501181, 302530899, 173695873, 176160771, 512139681, 243270530, 142738244, 131535, 113379662, 329151002, 352633645, 224303445, 138414984, 100794566, 247464716, 8391491, 37880001, 75499911, 209846659, 239206671, 271955666, 100664012, 247595524, 146801543, 180489033, 630597339, 8389319 };
        int goal = 247598031;
        assertEquals(8, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case45() {
        int[] numbers = { 225519873, 353649994, 19054624, 692014889, 232164668, 35786852, 496037023, 406102291, 687687224, 226175987, 707245385, 200332851, 118975036, 319310948, 808366615, 621521340, 268588032, 282332351, 622792509, 338687041, 957166667, 543812676, 48108490, 561688577, 414303246, 33739872, 847498416, 693394413, 293767232, 9019993, 50485348, 602434225, 865431990 };
        int goal = 330226788;
        assertEquals(0, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case46() {
        int[] numbers = { 548057362, 442007553, 10734326, 304192854, 638400918, 608686199, 136289843, 171514174, 432372408, 980418568, 644812703, 888647390, 872192852, 141278401, 633363166, 910218245, 696738293, 309362824, 103138195, 580583363, 279709269, 829404329, 38536257, 630884373, 750758589, 593531081, 138139622, 4331013, 543686728, 738945727, 833124583, 131396845, 588779596, 924496284, 246624214, 802583848, 846250188, 171638419 };
        int goal = 997773517;
        assertEquals(1, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case47() {
        int[] numbers = { 188734497, 693717073, 691540248, 802676510, 442331659, 967681032, 373302099, 278153082, 634619566, 807420279, 605527286, 436220498, 350819416, 107492451, 255658917, 585731805, 458983917, 170467974, 978583121, 32739106, 371277605, 101082402, 427389436, 583492224, 245073359, 187817429, 799978051, 788882048, 957357256, 999657178 };
        int goal = 510146419;
        assertEquals(1, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case48() {
        int[] numbers = { 839942432, 570458432, 269484328, 5243176, 570458112, 806420768, 302088264, 571474016, 843087872, 1081696, 307298592, 542146920, 839909736, 269582408, 4194560, 542113800, 1146944, 303104296, 38797640, 575701064, 303071264, 844202024, 273678600, 5341224, 4259872, 805306632, 805339456, 537952360, 844103944, 571572552, 851373683, 541065536, 885313969, 307233056, 537919520, 37814304, 647102477, 574619744 };
        int goal = 844202344;
        assertEquals(11, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case49() {
        int[] numbers = { 135811332, 144204300, 176847365, 169347849, 134357774, 1208581, 168311311, 9961984, 168822794, 34748684, 135942921, 301783080, 168968461, 34761487, 9966338, 176304393, 177346568, 168968974, 143161606, 177741839, 42615300, 465601947, 33563395, 134760972, 34097931, 143804932, 18438, 1194252, 176711951, 169372166, 169357571, 33714189, 9450248, 1712140, 169507083, 177750016, 526854, 134234114, 42485772, 143685898, 134228233, 142637571, 176699658, 168454659, 9459720, 176171787 };
        int goal = 177896207;
        assertEquals(17, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case50() {
        int[] numbers = { 808845920, 474499622, 698616892, 259383890, 454587796, 945553984, 3670128, 677249112, 250748534, 205977020, 109011690, 794205036, 721166255, 799695062, 270434857, 808223329, 270479021, 943587336, 675184681, 274104888, 163172815, 679379569, 403099894, 767751132, 820232645, 404258928, 947421232, 641337641, 952531804, 699223763, 4981336, 144799560, 407110241, 673219137, 301769086, 627817235, 25, 945816097, 545161744, 408158225, 712071635, 164603381, 807436896, 891954422 };
        int goal = 947815033;
        assertEquals(7, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case51() {
        int[] numbers = { 194624414, 894063824, 480020319, 409674240, 535349406, 177749702, 826002135, 849783014, 457627062, 593540637, 941050955, 518145021, 24151302, 109307634, 140500553, 537267794, 478298582, 31244741, 305743134, 103505786, 611223133, 729665434, 775787057, 934760694, 207653382, 220236422, 565695439, 136318916, 877030189, 52632126, 627435777, 594215725, 239343219, 153512197, 442109652, 262963518, 159033631, 995204460, 390452311, 804671461, 24120002, 447746577, 839537263, 478397803, 370675766, 63209899, 480553378, 725610428, 232486237 };
        int goal = 225480646;
        assertEquals(2, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case52() {
        int[] numbers = { 268763664, 268763701, 820228929, 621021365, 402980884, 87094534, 596196556, 268763137, 465290775, 961178735, 384366734, 485940585, 262165, 137166865, 257754454, 154860739, 245140111, 2163233, 601929085, 860981652, 135004161, 270795285, 405013008, 403505665, 2097701, 136643088, 404750864, 2163221, 136905268, 109274598, 524365460, 382818555, 22784598, 83637761, 666504443, 134218292, 136577584, 2621457, 603684405, 373994758, 269025844, 403505157, 883077015, 477594726, 832123915 };
        int goal = 405602869;
        assertEquals(7, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case53() {
        int[] numbers = { 201474891, 780000550, 710007410, 634425083, 458635698, 191455212, 136446465, 87266771, 481684032, 283905290, 881045, 231442250, 910457089, 134098576, 162457619, 350742042, 410835586, 388608738, 598126183, 526366021, 369246476, 503316808, 463837036, 191529394, 305875574, 572807130, 477043746, 214840101, 321797486, 425582380, 35803139, 598498537, 856209501, 270549314, 570280421, 648773224, 96173315, 998105120, 524821797, 436343299, 401683667, 241466888, 98518426, 268427044 };
        int goal = 505566031;
        assertEquals(1, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case54() {
        int[] numbers = { 274993168, 470072320, 105561600, 403046400, 101226000, 306316800, 235544576, 409242640, 38548992, 304161184, 409117200, 103163920, 369144832, 476357632, 306492416, 103463936, 141171200, 373595136, 105691136, 73543184, 107919872, 442800640, 476232192, 340037136, 338597888, 438442000, 69896704, 273286672, 403187728, 121281989, 107391488, 859339017, 203431952, 206209536, 172632080, 474224144, 107251200, 270835712, 239351296, 107098640, 371733504, 103459328, 241604608, 436910592, 470461440, 207888896, 339746320, 237771264 };
        int goal = 510574096;
        assertEquals(15, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case55() {
        int[] numbers = { 268965888, 268435728, 271058960, 270542864, 268959760, 270540800, 536832, 268970256, 270536704, 268974080, 530448, 2105616, 6144, 268962064, 2101504, 2097408, 268449808, 2625808, 268972288, 271059200, 534784, 2621456, 271063296, 6160, 2101264, 268443664, 268437520, 270538752, 2633984, 271069200, 2101248, 16, 268439808, 270532880, 268448000, 4096, 268972304, 2105360, 12304, 268966160, 271065344, 2048, 268450064, 14592, 270547216, 532496, 10256, 268447744, 270539024, 271060992 };
        int goal = 271071504;
        assertEquals(21, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case56() {
        int[] numbers = { 713259822, 263411411, 265289456, 640966644, 399325072, 934417317, 369056229, 662796967, 371757475, 730073408, 893610233, 4665407, 916222493, 377402943, 138893455, 537565185, 704580256, 717765611, 107362683, 280412887, 695758838, 453873304, 269009144, 745268409, 383481960, 217471355, 950533630, 547991337, 738794902, 8480496, 562883978, 306412592, 49435652, 624309528, 667301629, 251432995, 479468942, 723220541, 34296973, 282957617, 60094710, 306124293, 550853782, 568115526, 124103439, 346036498, 539158489 };
        int goal = 10057460;
        assertEquals(0, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case57() {
        int[] numbers = { 292906559, 793027464, 473160167, 69413901, 629415162, 462872742, 939633563, 876074667, 409004915, 672646118, 899987373, 264197, 629817665, 205588167, 575166737, 299112790, 806356421, 490632577, 122467444, 191320563, 1353, 783734532, 152138852, 623799210, 936807489, 443913066, 806355776, 165605591, 805569868, 405058562, 268435777, 98570012, 683415288, 452934524, 516421923, 710319721, 747391475, 716321164, 805308288, 617492598, 801110850, 717725492, 980789559, 489334091 };
        int goal = 806621133;
        assertEquals(1, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case58() {
        int[] numbers = { 446855221, 57016325, 720980597, 858128529, 813695076, 306315381, 733236144, 556138725, 577110048, 956093017, 298221760, 562298993, 813694993, 813826048, 314736640, 520812076, 539131985, 301959970, 809795828, 425901378, 760925776, 289702032, 541098212, 545554529, 52461765, 322994257, 539394224, 78915877, 291537041, 809500753, 558104661, 578846753, 305267505, 327450737, 927067704, 862355680, 562331792, 843350225, 580911108, 204281260, 287604917, 870711333, 585105444, 289358647, 663051749 };
        int goal = 870744309;
        assertEquals(12, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case59() {
        int[] numbers = { 88707793, 86707460, 627371062, 722977393, 623577476, 19405188, 773301498, 133124, 604510208, 19075460, 16848900, 556274048, 606737540, 17433856, 18946432, 86048772, 556341252, 18527431, 747496248, 702412336, 620888452, 67310976, 86184068, 19073408, 539497860, 878764551, 555945344, 668810759, 623513856, 626291523, 200832, 27690338, 86578564, 302799764, 621348864, 69861376, 2296064, 84022276, 556472708, 554241284, 623451140, 494287130, 620759044, 86707584, 565062132, 65691948 };
        int goal = 623582596;
        assertEquals(11, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case60() {
        int[] numbers = { 82854936, 763636985, 138432280, 149950232, 9454592, 1067032, 202394900, 216024852, 137381896, 5263120, 390153881, 214975248, 143658008, 11534848, 78643220, 70273028, 148916248, 214978072, 263350547, 78645780, 136316168, 147866376, 80741144, 142608916, 67127044, 268230861, 209715732, 13651732, 67126016, 663199417, 149963016, 11552524, 205523472, 214959884, 141559304, 78646532, 214975772, 706750086, 142624260, 4211204, 74451472, 8405772, 217071888, 503767143, 3146516, 3344, 146801436, 75467619, 147850244 };
        int goal = 217075484;
        assertEquals(17, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case61() {
        int[] numbers = { 212336939, 605228324, 383586937, 287147269, 115083326, 486396191, 699465370, 319029280, 348257249, 485423268, 19170337, 904811334, 557558697, 703418792, 643771129, 200547698, 975159536, 918165133, 63947264, 395224887, 819760257, 153385111, 646842228, 51979521, 791479097, 56807119, 463529243, 36890252, 337705003, 292065220, 321159456, 66235730, 758945253, 193358401, 758938926, 945833596, 250868555, 200666841, 261276300, 304120864, 633182481, 776659204, 691822414, 33818912, 883900416, 305668389 };
        int goal = 322809125;
        assertEquals(1, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case62() {
        int[] numbers = { 942178306, 675320832, 671088768, 213271711, 268443649, 62782125, 397249002, 409477121, 2109569, 300376190, 805244452, 795404152, 75868978, 675807251, 284593820, 523161548, 483969687, 144110274, 425941790, 56264556, 4726785, 577222324, 677909633, 403185664, 374798141, 605926018, 812163202, 945849345, 274772994, 158623270, 271097986, 866586057, 350030686, 940532121, 941629440, 188560893, 88674391, 101096176, 155965602, 578491287, 946385920, 562305, 338629262 };
        int goal = 946386051;
        assertEquals(4, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case63() {
        int[] numbers = { 33604176, 539403733, 536935040, 33582084, 2400384, 570706945, 33587473, 538991120, 538999380, 537194128, 539136964, 570461457, 537058193, 2100309, 537143508, 572529425, 35668372, 2544145, 572656453, 537308816, 539258944, 33853525, 572965140, 47936, 539235652, 259957255, 449921, 572687361, 279056, 35821328, 538979969, 570581780, 537267089, 572959617, 570579861, 572690820, 539109776, 537168965, 539130308, 33604497, 572919745, 572577556, 33994244, 2513361, 570580677, 2386628, 33825364 };
        int goal = 572981205;
        assertEquals(17, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case64() {
        int[] numbers = { 324368798, 52894717, 5457088, 806240517, 115815594, 9868927, 789762575, 28818122, 740832561, 187890960, 429497515, 167149521, 403046465, 4997315, 978088854, 407306439, 617827416, 415892627, 119100473, 683205418, 5964162, 416957907, 223930492, 89144222, 699486350, 403177937, 546717888, 442231338, 393759581, 712151950, 408305859, 269501463, 88194240, 478566949, 809649473, 590862924, 487523400, 949682388, 472143517, 411828695, 97236323, 148758704, 805519557 };
        int goal = 954156503;
        assertEquals(5, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case65() {
        int[] numbers = { 793849915, 991470925, 982652747, 319433897, 184552192, 738333635, 10644742, 168337664, 159916548, 159919020, 150997036, 83921024, 473391997, 260612360, 338147147, 608988705, 167774508, 47878688, 92808068, 160609633, 387845376, 486837036, 226500904, 209750784, 706541216, 437403347, 83888428, 965512854, 787475636, 218145452, 210247684, 111255809, 16812676, 921384813, 50340652, 174455893, 260612132, 501083432, 502501430, 224467182, 893785868, 360691630, 101188480, 710877378, 229739178, 8948492, 185082372, 143131168 };
        int goal = 260615084;
        assertEquals(6, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case66() {
        int[] numbers = { 268959827, 820681427, 302546977, 453001266, 610964145, 541445032, 577751391, 268959843, 285261937, 189317314, 457212018, 420754796, 540738, 923616726, 156778642, 320356400, 406277973, 441483424, 957998705, 393818155, 20070960, 959278056, 403718210, 54558912, 237236697, 37765136, 264165865, 219185259, 998592940, 651449512, 402686066, 738582881, 594305725, 285753571, 24485039, 442007744, 210915357, 285212912, 134791377, 1065170, 273154066, 454557840, 135282835, 682223744, 453558467, 914120819, 273727587, 302563504, 17334290, 271795432 };
        int goal = 458801395;
        assertEquals(9, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case67() {
        int[] numbers = { 709837808, 318721, 268801, 807218436, 268486433, 198976917, 1082145, 6042182, 157164682, 68190752, 855209624, 561797297, 821100836, 46356399, 345284385, 268490241, 76827936, 343936288, 929503559, 458681188, 9472544, 336876321, 476975710, 470064493, 301571345, 754067550, 68157697, 928766083, 278187520, 335812640, 67113985, 68455937, 76814336, 135883196, 75792929, 449956819, 76815649, 269502464, 279841, 9440801, 8689184 };
        int goal = 345300769;
        assertEquals(8, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case68() {
        int[] numbers = { 252471265, 774081572, 545441376, 972550720, 376171154, 42374464, 145878233, 335725761, 783968510, 707948498, 180330328, 7109425, 760143945, 225844133, 747677524, 449800259, 377537730, 454589241, 335726785, 268730626, 310543616, 665926903, 67127425, 461535340, 521310759, 883714143, 345175641, 852471940, 425578220, 61046103, 36276828, 395664230, 947172268, 99497101, 10478544, 283277783, 35113642, 515101179, 33856513, 256630391, 838145232, 68235816, 930900093, 258083322, 936214534, 268572994 };
        int goal = 377937347;
        assertEquals(3, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case69() {
        int[] numbers = { 503, 505, 152, 435, 491, 512, 1023, 355, 510, 500, 502, 255, 63, 508, 509, 511, 60, 250, 254, 346 };
        int goal = 510;
        assertEquals(5, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case70() {
        int[] numbers = { 503, 505, 152, 435, 491, 512, 1023, 355, 510, 500, 502, 255, 63, 508, 509, 511, 60, 250, 254, 346 };
        int goal = 510;
        assertEquals(5, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case71() {
        int[] numbers = { 1 };
        int goal = 5;
        assertEquals(0, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case72() {
        int[] numbers = { 1 };
        int goal = 3;
        assertEquals(0, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case73() {
        int[] numbers = { 33554432, 15, 434, 22 };
        int goal = 33554432;
        assertEquals(1, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case74() {
        int[] numbers = { 1 };
        int goal = 32;
        assertEquals(0, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case75() {
        int[] numbers = { 11, 9, 10 };
        int goal = 11;
        assertEquals(2, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case76() {
        int[] numbers = { 11 };
        int goal = 15;
        assertEquals(0, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case77() {
        int[] numbers = { 536870912 };
        int goal = 536870912;
        assertEquals(1, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case78() {
        int[] numbers = { 1, 4 };
        int goal = 7;
        assertEquals(0, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case79() {
        int[] numbers = { 536870912, 4194304, 4194305, 1 };
        int goal = 541065217;
        assertEquals(1, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case80() {
        int[] numbers = { 1, 3 };
        int goal = 7;
        assertEquals(0, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case81() {
        int[] numbers = { 1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768, 65536, 131072, 262144, 524288, 1048576, 2097152, 4194304, 8388608, 16777216, 33554432, 67108864, 134217728, 268435456 };
        int goal = 536870911;
        assertEquals(1, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case82() {
        int[] numbers = { 3, 5, 6, 8 };
        int goal = 8;
        assertEquals(1, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case83() {
        int[] numbers = { 268435456 };
        int goal = 268435456;
        assertEquals(1, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case84() {
        int[] numbers = { 2, 4 };
        int goal = 7;
        assertEquals(0, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case85() {
        int[] numbers = { 1, 2 };
        int goal = 7;
        assertEquals(0, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case86() {
        int[] numbers = { 536870800, 536870801, 536870802, 536870803, 536870804, 536870805, 536870806, 536870807, 536870808, 536870809, 536870810, 536870811, 536870812, 536870813, 536870814, 536870815, 536870816, 536870817, 536870818, 536870819, 536870820, 536870821, 536870822, 536870823, 536870824, 536870825, 536870826, 536870827, 536870828, 536870829, 536870830, 536870831, 536870832, 536870833, 536870834, 536870835, 536870836, 536870837, 536870838, 536870839, 536870840, 536870841, 536870842, 536870843, 536870844, 536870845, 536870846, 536870847, 536870848, 536870849 };
        int goal = 536870911;
        assertEquals(2, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case87() {
        int[] numbers = { 2 };
        int goal = 2;
        assertEquals(1, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case88() {
        int[] numbers = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50 };
        int goal = 31;
        assertEquals(16, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case89() {
        int[] numbers = { 3, 4 };
        int goal = 5;
        assertEquals(0, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case90() {
        int[] numbers = { 2, 3 };
        int goal = 3;
        assertEquals(1, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case91() {
        int[] numbers = { 14, 12, 10, 9 };
        int goal = 15;
        assertEquals(1, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case92() {
        int[] numbers = { 5, 6 };
        int goal = 7;
        assertEquals(1, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case93() {
        int[] numbers = { 9, 10, 12 };
        int goal = 15;
        assertEquals(1, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case94() {
        int[] numbers = { 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768, 65536, 131072, 262144, 524288, 1048576, 2097152, 4194304, 8388608, 16777216, 33554432, 67108864, 134217728, 268435456 };
        int goal = 536870912;
        assertEquals(0, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case95() {
        int[] numbers = { 4, 8, 16, 28, 32 };
        int goal = 28;
        assertEquals(2, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case96() {
        int[] numbers = { 17, 18, 20, 11, 13, 14 };
        int goal = 24;
        assertEquals(0, orsolitaire.getMinimum(numbers, goal));
    }

    @Test
    public void case97() {
        int[] numbers = { 536870910, 536870909, 536870907, 536870903, 536870895, 536870879, 536870847, 536870783, 536870655, 536870399, 536869887, 536868863, 536866815, 536862719, 536854527, 536838143, 536805375, 536739839, 536608767, 536346623, 535822335, 534773759, 532676607, 528482303, 520093695, 536870908, 536870905, 536870899, 536870887, 536870863, 536870815, 536870719, 536870527, 536870143, 536869375, 536867839, 536864767, 536858623, 536846335, 536821759, 536772607, 536674303, 536477695, 536084479, 535298047, 533725183, 530579455, 524287999, 511705087, 486539263 };
        int goal = 536870911;
        assertEquals(47, orsolitaire.getMinimum(numbers, goal));
    }

}
