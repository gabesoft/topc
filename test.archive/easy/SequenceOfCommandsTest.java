package topc.test.easy;

import junit.framework.*;
import org.junit.Test;
import static org.junit.Assert.*;
import topc.easy.*;

public class SequenceOfCommandsTest {
    SequenceOfCommands sequenceofcommands = new SequenceOfCommands();

    @Test
    public void case1() {
        String[] commands = { "L" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case2() {
        String[] commands = { "SRSL" };
        assertEquals("unbounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case3() {
        String[] commands = { "SSSS", "R" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case4() {
        String[] commands = { "SRSL", "LLSSSSSSL", "SSSSSS", "L" };
        assertEquals("unbounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case5() {
        String[] commands = { "LR" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case6() {
        String[] commands = { "RRRR" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case7() {
        String[] commands = { "SRSRSRSR" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case8() {
        String[] commands = { "SSSSSRSSRS" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case9() {
        String[] commands = { "SSSSSLSSRS" };
        assertEquals("unbounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case10() {
        String[] commands = { "S" };
        assertEquals("unbounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case11() {
        String[] commands = { "SRRS" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case12() {
        String[] commands = { "SSRSRSSRS" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case13() {
        String[] commands = { "SRSRSRSR", "S" };
        assertEquals("unbounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case14() {
        String[] commands = { "LSRSLLRRSLLSSSRRRRRLRSLRLLLSLLLLLSRSSRRLRLRSRRSSRL", "RLLSLRSRLRRRLRLSSSRRRRRLRRLSRSRRLSSSLRSLRLRLSRRSRS", "RRSLRLRRLSLLRRRLRSRRRRRSRRSRSRSSSSRLRRRRRLSLSRLLLR", "LRRSRRSSRRLSRRLRRRRLRRRLRSRLRRLSRSLRRSSRRSSRSRRRSS", "SRRLSLRRSRRLRSLRLRLSSLLSLLRRSSRLRRSRLRLSSSLSRSRLSS", "SRLRRSSRLRSSRSRSLRLRRRRSRRLLLSRRLRRRRRRRRRLLRRSRSL", "RRLLLRLLRRSLSSLRRLRRRRRRSRRRSRRSRRRSRRLRLRSLLSLSRR", "SLRLRLSRSRLLRRSSLRSLLRLLSRSRRRRSSLRLSLLRSLRRRSLLLS", "RRLRSRRLRLRRSSSRLRRLLRLRRRRRRSRSRLRRSRRRSRRRSLLRRR", "RLLLSSLRRRSSRSRSLLRLLSSSSRSRRRSLRRRSLLLSRSRRLLRLSR", "LSSLSRLRRRLSSLSRRRRSRRLRRSLRSSLLLSRRSRRSRRSRRSLSRL", "SRRRLSSLRSLRRRLLLLRRRLLLLRLLSRRRLRRLSRLLRLLRSLLSLR", "RLSRRSLRLSSLRRSLRRRRLSLSSLLRLLSRLRRSSSRLRRLRLRSSRL", "SLSRRSLRLLRRLLRLLRSLRRLSRLRRLRLRRRLRRRSLRRSRRSRLRS", "SRRRRSRRRLRRRRRLRRRSRLSLRSRLRSRRRRRRSRRSRSSLSRLRRS", "SLRRSRLRSRSRLSLSSRRRRLRSLRRRRSLRRLRLSRRSRSSSRRRLLR", "RRLLRRRRSRRRRLRLRSSLLSRRRSLSLLSRRRRSSSRSLLSRRRRRRR", "SRRSRRRRSSSLLSLRRLLRSRRRRRRSRRLRSRLLLRSRLRSLRRRRRS", "LRSLRRSRLRRRSLRRLRRSRSLRSRLLLRSLLSSRLRLRLLRLSSRLRR", "RSSSLRSRSSRLRRLLSRLRSSRRRRRLLLRRSRRSRRRSRRSLSSLRRS", "SRLSSLLLLRRLLRRLRLRSSRRSSSLLLRSLRRSSSRRRSSLLRRLRSR", "LRRLLLRSRRLLSRSLRLRLSRSLSSLRRRRRRRSSRRRSRRLSLLLRRL", "LSSSRRSSLRRRRRRRSSRSRSSLLRRRRRSRRLSRLSLLSLLRRLRRRL", "SLLSLRRRSSRSLSLRSRRLRRSLRLSRRRLSLRLRRSRRLRRRLRLRLR", "LLLSRSSRSRRSRLRLSRRLLRSRSSRLRRSSSRLLLLRRRSSRLLRRSL", "RRRRLRSRLRRLSRSSSSSRLSRSSRLRRSRLSSSRRLRLRSRRLSRRRL", "LRRRRSSLLRRLSRSSRRSRSLRSSRSRLRLLLRLSRRRRSSRLRRRLSR", "RLSRLRRRLLLSLRRSSSSSLRSRRSSSRRLSRRLLRRSSRRSRSRSSRS", "RLSRLSSSSRRRLSLRRLLSLRRSSRSRRRSLRRSSRLRSRRSRSRLSRR", "RSSRRLLRRLRSRRRRRSRSSSRRLSSRRRSSRRSRLRRSLRRLSRSSRR", "RLSLSLRLLRLLSSRLLRRSRSRRRRRRSRRRSRRRRRLRRRLLLSSRRR", "RRLLRRRRRRRRRRSLRRSRRLLSRLSLLLLLSSRLLRLLSRRRSRRRLS", "RRRRRSRSLRLSSSSLLRLSRLRRRLSLSSRSSRSLRRRSLRSRRSRRSR", "RRSSLSLLRSLRSRRRLRRLLLSLLRLSRRSLLRRLLRLRRRSSRLLSRL", "LRLSSLSRRSRRSSSSSLLRRSSRLLRSRRLLSSRLRLSRRRLLLRLRRS", "SLLSRRSSLLSSLLSRRRLRRLRRRRRLRRSRLRRSRRSRLRSLRSRSLS", "LRLLRRSLRLRLSSLLRRSSLRSRRSRRRRLLSSRRRSLRRSLRLLLRRS", "LLSLSLRRRSRSSSSRRSRRSSRRRSRRLSSSRLLLRRSRLLRRRLRRRR", "LRLSLRLLLSRRRRLLRSSRSRSRSSLLRSRSRLRSRLLLLLRRRRSRRR", "RRLRRSLRLRLSRRSRRSLSRRSLRRRSRRSLSLSRRRLRRRSRSRRLRL", "LRRRRRLSRRRSLRRSRRRLLSRLRRSRRRLLL" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case15() {
        String[] commands = { "RRRRRRRRRRLLLLLSSSRRRRRRLRRRRRRSRLRRRLRRSRRRRLSLRR", "RLSLLLLSRRRSRRRRRLRRSRRRRRRSRRRLRRRRRRLLLLRRRRRRLR", "LRSLRLRRRRSLRSRLRSRRLLLRRLLRRRRLLRSRRLLRLRLRRRRRRR", "SLRSRLLRRRLLRRRLRRSRLRSRRRRRRRSRRSLRRRRRLRRRSRSRRR", "LRRLRSRSRRRRRRRRRRRSRRRSRLSRRSRRLRRRRRLRLRRRLRRRRR", "RRRSRRRRRSLLLRRLRRLRRLRRLRRLLLRRRSRRRSLLLLRRRRLSRL", "RRLRRRRRLLLRRLRLLRLLSRLRLRLLRRRSLRRRRRRLRLRRRLRRRL", "RSLLRRRRRRRRRRLRRRRRLLLRRRRSRRSLLLRSRLLRLRLRSSSLRR", "RRRRRRRRLRRRRLRLLSRRRLRLRRRRRRRRLRRRSLRRSRRRLRLRRR", "RRRLRLRRRRRRRLRRRRRLRLRLRLRRRRRRRRRRRRRRRRRRRRLRSL", "RSRRRRLRRRLRRRRRRRRLRLRRRRLRLRRLRLLLRLRLRRLRLRRRRR", "LRLRRRLSRLRRLLRRLRRRRRRLRRRRLRLLLRRRLSLRSRRRRRLRRL", "RRLRLRLRSRLRRRLRLRRRLRLRRRLRRLRLRLLRRSRRLLRRRRLRSS", "RRLSRRRRRSRLRLLLLRRRRRRLLRRRSLRRSLLSRLLRLRRRLRRLLS", "RRRSRRLRRRLRRRRRLRRRRLRLRLLRLRRRRRRRLSSSRRLLRRRSRS", "LRRRRRLRRLLRRRRRSLRRRRRRRRLRRRLRRSRRRRLLRRSLRLRRLR", "RSRRSLLLRSRLRLLLRRRRRLRRRLRRRRRLRLRLLRRRLLRLLRSRSR", "RRRLRRLRRRRRLRSLLRRRRLLRRLRRRLRLLRLRRRRRRLLRLRRLRR", "SRRRLRRRRRRRRRLSRRRLRLRRRRLLRRRRRRSRRLLLRRRRRRSRRL", "RLSLRRRRRRSRLRRLRRSSRRSRRLRRSLRRRRRRLLRRRRRRRRLRLR", "LRRRRRRRLRRRRRRSRRLRRRRRRRRRRRRRRRLRRRLRLRSRRRLRRR", "RRRRRRRRRSRRLRRRRLLRRLRSLRRRRRRRRRLRLRRRLRRLRRSRRL", "LRRRRRSSRLRSRRLRSRRLRRRRRRLRRLRRLRRRLRRRLLRLLRLRRR", "LRSLRSLRRRRLRRLLLLRRLRRSLRRLSRRRRRRLRLRRRRLRLLRSRR", "RLSRSRLLRRLRRLSRRRRLRRRRRRRLRLRRLRRLRRLRRRRLSRSRRR", "LRSLRRRLRRSRSRRRRLLRRLRRRRRRRRRLRRRRRLRRRLRLLRRLRL", "RSRLSRLRLRLRLRRRLRRRLRRRRRRLLLLRRRLRRRRRRRRLRRRRSR", "RRRRRSRSRRLRLRRRRRRLRRRRRRRRLRRRRRRSRLRLRLRLLLLRRS", "LLLRRRRSSLLRRRRLRRRRRRRLRRRRRRRRRRRRSLRSRRRSRSRRRL", "SLRRRRLLRRRLLRLRRRRLRRRSRRLRLRRLLRRRLRRRRRRRLRRRSL", "RRLRSRRRRLRRRRRLRRRRRRRLRRLRLRRLLRRRLLLRRRRRRRLRSR", "RRRRRRRRLRRLLRRSSRRLRRRRRRRLRRRRSRLRRRRRRLSRSRRLLR", "LSRRLRRRRRRLRLRRRRRRRLRRLRRRRLRRLRRRRRRRRLRRRRRRRL", "RRRRSRRSRLRRRRRRRRLRRRLSLRLRLRRLLRRRSSLRRRRRRRRRLL", "LRRRRLRRRRRRRSRLRLRRRRRRRLRRRRLRRSRRRLRRRRLLRRLRRR", "RLRLLRLRRSRRRRLRRLRRLRRRLLLRRRLLRRRLLRRSLLLRRRRRLS", "RRLSLRRRRRSRRRRRLLRRRRRRRLRLRLLRSRRRSRRRLRRSRRRRRR", "SRRRRLRRRLRRRLRRRRRLRSRRLLRRLRRRRRRLRRSRRRRRRRLLRR", "SRRRSRRLRLSRRRRRRRLLRRRRRRLLRRRRRLRLRRRSRRRRRRSLRL", "RRLRLRRRRRLRSRRRRRRRLRLRLRSSSLLLSRSRRSLRRRRSRRRRSL", "RRRRRLSRRRSRSRRRLSRRLRRSRRLRLSRSRRRLRRLRRRLLRRLRRR", "RLLRRRRRLRLRRRSRRRRLRLLRRLSLSSLRRLSRRSRSLRRSSRRRRR", "RRLLRRRRRRRSRLRRRRRRLRRRRRLRRRRRLRRRSRLRRRRLRRRLRL", "RLRRRLLSRRLRRRRRRLRRRSRRRRRRRLRLRSLRRLLRRRRRSRLRRR", "LRLRRRLRLLRLRRLRRRLRLLRRLRLRRRRRRRRRLRRRSLLLRRRRLR", "RLRRRRLLLRSRSRRRLRRLRRRRRRRLRLRLRLRRLRLRLLRRRRLRRR", "RSLLRRRRLRLLRRRLRRRRRLRLRSLRRRRRRLLRRRRRRRRLRRRRRL", "RSRRRRRLRLRLR" };
        assertEquals("unbounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case16() {
        String[] commands = { "RSSRLSRSRRSSSRRSSSSRRRRSSRRRRRRRRRSSSSRRSRSRSSSRRS", "SSRRLLSRRRSRRSRRRLRRRSRLRRSSRRRRRSRSLRRLRRSRSRSRLL", "RSRRSSSRRSSRRRRRSRLRRSRRSSRLSSRRRSRSRRRSSRRRLRRRRS", "RRSRRSSRSRRSRRRSRRRRLRSRRRLRSSSSRSRRSRRLRSRSRRSSRS", "SSSRRRRRSRSLRRRRLRRRRSRRRSRRRRRRRRRRRLSSRSLRRRRSSR", "RRRLRSSRRRSRSSRLRRRRRRLRSRRRSRSSRRRLSSSSRRSSSRSRSL", "RRRSLRRRRSRSRRSRRSRSRRRRRSRRSSSSRRSRRSSSRRSRLRSRSR", "RSSSSRRRSRRRRLLSSRRSRRRSSLRSSRRRRRRSRSRRSRRRSRRRSS", "RRRRSRRRSRRSRRRRRRRRRRRRRRSRSRSRSRRRLSRRRRRRSSRRRR", "RRRRLRLRSSSRRSSSRRSRRSRRRRSLRSRRSSLRSRRRRRRSSRRRSS", "RSRSRSRRSRSRLLRLRRRRSRRRRSSRRRSRSSRRRSSRSSSSRRSSSL", "SRSRSRSSRSRRRSSRRSRSRRRRSSRSRRRRRSSRRRRRRRRSRRRRSR", "SRLSRSRSLSRRSSRSRRRRRRRSRRRRLSRRRRRRRSRRLSRRSRRRRS", "RRSRLLRRRSRRRSRSRSRLRRRRRRSRRSRSRRLRRRRRRSRRSSRRRR", "RSSRSRLRSSLSSSRSRRRSRRSRSRRLRSRSSRRRSRRRRLRRRRSSSS", "RRSRRLLSSRRSSSRRLRSRSRRRRRRLSRRLRRRSRSRRRSRRRSRRSR", "SRLSSRSRRSRRRSSRRSRSRLRSSSRRRRRRSSSRSLSSRRRLSSRSSR", "RSRSRRRSSRRSLRRRRSRRRSRRRRLSRSSRRRSRRSRRRRSRLSSLLS", "RSRRRRSRRSSSSSRSRRSRSRSLRRRRRRRRRSRSRLRRSSRSRSSSSR", "RRSRSSRRSRRSRRLRSRRSRLRRSRRSSSRSSSSSSRRSRSRRSRRSSR", "RSRRRRRRRSRRSSSSRSSRSRSRSRRRLSRRRRSRSSSSRRSRRRSRSS", "SSSRRSSRSRSRRSRSRSRRLSRSRRRLLSRRSRSRRSRRSRSSRRRSRR", "SRRRSSSRSSRSRRSSRSRSRRLSRRSRRRSSRRRRRSRLSRLLRRSRSR", "SRRSRRSRSLLRRRRRRLRLLSSSRLSRRSRLSRSRRSRRRLRRRSRLRS", "RRSRRRSRRRRSRRSRRSRRSRRRLRRRRSSSSRRSRRSSSRRRSLSSSR", "SSSLRSRRRSSSRRSSRRSLSRSSLSSSLRRRSLSRRRLRRRSRRRLLRS", "RRRSSRRRLRSRSLRRRSSSRSSSSSSRRSSLSRSRSRRRRRSRSRRLLR", "SRSRSRSRSRRRRRRLSRRRSRLRRSRSRRLSSSSRSRSSRLSLRRLRLR", "RSRRRRSSSRRRRSRRRSRRSRSSSRRRRSRSSRRRRRSSSRRSRSSRRR", "LSSRSLRRRRSSRRSRRRRSSRSRSSLSSRRSRSRSRRRSLRRRSRRRRS", "RRSSRLSSRLRLRRSRRRLRRRSRSSLRRRRSSRRRSRRSLRSSSRSSRR", "SRRRSRRRRRRRRRRRRRRSSSRRSRSRSSSLLSSRSRRSRRLRSRRSRS", "RRRRRRSRRRSSRRRSSRSRRSRSRSRSSSRSRRRRSRRSSRRSSSRRSR", "RRSSRRSRRRRSSRRSSRRRRRLLSRRLLRRRRSRRSRRRSRRSSSRRRS", "RRSSSRRSLRRSRSRRSRSRSRRSRLRRRRSSSRLRRSRRRRRSRSLSRL", "RRSSRSSRRSSSSSSSSSRRRRRRRRRRRLRSRRRRRSSRSRSSSRSSSR", "SSRRSSSLLRRSSSRRRRSRRLRRSSRSRRRRSRRRSRRSRLSRRSRSRR", "RSRRRRRSRSRSRSRSRRSRRRRRRRSSRRSSRRLSRRSRRRSSRSRRRR", "RRSRSRSSRRSSSRRRRSRSRLSRRRSRRRRRRRSRRSRSRSSRRRLRSS", "RRSRRSSSRRRSSRRSRRSSRRLRRSSRRRSSRRRSRRRSRRRSSSSRRR", "SRRSSRRSRRSSSRLRSRRSRSRSRRSRRRRRRSSSRRSSSRRRRRSSRR", "SSRRSRSRSRSRRSSRRLSRRSSSSRRRRRSSRSRRRRSSSRRSRSRRSR", "RSSSLSSSSSRRRSLRSRRRRRRRRRRSRSRLSRSRSRLSRSLRRRRRSR", "SRSRSRRLRRSRRRRSRRSRSSRRRRRRRRRRSSRSRRSRRSSRRSRLRR", "RSRRSRRRRRRSSRSRLRRRRRRRRSSSLSRLSRRRRSRSRSSSRRSRRL", "RRRRRSRSSRRSRRRRRRSRSLLRRSRRRRRRRRSSRRSSSRSSSRLRRS", "SSRSRRRSSRSRRRSRRSRSRRSLSRRRRRSRRRLRRLLRRRSSLRRRRR", "RLRRSRRSRRRRRSRRSRSRRSSRRSRSRSRSRRRLRRRRRRRRRRRSRR", "RRRRRRRSSSSSLRSRRSSSSRSSRSRSRRSRRRSRRSSRLRRRRSSRSR", "RSSRRRRSSLRSSSSRSSRRSSRSSRRRSR" };
        assertEquals("unbounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case17() {
        String[] commands = { "LRRSSLSRRRRRRSRRRSRRRRRLRRRRRRRRRSRLRSRLRRRLRSRSRS", "RRRRRLRRLLRRRRSRLRRRRLRLLRRRRLRRRRLSRRRRRLRLRRRRRR", "RLRSRRRSRRRRLRSSRLRSLLRRRRLRRRLRRRRSRRRRSRRSRRLRRR", "RRRRSRRRRRRRSRLLRRRRRRRRRLRRSRRRRRRRRRRRRRRRRRLRRR", "LRLSRRRRRSLRRSRLRSRSRLSSRRRRRRRRSRLRSRSRSSSSSRRRRS", "RRRSRRRRRLRRRRRRRRRRRRRSRRRRRRRRRRRLRRRRRRSRRRRRRR", "RSRLSRSRRRRSRLLRRRRLLRRRRRRLRRRRRLRRRRSRRRRRRLRSRR", "RRRRRLLRRLSRRSRRRRRSRRRSRRRRSRRRSRLRLRLLRRLRRRSSRR", "SRRRRRRSRRRLSRRSRRRRLRRRRRRRLRRRLRSRRRRRRRRRRRSRRR", "SRSRRSLSRRLSRSLRRRRRRRRRRRRRRRSLRRRLRRRLLRRRRLRRRR", "RLRRSRRRRRRSRRRRLRRRRRRRRSRRRRLSRLRRRRRLRRRRRRLRRR", "LRRRRRRRRRSRRRLSLRSRRRRLRRRLRRSRRRRRRSRSRRRRRRSLRR", "RRSLSRRRRRRRRRRRRRRSRRRRLRRRRSRLRLSRRRRRLRRRSSRSRL", "RRSLRLRRRRSRRRRRRRRSRRRRRLRRRRRSRRSRLRRRLLLRRRRRLR", "RSRRRRSRRRRLRRLRRRRRRRLRRLRRRRRSRSRRRRSRRRRRSSRRRR", "RLLRRRRRRRSRRRRSRRSLRSRRRRRRRRLLRRRRRRRRRRRRRRSRRR", "LRRLRRLSRRRRRRLLRRRRRLRRRRRRRLSRLLSRSRSRSLRRRRRRLS", "RRRLRRRLRLRRRSSRRSRSRRLSRRSRSRRRRRRRRRRRRRRRLRRSRS", "RRRRRLLSSRRRLRRRSRRRRRRRRLLRLLRRRRRRRRRRSSSRRRSRRL", "LRRRRRRRLLRRRRRRRRRLRRRRLRLSRRRRRLRRRRSSRRRRRRRSLR", "RSLRRRLRSRLLLLRLSRRRRSSSRRRRRLSRLLRRRSRRRRRRRRRRRR", "LRRLRRSSRRRRRRRRRRRRRRRRRLRLRRRRRRRRRRLRLRRRLLRSRR", "LRRRSSRRRRRLRRSRRRSSLRSLRRRRRLLRRRRLSSLRSRRRRRRRRR", "RSLRSSRLRRSLRRRRRRRRRRRLRRRRRLRRSRRRRRSRRRSRSLRRSR", "RRRRRRRRLRRRRLRRRRRRRRRLRRRRLSSSRRRRRRRRRLRLRRRRRR", "SRRRRRSLRRRRRRSRRRRRRRRRRSSRRRLLLSRRRRLRRSRSRRRLRR", "SRRRRRSLRRRRRRRRRRRRRRRRLRRLRLSRRRRRRRSRRRLRRLRRLR", "LSLRRRRRRRRRRRRRLSSRRRRSSRRRRRSRRRLLRRRRLRRRSRLLRR", "RRLLRRRSLSRRSSSRLRRRRRSRLRRRRRRRRRRRRSRLRRSRRRLRSR", "LRRSRSRRRLRRRRLRRRRRLRRRRRRRSSSRLRRLSRRSLLRRRRLRSR", "LRRRRRSLRRRRRRSLLRRRLRRLRRSRRRRRSLRRSSRLLRRRSRRRRR", "RLRSRRRLRRRRRRLRRRRRRRSSRRRRRRRRLRSRRRRRSLRRRRLRRR", "LRRRRRRRRRRRRRSRRRLRRRRRLRRRRRRRRRRRLRRRRRRLRRRRSR", "RSSLRRRRRLRRRRSRRRRRLRRRRRRRRRRRRLRSLRRRRRRRRSSRLR", "RSLLRLRRLLRRRRRRRRLRLLSRRRSRLRRRLRRRRRLRRRSRSLRRRL", "RSSSRRRRRLRRLRRRRRRRRLRRRLRRLSLRLRRRRRRRSLLRRRRRRS", "RRLRRRRRRRSRSRSRRRRRLSSRRLRLRRRLLRSRLRRSRRRLRRLRRR", "LLSRRRRRRRRRSSLRSRRLRRRLRRRSRLRLLRRSLRRRRRRRRSRRRL", "RLSRRRRRRRRSRRRLSLSRRLLRRRRRRLRRSRSRRLRRRSSRSSSRLR", "SRRRRRRRRRRRLRRRRRRSLRSRRRRRRRRRSRSLRSRRRRRRRRRRRR", "RRSRSRRRSLRRLRRRSRRRRLLRSLSRSRRRRRLRRRRLRRRRRRRSRR", "RRRRRRRRSRRLRSRLLRSRRRRRR" };
        assertEquals("unbounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case18() {
        String[] commands = { "RLLRLLLLLLRLLL" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case19() {
        String[] commands = { "LRSLRRLLRRRRRRLLRRSRSRLRSLRRLLLRSRLRRLRLLRRRSRSRRR", "RRLLRRRSRRRRRLSLRSRRLLRRRSRRRSRRRRLRRR" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case20() {
        String[] commands = { "LSRRSLLSLRLLSRRSRSRRLSRSRRSSRSRRLRRRSLSRRRLRRSRRSS", "SRLSSRSLRLRLSLLSSLLRSLSRRRLSRL" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case21() {
        String[] commands = { "LLSRRLRRRLLLRRLRLRRRLRSLRLLRLLLLLLSLRLRLRLLRRRLRRL", "LLRLLRLRLRLLRLRLRRLLLLRRLLLLRRLRLRLLLLLSRLLLRRRRLL", "RLLRRLLLLLLRRLLSRRRRRRRRLRRRLRRLLLRLRRLRLLRLRLLLRR", "LLRSLLLLLLLRRRLSRRRRLRRRLLLRLRRLRRRRLSRRLLRSLRRRRL", "LLLLLRLLLLRRLLRSLRLLRLLRLLLRLLRRRLRRLLLRLLRRLRRLLR", "RRRLLRSRRLLRRLRRRRRLLSRRRLRLRRRLLLRLLLRLRLRSRLRSRR", "LRRLRRSSRLLRLLLRRLLRLRLLLRLLLRLLRLRRRRRLRLLLRSRRLS", "LRRLLLRRRLSRRSRRRLLLRRRRLRLLLLRSLRLLRRSRRLRRLRRLLS", "RSRLRLLRRLLRRRLRRLRRLRLLLLLLLLLRLRLRLLRSRRRLSRSLSR", "LLLRRRRLRLLLRSLRLLRRLLRRLRRRLRLRLLLLLLRLLRSRRRRRSL", "RSLRRSRLLRLLSLRSRLLRLLRRLLRLRRLLLRRRLRRLLSSRRLLRLR", "RLRLRRLLLSRRLRLRLRLLRLRRLRRLLRLLRLRRLLRLRLLRRRRRRL", "LLRRLRLSRRLRLLRRLLRRRLLRLLLRRLLRLRLSLLRRLLRLLRRLRR", "RLLLLRRLRRRLRRLRRLRLLLRLLRLLRLLRRLLLRRLRLSRLRRRSRL", "RLLRLLLRRRRRRLLRRRLLLRRRRRRLLRLLRLRRRLLRRLLRRRLRSR", "LSLRLRRRLRLLLLLLLRRRSRRLSLLRLLRRRLSRRRLRSRLLLRRLSR", "LRLRLLLLSLRLRRSLRLLLRLRRLSLLRRRLRLLLRRRSRLSLLLRLRR", "LLRRLLRLLRLLLRLRRRRLRRSLRRLRRSRLLLLLSLRLLLRLRLRRSR", "LRLSRRLLRLRRLRSLLLLLRLSRRRRRRLLLSRSSLLSLRLLRLLRRLL", "RLRRLRRLRRRRRLLRRRRRRRLRLRSLLLRRLSSLRLLLRRLLRRRRLL", "RLLLLLRRRRSLRRSLLRLLSRRLLSRRRSLLLLRLRLRRLLRRRLLRLR", "LRLLRSRLLRRRRSSLLRRLLRRRRRRLLRRLRLLLRSRLRRRRRRLLLR", "LRRLRRLRSRRRLRRLRLLLLLLLLRRLLLRRLRRLLRSRLLRLRSLSLR", "RLLRLRSRLRRRLRRRLRLLLLLRRSRLLLRLRRLRRRLLLRLRLRLLLL", "RLRLSRLSLLRLLLLRRLRLLLRRRLRLLRRLSLLLRLLRSRRLLRRRRR", "LSLRRLLRLLLRRLRRLLRRSRRSRLLRRRRRLRRRLRRLRLLLLLRLRL", "RRLRSRRSLLLLRLRRSRRLLLRLSLLRLLRLRLLLLSRRRRLLLLRRLR", "RRRLLRLLRRLRLLLSRRLRRRRLSRLLLLLRLLRRLLLRRRRLLLLLRR", "LLLLLRLRRLRLLRLRLRLLLRLRLRRLRRLSRSRRLSRLRRLSLRRRLL", "RLRRRRRRLLRRRRLRRLRRRLRLRLLRRRRLLRLRLLRRLLRRRRRLRR", "RLRRRRLLLRRRLLLRRLLLRRLLLLRLRLRRLLRRRLRLRRLRLRLLSL", "RRRLRRLLRLLRLRRRRLLSSRRSLLRLRRLLRSRLRRLRRLRRLRLRLL", "LLLRRLLLLLRLLLRRLRLLLRLLRLSLLLLRRLLRRRRRRLRRRRRRLL", "RRLLRLSRRRLLLRLLLRSRLRSLLLRRRLRLLRRRLRRLSSLLLRLRLL", "RRLRLRLLRRLRRLRRLLRRLRRRRLLLLLLLRRRLRLLRSLRLLRLLRR", "RRLLLLRRLRRRLLLRSRLLLRLLLSLRRRLRRSLLRLRLLRLLRLRRRR", "LLRLRRLRLRLLRLLRLLRSLRLRRLLSLLRRLRLLSSRLRLRRLLRLLR", "LLRRRRLRLSRRLLLRRRRLRRLLLLLRLRLLSRLRLLRLLLSLLRRLLR", "LLLLRRLLRS" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case22() {
        String[] commands = { "LRLLLSRRRSSLRLLLSLLRLLLLSSLRLLLLLLRRLRSRSRRRLRSRRS", "SSLSSRLLLRLRLRRLLSSRLSLRLRLLLRLLLRLLSLRRRLLLRSRRLL", "LLLRRLRRRRLRLRLLLRLRSLLSRSRSLSRLRLSLLRLRLLSRSLSLRS", "RRLLRRLLLLLLLLLRRLSSRRLRSLRSLRSRSLLSLRRRRSRRSSSRLS", "LLRLRLLLLSLLLRSRRRRRSRLRRRRRRSLLSLLRRSLSSLSSSLRLLR", "SLSRRLSRRSRLSLLRRLRRLSRSSLRLLSRRLLLRRLRSLRLRLLLRLL", "LRLRSRRSRRLRLSRLRRRSSRLRSSLLRLLSRSLLLRSSLLLSRRLLLS", "RLLLLLRSSSRLSLRRLLSRRLSRSSLRRLRSLRLLRRLLLSRLLLLLSR", "RRRRSLRLRRLRLRRRLLLLLRRLSSLRRLLLLSRLLSLRSRRSLLLLRL", "RRLLSSRRRLLRLLRSRSLSLSRRLLLSLRLLLLLLSRSLLRRLLRRLSL", "LSSSRLRRRSRRRLSLSLLLLLLLLRLLRLLRSRSRRSSSLRLLRRRLRL", "LRRRRSLRRLRLSRLLSLRRLLRSRSLSSRRLRSSLRSSRLLLLRLLSLS", "RSRSLRRRRLLSLSLLSSRLLRLRLLRLRRLLLRSLRSLSSLLLRRSRLR", "SLSLLLLLLRLRRLSSRRSLLSRSRSLRRRRRRSLLRSRLLSSSRLLSSL", "RSLLLLRLLRLLLSLLLLSSSSRLRSLSLRRRLRSLLRRRLLRLSRLLLR", "RLLLLLRRRLSLLRLRRRSSSRLSLSRLSSLSRLLRRLSLSLLSLLRLRR", "LRLLRRSRLSLRLRLSRSRLLLSRSSRSLLLLRSLRRSRLLLSRLRRRLR", "SSLLLRLLRLLSRLSRRSSRRLLLRRLSSRLLLLLLRRSSRLRLRLRLLL", "RLLRSLRLRRRLRRSLLSRSLRRRRRRLRSRLSSRRLSLLSRRRLLLSRR", "SRSLLRRLSSLRLRLLLLSSRSLSSLLRLSRLLRLLLLSRRRLRRSLLRR", "RRSRSRLSRLLRRRLLRRRLRRSSLRLRLLRSLLRRLRLLLLRRRRLLLL", "LLSSLSRRRRLRRLLRLSLSLRLRSLLSSLSLLRRSSLRLLLLLLLSLRL", "LLLLLLRRLRRRSLSLSLSLLLRRLSLLSRLRLSRRLLLRRRLLRRSRLR", "SLRRLRRSLRLLLLRSRRRRLLRLLSRLSRSRRLLLRRRRLLLRRLRLRS", "RLLRSRSLSSRLRLRRRRRRLLSSLRLSLLLLSSRSRLLLLRSLSSRRLR", "LLRRSLLRLRSSLLRRRLSRLLLLLLLRRRRLSLLRRSRLLSRRRLLRLL", "SSLLLRLRLLLSRSLLLRLSLSRRLSLSSSRSSLRRRLRSRSRLLRRLRS", "RLRRSSLRRSRSLLSSSRRRLSSSRSRRSSRRRLRLLRRSSRRLLRRRLR", "LRLRLSRLRRLRSLLLLLLRRSSRSRRLLRLLLLRRLLLRRRRSSLLRLR", "LRSRLLLSRLRLRLLLRRLRSLLLSSRLRLRRLSRSRRRSLSSSRLSRRS", "SRLLLRRSRSLLRLRRRRLLLLRLRRLSRSLRLRRRRRRRRLRLLLRLLS", "LRRLLLLLRLRSRSRRLRLRSLRLLLRLRRSLSRLRRSLLSSLRLRSLLL", "LSSRLLLLLLLLRSRSLLLLRLSLLSSLRLLLLRSRSRLLSLLLRRSRLR", "LRRRRSSRRRRRSLSLRLLRSLRRLLSLLSRLLRLRSLLSRLLSSRLRSR", "SSRSSRSSRLLLRLRRLRSLLSSLLSRLSLLRLSLLRSLRSRRSSRRLRS", "LLSLRLSRLLRLLSRRRLRSLSLRLRSRLSRLLSSRRSRLSSLSLLLRLL", "SRSLSSRLSRSLSRRRRRRLRRSLLRSLRLSRRRLSRRLRLSRRRLLSLL", "LSSSLLRRLLLRRRLRLLLRLLLRLRLSLLRLLRLRLRLRLLLRRRSRLS", "RLLLLRLLRRLRRLRSSLRLRLLLLLRLRLSRLRLLLLLRRRSRRLLLLL", "RRLSRRRRLLRRSSLRLRRSLRLRRSLLSLRRLRRLRLLLSLSLSRLRLS", "LRLLLLRLRRSLSSLSLSLSRLSLLRLRRSRLRLRLSRSSSSLLLLLLRL", "RSRRLLLSLSLRLLLLRRLRRRLRLLLLRRLRRRLLLRLSRLLRLSLRLL", "LRLRLRSLLRRSLSSLLRLLLSRRLRLLRSLRRRSRRRLRSLRRRLLRSR", "RLLLRLLR" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case23() {
        String[] commands = { "LSLLRRRLLLSSRSLLLLLSSLRLSRLLRLLLRLRSLLSRLSSSRRLLLS", "SLLLSLSSLSSSLRLLSSSSSLLRRRLSLSLLLSRLLLSSSSRRLLSLLL", "SLSSLSSLSLLRRRSSSSRSSSRLLRRLRSSSSRLLLRLSLLLLLLLLLL", "LSSSSSLRLLLLSLRLLLSRRSSLSRRLLSSLRRSLLRLLLSSLRLLLLR", "RLRLSLSLRLRSRLSLLSLSSRLSRLSSLLRLSSSLLLSSSLRRSRLSRR", "LSRSRRSSSRRLRSSLLRLRLLLLLSSRSSLLRSRRLSLLLSLSLRLSLL", "RSLSRLLRLSSLLSSLLLSLSSSRLLSRLSSLLLSRLLSRRSSSRRLLLL", "LSSLRRSRSSRSLRLSSLLLSLSLSLSSSSLSLRLRLSSLSLRLSRSLLR", "SLLLLSRLSSRRLSLSRSSLRRSLSRLLLRLLSRSSRLSSLRLLLSSLRR", "SRRRSSLLSLLSSSRLLLLLRLLLRRRLLRLSLLSRLLSRLLSRSRRLLL", "SLRLLSSLSRLRLSLSRLRSRLRLLSSRRRRSLLLSSSSLRLLLRSSRSS", "SSLRSRSSLLLSLSLSLLSRRLSRSLRSLLLSRSLRLLLLLRRLSLRRRL", "LLSSRLLSRRSLSRLRLSRLSLRRRSLSRLRSLSRLRRRLRLRRLSLSLS", "LLSLRLLRRLSLRLRSRLSLLSLLLLSLLSRSSSLLSLSSSLLLLRLLLR", "SLRSLSSLRSSSRSRSRLLSSLLRSLSSSRSRLLLLLRRLLSLSRLSSRS", "SSLLLLRRSSSLLLLSSRSRSLLSSRLRLLLSRLRSSLRSLSSSLRRLLL", "LSSRLLSLLRLLSSRSRLRSLLRLSRSRRSRRSSLRRLRLLLLSLLRSLS", "LSSRLSRSSRLSSSSLRSSSLLLSLRRSLSRRLLRRSLLSSLLSLSRSLS", "LLLRLSRLLLLSSRSRLSSLSRLSRLRRSSLRLLSLLLRRRLLLSLSLLR", "LSLLSRSRRLSLSRLLSSLSRSSLRLLSSSSLLSSRRLRLSRRSRLSLSL", "SSSLLLRSRRLSSRLSSLRLRLSSLLSSLSSLLLSLSLRLSLRSLLRSLR", "RRSLLSLSSSLLRSSLSRLLLSLSLRRLLRSSSSLSRRSSLSRRLLLSRL", "RRRLRLSRLSSRLSSLLRLSSRLSSLLLLLRRRSSLLRLSLLSRLRSLLL", "LSSSLSLLRRSSLRLRSSSSLSLRRSLLLLLSSSSLLLLSSLLRLLSLSS", "LLSLRRSSSSRSSSLSLSLLRSLLRSRLSRRSLSLSSSRRLSLLRSRRRL", "LLRSSSRSLSRRSLSRLLSSLLSLSLRSSLLSLRSLLLLSSLLSSRLSSS", "LLLRLSSLSLRRLRLLLRLLLLLLSLSLLRRSRLSLLLLSRLSSRSRSRL", "LSSLLRRSRRSLLLLSRLLSLLLSLSSSLRRSLSLLLSSRLLLLSLLLSR", "LLLRRLRSRSSLLRSLRSSLLRRSLLSLSRLLLSLSRSLSRLLRRRLRLL", "SLLRLLSRSSSRSSSLLLRSSRRLSSRLSSSSLSLSSRSLSLLRSRLSLS", "LLLLRLRRRSLRSLLLLSRSRSRSSSSRLLLLLLRSSSRLRLRLLLLLLL", "LLLLRRSLRLSLRLLLRSLSLRLSLRLSSLSLRSLLSRRLLLLSLRLRLL", "LRSLLLRLSRRLSRSLLLLSRSRSLSSRSLLLLLLSSSLSLRLSLLSLSL", "SSRRLSRLRLSLSRRRLLLSLLLSLLLRLSLSLRLRSSRSRLSLRSLRLS", "RLLRLRLSLLSLRSLLLRLLRRRLRLRLLSLLLSSLSLRLSRRSLLSSSS", "RLSLLLLSSLSRRSLSSLRLSLLLLSLRLLRLLLLRRRLLLLLRLLLLLL", "SLLLLSLLSLSSLLSLRSSLLRRLLLLLSLLRLSLLSSRSRLRSLSRLLR", "LLLRLLSLSLLRSLSLLRSLLLSLRSRLLSLRLLRLSLLLLRSLLRSLLL", "RRSRRRLLRRRLLLLRRLRSSSSLSLSLRSLSRRLLLSLRLLRSRRSRRR", "LSLLRLSRLLSLRSLLRRSRSSRRLLLRLLRLSLSSLRLLLLRSRLLSRL", "LSRRRLSRLSLLLLLLLLRSLLRRLLLRSLLLSLRLLLRRLLSLLSLLRR", "SSLLLRRRSSSLSLLSSLSLRSSLSLSLRLSLSSLLLLSRLSLLSSRLLS", "SLLSRLLRR" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case24() {
        String[] commands = { "SLLLLSSSSLRLSLLSRSSRLSSSRLSLSLLSLSLLLLSLRRSLLRSSSL", "LLLSLLLLLLLLRSLSSLLLLLLLLSSLLSLSLLSSRSSSLSSSLSLSSS", "LSSSLSSLLSLRSLLLSSLLLSLRSLLLLLLSLLSSLLRSSLLLLLSLRL", "LSSSSLSLLLRLSSLLLLLLSSLLSSLLSLLLLRLSSLLLRLSLSSSSLL", "RRSLSSSLRLRSSSRSLLLSSRLLLSSLLSLSSLSSLSLLLSSLSLSSSS", "LSLSSLLSLSLLLSSLLRLLLLSSLSRSSSLLSSSSLSLLLLLLSSSSSS", "SLLSLLLLLSSLLLSLSRSLLSLLLLLRLLLSSLSSLSLSLLLSLSSLLS", "LLLLLSSLRSRSSLRLRSSLSSSRLSLSLLSSSLLSLLLSLSLLLLLSRL", "SLLLLLLLLSLSLSSLLLRLSLLLSLLLSSSSLLRLSSLSSLLLSLSLLL", "LLSSSSLSLSLSSSLLLSRRSSLSSLLRLLSSLLLRSSSRLSSLSSSLSS", "LLSSSLLLRLSSLSSLLSLLLRSLLSLSLRLSSLLLSLSLSLRSLLLSLS", "LLSLLSLSLRSLSSRLLRLSSLLRSSLRLLSLSLSRLSSLSSSSSSLLRS", "SLLLSSLLLLSLSLSLSSLLLSSSSSSRSRSSRSSLSSSSSSSSLSLLSL", "LSLSRLSSLLLLLRSSSSSSSSLLRLSSSLSSLSLSLLLLLLLRSLLSLS", "LSLLRLRLSSSLSLLRLSSLSLSLRSLLSSSSLRLRSLSLSLLSSLRSRS", "SSLLLLLLLSLLSSLLSSLSSLLLLSLLSSRLSLLRSSSLRSSRRLLLSS", "LSRRSRSSLLLLLLLLSLLLLLLSLLLLSSLLSSSLLLSLLSLSLLRLLL", "SLLRSLLLRLSSSLLSLLSRLLLLSLLSRLLLLLLSLLSLSSLLSSSSLS", "LLLLLSSLSRRLSLLSLLSSSLSLSSRLSLSSSLLLLLSLLSSSSLSSRL", "SSRSSSSLLLSLSLRSLLLSSLLLSLSSLLLLLLSSRSLSSLRRLLLLSL", "SRRLLLLSSSRSLSSSSSLLSSSRSRSRLSLLRLSLRLLSLLSSLRSSLS", "LSSSRLSLSLSLSSLSLSLLSLLLSLLLSRLLLLSLSSLLRLSLLSSSLS", "RRSLLLSRLSSSRLLLLLLSLSRLSLRLRRSSRRSLSLLLRSLLLLLRSL", "SSLSSLLRLLRSLSLSLLSLLLLLSLSLSLRSLSSSSLRSLLSLLSLSLL", "SSSLLSLSSRSLLLLSLRLLSLLSLSLLSSRLSSLSSLSLSLLSSRRSLR", "SLSLLSSSSLSSLSLSLLSLRLSLSSSSSSLLLLSSSLSSSSLLLLRSLL", "SLSLRLLSLLSSRSLSLLSLLSSLLSLSLLRSSSSRLLLSLLLSLSSSSS", "LLLLLLLLSSLLRRLLLSSLLLLSLSLLLLSLSRSLSSLRRSRSLLLLLL", "SSLLLSSLLSLLLLLLRSLLLRLSSSSRSLLSLRLLLLLLLLLSLLLSSL", "SLSLLSLLSSLSSRLLLSSLLLSLSSLLLLSLLLSLLLSLSSLSLSRLSL", "SSLRLLSSSSSRLLSSLSSRLSLLSLRSLRLLSLLSLLSLSSSLSLLLRS", "RLSSLRSSLRLSLSSRLLSSLSLLLSLLSLLLLSLSSLSLSSSSSSSLSR", "SLSLSLLLSLSSLSLLSRSLRLRLSSSSSRRSLLLSLLLLRSLSSLSLLR", "RLLSSRLLSSSLSLSLSSLSLSLLSSLSSLSLSLSLLSSLLRSSLLLSLL", "SSSLLSSLSSLLLSSLLLSLLSLLLSLLLLSLSLLLLSSSRLRLSLLLSS", "LSSSLSLLLLSLLRLLSLLLSSSLLSSLLLLLSRLSLLLSLLSRSRLSSL", "LLLSLLLSSLSRLLSRLLLRSLLSSLLRSSLLLSSLSLLLLSSSLLLSLL", "LSLLSLSSRSSLLSSSSSLSLLLLLSLLRLLSLSLSLSLSSSSLLSSSSS", "LLLSLLSSLLLSLLLLLSLRLLLLSSLLLSLLLSLLSLLSSSSSSSSRSL", "SLLLSSLSLLLSLLSLLSSSLSLSRLLLSRSLLLSSLLLSLSSLSLRLSL", "RSLSLSLRLLSLSLLLSSSLLSRLLSSSSSLSSLLSSSS" };
        assertEquals("unbounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case25() {
        String[] commands = { "RSLSRRRLRRRSSLRRRLSLRRSSRRLSSSSRSRLLSRLSSRSRRLRRRR", "SSRSLRSSRSRSRRLSSRSSRSSRSLSRRLSRLRSSLRSSRSSLLSRRRR", "LRRRRRLRSRSSLLRLSSRRSSLRLRSRRRSSSSRRRRRRRRRSRSRRSS", "RLLSSSRSSRLSLLRSRRRRSLSSLSSRRSSRRLRRRRRSRSLSLLRRLR", "RRRRRRLLRSRRLSSSRLRSSLRLRRRSRSLLRSLLRRRSRSLSRLRRSS", "RRSRLRSSSRRRRLLRSLSRLSRSRSLLRLRRRSRRSSRLLLSLRRSRRR", "SLSLLLLLSRSRRLRLRRRSRLRRRRLRLRSLRSSRRSLLLSSSLSLSSR", "LLSRRRSRLLSSRLLRRRLLRRSRLRRSSSLRSRRSRLRRSSSSRLRSSR", "RRLRLLRLRRLRSSSSRRSSRLRLLRRLRLLSLRRLLLRLLRRLLRRSSR", "RSRSRSRRSRRRRRLRSRSSSRSSRLRLRSRSSRSRRRRRSSRRLRRRLR", "LRRLLRLRSSLRSSLSSSSSSRSRSSLRRRSSRSRSLSLRSLRRRLLRLS", "RLRRRSRLSLRSRLSRRRLSSSRSSSRLRLRLLLRSLLSRRLRRLSRLSR", "LSRLRLSSLSRRRSLRRSLRLSSRSLSSLLRRSRRSRRSSLRSRSSRSRS", "LSSRLRLRRRRSLLRRSSSRRSLRRSRRRRLSLLSSLRRLSSRRRLLRRR", "SRLSLRSSSRLSSRSRLRSLSSSSSSLRSSSSSLSSLRSRLSSRRLRSSL", "LSSSLSRSRRSSSRSRRRRLLRSRRRSSRSSSSSRSRLLLRRSLSRSSLL", "SRRRSLLRLSRLLSRSSSRRSRRSRRSSLSRLLLSRSSRSRRRRSRRSLS", "LSLSRLSRLRSRSRRSRRRRRSSSSSLLSLLLLRRLSSSLRRSSLSRSSL", "LRSRSSSRRLRRLRRLRRSSRRRRSSRSRRSRSRSRLRSRRRSSRRLSSR", "LSRLRSRLRRRRSLSLSLSRLSSLLSLRRRLSLSSRRSRRRRRRLSRRRL", "LLRSSRRRRSSSRLSSRSSSLSSLRRLSRRRRLRLRLLSSRSLLSRLSSL", "LRLRRRSRRSRSLLRSLLRLLLSSSSSLRSLSRSSSLRSLSLRRRRSRSL", "RRSSLRLRLSRSRSLRLSRSLLRRRSLSLLRLRRSSSRRRRSLLSLRRRL", "RSLSRSLLSRSRRRLLRSLRSSSRLRSLSLRSLSRRLRRRLRSRSSRRRS", "LSRSSSSRRRRSRRRRRSLLLLRRRLRSLSSLLRSRSRRRRLRSRLRSRS", "RSRSLSSRRLSSLRSSSRRLRLSRLSRRLRRLRLRRSSSSSRSSRRRSRR", "RRRRSRRLRSRSRRRSSSSRSLLRSLLSRRRRLSSLRRSLRLLSRSSLRS", "RSRSSLLSLLRLRRRSRSLSSSSLLLRSSSRRSRSSSSSRLSLRSRRRRS", "LSRRSSSRSLRSSLSRSRSLSSRSRRRLLSRSRRRLRRLRLSLLLRRLRL", "SRLRRSRRSRRSSSLRRRRSRRRRRLRSRLSLRLLSRLRSSSSSLLSRRL", "RSLLRSRSLSRSRRLRSLRSRRLRLRRRRSRRRRSSSSSSSLRLRSRRLS", "SLLRSSRLSLSSSRRSSRRRLSSRLSSRRRSRSRRLSSRSRRSLRRRRRL", "SRRSRRRRSLLSSRRSRRSSRRRRLLSSLRLRSRSLRRSLSRSSRSRRRL", "SLSSRLSRRSSRRLLSRSLRRSSRLRRRSLLLLSSRSSLLRSRLLSRSRS", "RRLRSSLSRSRRSSLRRRLSSRRSRRSSLSLSSSLRRSRSSRRRSLSSSR", "RRRSSRRSRLSSRLSRRSLLRSSSLRLRSRRSLLRRSLSSRSSLLLSSRL", "RRLRRLSSSRSSRLSSRSRSRSSRRSRSRLSSLLRSLSRSRSLSRRRSRL", "LSLRLLRSRRRLLRLSLRRRSRSRRRRSRLLLRRSRLLLRRSRSSRRRSL", "RLRSRRSLRLRLRLSLSSRRSLSSRSLSRRLRSSSLSRLLRLSSRRSSLR", "RLRRSRRSRRRRRSRSLRLLLSRRRRSSSSRSSSRRRRLSLRLRLRRRSL", "SRRLRSRSRSRLRRRSRSSRSSRRRLSRRLSRSLRSSRRLSRRRRRRSSS", "RRLSSLSRLSRSLSLRRRRLRRSSSRRSLRSSLRLSRLSSRRRSRRSSSS", "RRSSRLSSRRRSRRLSSRSLLLRRRSLSLSRRLLRRRSRRRLRRRRSLSR", "RLRRSRLLLSRRLRSRSRLRSRLSLSSSSLRRRRRLSLRRSLRRLSRSRR", "LRSRLSSRLRSRRRLSS" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case26() {
        String[] commands = { "RRSSSLSLLLSSLLRRRRSSRLSLLSRSRSLSLLSLSSRLRRSRSSSRLS", "LSLLRLSLSRRRSLSLRRLLLSSLSRLRSSLRLLRLRSRLSLLLSLRLLR", "LSLLSSLRRLLSLRLSLSLSRSLLSRRLRRRLLRLSSLRRLSRSLSSRRL", "LRLSRRLSLSLLRSSSLLRLLRLRRSLRRSLSSSLRSSLSLRSSSSLLRL", "RLLLRRRSSLRRLRLLLRRLLRSSRLRSSLSSRLLLLLRSRRRLLLRSSR", "LSRRSRLLSRSSLRLRRSLLRSLLLLLLSSLRLRRLRLLLSRLLRSLLLS", "LRSLSRSRLRSLLLLLLLSRRLRLRLRLSLSSRRLRRRLLLLLRSSLLRR", "LRSRSSLRRRSSRSLLRLSLLSLSSRLRRLRLSLSSRSLRRSLRLLSRRL", "RLLSLLRLSSSSRLLLLRLLLSSRLSRSSSLLLSRSSRSSLSRLLRSSLS", "LSLLRRSRSRRLRLLLLSRLLLRSSSLLLLRRLLLLRRRLLRLLSLSSLR", "LRRSLLLRRLSRSRSLSSLRSSSLLSSSLLSSRRRSLSRLSLRLLRSSLL", "SRSSLSSRSRLSRRSLSRRLRSRLLLSLLLRSLSRSLRLSSRRLRLSLLS", "RRLLRSLRLRRSRLLSSSSSSRRRSRRLLRSSSLRSSLRRLLSLLSRSRR", "RRRLRRLRSSSSSLSSLLLLSLRRSRLLRSSRLSRLSLSSRSSLLSRSLR", "SSLRRLSSLRRRSLSSLSSLLRLLSSRLRLLLLSRSSSLRSRRLRSRRLL", "RRLLLSLLSRRSLLLRRRLLRSSLLSRSRLSRRLLLRSRLSRLRSSRRLR", "RLSLLRLSSRRSRRRSRLLSSRSSSSSLRRLRRSLLLSSSSSRLSLLRSS", "SSLLLLSLRSSLLLRRLLRSSSSRRRLLLLSSSRRRLLLSSLSLLRRLLR", "RLSLSRLLLSSSSRRSSSLRLLLSSSLLSLSSRSLRSLSRLLRRLSSSSR", "SSLLSLLLRSRLLLSSRRLSSRLRRRLRSLSLRLLRLLRRLLLLLSLLSR", "LLSSSSLRRSRRLLRLLSRRSSLLSSRRLLLLLRLLSRLRSSRSLSRSRR", "LSLLLLSLSSSRLLSLRRLSLSLSLRLLLSSLSRSSLSLSSLSLLLRSRS", "LLSLLRLRLSSSRLSSSRLLSSLSLRRLSLLRLLLLSLLLRLLSSSLLRL", "RLLRRSRRRRRRSSRRLLLRRRRRSRRSLLLLRRLLRSLLRLLLRSLSLL", "LSSLLRLLSSLLSSSRLLSLSRRRRRRLLLSSSSRSLLSSSRLLLLLLSL", "RRLSRLRRLSRRLSLSLRLLLSRRLLSRRRSSSRLLLRLLRSLSRRSRRL", "SSSLRLLRSLRSSLLSRRLRLSLRLLSRSSSRRRLLSRLLRSSSSSSSSS", "LRRRSLLLRLLLLLRLSLSSRLRSLLRSRSRSRRRRRSLLRLLSRSRLSL", "LLRSRRRSLSSRSLLLRSLRLSLSRLLSRRSLRLRLLLRSLLRSLRLRRR", "SSLSSLLSLLRLRLLRLLSSRRRLSSLLLSSLLSRRRSSRLRRLSSRLSL", "SLLRSRRLLRSSSRLRSRSLLRSLLSSRRLRLSLRRLSLLRLRSRLLSSR", "LLSRRLLSLLLRSSLSLLRRSLRRSRSLSLLLRLSSLSLSRRLSSSRLRL", "LLRSLRSRSRLSSRRLRLRRRSRRSRRLSLRRLRRLRLSRLRRRSLRLSL", "SRLRLSLLRSSSRRRSSLRLLRSRLSSLSLSSRSRSRLSLSLRSRRSRLL", "LSSRLSLRRSLLLLLLLSLLRLRSSLSSLLSLSSRLRRSSLLSSRLRSSS", "RRLRSSRSLLRSRRLRSLLLSSRLLRLLLRLLLSRSSLLSSLLSSSLSLS", "SRRLSRLSRSSLRRRLSLLLLRLLLLSRLRSRSRRSSLSSRRSLSLRRLL", "SLSLLSSSSRSSSSSLLLSSRSRRLLRRLRLSSLSSRRLLSSRRSRSLRR", "RLRSLRLLRRSLSLRRRSRRLRSLLRSSLSSSSRLSRSRLLSRSRLSSRL", "RRSRRRLLRRSRRRLRLSRRLRLSRLLRRLRLRSRLRSSSSRSSSSLSRS", "RLRSSSRSSLSSSRLRSRLRSRLLSSSRRLLRRSLLRLLRLRLSLRSLLL", "LLRSLLSSSRRSSSRLSLSRLLLRLRLSRSRLSSSSRRLLLLSRSRLSSS", "RLSSSLRSSSLSRSRSLLRLLRSSRLLSRRSLLLRRRSLSRRRRSSRSSR", "LRLSLLLLRRRRLLSSLSRLRSSRLLRRRSSLLRSSSSRSLSSLLSLSLR", "RSRSRSSSRSSSRSLLSLSRSRRRSLSLSRSSRRRLRRSSSSRRSLRRRS", "RRLRLRLLLLLRRRSRSSRSRRLLSSLSRRSSL" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case27() {
        String[] commands = { "RSSRRSSSLSRRLSLRSSRSRSSSRSSRRSSSRRSSSSSRSSSRSRSSSR", "SSSSRRRRSSSSLRRSSLRRSRSRRSRSRSSSSLRRRLSRRSLSRSRRSS", "SSLLRSSLRRLRSSSRRLLRSRSSSRSSLLSSSSSRSLSSSSLSSLSSRS", "RRRRLLLLLLRSSLRSSRSRSSLSSLLRLLLSSLSSLSSRRRLSLSSSRS", "RRRSLLRSSLRRSRLSRSSSLSRLSLRRSSSSRSLLLRSSRSRSLRRRSR", "SRSSRSSRSLRLLSRSRSLRSSSRSLSLLSRLLSLRSSSSLRRLSLSSSL", "SLSSRLSSRSLSRRRSLLSRSSLSLSRSLSRLSRLLSSLSRLRLSLRRRS", "SLRSRLSLRSSRRRSSRRRSRSRSSRSSLRLRLSSRLSRRSSRSSRSRLR", "SLSSSRSSSSRSLSSRLRSRLSSSRRLRSSSSSSRLSSRSSLRSSSSRSS", "RSSSSLRRSSRRSRRSSSRLSLSSRRSRLSLSRSSRLSSSRRRLLSLLLS", "RRSSRLSRSRRRLSSSSRSSSSLLSSLRSLSSSSSLSSLSLRRSSLLRRS", "LLLSRLRSSSRLSSSRSRSSRRSSSSSSSRRLRRSRRRLSSRSSRLRSRL", "LSSSSLLRSRRLSSSSSRRSSLSSLRSSSLSLSLSRRRRSSSLSSSSSLL", "SRRSSSSLRSSSSRRSRSSSRSLSRLSLRSSLSLLSSRRSSSLSLRLSLL", "SSSSSRSRRRSLLSRSSRLRSLRRRSLRSSLLRRRLRLRLSSSSSRLRSS", "SLSRRSLLRRRSRRSSSRLSSSLSLSLSRRSRRSRSSRRLSSSRRSRRRL", "SRSSSRLRSRSLSRRSSLSSSSSRLSSSRSLRSLSRRRRSSSSRRSRLSR", "RRRSLSLLRSSSSSSRLSRSSLSSSSLSSSSSRLSSLLSSRLLSSSSRSR", "LSSLLSSRRRSSLLRLRLLSLLSSSRLSSSSRSSSSSSLSSRSLRSRSSL", "RRLLRLSRSLSLSRRLRRSSRSLRSLRLLRSSSSSRRRLRRLSSRSLSSR", "LRRSSSLRRSSLSLRSSSRRSRSSSSRLSLSSLRSLSRSLRRSSSRSSLR", "SSSSSRRRRSSRRSLLSSRLRSSSSRRSRSLSSSSSRSLLRRRSRSRSRS", "SSSSSRSRLSSSLLSRLSLSSSRRRLRSSSSSRSLSSLSSLSSSSRSSSS", "RSSLSSSLRRSSRLSRLSRRSRSSLSLRRLRRSRSRLRSSLLLSRRRSSS", "RLSLRRSRRSLLSSRRSRSSRLRLSRSSLSRSSSRSSSLRRRRRSSLSLL", "SRSRLSSSRLSLLRSRRSSRSSLSSSRSRRSSSRSLSRSRSRRLLSLSLS", "RRRLSRSRRRSRLSSRRSLSLSLSLLLSSSRSSSRSLSRSRSRSSRSLSR", "RRSSSSSSSRSSSRLSSSSSSLRSRSRSSRRSSSSSRSLLSLLLRSLSSL", "SSLSSSSRRRSRSRRRLRLSSSSSSLSSRRSSLRSLRSSRRRRLSRSRSL", "RSRRSSSSSSSSSSSRRSSRRLRSRRLSSSRSSSSSSRLSSSSSLLRSSS", "LSSSSSSLSRSRLRRSSRSRLSRSSSSSRSRSSSSSLSSLSSRSRSLLSR", "RSRSRRLRLLLRSSSRLSSLSRRSLLRLSLSSRSRSSSSRSSLSRSLSSS", "RLRLLSRRLRSSSSRSSRSSRRSSLSLRRSSLRLRSSLLLSSRRRSRSLS", "SLRSSLLSSLLSLSLSSSRRSSLRRRLRSRRRSSLRRSSRRSSLLSSSRL", "SSRRLSRSRLSSSSSSSLSRSSRLRSLSSRSSRLLSSSRLRLRSSRLSSS", "SRLRSSSSSLSSLLLRSSSLSRLLRRSRSSRSRRRSSLLRRLRLRLRRSS", "SLSRSLSLSSRSLLRSSSSLSRRRSSLRSLSSSRSSSSRLSLLSRLSSRR", "SRSRSSRLRRSSRSRSSSSRSLSRSLRRSLLRSSSSLSLRRSSLRLRSSL", "SSRSSSSSSRRSSSLRSLLRSRLSSSRLLSSRLRLSRRRSRRSLSSRRRR", "LLRSLRRSSSRSRRSLSLSRSSLRRSRLLLSSSSSLRSRRSSRSRSSSLR", "LRRRRSSSLSRSLLSSSRRSLSSSLRSLSLSRLSRSRSSSSLSSSL" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case28() {
        String[] commands = { "RSRRRRRRRRSRRRSRSRRSLRRRSSSRSRRRLRRRRRRSRRRSSSLRRS", "SSRRRRSRRSRSRRRSRRRLRRLRRSRRRRSRRRSRRRSRRRRRRSSRRR", "RRRRSSRRRRRLRRRRSSRRRLRRLRRRSRLLRRSRRRRLRRRRSSRSRS", "LRRRRSRRRLSLLRRRRRRRSRRRRSRRSRRRSSRSRRRRRSRRRRRLRR", "RRRRRSRRRRSRRRLLSSRRSRSRSRSRRSRRSRRRRRSRRRSRRRSRRL", "RRRRRSSRSRSRLSRSRRRSRRRRRLRLRSLLSRRSSRRRRSSSRRRRSR", "RRSSSSRRSSSRSRRRRRRSRRSRRSRRRRRRSSRRSSSRSSRRRRRRLS", "SRRRLRRRRRRRSRSRRSSSSSRLSRSLRSRSSRSRSRSRRRSRRSSSLR", "SRSRSRRSRRRRRRRSSRRSSSSRRRRRRSRSRRRRSRSSRLRRSRSSRR", "SRRRSRRRSLSSSRRRRSRRRLSSRRSSRRSSRSSSRRSRRRSRSRRSSR", "RSRSRRRRRRRRSLRRSRRSRRLRRSRRRRSRSRSRRRRSRSRRSRRRRS", "RSRRLRLRSRRLRSSRLSRSLRRSRRRLRRRRRRSRLRRSRRLSRSRRRR", "RSRRRSSSRRRSSSSSSRSSRRRRRRRRRSSSRRSRSRRRRLLRRRRRRS", "SRRSSRSRRRSRRSRRRRRRRSLRRRRLRRSRSRSRSSRRSSRSRRRRSS", "RLSLRSRSRSRSLRRRRSRRSRLRSSLLSSSRRRRRRSRRRRSRSSSSSS", "RRRSRRRRRRRRRSRRSSRSSRRRRRRRRSRRSRRRRLRRRSRSRSRSRR", "SRRRRSRRRSRRRRLRRLRRSSRRSSRLRSRRRSLSRLSRRLRRRRRSRR", "SLSRSRRSRRRRSLRRSRRSRSRRRRRSRSRRRRRLSRLRRLLRRLRLSS", "RLRRSRSSRRRRLRRRRSRRRSRRRRSRSSRSRRRRSRRRLRRSRRRRRL", "RSRRSRRRRRRRSSLRRRRSRRRSSLRLRSRLSSRRSRRRRRRSRRRRSR", "SRSRRRSRRSRRRSRRRRRRRSLRSRSRRRRSSSSRLRRSRSRRSRSSRR", "SRLLRRRSRRRSSRLRRRSSSRRRSRRRRRRRRRLSRRRRLSRRRRRRRS", "SRSLRRRRRRRRRRLRSLRRSSSLRRSRSRRRRRSRSRRLRRRSRRRRRR", "SSRRRLRRRSSRSRLSRSRSRRRSSRRRRRRRSSSLRSLRRRLSRRSSLR", "SRRRSRSRSRRRLRRRRSSRRRRRRRRSRRSRRRSRSRRRRRRRSRRRRS", "SSSRSLRRSRRRSSSRRRRRRRRRSRRRRRRRRRSRRRRSRRSSRRRRLR", "LRRSRRRSSRRRRSRRSRRRSSSRRSRRRSSRSRSSLRLRRRRSRSRRRR", "RRRSRRRRLSSRSRRRLRSRSRSSLRRSRRLSSRSRRSSSSSSRSSRRRR", "RRRSRRRRRRRSRRLRRRSSLRSRRSRSRRRLSSRLSSRRSRRSRLSRRR", "RRRSRRLRSSRSRRSSSRRSRSSRRSRSRRSRSRSRLSRLSSLSRRRRLR", "SSRRRRRRRRRRRRRLRRSRRSRSRRSRSRSRSRSSRRRRSRSRRLRLRR", "RRRRSRRSRRSSRRRRSRRRRRRRRRLRRRSRRRRRSSSLRRRRSSRSRS", "RRRLRRSRRRRRSLRSSRRSLSSRSSRRRRRSSRSRSRRLLRRLRRRRRR", "RSSRSSRRRSSRRRRSRRRRRRSRLRSRRLLSRRLSRSRRSRRSSLRSRR", "RSSRRLRRRSRRRSSRSRRRRSRRSRRSRRRSRSSRRRSSRRRRRRRLSS", "SRRLSRRRRRSLRRSSRRRRSRRRRLSRRRRRRRRSRRLSRSRRRSRRRR", "SSSRSSSSRRSRSRRLSSSLRSRRSRRRRSRRSSRRRRRRLRSSRRLRRR", "RSRSRRRRSRRRSSRSRSRLRSRRRRSSRRSRSRRRRRRSRRRRRRRRRR", "RRRSLSRRSSLRRSSRSRRLRRRSRRRRLLRRLRRRRSSRRSRLRRRSLS", "RRSSRSRRRLRRRSRSRRRRRRSSRSRRSRSSRRRRRLRRRRRRRSSRLS", "RRSSRRRRRSRSRRRRRRSRRRRSRRRSRSRLRSRRRRRRLSSSRRSLSR", "SRRRSRSRRRRRSRRRSRRRSRRSLRSSRRRRSRRLRRRSRRRSRRSRSR", "SRLRSSRSRRRRRSSRSRSRRRRLRRSSRRSRRRRRRSRRRSRRRRSSLR", "RRRRRSLRSRRRRRLRRRRSRLRRSRRSRRRRSRSRRRRRSSRRRRSSRR", "SRRSRRRRRRSSSRRSRLLRRRRSRRSRSRLRRRRRRRRRLRRSSRRRRR", "SSLLRRLRSRSRRRSSLRRSSRRRRRRRRSLSSRSSRRRRSSSSSRSSRR", "RSSSRSSSSLLRSRRSSSLSRRRRSSRRRRRRSSRSSRSSRSRRRRRRRR", "RRRRRRSSSRRRRRRRRSRRRRSRRRRSRRRRRRRLSSRSRRRSRSSRSR", "SRLSRRRS" };
        assertEquals("unbounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case29() {
        String[] commands = { "LLRRSSSLLLRLSRSRSRLLRRSSSRSLSRRRLLLLRSLRLSSRRLLRRL", "LLRLLLLRRRRLRRRLRSLLRSLSSSSLRRLRRSRRLLRLLLRLSRLSSL", "RRSLRLRLSSRSLRLLLRLSRSSLSLRLLSSRLLLLRLLRRSSLRLLLLL", "RLRSRSLLSLLLLLLLLLRSRLSSRLLLSRLRLSLSRSLSLSSLLLRLRS", "RSLLLRSLSSLSRRLLRSLLSLLLRSLSSSLRSSRRRSSSLRLSRSLSLL", "LLLLLLSSLRLRRSRSLSLRLSLSRLRLLLLRRRSLLLLSRSLLSRSLLS", "RLLSSLLSSRSLSLSLRRRLSLLRLLRLSSLRSRLLRRSRSLRSLSLLLS", "LRRRSSSSLLSLLSLSLRRLSLLLRLRSLSRRLSLSRSLLLRRLSSSSLS", "SRLLLRLSSRSLLLLRRSLLRLSRLSLRRSLLSSSLSSLSLSLLSSLSLR", "LLSRSRSLRRLRRSLLLSSLLSSLRLSRLRLSLSRLLLLSSLLRLLLSLL", "LLRSSLSRSSLSRLSLSSLSSLSSSRLLRLRRLLLLLLSSRSRLSRSLRR", "SRRLLLRRLSSRLSLRLSLSLSRSLLRRSSSLLSLLSLSLSSLRRSSRLL", "SSRRLSSRSSLSLSSRSSRSLLLRLLLRLLLLRRRSRRLSSSSLSSSSSS", "SRSSLSLLLLSSLRRLRSSLRRLRSRLSSLSLRSLSLLSLSLSRLSLLLL", "LLSSLLSSRSLLLRLRLRSLRSLSSSRSLRLRSLRLRSRLLLRSRLLLSR", "RSSSLLSSLLLRSRLSRLLLRLLSLLSLRRLRLSRRSSLSLLRSRSLLRR", "RLLRLSLLLSSSLSSRLSRRLSLLLLSLLSRRRSLSRSLSLSLLSLSRSL", "LSSLSSSLSLLSLLLRSRSSRLLSSLSSRLLRSLLRRSRSLRLLSLSSSR", "LRSSRSSRLSLLLSLRLRLLSSSSLRLSSLRSRSRLSLSRRLRLRRSRSL", "LLRRLLRLRRLSSLRLSSRRLRLRRLRRLLLSLSLRLLLRRSRLRLLSRL", "SSLLRSLSSLSLSSLSLLLLSRRRLLSSLLRLLRRLRRRSLSSRRRLSLL", "LLRSLSSLLSLRSRLLSLRRLLRSSSSSLRSSRRLLLLRRSSLSSRLRLS", "SLRLLRLSRLRLLRSSLSRSLSLRSLSSLLRLLSLSLSRLSRLLRSRLLR", "SLLSLLSSSRLLLLSRSLRLSSRSSLLLRRRSLLSRRRSLLLRLSRSSLL", "RSRSRLRRSRSLLLSSLSRLLLRSRSLLRSLSSSSSLLLSRLSSSSRSRL", "LSRSLLSLLSLSLSSRSLSRSLSLLRSRSSSSLRSRLLSRRRSRSSLSRL", "LLRSSSLSLLSLRRRRSSRSLRSSSLSSSSLRLRSRRSLLRSLSLSRRRS", "RSRRLRRLLLLSLLSLSSSRLLRRLSRLLSRLLLLRRSRLSLSLLLSSSR", "SSSLLLSSSLSLSLSSRRLRSRRRLRRRLLSLSLLRSRSRRRSRRSLLSR", "RRSLSRLSLSRRRSSRLLLRSRLLSRLRLRLRSLSLSLSSSLRLLRLLRL", "LSLLRLLSRSSSRSLSSLSRLLRSSSSSRLLLSRRSRSRRSSRSLRSLLS", "LSSLLRRLRRSLLLSSSLRSRSLSSLRLRRLSRLLRLLLSLSLSLLRLLL", "LRSLSRRSRLLSSSRSSRRLLSSSSSLLLSRLRLLLRSRRLSLSLSRSLL", "LLRLLSRSRRRLRRLSSSSLRSSSRRLRSSSLRLSLSLLRLSLRSLRLRL", "RLSSLLLLSLSSLRLSRLLSSLSLRLLSRRLLRSLLLLSRRSLRSLLSSL", "LLRLRLSSLRRRSSRLSRSRSRRLSSRSSLLLLSSSLLSRLLLRSRLLRR", "SRLSLSLSRLLLLSSSLRSSSSLRLSSRRLSSLSRLSSRLLSRRSLLLSL", "LSRRSRRSRLSSRSRSRRRRSLRLSSRRSSRSLSSLRSRRLLSRLRLSLS", "LLSLSSRLRLSRLRLSRLLRRRSSRLLRRSSLLSSSLSLRLSSLRRRLSR", "LRLLLLLLLLLSSRSLRLRLLLRRSSLSRSRLSLLSSSLSLLSRLLLRLL", "LLSSSLRLSSSLRRRRSLRSSLRSLSLSRSLLRSRSSLLRSRSSLLRSLR", "LLRRSRSLLLLSRLLRLLSSRRLLRLRLSLRLSRSSLSRSLSRRSSLSLR", "RRLSLRRLLLLSSLRSSRLRLLLRSSLRLRLLRLLSRLSRRLLLLLLSRS", "LRLSRRRLLLLLSSLRLSRLSRLSSRLSRRLRLRLLRSSRLLLRLLSRLL", "SLLLSRSLLSLSSSRLLLSLRRSRRLLLRLSRLRSLRRRSSRSRRLRLLL", "SLRLRLLSLSRLSSRSLSRSSRRLRLRLSLRRSSSLSRSRLSLRLLSSSL", "LLRLSSRLRRRLSSSLRLRLSLSSLSRLLSSLLRRLRSRLRSLRRSSLSL", "RSRSLLLRRRSLRLSRSRRLSRLRRRRSSLSLLRLRSSRLSRSLSSLLLS", "LSLSRRLLLLLRLLLLSLRRLLRRRSLRRRSLSRRLRRSRRLSS" };
        assertEquals("unbounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case30() {
        String[] commands = { "SLSLLSLLRRLSLRLLRLLLRRLSSSSSSRLRLRLLRSRSLRRLSLLRLL", "RLLRRSSLLRLRLLSLSLLSLSSLLLSSLRLRLSSLRLLLSSLLRLLSSL", "SSSRLLLRRSLLLLRLLRLLRLSSLSLLLSSSLRLLSLLRSLSLRLLRRR", "LLRLLRLLLSLLSSSSLSLRLLLLLLLLLLRRSSRRSSLRLLLRLLSLSS", "LLLLRSLSLLSSLRLSSRRLLLLRLRLRRRSLLRLRLRSSLLRRRRSSLL", "LRLRLRSLSLSLRSLSSSLLLLSRSSRRSLRRLSLLLLLRLRLSLSRRRS", "SSLLRSLRRLLLRLLSRLSLLLSLSLRLRLLLLLRSRLLLLLLLLRLLRS", "SSLLSRLLLSSSRLLLRSRLRLLLSSLRLSRRSLSSLLSLLLSRRSSSSL", "RSLLRSRLLLLLSLRLLLLRSLSLRRSRLLRLLLRLLSSSLRRLLSLRRR", "RLRRLLLRRRLSRSSLLSLSLLLLLLSLLLLSRSLLLLRSSLSRLRLLSL", "RSRLLSRLRSLSLLSLRLLLRSSSRLRLSLRLLSLSLSLLLLLLSLLLRL", "RRSLLLRRLLSRLRSLRRRRRSLSLLLLSLLLLLRSLRLSLSLRSLRLRS", "LSLRLLSRRSLLRLLLSSLLSLLRRSSLSSSLLRLSSSSRRSRRSLLSLS", "SLLLLRRLRSSRLSLLLLSLRLLRLLLRRLRSRSRRLLLLLLLLRSRLLS", "SRLRSRLRSLRSLLSLLRLRLSRLRSRRRLLSLLLLLSSSLSSLSLRLSR", "LLLRLLSRRSLSLSSLSSRLLLLSLLRLRSLLLSLLLSRRLLLRLRLLRL", "SRSLLRSLLLLSSLLLLLSSRLRLRLSRSLLRSLSRRLSSLSRRSRLLLS", "LLSLLRRLLSLLSRLLLRSLSSRRRRRRLSRLLSSLLSLLLSLRLLSLLL", "RSLRRLSLSRLLSRSLSLRRSLLRRLSLSLSLLSLLSSRLLLSSSLLSRR", "SLSRLLLSSLLRRLLSLRSLLLRSRSLLSSLLSLSLSRLSLRRSSRSLRR", "SLLRLLRRLLSSSLLLSSSLLSLSSRSSLRLLLLRLLRSSLLLSLLRLRS", "SRLSRLSLSLRLSSRRLRLRLRSSRSSSLLLSRLRLRLRLRRSRRLSSSL", "SSLSLLRSLLLLSLSLLSSRSSLLLLLRRLRLRRLLRLLRLLSSRLLSLL", "SSRSSSSLRRLLRSLRLSRLRRRLLSRLSLRLLLLRLRLLLRSLRLRLRL", "SLLRSRRRSRSSRRLRSLSSLLLLSRLSSRLLRLRRSLSLSRLRRLSRLL", "LSSRRSLLLLSSLLSRLLSRRLLSSRLLLLLLLLRLLSSSRRLRLSLSLL", "LRLRSLSLSRLLLSLLLSRLRRLLSRLRLLSLLLSSSSSSSLLLRSRLLL", "LLLLRLLLSLRSRLLLLLSSRRRSRLSSLSLRLLSRSSLRLLSLLLRLSS", "LSLSLLRSLLRLSSRSLSLSLSSLLLSSLRRRLLSSSRLLLLLLSSRLSR", "SSRSRRSLLSSRSLSLLLLSLLSRLLLRLSLLLLRLRSSLRSSRSSSRLR", "LRSSLLSRLSLLLLRRSSSRLLLLRLLRLSSLLSRLSRLSRSSSLRSLLL", "RSLRLRLLLLLLLLLRSLSSSRSSLSLRLLSRRRLLLSRLLRRSSRLLSS", "LLSLSLLLRLSSLRLLLSSRSLLRLLLLSRSLRLSSRRLRLSLSRLLRRR", "LLLRLSRSRRRSSRLSRLRLSSRLRRLRLLSSSLSLLLLRRSRLSLRRLL", "LLSLSSSLSRSLLLLSSLLLRLSLRLLSSRSSLSSLRSRSLSLSRRLLRR", "LRRLSRLRLRSLLLLLRRLSSLRSLSLLLSRSLLSRSRLLLRLRRLLLSS", "RSRSLSRSSLLLLLLLLRRLLLRRSSSRSLLLRRRSRSSLSRLSLRSRLR", "LRRRRLLRRSLSRLSLSLLSRSLRLLLRRSRLSRSLSSRLSRLLSRSLRL", "RLLLLLRLSLLRLLRLRRLLLLSSLSRRLRLRSLSLSLRRRLLLSSSRSL", "SSRLLLSLLSLLLRLRSRLRSSLLLSLRLLSLLLSLLSRLSRSRSRLLLL", "RLSRLRSSRRSRLLRLLLSSRLLLLRLLRRLLLRLLSLLRRSS" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case31() {
        String[] commands = { "LLLLLLLRRLLRRLLLRLLLLSLRLSLSLLSLLLRLSLLLLLLRLLRSLL", "LLLRRLSLLRSRSLRLLLLLLLLRLRLLLRLLLLLRSLLLSLLLLLLSLL", "SLLLLSLLLLLLLSLLLSLLSLSLLRSLLRLLSRLRSLLLLLRLLLLLLL", "SLLLLLLLRLLSLLLSLLLLRLRSLLLLLLLLSSRLSLLRLLSLLRLLSL", "LLLLLLLSRLLLLRLLLRLRLSLRLLSSLLRLLSLSSSRLLRRLLRLRLL", "LLLLRLRLLLLRLLLLRLSSLRRRLLLLLLLLLLLSLLSLRLRRLLRSLL", "SRLLRLLSLSLLLLLLLSLLLLLSLLLLLLRLLRLRSLLLSLLSLRLLRR", "LLLLLLLRLLLLSLLLLLLSRLLLLLRLRLLLLRSLSSSLLLLLSLLLLS", "SRLLLSRLSLLLLLLLSLLLLRRLSLRLLLLLLLLLLLLRLLLRRLLLLL", "LRLSRRLLLLRRRLSLLLLLRLRLLLLLSLLLSSLLLLLLLLLLRLRRLL", "LLLLSLLLLRLLLLLLRLLLSRLRSLLLLLRSLLLLLRLLSLSLLLSRLL", "LLLLLLLLSLLLLLLLLLRLLLLLLLRLLLLLLSLSLLLLLLLLRSLLLL", "RLSLLSLSLSLLLLLRSSRLSLLLRLSLLLLLRRLLLRLLRLLRLLLLLS", "LSLLRLRLLLSRLLLRLLSSLRLLLLSSSRLLLRLRLLLLSLLLRLLLLL", "RLLLLRLLLLLLLSLLLLLSLRLLLLLSLLRSLSLLLLLLLLLSSLSLLR", "RLLLRRLRSLLLSLSSLLLLLLLLLSLSLRLRLRSLRLLLLLSLLLLLRS", "LLLSLLRLLLLLSLLLLRSLLLSSRLLLRLSLLLLLLSLRLLLSRLRSSS", "SLRLSLLLSLSLLRSLLLLLSLLLLLRLLSLLLRLLLLLLRSLLLLLLRL", "SLLLLLSLLLLSLLLLRLLLLLLLLRRRRSLLLLRLSLRLLLSRLLRLLS", "LLSLRLRLLRLSLLLLLLSLLLLLLLLSLLLLLSLLLRLLRLSLLSRLLL", "LLLLLLLLLSLSLSRLLLLSLSLLLSSLLLLSLLLRSLRLSLRLLLRLLR", "LLSSLRRLSRLLLSSLRSRLSLLLLLLLLLLLRLLLLLLRLLLSLLLLLL", "LLLSRSLLLLLLLLSLSLLSLLRRLSLLLRLLLLLLLLLLSLRRLLLSSL", "LLLLLLLLSLLRLLLSRSLLLLLLSLLLRLLLLLLLLLLRLRLLLSLLLS", "RLLLLLLLSSLLRLLLLSLLLLLLLRLRRRLLLSLSLRRLSRLRLLLLLL", "SLLSLSLLLLLLRLLRRLLLSSRLLRLLRRLRLLRLLLSRLLLRLLSLRL", "LSRRLLLLSSRSLSLLLSLRRLLLLSRLRLLRLLLLRLSLLLSLRLLRLL", "LRLLLSRSLLLRLRLLLLRLLLRLRLLSLLLLSLSLSLRLLSSRSLRRRL", "LLSSLLLSLLRSLLSSLLLLRRSRLLLSLLLLLLLLLSLLLLRLLRLRRL", "LLLLLRSLLSLLLLLLLLLLLLSLRSLLLSLLLLLLRSLLLLLLLRSLRR", "LLRRLLRLLLRLLLLLSLLLRLSLLLLLSLSSRLLLLRRSLLLSLSLLRR", "SLLLLLLLRLLRSLLSLLLLRRLRLLLRLSRSLSLLLLLLSLLLLRLRRL", "LLLRSLLLLLLRLLLSLLRLLSLLLLLLLLRLSSSLLLLLRRLLLLSLRL", "RLRSLLRRLRLSLLLRLLLSLLSLLSSLLLLLLRLLLLLLLLLLLLLLLR", "LRRLLLLLLLLRLLLLLLLLLLLLLLLLLLLLRSSLLLSLLRLLLLLLLL", "SLRLLLLLSLRSLLSLLLRLLLLLLRRLLLSLLLRLRLLLLLLLLLLSLL", "LLLLLLLLLRLLLLSRRLRRLLLSLLSRLLRLLSLLLLSSSLLLRLLRLS", "RSSLRLLLLLSRLLLLLSSLLLLLLRLRLLRLLLLSLLSSRLLLRLLLRL", "LRLLLLLRRSLLLRRSLLLLLLRSRLRSLLLLRRLRLSLLLLRLLLLLSS", "LRLLRLSRLLLRLLLLLLLLLLRLSLLLRRRLLLLLSRRRLLLRLSLSLL", "LRSSLLLLLRLSLLLRLLLLLSLLLLLLRLSLLLLLLRLLLSRLLLSRLL", "RLLLRLLLLRSLLLLSLLLLLLLRLLSRLSSSSSLSLRLLSRLLSLLLLL", "LLLLLLLLLLSLLLSLRSRLLLLLLSLLSLLLLLRRRLLRSLLRLLRLLL", "SLRLLLLLRLLRLSLRLRLLLSRLLLLLLLLLLSLLLLLLLLLLLLSLLL", "LRLRLLLRLRLLLLRLLLSLLLRSRSLLLLSLLSSLLLLLSLLSLRLLSL", "RLLSLLLLLLLRSRLRLLRLLLLLRLSLLLLSSSLSLLSLLLRLRRSRLL", "LLRLL" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case32() {
        String[] commands = { "RRRRRLSRSRRSSSLRSRLSLSSSRSRSSRLSSRSLLRSRLRLLSRSSSL", "SSRRRSRSLSSSRRSLRLRRSRRRSLLLSRLSSRSLSRSSLSSLRLRRRS", "LSLSLRLRSLSLSLSRRSSSLRRRSLSRSRSRRRSRLLSRRSSSLLSRRR", "LRSRLRSLSSRRRSRRRSRRRSRSRLLSRLRSRSSRSSSRRLRRRSRLLR", "RSSLSRRSSLRLSLRRRRLRSRRRLLRLLSRLSSRRRRRRRLSLSSSRSR", "RLRRRSRRLRLSRLRLRLSRLLRSLRRSLSSSRRSLRRSLRLSRRLSLSL", "LLSSRRLLSSSSRSRRRRSSRRSSSLLSSRRLRSLRSRLLSLLSLSLLRR", "SLRLRSSLLSRLLRSSSSLRSLLRSSRSLRRSRRRRSRRRSRSSRRRSLR", "SRLRSRRSSSSLRRSSSRLRRLLLRRLRSSRRRSRRRLSRRLSRLRRSSS", "SRLLSLSRRSSRSSRRLSLSRRLLLRSRLRSSRSSRRRLLLRLRRRRRLS", "LLLRSRSRSSRLSSSLLSLSLLRLRRLSRRLLLSRRSRRSRSLSLSRSSR", "LLSLSSLLRSRRRSRSSSSSLRSRLSSRLRLSRSRSRLLRSRRSRRSSLR", "SSLRRRRLRRSRRSRRRLRSRRRRSRRRRSRLLRLSRRLLRSRRRSRRRS", "RSLSSRRRRSLSSLSRLLRRRRSSRLSRLRRSRSRSLRRRRSLRSSLLRR", "RSRSRRSLLSSRRSSRSSSSRLRRSRRSRLLLLSSSRSRSRLRSRRLSRR", "LSSLSLLSSRRRRRRLRSLLRRRRLSSSSRSSRRLRRLSRRSLRSLLLRS", "SLSRSRLLRSRSLLLLSLLSRRSRRRRLRLRLLLRRLLLSRRRLRRSLRL", "SLRRRLRSSRSRRRRSRRRRSLRSLSSLRRLSSSLRRRSSRSLSSLSRRR", "SRRLRRRSRRLRRSRSRRRSRRLSLRSLRRSSRSSLRSRSLSSLSRSLLS", "RLRRSSRLLSRRLRRRRSSRRLLRLSRLRSLRLLLSRRRLSSSSLSRSRS", "SRRLSLSLLRLSSSLSRRRRRSRRRSRLRSRSSRSRRLSRSRRLSLLRSR", "RSSRLLSSRLRSRRLSRRSRLRRRRSRLSSSRRSRLSSRRLSSLSRRSSS", "SSSLSLRRRRSSRSRRRLSRRSRLLLLLSLSRSRSRRSSRRRRRLRRRRS", "LSLRLSRRSRSRSRSSRRSSLSRLRLRLLSLSRLSLRSRRRLSSLLSSLS", "SLSRSLRRLLRRLLRSLSRRRLRLSRSSRSLRLRSRRLLSSRLLSLSRSR", "RSSSRRRRLLRLRRSRRRRRSRRLRSLRLSLLSRRRLLLRRRRRRSLLLR", "RSLRLLLSLRRSLSRRLRRSRLLLLLSSRRRSRRSLSSRRRSRRSLRLLR", "RSRSLLSLLRRSSRSSSSRLLRLLRLRLRLRLRSRLLRRRSRSLLSLRLS", "LSLSRSSLLRSSRLRRSSSRRSSSLSSSSSLLSRRRRLRRRRSRSRLRLL", "RLSRRSSSRLLSRLSSRSSRSRRSRSRRRSSRSRSRLLRLLSSRLRRSRL", "SRLLRRRSLRSLSRLRLLSSLRSLSRLSSLLSRSLLRRRSLRSRSSRRRL", "LLRSRSSSSSSSLRSRSLRRSLLLRSSLRRRLLSSLRRRSLRSLSRSRRR", "LSSRRRSSSRSRRSRSLLSSLRLSLSLSRLRRRSSRRRRSRSSSRLLSSR", "RSRRRSSRRRLLRSRLLRRRRLRLSRRRSRLLLSRRSSSLLSLSLLRRRR", "SLRRRSRLSSLSRLRLLSLSSRSRRLRSRRLSSRRRLSLRLRSRSRRSSS", "RRSLRLSLLRSRSLRLRRRLRSSRLSLLLSSLLSSSRLSRLLLRRRRRRS", "LRRSSRLRSLSSRRSRRSRRLRSSLRRLRLSRSLLSSSRSSRRLLRRLSR", "RLRRRSRRRSSSSSLSRLLRRSRRLLLRRSRLSLRLSSRRLSRLRRRRSR", "RRLRLSRLLLLRRRRRRLRSSRLLSRSLRLRRSSSSRRLRRLRRSSRRRS", "SSSRSSLLRSLSLLRLLRSSRSSSRLRLRRRRSLRRSLSSLRSSLRSSRR", "LLSSRLSS" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case33() {
        String[] commands = { "RRLLRRRRRLRLLLSRRLRLRRRRLSRLRRSRLSRRRLRLRRRRRLRLLR", "LRRLLRLRSRLLRSRRSLLRSRLRRRLRRSLRRLRLLLRLRRLRRRRSLR", "RRLRLLSLLRSSRLLRRRLLSRLRSLRRSLLSLRSSRLRRRRLRLLSLLR", "RRRRLRLLRLRRLRRSLLLLLSRLSSLRRLLSRRRRLLRRLRSRRRLRRL", "RSSLLLRSRSRRRRRSRLLLLLRLRLRLRRLRLRLLLRRLLSLLLLRRRR", "LRLLRLSSRRRSRSLSLLLRLRRRSRRRSSLRRLRRRSRRRRRLRLRRRS", "RRRRRRRRRRRRLSLRRLLLLLRRRLLSRLRLSLRLLRLLSLLLRLRLRR", "RRRRLRLRRRRLRSRLRRLRLRLRRRLRLRRRLLLLRRLRRLLSRLLLRR", "RRRLLRRRLRRLRRLRLLSLLRLRLRLLRRRLLSRLRRRRRSLRRRSRLR", "LSSLRLRRRRLRRRRLLLLLRRRLRRRLSRSSRRRRRRRRRRRLLLSRRL", "RLRRRLLRRLLRRLRLRRLLLLLRRRRLRSLRSRRLRRRLRSLLRLLLRR", "RRSRRSRLRLSSRSLLRRRRSLRLLSRRLLRRLSRRLRLRSRRRLLRLRL", "RLLRLRRRLLLLRRLLRRRRRRLSLRSLRLSLLLSRRLRLRRSLRLRSRR", "RRRRRRLRRLLRSRLRLLRRRRRRLLLRRLSSRRRRRRRRRLRRRLRRSR", "RLRSRRRLLLRRRLRRRRLRRSRRLRRRLRRLLLRRLRRRLRRLRRRRRL", "RRRRRRRLLLRRLLRLRLLLRRLRLRLRRRRRRLRRLLSRRLRRLRRRLR", "SRLLLRRRRSRRRSRRRSRRSLRRLRRLRLRRLRRRRRLRRRLRLRLSRR", "LRRLSSRRRLRRLLRLLRRRLLRLRLLRLRRRRLLRSSLSRLLLSLRLRL", "RLLRLSLLRRRLLLLRLRRLRRLLSRRRSRRRLLRRRSRRRLRLRRRLRR", "RRLRSRRLSRRLLRRRLRLLRSSRRLRLSSSRRRLLLRRLSLRLRLRLRR", "LRRRLRRRRLRSRSRRLSRLLRLSRLLRSLLLRRLLRSRLRRSRLLRRRL", "SRLRRRSLRRRLRLSLSRRSRLRRRRRLRRLLRRSRRRRRRRRRRRLLRR", "RRRRRSRLLRLRRRSLRRLRRRLRLLRRSRRRRRLLRRLLRLSRRRRLLL", "RRSRRLRRLRLRLRLRRRLRRRLLLRLRSLLLRRRLLLRRLLRRLLLRRR", "LRRRRLRRRLLSLRRLLSLLSRLLRRRLRRRSLRRRLLLLRLLRRRLLLR", "RLRLLRLRLRRSRLRRLRRRRRLRRLLRSRRRRRRRRLRRRRRRRLLLSR", "LLRRRRRRRRRRRRLLRLLLLLRSLLLLRRLSRLRLRLRSLRSLRLRLRR", "RLSLRLRSLRRRRLRRRLLSLRRLLLRLRSLLSRLRRLRRLRRLLLRLLR", "LLLRRLRSRLLRLRRLLRRRRRRLLLLLLRRLLRRLLRRRSRRRLRLRRR", "SLLLRRRRLRLLLRLRLRLSRSLLRSRRSRRRLLLLLRLRRRRRSLLLRR", "RLRRSRLLLRRLRRLRRLLRLRRRLRSRRRLRLRRRLRLRRRLRLLSLRR", "RRLRRSRLLRLLRSRSRLRRLRRRRRLLLRRLRRLSRRLRSLSRRRRLSR", "RLRLLLLSRSRLRLRRRRLLLRLRRLSLRLRRLLLLLLLLRRRRRRRLSR", "RRLRLSLLLRSRRLRLSSRLLRRLRRLSRLRLRSLSLSRRRSRLRLRRRR", "LLLLLRRLRLRRLRSLLRRSRSLRRLRRRRRLRLRRLLRLRRRLLRRLLS", "LLLRRLRLRRRRRRRRRLSRRRRLLLRRRRLLRLRRRRRRRRRLLLLRLS", "RRRLLLLLLLRRRLLRRRRLLRRSRLLSRRRRRLRLRSRRLRRRRLRSLR", "LRLRLRRRRLRRRLRRRLRRRLRLRLLRSRLRLRLLRRRSRSLRRRRLRR", "RRRSRRLRRLRLLLRRSRLLLLLRRSRRLRLRRRRSLRLLRSLLRRRLRR", "LLRLRRLLRLRLRLLRRRLLRLRLRRRLLRSLLLRRLRRRRLRLLRLLLR", "RLRRLRLRRRLSRRRSRLSLRSRRRSRRLRLSRRLRRRRLSRRRRLLSRR", "LLRRRRRSLRRRLLRLRRRLLRLLRSRRRRRSLRLLLLRSRRRLRRLSRR", "LRRLRLRRLRRSSSRRRRRRLSSRRRRRLLSLLRRRRRRSRLRRLRLLRL", "RLRRRRRRRRRSRLLSRRSLLRRRLRRRLRRRRRLRSLRLRRRLLRRRRL", "RRSRLLLRSRRRRRRLRLRRLRLRRRSRRLRLRSLRRLRLRRRRLLLLRR", "RRLRRRLLRRLLLLLLRRLRLLSRR" };
        assertEquals("unbounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case34() {
        String[] commands = { "SLLLRSSSLSSLLSSLSSLSSSSLSLLSLLLLSLRSSSLLSLLSLSLLRL", "LSSSLSLLLLRSLSLLRLRLRSSSSRLRLSSLSLLLLSSSSSLSSSLLLR", "LLSSRLLLSSLSSSLSSRLLRLLLLLLSLLLLLLSRLSLSLSLRLSLRSS", "LSLLLSLLLLLLSRLSLLSSLSSLLSSSSRSSRRLLSRSLSLLSSLLSSS", "RSSLRLLLSLLLSLSLLSSSLLSSLSRLLSSSLSLSSLLSSLLSSRLSLS", "LSSLSLSLLLSLLSSLSLSLRLLLSLSLRSLSLSSSSSLLLLLLLSSSLL", "LLLLLLSSLLSSLSLSSLLLLLLSLLSSSLLSRLSLLSLLSRSRLLSLLS", "LSLSSLLRSSLLSSLSLLLLLLSLSLSSSSLLLSLSSLLRSRLSLLSLSL", "LLSSSLSLSLLSSSLLLLSLLRSSLLLSLLLSSSLRLLLSLSLSLLSLLR", "LLSSLLSSLSLLLSLSSLLLLSLSRSSLLSLLLLLLSLLLSSLLSSLSLL", "LSLSLRSLSLSRSLLLLSLSLSLLLLSSLSSSLSSLLSLRSLLSLLSLLL", "SLLLSSLSSLLSSLLSSLSLLLLLSSLLLSSSSSSRLSLSSSLSLSSLLL", "LLLLSLRLLLSRSLLLSSRRLLLLSLLRLLSRLLSLLRSLLLSSSSLSSL", "SRSLLSLLRSLLSLSSSSLLLSSLRLLSSRLSSSLLSSSSSLLSSLLLRS", "SSSSRSSSSLSLLSSLLSLLSLSLLSSSLSSLLLLSSSSLLSLRLLSLLL", "SRLRRSLLLLLLLLLRSLLSSLSLLLSSSSRSSSSRSSSSSSSSRSSSLR", "LLLSRSLLLSLLLSLRLLLSLRLSLLLSLSSLLSLLLLLLLLSLLSLLLS", "SLSSSLLSLLLSLSLLLLSSSLSSRLLSLLSLLSSSSLRSSLRSSSLRRL", "SLSLSLLSLSLLSLLLLSLSSLSLSSRSSLLLSSSLLLSSSSLSSSSSLL", "LLLSSLLSLSSLLLLRLLLSRSLRRLLSSSLSRLSSLLLLLLSLLLLSSS", "RSLLLSRLLLLLLLRLLLRSLSSLSSLLRSLLRSLLRSSLSLRLSLLLLL", "SSSLLLRLSRRLRLSLSSLLLLLLSLLLLSSSLLRSLRLLSSLLLLLSLL", "LLSSLSSRLSLLSSLLSSSLSLLLSSSLSLLLLLLLRLLSLLSLSLSRLS", "RLSLSRSRLSRSSLSSRSLLLSSLLLLRSSLLSLLLSLLLLLSSSLLLLS", "SSRLSSLSSLSLSSLRSLLRLLSSLSLLLSSRSSSLSLSLSLSSLLLLSL", "RRSSLLSLLLSLLLLSSSSSLLRSLLLSLLLSLRLLLSSRSLSRLLLSRL", "SSSSLSSSLSLLSSSLSSLLSSSSSLLSLRSLLLLSLSSLLRSLSLLSLL", "LLLLSLLSLSSLSSLSLLLRRLSSRLLLLSSLLLLLLSSLLRLLSLSSLL", "LLSLSSLLLLSSSSRSRLSSSLSSLSSSLLLSLLLRLLLSSLSSSLRSLS", "LRSSSSLSSRSLLSSLRSSLSRLSLSLLLLLLSRSLSSSSSLLSLLRRLL", "LSLLRSSSLSLSLLSLLLLSLSLRRRSLRLSLSRLSSLSRLLLSSLSRRL", "RSLLSSRLLSRSSSSSLRLRRSSRLSSSSLSSLLLLSLSLSSLSLLSSSS", "SLSSLLRSRLSSLLSSLLSSLLLSSSRSLLRLSRSLLSSLSSLSLSLLSR", "LLLLLLSLRLLSSSLRSLSLLLLLLSLLSLSRLSSSRSLLSLLLLLLLLS", "SLSLLLLSLSSSSSLSSRSLLLSLLSLSLLLLLSSLSLSLSLLLLLLSSL", "LSLLSSLLSSLLSSLLRRSSLLSRRLRLSSSSSSSLLLLSRLLLLLSLSS", "LSSSLSLLSSLSLSSSLSSSSLLLSLRSLLLLLSLLSLLLLLLLLLSSLL", "LSLLLLLLSLRLLSLLRSSLSRLSSRLRRSSLSLLSLLLLLLLSSLSLSL", "SRLLLLSRRLSLRLLSLSLSLSLLLSLLLLSLSLRRSLLSLLSRSLLSLS", "LLLLSRSLSSLLLLLLLSLLLLSRSLLLRRLSRSLLLRRSLLLSLLLLLL", "SLLLLSLSLSSSLSRSSRSR" };
        assertEquals("unbounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case35() {
        String[] commands = { "SLLRSRSLSLSLSLSRSSLLSSLRSSRSSSLRSRSRLLRLSSSSLLSRSL", "RSRLLSLRSLSRSRRSLSRRSRRLLLSRLRSSSSRLSSLLSLRSRSSSSR", "LRSLRRLLRLRSRLRRLSSRRSRSLRSRSLLRLRSLRLSSLSLRSSRRSR", "RSSRSLSSRSLSSRRRRLLSSLSSLLLSLRSSLRRSRLSSLLRLRRLSLR", "RLLRSRSSRLLLLLLSLSSSSRSSLRSLRSSSSRSSRLRSLSRSSLSSSS", "RRRSSRRRRRLLSRSSRLSSRLSRSRLSSLLSSSRRLSSSRRLRLSLRSS", "LSRSRSSSSSLSSLRRSRSLLRRSSLLLSSSLSSSRSSLLSSSRSSSRLS", "SSRLLSSRSLSRSSRSLSLLSLSSSSSRSRRSRRRRSRSLLSSRLSLLRR", "SSLRRRLLSLRLSRSSRSRLRSSSSRSLSRSRSSLSLSLSLLSSSRLSSS", "RLRSSSRSRSRSRRLSRLSSSSRSLSRLSSRRLRLLSSSRLRSSRRRLSL", "SRLLSSLLSLSLSSRSSRLLSLSRLSRLSSSRSRRSSRSRRRSLRSSRRR", "LSRSSSSSLRRLSSSRSRSLRLSRSLSRSRSSSLRSLRLLLRSRLSSSLS", "SSRLSRLSSSLRRSRSRRRSSRSRRSRSSSSSSSSSRRLRSSSSSSRRLL", "RRRLRLLSLLRRRRLRLLLSSRSLRLRRSSLRSSRLSRLSLRLSSSSSLR", "LSRSLRRSRSSSRSSSLSRSSLSSSSSRSRLSLLSRSSSSRSRSLSSLLR", "SSLSSSSSSSSLLLRLRSSLSSRRRSSRRRRSLRLSLSSRSRSSSRSLRL", "LSSSRRSSRSLSRRSLLSLLRSSRLLSLSLLLLSSRLSRSLRRSSSSLSR", "SRSLSLRSSSLLLSSLLSRRRSSRSLSLSSRLLSRLSRSSLRLSSRSRSS", "SLRLSLSLRSRRSSSLRLSLRSLSRRSLLRRRLRSLLRSRRRSLSSSSSR", "LLSSRRSRSRLRRRSLLSSRRRSSLSSLRSRRSLSRLSRSSRRRSSRLRL", "LSSLLLLRLRSRSLRRLSSLSRRRRRSRLRLLSSRLRRSLLLLLRRLLLR", "LSRSSSSSRLRSSSRRRRLLRRSLRRSLSRRLRRSRRLRRLSSLLSSSSR", "SRRRSSSRSRRRLLSLSSRRLSSSLLRLSLLSLSSSRLRSSRLLLRRLLS", "SLSRLLRSSLLSRRLSLSSLRSLSSSSSLLSSRRSLLSRRRRSRSRLSSS", "RLLRRRSSRRLRRLLLRSRRRSRRSLRLSRSRLSSRLRLSRSRRSLSRRR", "LRSSSSLLRRSRRSSRSLLRLLLSRRRLRRSRSSSRSSSRSSSLSSRRRS", "SLSSLSLRSSSRSSSRRLLRSSRSSRLSRLSLLSRLSSSLSSLSLRSSSS", "SSSRRSRSRLSSLSLSSSSRRRRRRRSLRSRRSLRSRSRLSRSSSLSSRR", "SRSLRSSLSRRSSSRRSRLLRLSLLLLRSSRSSSLLSRRRRSSSSLRRLS", "RRRRSSRSSSSSSSRLSRRSLSLSLSSLRLSSSLLSRSSLRSSSSLSSLR", "SLSSLSSSSRRSRSSRRSSSRRSLSLSRRLRLLLLRRLLSLRRLSRSSLS", "SRSRSRSLSLLLSLSSSLLRRSRSSSLSRLRLRLLRSLRRSSLLRRSSSR", "SSRRLRSSRSSRRRLLSLSSLSSSSSLSRSSSRRLRSRSSSSSLSSRSSS", "LRLSSRRSRLSRSSLLLSSRRSRSRSSRLRLLRSSRRSSSSSLSSLRSRR", "RRLRSLSRSLSSLSSLSRLRSRRRSSSSSSLLSSSSLSRSRRSRRSRLRR", "RRLSRSLSSLRLSRLLRRRRSSSRRRSSSRSSSRSSLSSRLLRLLRSRSS", "LSSSLRRSSRSRSSLLRRRRSRRSRRRSSRRSRSRRRLRLLSLSSRSRLS", "SRSSRSSSRSLLSRSLLRLSSRLSSRLRRSSLLLLRSSSRRSSSLRRLSS", "RRLSSSRLRSSLLLRRLSSSSSSSSRRSLLSSSLSRSLSLRLRRLRRSSS", "SSLLRRLLLLRRRSLSSSSSSSLSSLSSLSSRLRRRRRLSLRRRSLLRSR", "LLRRSSSRLRSSSSRSRLRLLRLSSSSRRSLSRRSLSRSRSLLRSLSSLR", "RRSSLSLRLSSRSSSSSSLRSLRL" };
        assertEquals("unbounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case36() {
        String[] commands = { "LSLRRLRRLRLLRRLRRSLSLRLLSLRSLLSSRLRLLRLRRLLSRLLLRL", "LRSLLLLRLRRLRSRRRLLLSSSSLLLLRRRRSSLRSRLLLLLLLSLLRL", "SLRRSRLLLRSSLSLRSSLRLRRRSLRRSRLRLLLLLSRLRLSRLLSSLL", "LSLRRLSRLSLRRLRLLRLRLRSLLSRLLRSRRSRLRLLRSLSSSLLRSL", "RSLRSSLLRSRLLLSRLSSLRLLRSLLRLLLLRRLSLLRLLRSLSLLLLL", "RLLLRLLSLLLRLSRLLSSLLRSLSLRRRRSLSLLSRRRRLRLSLLRSSR", "LLLRRSSLSRRLLRSRLLRSRSRLRRRSRRRLLRSLLRRSRLSLLSLRSR", "LLLLLSRRSSSLSRSLRLSLRRSSLRRSSLSLLLSLRLRLRRLLSSRSRS", "RLLRRLLRRRLLLRLSLLRSRLSLLLLLLLSSLSLLLLLRLRSSSRRRSR", "SLRLRLSLLRLLRRLLLSSLLLLRRRLLRLLLSLLLSSLRLLRRSRRRLR", "SLSLLRSLLLRSRLRLLLSLSLLSSRRLLLRRRRLRLRLLLRRRRSRRLR", "LRRLSRRRLLSSLLSRRRLRSLRLSSRRRLRSRRSLLSLRSLSRLLRLSR", "SSSRSRLLLLSLRLRLLRLRSRLRRSSLLLSLLLSLSLSRLSLLSRRSRR", "SRRLSLLLRLSRSLLSSLRSSLRRLLRRRLSRRLLRLSRRSSLRLLSLLR", "SRLLLSRLLRSLRSLLLSRRLRSRRRRLLRLSLLRRLLRLRRLLSSLLLR", "RSSLLRSSLRRLRRRSRSRRRRLSLLLLLLRRSRLRSSLSRRRLLSRSLL", "LRSRLLLLRLSSSLLRSSSSLSLSSSLSLLLRLRLLSRRLLLLLSSRLLS", "RSSRLLSRLLRSSSRLRRRRRLSSLLRSSSLLLLRLLRRSSLLLLLRSSS", "RRLLSRLRRLSLLLSRRRSRLLLRLLLSLLSSRRLLRLSSLRRLSRSRRL", "LLSLSSLRLRRLLLRLRLRLSRLLLLSLLRSLSSLRLLLRRRLLRRRLRL", "LSSLLLRRLRLLSLLRSSRSLRRRLRRLRLLRLLRRSLRSRLLSLRLRSR", "LRSRLLRRRSLLRRRRLRSLSLSLRLSRSLLLRLRRSRLLSLLLRRSSRR", "SLSRLSLSLRSLLLLLSLLSLLRLRRLLRRLLSLSRSSSRSLLLSLRSSL", "RSLLLLLLLRLLRSLLLLLRRSRLRSLLLRRLLLRLSRLSRRLSLRLLLS", "LSSLLRSRRLRRRRSLSLLRLSSSLRSRSLLLSLSRSRLLRRLLLSRLLL", "LSRLSLRLLRRSRSLSSRSSLSRRRSRSSLLRLRLLLRLRRRSSSLRRLL", "SLLLLRLLRLRLLSRLSSLRSSSLSSRLRSSLRLLSRRRSLRLLSSLLLS", "LSLRSRLRLRSLRSRSRSLSSLLLLRRRSRRLLLRLLRRRLSSSRLSSLS", "LLLSRSLRLRLSSLRLRSLLLLSSRSLSSSLSSSRLRRRLRLSSLSLSLS", "RLRLLLRRRLRLLSLLLLRSLSLSLLSRRRSRLSLLLLRLLRLSRLLSLS", "LLRSLLRLLLLSLLRRRSLLLLSLSSRSRRRRLRLLRSRLSSRLLRLSLR", "LLSSSSRLRLRLLSLSLLRRLLLRSLRRSRLRLLRRRLRLLSLSSLRLRL", "RSRSSSRSLRLRSSRLSRSLRLRLLLRRLRLRSLLLSRRLLLRRLSLSLS", "RSLSRLRLRLLLRLSLRSRLRLSRSRSRLLLRSLLLSSRRSLRLSRSLRL", "LLLRLRLLRSLRLLLRLRLRLLLRSLLSSLSRRSLSLLSLLSSRLLRRRL", "LLSRLRSLRRRLSRLRLSSRLLRLRRRLLLLLRRLLSSSLRRSLSRLLRL", "SLRLRSSRRRLRSRLRRSRSSRSRLSSLLRSSRRSLRRRLSSSLLSRSLL", "SSSLLLRLRRRSRRSLLRLRSRRLRLLRLLSLLLSLLSLLLLSRLLLLLL", "LSSLSRLSSLLRRRSLRRLLRLLLSLSRLSSRSSSLRLLLLLLSRRSLRL", "LSRLLRRRLRRRLRRSSRLSRRRRLRSSRSRSLSLRRLSSLRRLSRSLLR", "LLLSSSLLLSRLSSSLRLLRSLLLSRLRLSRSRLRLLRRRRLSSLRRLSL" };
        assertEquals("unbounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case37() {
        String[] commands = { "RSLSSSLLLSLSRSRSSRSRRSSSRLLSLSLRLSRSRSLRSLRSLSRLSR", "SSLSLRLSSRLLLRSSRLLSRLRSSSLSLRSSRSRSSRSSRLRRSLRSSL", "LRSSSSRRSSLSSRRLLLSSLLSSRSSSLLLLSSLRSLRLLRRRRSSLRL", "SLLSSSRLSLLSSLSSRRSRSSRRLSLRSSRSSRLSSRLLLLRSSLLLSS", "SLSLLLSLLLSRLRLRLSRLLRSSRLLSRSRSRRLRLLSLSRRRSRLRSL", "LRLLRRLRSRRRSRRSLLSSSSRLSSLRLRSRLSSSLRRRSSSSSRRLLR", "SLRSRSSSRLSRRSRSRRSSSSLRRLRSRSRLRLSLLLSRRLRSLLSSSR", "LSSSSRSSSSSSLLLSSLSRLSRRLSSLSSRLRLSSRLLSSSRSRSRSLL", "LSLSLSLSSLRRLSRRSLSLRLRSRRRSLRSRLSSSSRLSLLLLLSSLSL", "LRSLRSSSLLLSLLRRSLSLSSSSRLLLSSSLSSSSSRSSRSRLSLLLRR", "RSSLRLLLSRSLRSSLLSLSRSLLLSRRSSRSRSSRRSSRSLSLSRRSRS", "SSLRRSRSSLLLLLRSLLSSSLLLSLRRLSLRRLRSSSSLSRSRLRSRSS", "RRRSLRLLLLSSLSLLLRLSRSRLLLRSRLLLSSLRRRLSSSSRSSLLLR", "SSLSSRSSRRRLSLLRRRLSRLSSSSRRRLLRLLLSRLSSSRSRSLRSLR", "LSRSSSRRRLSRSRLLSSSSSLRRSRSSSSSRRLSLSSSRSSLSRLLRSR", "SRLSRSRRSSLSSSLSSSRSLLSSSSRLSLSLRLSLSSRSSRLLRLRLSR", "SRLSSLSRSRSLLRSSSLLRRLRSRRLLRSSLRLSLRLLSLRRSRSSRSL", "LLRLLSLSRSLSSRSSLSSLRSSSSLLLRLLRLSRRSRRSRSSSSLLSRR", "SRSLSSSRLSLRSLRSSSSSLLSLSLSSRLLRLLSRSSRLSSLSSLRLLR", "LRRLRLSLSRRLSRSSRSLRLSSSRSSRLRLSLRRSSSSSSSSSSSLLSR", "SLSRLLRRRLSLSSRSRRSLSLLSRRLRRSSRRSSLLLLSLSLLRLRSRR", "LRRLRRSSSLSSLRSLLLSRSLSSLSRSLSRSLSSRRSRSLSRRLLSLRR", "SSSLSSRRLRLSSRSLLRLLLRRSSSSLSRLRLSSSRRSLSSSLSLSLSL", "LRLSRRSLLLSRSRSRRLSSRSLLLRSRRLLSRSSLLLSLLSRLLLSLRS", "RSSRSLLLLLSLSLSRLRLSSLLSSRSRLRRRRRLSSLSSRLRSLSSLSL", "RLSLLRSSLRSLRSRSSSRRLLLLSSSLLSLRSRRSSRSSLSSLLLSSSL", "RLSSSLRRSSSSRRRSRRSRSSRRSRSSSRLRLRSSLLLRSLLSLRRSRS", "SSLSSSLLLRSSLRSSRSLSLSSSSSSRSLRSLRSSLRRLSRSRRLRSRL", "SSRRLSLLSSRLSSRRSLRLRSLLRSSSSSSRSLLRLSSRSSSSSSLLSL", "SRSLSLSLRSSSLSLSLLSSSSLLLLSLSSLSLRLSLRLLRRSLSRRRLR", "RSRLSSSSSRSRRRSSSLRSLLLSSRRRRLSSLRSRSLSRSLLRSSRLLS", "LLSRLSSLSSLRRSLSSLRSLSSRRRLSSLSRLSRSSSLSLLRRSRLRRS", "SSSSSRLLSRLLSSRLRSSRLRSSRSRLRSSRSSSSSRSSLRRRSSRRLL", "SLRRRLLRLRSRRRSSSLLSRLSSSSLSLRLRRSLLLLLRRRSSLRSLSR", "LLLSRLSSRLSLSRSLRRSSRLSSLSLLSRLLSLRRSRLSRSRSLSSSSS", "SLLLRLSSSSSRLSLRLLSSSRRSSSSLSRSLSRRSRSRSLSRSLSLRRL", "SRSSRSSSRSSLSLLSLLRLRLSSLSLRRSSRSSLRRSRLRLLSRLRRLL", "RLSLRSSRLRSSRSLLRSLSSRSRLRRLSLSSRSSRSSLLLSRRSRRSSR", "SSSLRSLSLSRLLRSLSRRRSSRRSRRLRSSLSLLLSSRSSSSSLSRSLL", "LSRLSSSLLSSLRLLSLLSSSLLSRSSSLRRSLSLLSSSSLLRSSLRRSL", "SSLLRSRRLSLSRLRRLSLRSSSLLSRSSRSRRLSSSSRSSLRSSLRRSS", "SSRLLSLSSSRRRRLSSSLRRSRSSSSSLSSSLLLSLSSSLLRLRRLSSS", "RSLLSSSLSSLRSLLSRSRLSLRSSRSRRRRLRSSLSSSLSSRSSLSSSS", "RRLSSLSSSRRSRLSLLSSRRSSRRSRSRLSSRRLSSRRRSRSRLRSLSS", "SRLLSLRLRSRRLSSSRLLRLSLLSSRSSLSLRSSLLRSLRSLRLRLRLR", "LRRLRSLSSLSLSSSLSLLSSSLLSRLLLRSSSLLSSLRRRLRSSRSSSL", "LRRSLRRLRRSRLRSSSRLRRSSLLRLLSRLLSSSRRRSRSRLSRLLLRS", "RSRSRLSSSSSSSSSRLSLLSLRLLLRLLRRSSSRSSSRRLLSLLSRSSL", "SRRSLLRSLRLLSSSSSLRLLLLSLSSSLLRRLRRRRLRLRSSRRSSLLR", "RRLS" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case38() {
        String[] commands = {};
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case39() {
        String[] commands = {};
        assertEquals("unbounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case40() {
        String[] commands = { "RSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SRRSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSS" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case41() {
        String[] commands = {};
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case42() {
        String[] commands = {};
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case43() {
        String[] commands = {};
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case44() {
        String[] commands = {};
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case45() {
        String[] commands = { "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "LSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case46() {
        String[] commands = {};
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case47() {
        String[] commands = {};
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case48() {
        String[] commands = {};
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case49() {
        String[] commands = {};
        assertEquals("unbounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case50() {
        String[] commands = { "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "LSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSLSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSLSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSL" };
        assertEquals("unbounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case51() {
        String[] commands = {};
        assertEquals("unbounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case52() {
        String[] commands = {};
        assertEquals("unbounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case53() {
        String[] commands = {};
        assertEquals("unbounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case54() {
        String[] commands = {};
        assertEquals("unbounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case55() {
        String[] commands = { "SRSL", "LLSSSSSSL", "SSSSSS", "L" };
        assertEquals("unbounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case56() {
        String[] commands = {};
        assertEquals("unbounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case57() {
        String[] commands = { "SRRSRR" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case58() {
        String[] commands = { "SRRSRRSS" };
        assertEquals("unbounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case59() {
        String[] commands = { "LR" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case60() {
        String[] commands = { "SS", "LLSSS", "RRS" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case61() {
        String[] commands = { "SRSRSRSR", "S" };
        assertEquals("unbounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case62() {
        String[] commands = { "LLRR" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case63() {
        String[] commands = { "SSSS", "R", "SSSS", "R", "SSSS", "R", "SSSS", "R" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case64() {
        String[] commands = { "SL" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case65() {
        String[] commands = { "SLSRSLL" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case66() {
        String[] commands = { "S" };
        assertEquals("unbounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case67() {
        String[] commands = { "L", "R" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case68() {
        String[] commands = { "SR" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case69() {
        String[] commands = { "RL", "RL" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case70() {
        String[] commands = { "SSSLLSS" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case71() {
        String[] commands = { "SRSRSRS" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case72() {
        String[] commands = { "SS" };
        assertEquals("unbounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case73() {
        String[] commands = { "SRSL" };
        assertEquals("unbounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case74() {
        String[] commands = { "SSSS", "L" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case75() {
        String[] commands = { "LLLLLLLLLLLLLL" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case76() {
        String[] commands = { "SLSLSLSL" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case77() {
        String[] commands = { "SRSRSSRSSRSSS" };
        assertEquals("unbounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case78() {
        String[] commands = { "LSLSLSLS" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case79() {
        String[] commands = { "LSR" };
        assertEquals("unbounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case80() {
        String[] commands = { "LLSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case81() {
        String[] commands = {};
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case82() {
        String[] commands = { "SRS" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case83() {
        String[] commands = { "S", "R", "R" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case84() {
        String[] commands = { "SLL" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case85() {
        String[] commands = { "LLLL" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case86() {
        String[] commands = { "RRRR" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case87() {
        String[] commands = { "L", "SSLSSLSSL", "SS" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case88() {
        String[] commands = { "SLSL" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case89() {
        String[] commands = { "SSSS", "R" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case90() {
        String[] commands = { "LLSRR" };
        assertEquals("unbounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case91() {
        String[] commands = { "SLSLSLSLSSS" };
        assertEquals("unbounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case92() {
        String[] commands = { "LRLRLRLRLSSSLRLRLRLRLSSSSLRLRLR", "LLLLLLLSLLLLLSSSSSLLLLRLRL", "SSSSSSSSSSSSSSSS" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case93() {
        String[] commands = { "LSRR" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case94() {
        String[] commands = { "RRRRS" };
        assertEquals("unbounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case95() {
        String[] commands = { "S", "L", "S", "L", "S", "L", "S", "L" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case96() {
        String[] commands = { "SRSLL" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case97() {
        String[] commands = { "SLLSLL" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case98() {
        String[] commands = { "SRSRSRSSR" };
        assertEquals("unbounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case99() {
        String[] commands = { "SLLS" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case100() {
        String[] commands = { "SSSSSLSLSRSLSRSR" };
        assertEquals("unbounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case101() {
        String[] commands = { "LLLLRRRR" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case102() {
        String[] commands = {};
        assertEquals("unbounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case103() {
        String[] commands = { "SSSSSSS" };
        assertEquals("unbounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case104() {
        String[] commands = { "SSSSS", "SSSS" };
        assertEquals("unbounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case105() {
        String[] commands = {};
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case106() {
        String[] commands = { "RSRSRSRS" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case107() {
        String[] commands = {};
        assertEquals("unbounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case108() {
        String[] commands = { "SRR" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case109() {
        String[] commands = { "SRSRSRSSR", "SRSRSRSSR" };
        assertEquals("unbounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case110() {
        String[] commands = { "SLLSSSS" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case111() {
        String[] commands = { "LS" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case112() {
        String[] commands = { "SSSSR" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case113() {
        String[] commands = { "RLRL" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case114() {
        String[] commands = { "SSSSRSSSSRSSSSRSSSSRSSSSSS" };
        assertEquals("unbounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case115() {
        String[] commands = { "SRSR" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case116() {
        String[] commands = { "SLSLLL" };
        assertEquals("unbounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case117() {
        String[] commands = { "SRSRSRSRS" };
        assertEquals("unbounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case118() {
        String[] commands = { "SRRSLLSRSLS" };
        assertEquals("unbounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case119() {
        String[] commands = { "SSSSSSR" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case120() {
        String[] commands = { "LLSLL" };
        assertEquals("unbounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case121() {
        String[] commands = { "SSRRSSRR" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case122() {
        String[] commands = { "SRLRR" };
        assertEquals("bounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case123() {
        String[] commands = { "SSSRRSSRRSSS" };
        assertEquals("unbounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case124() {
        String[] commands = {};
        assertEquals("unbounded", sequenceofcommands.whatHappens(commands));
    }

    @Test
    public void case125() {
        String[] commands = { "SSRSSRSSRSSSSR" };
        assertEquals("unbounded", sequenceofcommands.whatHappens(commands));
    }

}
