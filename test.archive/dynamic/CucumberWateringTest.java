package topc.test.dynamic;

import junit.framework.*;
import org.junit.Test;
import static org.junit.Assert.*;
import topc.dynamic.*;

public class CucumberWateringTest {
    CucumberWatering cucumberwatering = new CucumberWatering();

    @Test
    public void case1() {
        int[] x = { 563581185, -912574337, 985630444, 944054128, 944618546, 87797719, -589263075, -486770822, 140860384, 992497371, 601121303, 198517030, -873735957, 473167534, -423088531, 735430961, -333194220, -323972182, -132629221, 344971795, -919730741, -656891687, 66834114, -94484082, 255270988, -135329180, -49604093, 374045844, -154912016, -359106606, -716933750, -484513488, 77795978, 947136787, -526862721, 950949696, -430224443, 959507535, 430758812, -808685434, -445457558, -664262316, 919297508, 754682875, -312857865, 536933516, 597134796, 126412801, -174155788, 794009029 };
        int K = 1;
        assertEquals(33502319560L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case2() {
        int[] x = { -485419501, 869992369, -237766831, -536692389, 587917460, -724559331, 165037606, -237315266, 379784329, -762332332, 36584326, -348342877, -324203280, 121982811, 745436682, -408401971, -770873170, -623866964, -743993184, 447999658, 655140981, 832021770, -899092739, 940920896, 519872561, -235259365, 987281, -576059810, -912995787, 684161129, 357569150, -212923458, 340007420, -392843948, -333464533, -185197708, -438253069, -512405373, 474896293, -114986051, 207049741, 781811135, -528800398, 883537430, 459635399, -836994604, 963298347, -113930922, -153493438, -484278794 };
        int K = 2;
        assertEquals(18116173390L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case3() {
        int[] x = { 561206548, 7234155, -716513749, -333174897, 936823177, 853209019, -771070991, 918561948, -69468298, -235399873, -177674218, -119773414, 676882087, -338249127, -552577592, 543310195, 620606368, -322500206, 901730462, -934940898, 428597285, 818695150, 199916880, -799521660, 862567427, -35884847, 532644666, -924710864, 760335143, -52305265, 320091929, -927662424, -409342256, 972231172, -916503632, 148520444, 595036221, 682081139, -385861529, 998698964, 597928293, 949669675, 785801284, -954494860, -442980922, -621916170, -466617114, -904964116, -27809773, -939591003 };
        int K = 3;
        assertEquals(12831249911L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case4() {
        int[] x = { -609385316, -1870473, 559280880, 131525681, -121229139, 756120592, -648521431, -855057072, 973522069, 504589280, 505566759, 519311896, -341358410, 433880722, 205828120, -796094274, -428516896, 690450926, -879810652, 82569966, -991461513, 366138641, -432710882, -659661914, 93193004, 409033113, -975132050, -921445483, 49240909, -595131270, -934871111, -636849785, 318770994, -83619307, 332611547, -185864444, 558611427, 969664446, 683970543, 235399434, -690175503, -602516804, 474971038, 454766805, -472347700, 859043508, 722788359, -539320419, -798266908, -848767984 };
        int K = 4;
        assertEquals(10104433375L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case5() {
        int[] x = { -224794679, 207331537, -486984974, -867766451, -882561446, 544615266, 765128446, 103210114, -316161461, 985446114, 697071248, 630346789, -523064221, 686706528, 225923275, -499427497, -743448856, -893806140, -652858649, -350081005, 709424641, 824679571, -473862941, 65270950, -29195605, -624717449, -66823475, -109976769, -911858230, 64998726, 125862564, -338038167, 863533900, 686767398, -467448607, -173839645, 559913685, -576822558, -929153824, -2611428, 802139908, 464062258, -912963099, -280389183, 516634158, -934928114, -290023958, 229291848, 861098721, -138241926 };
        int K = 5;
        assertEquals(7241232579L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case6() {
        int[] x = { -215388243, -416148496, 897618979, 492972999, 561753641, -885263338, 219078517, -442318083, -109302916, -882114171, 918024934, -52375321, -528373450, 868614590, -205800059, 932911776, -149909799, 537073735, -233127365, 437608484, 318167318, -103150252, 145849880, 311073170, -950954692, 925094238, 365927756, -984815738, 278391572, 379349622, 458638071, -117229418, 516561148, -383927095, 586644913, 320484591, -875205285, -871857735, 938985097, -503047617, -939744911, 600539381, 758138983, 741810204, -331423666, 435730908, 46936997, 167261924, 855305284, 304996796 };
        int K = 6;
        assertEquals(4688948261L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case7() {
        int[] x = { 440415031, -921090237, -648111563, 778898998, -294406214, 496328135, 450209603, -368066878, -559982917, -328082622, 228593602, -927358521, 170355550, 962322111, 293148727, -766200355, -217051363, -84749595, -773941355, 195367677, -31008970, -652261773, -23197769, 586872583, 228758317, -268943406, -218858843, -332634889, 169999566, -589871667, -586597452, 630563848, -536647835, 612508195, -133163189, 224054268, -261528400, 319300693, -218645897, 333789914, 945162249, -863693152, 446040141, -22666414, -24165139, -963549290, 810489391, -882609561, -679193744, -972529094 };
        int K = 7;
        assertEquals(4886208647L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case8() {
        int[] x = { 497722662, 987626414, 666066162, -897421138, -402289338, -993603014, -299965662, 638799922, -574501778, 703767036, -895113932, -210260048, -928575702, 72542766, -103702443, -885723377, -666321644, -803498199, -587633872, 497030024, 355689783, 250201140, -874782196, 133477197, 604098267, 628731439, 813818814, 819536764, 313710316, -864227619, -85258044, 48765281, 238820928, 140717706, 819570605, -799447437, -518651742, -863762423, 965091705, -888094844, -858735681, -887110171, 515829819, -707003735, 241095532, 53939228, -928278645, 2382438, -189095387, -522089316 };
        int K = 8;
        assertEquals(4252006533L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case9() {
        int[] x = { -313670974, -313137289, 5801166, 229495412, 602847910, -847858010, -267017392, -955784878, 762219718, -722617004, -923756416, -122042087, 795343809, 877842382, -904814940, -606025512, -201196742, 756764462, 142102113, 718899681, -746341905, -452153321, -728649724, 372074520, -484370028, -545972520, -882077109, 482947181, 23467384, -346200261, -515794409, -608778584, 197787416, 609123595, 293550977, -28807989, 550912379, 401901858, 826636858, -754914976, -17005958, -53519282, -224069419, -944206949, -613510624, -716197857, -192423853, 248765692, 687248806, 300444870 };
        int K = 9;
        assertEquals(3589692022L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case10() {
        int[] x = { -322148678, -183956207, 364497669, -999789276, -131112856, -927538772, -366736036, -635550289, 129504248, -946987759, 647556985, -854152445, 636422074, -375643864, -997674510, 782772228, 709560732, -894008472, -665973830, -811189066, 26217150, -868743805, -186349465, -231390035, -288244108, -974595143, 155130918, 137173316, 335811894, 446599182, 963136664, -865348840, -583598571, -284018232, 154623296, -98063691, -216137401, 576161750, -12970183, -803048399, -16866483, 677864211, 851700954, -476278734, -247468481, 240521366, -924900361, 982406146, 163452293, -555512843 };
        int K = 10;
        assertEquals(3329731526L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case11() {
        int[] x = { 793361103, -322681283, 708639623, -538090683, -61432363, -802186359, 720060508, -957176103, -343583453, 210129570, 446347219, -991360400, 882983344, -75390329, 426589333, -881715961, 621814120, -301476723, -936133482, 544194856, -895748998, 247832638, 896342303, 79315262, 804328143, 962704359, 957399403, 978652194, 682026133, -323161976, -513269054, 564191498, -458235349, 85597659, -409751881, 763969887, 555446111, -698629734, 88518857, 675457696, -146785555, -112687302, 111491829, -991484060, -704303645, -154787465, -420881238, -74888805, 548222405, 349704205 };
        int K = 15;
        assertEquals(1577487704L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case12() {
        int[] x = { 35979614, 562484727, -914603725, 25866454, 768516744, 948369887, 937154417, 872734351, -710773570, 182913736, -36917022, 878520321, -528697328, 848389281, -267640836, 439409255, 63843535, 309925267, -429850727, 410671353, 852094729, 35030062, -522550173, -991393840, -193253281, -561549403, 465486811, 531263709, 817313951, -429378551, 237924954, 545023258, 589497880, 624735146, -915532708, 489679198, 685856313, 145940345, -177947712, 937301902, -171685466, 463442785, -919691918, -941301302, -31722391, -862367346, -425362194, 424888267, 810266273, 100202884 };
        int K = 20;
        assertEquals(925273928L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case13() {
        int[] x = { 383911590, 750810602, -710847422, 100517459, -669303066, 322035729, -955504011, 259242741, -726029996, 281354175, -688273630, -424738415, -151798742, -9231872, -791463384, 736353042, -84709650, 1785833, 367794371, -901792650, -962381663, 241456098, -17441620, 614719426, -750776511, -614297801, -995885291, -892418057, 401642214, -244516749, -272218560, -720633209, -36206372, 436042400, -735277243, 26705604, -866774308, -909769035, -360375053, 105133242, -691501191, -359841347, 858162907, -183228900, 438689647, 759036509, 217049672, 411692481, -501360129, -981824900 };
        int K = 25;
        assertEquals(673011395L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case14() {
        int[] x = { -193900565, 974064097, 911510234, -126009398, 1372578, -632778038, 315481987, 123650965, -380789057, 147550406, -401278269, -175779417, 806299367, 365557885, 736371806, -982573566, 266211166, 586138192, -805130456, 612855981, 772771980, -329316459, 932622917, 160595094, 361814260, -308556495, 852914396, -674209531, 442153973, -224268710, 481679336, -255324331, -560339724, -415495907, 927578638, -259480723, -789938479, 456032636, -910858611, 507320116, 557470580, 263713823, 620593436, -178547970, -577434642, -745177178, -51866179, -19063434, 59276826, -932100071 };
        int K = 30;
        assertEquals(543110039L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case15() {
        int[] x = { -526197842, 728344382, 691103143, -411610128, -322640162, 582033582, 549145256, 678345202, -787597864, -911275803, -921182246, 235779057, -397179814, -599272402, -877390354, -945667943, -960888132, 448324223, -861243611, -221507821, -394612305, -725232275, -929910849, -310147365, 673882619, 140171450, -961003851, -816302726, 91288468, 139860384, 408274974, -980015160, -442584369, -971330254, -865244668, -696130147, 558932213, 558615698, -426324528, 229353996, -689859646, 81336561, -759030968, 553914456, -132411520, 394946696, -773745149, 451271556, 958722887, -975928604 };
        int K = 35;
        assertEquals(128415476L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case16() {
        int[] x = { -918957217, -820995046, 925009938, 692188583, -949144402, 204616442, 222219165, -101115597, 279952273, -543014787, -534109914, 363273772, 677590256, -888325437, 645824995, -874252551, -197302930, 274906215, -668629216, -632022141, 194764919, -384255058, 274892326, 326594302, -877263721, 806431099, 607034397, -652513554, -976192313, 756247687, -586433568, -756464031, 13523519, 9406594, -241651051, -615325862, 61756646, 437276441, 452716593, 422649146, -880609859, 223007511, 93255677, -953040748, 767430084, -963376031, -961949507, 476711371, -815656601, -601823320 };
        int K = 40;
        assertEquals(67470224L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case17() {
        int[] x = { 494431808, -965326091, -211213473, 928667264, 587701250, 700886450, -55890277, -114391632, -519039829, -386234054, 253396101, -693333125, -429563497, -346213583, 389785524, 895502518, -648570196, 225409307, -722070865, -234473239, 841592469, -542936190, -564413884, -101768859, -373512056, -990130714, 71062350, -986585815, 43192358, 727216600, 116527063, 590230752, 306934742, 640181022, 441638805, -82503781, 920615940, -20293272, -74741996, 665864980, -137103499, -295625762, -542763124, -994638311, -730354609, -79542342, 939586315, 396430768, -916771776, -810548577 };
        int K = 45;
        assertEquals(27433006L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case18() {
        int[] x = { 958156030, 13750949, 731658769, -140747001, 288600564, -294827497, 236835256, 224653195, -328400242, 895765753, -134779045, 885909347, -484745031, 118501710, 121286504, -938759566, -942053634, -585088903, -898442303, 399484946, -372143079, 461713883, -643622470, 868482087, 874818688, 539196344, 503411647, 669719851, -34925542, 290029590, -321550709, -632145474, 4668298, 145441672, 72509725, 453034092, -459210170, 540586557, 106680224, 864214789, 630941853, 927318090, 815421579, -140556560, -884287796, 209190527, 628161241, 775171122, -546776091, -273798925 };
        int K = 50;
        assertEquals(0L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case19() {
        int[] x = { 0, 6, 8, 2 };
        int K = 2;
        assertEquals(6L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case20() {
        int[] x = { -1000000000, 1000000000, 0 };
        int K = 1;
        assertEquals(3000000000L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case21() {
        int[] x = { 58, 2012 };
        int K = 50;
        assertEquals(0L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case22() {
        int[] x = { 9, -3, 14, 6, 5, -9, 32, 7, -5, 26, 2, 11 };
        int K = 3;
        assertEquals(58L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case23() {
        int[] x = { 563581185, -912574337 };
        int K = 50;
        assertEquals(0L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case24() {
        int[] x = { 944618546, 87797719, -589263075, -486770822 };
        int K = 45;
        assertEquals(0L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case25() {
        int[] x = { 601121303, 198517030, -873735957, 473167534, -423088531, 735430961, -333194220, -323972182, -132629221, 344971795, -919730741, -656891687, 66834114, -94484082, 255270988, -135329180, -49604093, 374045844, -154912016, -359106606, -716933750, -484513488, 77795978, 947136787, -526862721, 950949696, -430224443, 959507535, 430758812, -808685434, -445457558, -664262316, 919297508, 754682875 };
        int K = 35;
        assertEquals(0L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case26() {
        int[] x = { 597134796, 126412801, -174155788, 794009029, -485419501, 869992369, -237766831, -536692389 };
        int K = 36;
        assertEquals(0L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case27() {
        int[] x = { 165037606, -237315266, 379784329, -762332332, 36584326, -348342877, -324203280, 121982811, 745436682 };
        int K = 11;
        assertEquals(0L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case28() {
        int[] x = { -623866964, -743993184, 447999658, 655140981, 832021770, -899092739, 940920896, 519872561, -235259365, 987281, -576059810, -912995787, 684161129, 357569150, -212923458, 340007420, -392843948, -333464533, -185197708, -438253069, -512405373, 474896293, -114986051, 207049741, 781811135, -528800398, 883537430, 459635399, -836994604, 963298347, -113930922, -153493438, -484278794, 561206548, 7234155, -716513749, -333174897, 936823177, 853209019 };
        int K = 30;
        assertEquals(158955381L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case29() {
        int[] x = { -69468298, -235399873, -177674218, -119773414, 676882087, -338249127, -552577592, 543310195, 620606368, -322500206, 901730462, -934940898, 428597285, 818695150, 199916880, -799521660, 862567427, -35884847, 532644666, -924710864, 760335143, -52305265, 320091929, -927662424, -409342256 };
        int K = 10;
        assertEquals(1133952764L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case30() {
        int[] x = { 148520444, 595036221, 682081139, -385861529, 998698964 };
        int K = 23;
        assertEquals(0L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case31() {
        int[] x = { 785801284, -954494860, -442980922, -621916170 };
        int K = 44;
        assertEquals(0L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case32() {
        int[] x = { -27809773, -939591003, -609385316, -1870473, 559280880, 131525681, -121229139, 756120592, -648521431, -855057072, 973522069, 504589280, 505566759, 519311896, -341358410, 433880722, 205828120, -796094274, -428516896, 690450926, -879810652 };
        int K = 37;
        assertEquals(0L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case33() {
        int[] x = { 366138641, -432710882, -659661914, 93193004, 409033113, -975132050, -921445483, 49240909, -595131270, -934871111, -636849785, 318770994, -83619307, 332611547, -185864444, 558611427, 969664446, 683970543, 235399434, -690175503, -602516804 };
        int K = 17;
        assertEquals(95444990L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case34() {
        int[] x = { -472347700, 859043508, 722788359, -539320419, -798266908, -848767984, -224794679, 207331537, -486984974, -867766451, -882561446, 544615266, 765128446, 103210114, -316161461, 985446114, 697071248, 630346789, -523064221, 686706528, 225923275, -499427497, -743448856, -893806140, -652858649, -350081005, 709424641, 824679571, -473862941, 65270950, -29195605, -624717449, -66823475, -109976769, -911858230, 64998726, 125862564, -338038167, 863533900 };
        int K = 38;
        assertEquals(544448L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case35() {
        int[] x = { -173839645, 559913685, -576822558, -929153824, -2611428, 802139908, 464062258, -912963099, -280389183, 516634158, -934928114, -290023958, 229291848, 861098721, -138241926, -215388243, -416148496, 897618979, 492972999, 561753641, -885263338, 219078517, -442318083, -109302916 };
        int K = 10;
        assertEquals(718066851L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case36() {
        int[] x = { -52375321, -528373450, 868614590, -205800059, 932911776, -149909799, 537073735, -233127365, 437608484, 318167318, -103150252, 145849880, 311073170, -950954692, 925094238, 365927756, -984815738, 278391572, 379349622, 458638071, -117229418, 516561148, -383927095, 586644913, 320484591, -875205285, -871857735, 938985097, -503047617, -939744911, 600539381, 758138983, 741810204, -331423666, 435730908, 46936997, 167261924, 855305284, 304996796, 440415031, -921090237 };
        int K = 40;
        assertEquals(3755152L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case37() {
        int[] x = { -294406214, 496328135, 450209603, -368066878, -559982917, -328082622, 228593602, -927358521, 170355550, 962322111, 293148727, -766200355, -217051363, -84749595, -773941355, 195367677, -31008970, -652261773, -23197769, 586872583, 228758317, -268943406, -218858843, -332634889, 169999566, -589871667, -586597452, 630563848, -536647835, 612508195, -133163189, 224054268, -261528400, 319300693, -218645897 };
        int K = 24;
        assertEquals(100785212L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case38() {
        int[] x = { -863693152, 446040141, -22666414, -24165139, -963549290, 810489391, -882609561, -679193744, -972529094, 497722662, 987626414, 666066162, -897421138, -402289338, -993603014, -299965662, 638799922, -574501778 };
        int K = 8;
        assertEquals(867727759L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case39() {
        int[] x = { -210260048, -928575702, 72542766, -103702443, -885723377, -666321644, -803498199, -587633872, 497030024, 355689783, 250201140, -874782196, 133477197, 604098267, 628731439, 813818814, 819536764, 313710316, -864227619, -85258044, 48765281, 238820928, 140717706, 819570605, -799447437, -518651742, -863762423, 965091705, -888094844, -858735681, -887110171, 515829819, -707003735, 241095532, 53939228, -928278645, 2382438, -189095387, -522089316, -313670974, -313137289, 5801166, 229495412 };
        int K = 39;
        assertEquals(2659558L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case40() {
        int[] x = { -267017392, -955784878, 762219718, -722617004, -923756416, -122042087, 795343809, 877842382, -904814940, -606025512, -201196742, 756764462, 142102113, 718899681, -746341905, -452153321, -728649724, 372074520, -484370028, -545972520, -882077109, 482947181, 23467384, -346200261, -515794409, -608778584, 197787416, 609123595, 293550977, -28807989, 550912379, 401901858, 826636858, -754914976, -17005958, -53519282, -224069419, -944206949, -613510624, -716197857, -192423853, 248765692, 687248806 };
        int K = 36;
        assertEquals(85476390L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case41() {
        int[] x = { -183956207, 364497669, -999789276, -131112856, -927538772, -366736036, -635550289, 129504248, -946987759, 647556985, -854152445, 636422074, -375643864 };
        int K = 6;
        assertEquals(884179479L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case42() {
        int[] x = { 709560732, -894008472, -665973830, -811189066, 26217150, -868743805, -186349465, -231390035, -288244108, -974595143, 155130918, 137173316, 335811894, 446599182, 963136664, -865348840, -583598571, -284018232, 154623296, -98063691, -216137401, 576161750, -12970183, -803048399, -16866483, 677864211, 851700954, -476278734, -247468481, 240521366, -924900361, 982406146, 163452293, -555512843, 793361103, -322681283, 708639623, -538090683, -61432363, -802186359, 720060508, -957176103, -343583453, 210129570, 446347219, -991360400, 882983344, -75390329, 426589333, -881715961 };
        int K = 29;
        assertEquals(443901183L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case43() {
        int[] x = { -936133482, 544194856, -895748998, 247832638, 896342303, 79315262, 804328143, 962704359, 957399403, 978652194, 682026133, -323161976, -513269054, 564191498, -458235349, 85597659, -409751881, 763969887, 555446111 };
        int K = 1;
        assertEquals(12452574117L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case44() {
        int[] x = { 88518857, 675457696, -146785555, -112687302, 111491829, -991484060, -704303645, -154787465, -420881238, -74888805, 548222405, 349704205, 35979614, 562484727, -914603725, 25866454, 768516744, 948369887, 937154417, 872734351, -710773570, 182913736, -36917022, 878520321, -528697328, 848389281, -267640836, 439409255, 63843535, 309925267, -429850727, 410671353, 852094729, 35030062, -522550173, -991393840, -193253281, -561549403, 465486811, 531263709, 817313951, -429378551, 237924954, 545023258, 589497880, 624735146, -915532708, 489679198, 685856313, 145940345 };
        int K = 17;
        assertEquals(1417962227L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case45() {
        int[] x = { 937301902, -171685466, 463442785, -919691918, -941301302, -31722391, -862367346, -425362194, 424888267, 810266273, 100202884, 383911590, 750810602, -710847422, 100517459, -669303066, 322035729, -955504011, 259242741, -726029996, 281354175, -688273630, -424738415, -151798742, -9231872, -791463384, 736353042, -84709650, 1785833, 367794371, -901792650, -962381663, 241456098, -17441620, 614719426, -750776511, -614297801, -995885291, -892418057, 401642214, -244516749, -272218560, -720633209, -36206372, 436042400, -735277243, 26705604, -866774308, -909769035, -360375053 };
        int K = 39;
        assertEquals(135858828L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case46() {
        int[] x = { -691501191, -359841347, 858162907, -183228900, 438689647, 759036509, 217049672, 411692481, -501360129, -981824900, -193900565, 974064097, 911510234, -126009398, 1372578, -632778038, 315481987, 123650965, -380789057, 147550406, -401278269, -175779417, 806299367, 365557885, 736371806, -982573566, 266211166, 586138192, -805130456, 612855981, 772771980, -329316459, 932622917, 160595094, 361814260, -308556495, 852914396, -674209531, 442153973, -224268710, 481679336, -255324331, -560339724, -415495907, 927578638, -259480723, -789938479, 456032636, -910858611, 507320116 };
        int K = 43;
        assertEquals(59710564L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case47() {
        int[] x = { 263713823, 620593436, -178547970, -577434642, -745177178, -51866179, -19063434, 59276826, -932100071, -526197842, 728344382, 691103143, -411610128, -322640162, 582033582, 549145256, 678345202, -787597864, -911275803, -921182246, 235779057, -397179814, -599272402, -877390354, -945667943, -960888132, 448324223, -861243611, -221507821, -394612305, -725232275, -929910849, -310147365, 673882619, 140171450, -961003851, -816302726, 91288468, 139860384, 408274974, -980015160, -442584369, -971330254, -865244668, -696130147, 558932213, 558615698, -426324528, 229353996, -689859646 };
        int K = 31;
        assertEquals(282657373L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case48() {
        int[] x = { -759030968, 553914456, -132411520, 394946696, -773745149, 451271556, 958722887, -975928604, -918957217, -820995046, 925009938, 692188583, -949144402, 204616442, 222219165, -101115597, 279952273, -543014787, -534109914, 363273772, 677590256, -888325437, 645824995, -874252551, -197302930, 274906215, -668629216, -632022141, 194764919, -384255058, 274892326, 326594302, -877263721, 806431099, 607034397, -652513554, -976192313, 756247687, -586433568, -756464031, 13523519, 9406594, -241651051, -615325862, 61756646, 437276441, 452716593, 422649146, -880609859, 223007511 };
        int K = 12;
        assertEquals(2569388282L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case49() {
        int[] x = { -953040748, 767430084, -963376031, -961949507, 476711371, -815656601, -601823320, 494431808, -965326091, -211213473, 928667264, 587701250, 700886450, -55890277, -114391632, -519039829, -386234054, 253396101, -693333125, -429563497, -346213583, 389785524, 895502518, -648570196, 225409307, -722070865, -234473239, 841592469, -542936190, -564413884, -101768859, -373512056, -990130714, 71062350, -986585815, 43192358, 727216600, 116527063, 590230752, 306934742, 640181022, 441638805, -82503781, 920615940, -20293272, -74741996, 665864980, -137103499, -295625762, -542763124 };
        int K = 28;
        assertEquals(687954279L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case50() {
        int[] x = { -730354609, -79542342, 939586315, 396430768, -916771776, -810548577, 958156030, 13750949, 731658769, -140747001, 288600564, -294827497, 236835256, 224653195, -328400242, 895765753, -134779045, 885909347, -484745031, 118501710, 121286504, -938759566, -942053634, -585088903, -898442303, 399484946, -372143079, 461713883, -643622470, 868482087, 874818688, 539196344, 503411647, 669719851, -34925542, 290029590, -321550709, -632145474, 4668298, 145441672, 72509725, 453034092, -459210170, 540586557, 106680224, 864214789, 630941853, 927318090, 815421579, -140556560 };
        int K = 40;
        assertEquals(70747334L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case51() {
        int[] x = { 209190527, 628161241, 775171122, -546776091, -273798925, -898768386, -609585116, 278514819, -284776020, 719675846, -880113273, 462025123, 413268991, -867095700, -919134938, -388085903, -272953786, -385886221, 622807679, -144205355, -375751869, 207848212, 400783980, 876973394, -853191643, 566608143, -874703678, -56556163, 751885406, -190573482, 862703718, 70060860, -157910550, -832286259, -873341463, -894911609, -519031760, -71672861, -16547211, 134268769, 659993072, -856955883, 783593941, 991381289, 599330968, -553923150, -51331487, 437989766, 977030515, -136699666 };
        int K = 5;
        assertEquals(7311041875L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case52() {
        int[] x = { -945422021, 964884593, 53716220, -96153288, -870035272, -959320788, -65223628, -645437990, 352419300, -858085767, 394990666, 753516857, -239316907, 909784965, -457619452, -309047297, 739895203, -934923107, -162505409, -963033302, -994371998, 470345005, -396267665, -43425640, -598275966, -306882067, -292126286, 537189458, -485318427, 122482107, -758767139, -189530884, -787680766, -72658414, 556168511, -314751776, 618685331, 289773208, 712305206, -861862700, -108258289, -834510315, 3105889, 777832840, -414244052, -117125288, 443356853, 100859180, -270830840, 603310824 };
        int K = 4;
        assertEquals(10040192542L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case53() {
        int[] x = { -552258150, 474115911, 596916059, -760486910, -131671731, 170075304, 113706714, 374192221, -588994095, -426012837, -176176840, 962729960, 187934678, 914033509, 742786042, 80191081, -661297478, -425127070, -549903002, 177889748, 89008496, 696147851, 927074843, 445629313, 82304077, 861576275, -305857001, 707117299, 903982354, -860798688, 793385965, -168870581, 752258864, 567662666, -221583560, -35581560, 386825385, -644709010, -869459105, -246545301, 958643904, 538894886, 625497627, 283884769, -614552680, 547943076, 423689806, -819949337, 311175621, 508993529 };
        int K = 26;
        assertEquals(653221315L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case54() {
        int[] x = { -919730741, -912574337, -873735957, -808685434, -716933750, -664262316, -656891687, -589263075, -526862721, -486770822, -484513488, -445457558, -430224443, -423088531, -359106606, -333194220, -323972182, -312857865, -174155788, -154912016, -135329180, -132629221, -94484082, -49604093, 66834114, 77795978, 87797719, 126412801, 140860384, 198517030, 255270988, 344971795, 374045844, 430758812, 473167534, 536933516, 563581185, 597134796, 601121303, 735430961, 754682875, 794009029, 919297508, 944054128, 944618546, 947136787, 950949696, 959507535, 985630444, 992497371 };
        int K = 50;
        assertEquals(0L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case55() {
        int[] x = { -912995787, -899092739, -836994604, -770873170, -762332332, -743993184, -724559331, -623866964, -576059810, -536692389, -528800398, -512405373, -484278794, -438253069, -408401971, -392843948, -348342877, -333464533, -324203280, -237766831, -237315266, -235259365, -212923458, -185197708, -153493438, -114986051, -113930922, 987281, 36584326, 121982811, 165037606, 207049741, 340007420, 357569150, 379784329, 447999658, 459635399, 474896293, 519872561, 561206548, 587917460, 655140981, 684161129, 745436682, 781811135, 832021770, 869992369, 883537430, 940920896, 963298347 };
        int K = 6;
        assertEquals(1493549882L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case56() {
        int[] x = { -954494860, -939591003, -934940898, -927662424, -924710864, -916503632, -904964116, -799521660, -771070991, -716513749, -621916170, -609385316, -552577592, -466617114, -442980922, -409342256, -385861529, -338249127, -333174897, -322500206, -235399873, -177674218, -119773414, -69468298, -52305265, -35884847, -27809773, -1870473, 148520444, 199916880, 320091929, 428597285, 532644666, 543310195, 595036221, 597928293, 620606368, 676882087, 682081139, 760335143, 785801284, 818695150, 853209019, 862567427, 901730462, 918561948, 936823177, 949669675, 972231172, 998698964 };
        int K = 31;
        assertEquals(275439066L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case57() {
        int[] x = { -991461513, -975132050, -934871111, -921445483, -879810652, -855057072, -848767984, -798266908, -796094274, -690175503, -659661914, -648521431, -636849785, -602516804, -595131270, -539320419, -486984974, -472347700, -432710882, -428516896, -341358410, -224794679, -185864444, -121229139, -83619307, 49240909, 82569966, 93193004, 131525681, 205828120, 207331537, 235399434, 318770994, 332611547, 366138641, 409033113, 433880722, 454766805, 474971038, 504589280, 505566759, 519311896, 558611427, 683970543, 690450926, 722788359, 756120592, 859043508, 969664446, 973522069 };
        int K = 50;
        assertEquals(0L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case58() {
        int[] x = { -934928114, -929153824, -912963099, -911858230, -893806140, -882561446, -743448856, -652858649, -624717449, -576822558, -523064221, -499427497, -473862941, -467448607, -416148496, -350081005, -338038167, -316161461, -290023958, -280389183, -215388243, -173839645, -138241926, -109976769, -66823475, -29195605, -2611428, 64998726, 65270950, 103210114, 125862564, 225923275, 229291848, 464062258, 492972999, 516634158, 544615266, 559913685, 630346789, 686706528, 686767398, 697071248, 709424641, 765128446, 802139908, 824679571, 861098721, 863533900, 897618979, 985446114 };
        int K = 42;
        assertEquals(48172244L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case59() {
        int[] x = { 36, 42, 2, 20, 47, 33, 0, 34, 18, 8, 41, 5, 21, 3, 44, 46, 9, 16, 6, 7, 1, 12, 27, 4, 10, 23, 45, 24, 17, 38, 30, 35, 13, 48, 26, 40, 28, 31, 11, 15, 29, 19, 32, 39, 25, 22, 37, 43, 49, 14 };
        int K = 37;
        assertEquals(23L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case60() {
        int[] x = { 43, 9, 10, 19, 27, 29, 16, 17, 6, 32, 3, 40, 49, 38, 18, 23, 24, 25, 8, 42, 2, 5, 7, 45, 30, 36, 39, 21, 31, 46, 47, 20, 11, 34, 12, 0, 28, 1, 26, 15, 37, 44, 33, 22, 14, 13, 41, 35, 4, 48 };
        int K = 13;
        assertEquals(82L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case61() {
        int[] x = { 33, 28, 43, 14, 8, 35, 41, 6, 15, 0, 38, 46, 49, 22, 16, 5, 29, 25, 13, 31, 48, 42, 18, 44, 20, 39, 1, 19, 32, 24, 40, 26, 45, 7, 2, 21, 37, 3, 34, 47, 30, 9, 36, 4, 17, 10, 12, 27, 23, 11 };
        int K = 11;
        assertEquals(108L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case62() {
        int[] x = { 19, 15, 9, 10, 20, 29, 40, 16, 1, 24, 48, 39, 37, 14, 4, 7, 21, 47, 34, 2, 43, 25, 3, 0, 49, 23, 46, 42, 6, 22, 45, 26, 30, 11, 5, 27, 38, 41, 33, 31, 12, 44, 32, 36, 35, 13, 17, 8, 28, 18 };
        int K = 45;
        assertEquals(7L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case63() {
        int[] x = { 41, 1, 25, 32, 21, 36, 43, 18, 8, 26, 46, 6, 40, 45, 2, 20, 3, 49, 44, 48, 13, 31, 12, 16, 30, 38, 39, 9, 29, 47, 14, 11, 34, 4, 7, 28, 19, 27, 10, 22, 23, 17, 0, 15, 33, 37, 42, 35, 24, 5 };
        int K = 38;
        assertEquals(20L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case64() {
        int[] x = { -1000000000, 999999976, -999999999, 999999977, -999999998, 999999978, -999999997, 999999979, -999999996, 999999980, -999999995, 999999981, -999999994, 999999982, -999999993, 999999983, -999999992, 999999984, -999999991, 999999985, -999999990, 999999986, -999999989, 999999987, -999999988, 999999988, -999999987, 999999989, -999999986, 999999990, -999999985, 999999991, -999999984, 999999992, -999999983, 999999993, -999999982, 999999994, -999999981, 999999995, -999999980, 999999996, -999999979, 999999997, -999999978, 999999998, -999999977, 999999999, -999999976, 1000000000 };
        int K = 42;
        assertEquals(14L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case65() {
        int[] x = { -1000000000, 999999976, -999999999, 999999977, -999999998, 999999978, -999999997, 999999979, -999999996, 999999980, -999999995, 999999981, -999999994, 999999982, -999999993, 999999983, -999999992, 999999984, -999999991, 999999985, -999999990, 999999986, -999999989, 999999987, -999999988, 999999988, -999999987, 999999989, -999999986, 999999990, -999999985, 999999991, -999999984, 999999992, -999999983, 999999993, -999999982, 999999994, -999999981, 999999995, -999999980, 999999996, -999999979, 999999997, -999999978, 999999998, -999999977, 999999999, -999999976, 1000000000 };
        int K = 9;
        assertEquals(133L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case66() {
        int[] x = { -1000000000, 999999976, -999999999, 999999977, -999999998, 999999978, -999999997, 999999979, -999999996, 999999980, -999999995, 999999981, -999999994, 999999982, -999999993, 999999983, -999999992, 999999984, -999999991, 999999985, -999999990, 999999986, -999999989, 999999987, -999999988, 999999988, -999999987, 999999989, -999999986, 999999990, -999999985, 999999991, -999999984, 999999992, -999999983, 999999993, -999999982, 999999994, -999999981, 999999995, -999999980, 999999996, -999999979, 999999997, -999999978, 999999998, -999999977, 999999999, -999999976, 1000000000 };
        int K = 49;
        assertEquals(1L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case67() {
        int[] x = { -1000000000, 999999976, -999999999, 999999977, -999999998, 999999978, -999999997, 999999979, -999999996, 999999980, -999999995, 999999981, -999999994, 999999982, -999999993, 999999983, -999999992, 999999984, -999999991, 999999985, -999999990, 999999986, -999999989, 999999987, -999999988, 999999988, -999999987, 999999989, -999999986, 999999990, -999999985, 999999991, -999999984, 999999992, -999999983, 999999993, -999999982, 999999994, -999999981, 999999995, -999999980, 999999996, -999999979, 999999997, -999999978, 999999998, -999999977, 999999999, -999999976, 1000000000 };
        int K = 48;
        assertEquals(2L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case68() {
        int[] x = { -1000000000, 999999976, -999999999, 999999977, -999999998, 999999978, -999999997, 999999979, -999999996, 999999980, -999999995, 999999981, -999999994, 999999982, -999999993, 999999983, -999999992, 999999984, -999999991, 999999985, -999999990, 999999986, -999999989, 999999987, -999999988, 999999988, -999999987, 999999989, -999999986, 999999990, -999999985, 999999991, -999999984, 999999992, -999999983, 999999993, -999999982, 999999994, -999999981, 999999995, -999999980, 999999996, -999999979, 999999997, -999999978, 999999998, -999999977, 999999999, -999999976, 1000000000 };
        int K = 21;
        assertEquals(56L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case69() {
        int[] x = { -1000000000, 999999976, -999999999, 999999977, -999999998, 999999978, -999999997, 999999979, -999999996, 999999980, -999999995, 999999981, -999999994, 999999982, -999999993, 999999983, -999999992, 999999984, -999999991, 999999985, -999999990, 999999986, -999999989, 999999987, -999999988, 999999988, -999999987, 999999989, -999999986, 999999990, -999999985, 999999991, -999999984, 999999992, -999999983, 999999993, -999999982, 999999994, -999999981, 999999995, -999999980, 999999996, -999999979, 999999997, -999999978, 999999998, -999999977, 999999999, -999999976, 1000000000 };
        int K = 1;
        assertEquals(97999998800L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case70() {
        int[] x = { 9, -3, 14, 6, 5, -9, 32, 7, -5, 26, 2, 11 };
        int K = 3;
        assertEquals(58L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case71() {
        int[] x = { -82973380, -89790391, 37906411, -98695256, -17286544, 70827155, -77546449, 27810986, 62735388, -97381951, 24262259, 49421664, -80363569, 34612946, 64039672, 74242661, 43488046, 85042216, 49874541, -93881378, 94387631, -27589282, 7027562, -95361471, -47113236, -56753713, -65742874, -81739777, -3175296, 6382786, -22211170, 72718158, 34640153, 36479493, 93842755, 26874019, -4433179, -22065724, -11761699, -29342737, -73369918, 67325708, 42204297, 75852210, 99968941, 46204550, -7435037, -75273342, -95903939, -70723330 };
        int K = 25;
        assertEquals(72618121L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case72() {
        int[] x = { 37005818, 10056053, 97339796, 88405251, 76535853, 23708824, 1140928, 48460233, 68386621, 652571, 76556264, 54204510, 87957592, 98785992, 76261297, 2474682, 51811644, 59110534, 63767834, 34062861, 27816180, 48459106, 98003202, 59143124, 74788666, 68233836, 51741067, 22438879, 12247674, 74036390, 17513669, 49253492, 84092444, 14853466, 90175095, 13144649, 91078642, 43832375, 61604882, 59465264, 44484946, 90677498, 13669774, 84958890, 89463490, 42447424, 87433573, 93791486, 54074310, 3717759 };
        int K = 25;
        assertEquals(27582517L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case73() {
        int[] x = { -577033427, -226332974, 583290708, -174473123, -729395100, -134723151, 581550688, 640451083, 553933920, 205951493, 746651667, -595658293, -49272659, -211618912, 463343520, 394370351, 502617139, -845238430, 152861873, -688652578, -454320173, 54205838, 159612668, -205079237, -811358858, -979743595, 766952558, -504375784, 734701305, 436419342, 486904153, -742755189, -721981456, -405541021, 545913407, 889166309, -996685047, 123065226, -7376784, -718979036, -702035037, -799827706, -851105130, 389827325, -826706339, 719547604, 371082003, 606277326, 950976610, 995747968 };
        int K = 9;
        assertEquals(3583295395L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case74() {
        int[] x = { -539586166, 860671687, -314769492, -754014572, 191092411, -76716461, 982770279, -387271707, -409406512, 784889262, 237289690, -996198113, -888903906, -819485018, -6237401, 939134323, 953940968, 961735757, 917379878, 405052949, 190838344, -91393166, 294196775, 339644898, -917951068, 479783785, -74765360, 271385198, 125325934, 980361941, -608131866, -759469017, 768646653, 423219813, 733425851, -251144060, 451300158, -661642605, 805650028, -95617108, 733766390, 704459365, 806202883, -986917550, 697348045, -119932916, -624696609, -878114414, 597272753, 663148891 };
        int K = 10;
        assertEquals(2879860440L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case75() {
        int[] x = { 324010911, -793225146, 192237369, 878689266, -458432539, -639340130, 687039810, 439763444, 762438942, -475303077, -73844902, -342817855, -811799724, -476430051, -10520570, -703505465, 309402920, -991888267, 315864536, -80443594, -257657785, 613903732, 559733300, 272099999, 204163835, -758437427, -735473104, 305055271, -858114850, -433011543, -540466283, 961327975, -181964631, -396627704, -323661821, -94870230, -898162481, 194775088, 189517606, 947698516, -986592654, -987639471, 399788919, -304101520, 581246782, -38579142, -701361294, 545194174, -220295451, -961020826 };
        int K = 23;
        assertEquals(848680923L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case76() {
        int[] x = { 67782901, 98756913, 12743575, 448368, 22106995, 39751134, 41143740, 50990735, 37691404, 58741238, 82146384, 97337686, 2269967, 16722320, 3743637, 88038166, 74448038, 73502857, 38685899, 11125437, 40810251, 98197524, 39851697, 46561005, 7840695, 27354576, 9441522, 92160382, 66085201, 9938131, 4084014, 80718914, 1910096, 53385794, 91819158, 37359481, 69780154, 22014480, 94091213, 58983463, 52716813, 23706645, 36263165, 63009469, 10954401, 54190024, 65060100, 90993509, 71679530, 9008793 };
        int K = 15;
        assertEquals(86912823L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case77() {
        int[] x = { 9, -3, 14, 6, 5, -9, 32, 7, -5, 26, 2, 11, -110, 200, -343, 3321, -2232, 987, -999, 19999, 20001, -15, 27, -10101, 10101, -32, 12, -434, 111, -111, 1111, -1111, 11111, -11111, 111111, -111111, 1111111, -1111111, 11111111, -11111111, 111111111, -111111111 };
        int K = 15;
        assertEquals(9691L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case78() {
        int[] x = { 804289383, -153069114, 681692777, 714636915, 957747793, -575761665, -280114614, 649760492, -403483351, 189641421, 25202362, 350490027, -216631310, 102520059, -955102238, 967513926, 365180540, 540383426, -695910828, 303455736, -964994789, -478404632, -705297433, 726956429, -663534218, -138978470, -721277138, -766334877, -854825934, -531296865, 101513929, 801979802, 315634022, -364276942, 369133069, 125898167, 59961393, -910981545, -371824989, 656478042, 131176229, 653377373, -140515579, 914544919, -391586216, -243101463, 734575198, 973594324, -850201685, -961335631 };
        int K = 18;
        assertEquals(1189176012L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case79() {
        int[] x = { -576618598, -576618597, -806887382, 576618590, 494993860, -319605271, -828751306, -717209276, 183060927, 577524268, 683628322, 168084095, -570435366, 870005192, -508755008, 355117990, 228903922, 576618533, -733904220, -143158120, -60595767, 102892682, 85208890, -728705497, -837528500, -705705444, -789608112, -580479577, -681856159, -497716487, -327944417, 408785581, 873678967, -892032600, -283689824, 940593147, 429019447, 316856237, -273157916, -348056689, -238853247, 221479012, 576618521, 521644373, -275350914, 507090192, 441245830, -778584557, 64833524, -643189517 };
        int K = 13;
        assertEquals(1938785545L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case80() {
        int[] x = { 995512000, -341351424, -79986802, 262935661, 771060752, 512747623, 662229345, 458402456, 118624936, -86955172, -766350648, -997503200, 866491840, -479552000, -922189800, 597582000, 743999620, -595187200, -848108500, -572428500, 999728200, -688655800, 114117440, 684817786, -455835380, 892455280, -410142720, -136025680, -616621918, 459687250, -68469760, 855894880, -424208520, -800406400, 365313876, -272242260, 85675800, -290383840, -426269088, 8517830, 435321540, 8905000, -871156520, -201330855, -330864352, -254338565, 375895328, -46797264, -580756200, -707003200 };
        int K = 17;
        assertEquals(1751835630L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case81() {
        int[] x = { 21679, -5162, -1805, 2965, -291, -12686, 22359, 808, -11919, 20411, 5612, 2451, -16427, 4738, 8711, -13613, -13881, 10341, -12724, 687, -683, -23593, -2895, 11967, -18216, -5609, 22648, 108, 11520, 17718, 18486, 3822, 7878, 13845, -47, -14002, 27002, 1636, 19069, 10340, -16200, 6819, 25790, 8409, 12905, 1061, 7785, -10971, -5939 };
        int K = 30;
        assertEquals(10488L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case82() {
        int[] x = { 189641421, 804289383, -531296865, 681692777, -478404632, -705297433, -138978470, -663534218, -280114614, -575761665, -850201685, -721277138, 714636915, -243101463, 914544919, 303455736, 59961393, -955102238, 801979802, -964994789, 967513926, 540383426, -854825934, 726956429, -766334877, -364276942, 653377373, -961335631, 365180540, -910981545, -153069114, 101513929, 369133069, 649760492, 957747793, 350490027, -391586216, -403483351, 125898167, -140515579, 131176229, 315634022, -695910828, 25202362, 973594324, -371824989, -216631310, 656478042, 734575198, 102520059 };
        int K = 13;
        assertEquals(1955933702L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case83() {
        int[] x = { -223, -208, -197, -178, -160, -157, -108, -97, -96, -92, -27, -15, 7, 17, 22, 23, 31, 35, 39, 42, 45, 59, 75, 77, 83, 86, 99, 105, 119, 128, 139, 142, 143, 149, 162, 171, 172, 181, 186, 201, 203, 206, 207, 208, 210, 221, 231, 236, 239, 246 };
        int K = 20;
        assertEquals(161L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case84() {
        int[] x = { 763481, 507994224, 336998086, 139595265, 391759348, 1482487, 26271963, 56984961, 3632965, 369061983, 118356293, 21584434, 675033468, 284011293, 950107899, 70625335, 194067151, 902941085, 257664506, 268160767, 37401250, 560602, 80854944, 621620813, 106948180, 230373201, 86565993, 304032286, 222076006, 102781364, 549671042, 62716989, 33580605, 79973768, 137606166, 138793916, 709036799, 773949452, 36574607, 79392093, 318783101, 416632547, 368407001, 329623350, 368040250, 106727201, 204160816, 341011494, 133177214, 236367106 };
        int K = 13;
        assertEquals(991124832L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case85() {
        int[] x = { 630000909, 139888251, -256431585, 141617475, -475439977, 674442177, -725487166, -628205315, 435456811, 795427955, -576715384, 955473270, 791095344, 369650354, -242666030, -851732577, 551024444, -872817512, -526809358, 944968343, -848110318, 2144893, -840042138, 459040104, 988889649, 120808927, -25407345, 801317313, -839822750, 766282177, -824794664, 140899438, 557182147, -741581066, -373868775, -882331223, -374412858, -772109634, 305191992, 949175180, -841569100, 983574759, -122978260, 561932394, -113654550, -711723825, -955363168, -629786562, 720210429, -183332265 };
        int K = 25;
        assertEquals(466927252L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case86() {
        int[] x = { 9460176, 7741583, 4685364, 8410046, -342961, -463514, 5808331, 1968173, 6053577, 3877907, 1441094, 3924558, 2800293, 5091645, 1608601, 8173033, 3020374, -963453, 126278, 5299859, 160747, 3409686, 3696816, 4984884, 1509657, 9614548, 7622850, 9888187, 5248533, 1273060, 719807, 1366239, 9620952, 5370871, 1738500, 8875452, 149717, -680018, 4246454, 4304217, 6931204, 184770, 501956, 9247026, 9996241, 208343, 8053188, 1194788, 5023128, 5404017 };
        int K = 10;
        assertEquals(17426162L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case87() {
        int[] x = { 10, 20, 30, 40, 60 };
        int K = 2;
        assertEquals(30L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case88() {
        int[] x = { 97297161, 15080213, 25232106, 8066008, 24225448, 32790394, 16264668, 76723578, 85199621, 70433135, 39292593, 35486248, 82720054, 85587368, 99615994, 44893777, 29395940, 54614290, 12346115, 55071702, 34083576, 32986143, 8217402, 10537482, 90998206, 40383884, 67943702, 44104772, 61022610, 87897001, 61272702, 14962401, 72642562, 10808610, 30166198, 95353806, 64281726, 59934532, 36690624, 97270413, 10269304, 21146317, 46238025, 17621444, 21413648, 74002475, 2395663, 88247613, 25436221, 42302533 };
        int K = 17;
        assertEquals(81945933L, cucumberwatering.theMin(x, K));
    }

    @Test
    public void case89() {
        int[] x = { -148620606, 265991210, -231750489, -485778809, -955444336, 570007324, -618103028, 569458007, -227050782, -43273926, 744140625, -799560547, -129089356, -743713379, -634277344, -127502442, -48583985, -396606446, -78247071, -677185059, 514892578, 361206054, 729736328, 377197265, 748901367, -28564454, -550048829, 98632812, 332702636, -207580567, -178833008, 830627441, 556945800, -12207032, 243652343, -302612305, 73547363, -470947266, 22827148, -876403809, -414245606, -626647950, 85083007, -63659668, 793334960, 879699707, -20690918, -388793946, -96862793, 526184082 };
        int K = 15;
        assertEquals(1729614257L, cucumberwatering.theMin(x, K));
    }

}
