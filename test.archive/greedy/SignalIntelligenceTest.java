package topc.test.greedy;

import junit.framework.*;
import org.junit.Test;
import static org.junit.Assert.*;
import topc.greedy.*;

public class SignalIntelligenceTest {
  SignalIntelligence signalintelligence = new SignalIntelligence();

  @Test
  public void case1() {
    int[] numbers = { 1, 2, 3 };
    assertEquals(8L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case2() {
    int[] numbers = { 4, 4, 2, 2 };
    assertEquals(19L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case3() {
    int[] numbers = { 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000 };
    assertEquals(281475976710655L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case4() {
    int[] numbers = { 1, 3, 7, 15, 31, 63, 127, 255, 511, 1023, 2047 };
    assertEquals(4094L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case5() {
    int[] numbers = { 1000000000, 1 };
    assertEquals(1000000003L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case6() {
    int[] numbers = { 2, 3, 7, 15, 5 };
    assertEquals(36L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case7() {
    int[] numbers = { 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000, 1000, 1000 };
    assertEquals(2305843010213693951L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case8() {
    int[] numbers = { 179658657, 1375, 16748571, 963287546, 963287552, 23711273, 737827135, 1, 86550454, 916920519, 28, 932660585, 963233450, 961582520, 963287279, 61050923, 963287551, 57487191, 963287460, 18861753, 652860878, 21221311, 5545151, 14271410, 961807367, 963287481, 63252, 963283275, 963287499, 963039512, 947814221, 184157393, 31, 214871850, 563608185, 961707006, 1, 3671, 963267601, 963270890, 3, 468420162, 84216335, 963264522, 963281384, 1, 67947, 963286662, 129181990 };
    assertEquals(2305843009219239102L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case9() {
    int[] numbers = { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
    assertEquals(1125899906842624L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case10() {
    int[] numbers = { 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 };
    assertEquals(1125899906842625L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case11() {
    int[] numbers = { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 };
    assertEquals(2251799813685250L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case12() {
    int[] numbers = { 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5 };
    assertEquals(2251799813685252L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case13() {
    int[] numbers = { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 };
    assertEquals(4503599627370505L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case14() {
    int[] numbers = { 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200 };
    assertEquals(72057594037928135L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case15() {
    int[] numbers = { 5283, 5283, 5283, 5283, 5283, 5283, 5283, 5283, 5283, 5283, 5283, 5283, 5283, 5283, 5283, 5283, 5283, 5283, 5283, 5283, 5283, 5283, 5283, 5283, 5283, 5283, 5283, 5283, 5283, 5283, 5283, 5283, 5283, 5283, 5283, 5283, 5283, 5283, 5283, 5283, 5283, 5283, 5283, 5283, 5283, 5283, 5283, 5283, 5283, 5283 };
    assertEquals(2305843009213699234L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case16() {
    int[] numbers = { 58282, 58282, 58282, 58282, 58282, 58282, 58282, 58282, 58282, 58282, 58282, 58282, 58282, 58282, 58282, 58282, 58282, 58282, 58282, 58282, 58282, 58282, 58282, 58282, 58282, 58282, 58282, 58282, 58282, 58282, 58282, 58282, 58282, 58282, 58282, 58282, 58282, 58282, 58282, 58282, 58282, 58282, 58282, 58282, 58282, 58282, 58282 };
    assertEquals(2305843009213752233L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case17() {
    int[] numbers = { 1019585, 1019585, 1019585, 1019585, 1019585, 1019585, 1019585, 1019585, 1019585, 1019585, 1019585, 1019585, 1019585, 1019585, 1019585, 1019585, 1019585, 1019585, 1019585, 1019585, 1019585, 1019585, 1019585, 1019585, 1019585, 1019585, 1019585, 1019585, 1019585, 1019585, 1019585, 1019585, 1019585, 1019585, 1019585, 1019585, 1019585, 1019585, 1019585, 1019585, 1019585, 1019585, 1019585 };
    assertEquals(2305843009214713536L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case18() {
    int[] numbers = { 37373373, 37373373, 37373373, 37373373, 37373373, 37373373, 37373373, 37373373, 37373373, 37373373, 37373373, 37373373, 37373373, 37373373, 37373373, 37373373, 37373373, 37373373, 37373373, 37373373, 37373373, 37373373, 37373373, 37373373, 37373373, 37373373, 37373373, 37373373, 37373373, 37373373, 37373373, 37373373, 37373373, 37373373, 37373373, 37373373, 37373373 };
    assertEquals(2305843009251067324L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case19() {
    int[] numbers = { 270000000, 270000000, 270000000, 270000000, 270000000, 270000000, 270000000, 270000000, 270000000, 270000000, 270000000, 270000000, 270000000, 270000000, 270000000, 270000000, 270000000, 270000000, 270000000, 270000000, 270000000, 270000000, 270000000, 270000000, 270000000, 270000000, 270000000, 270000000, 270000000, 270000000, 270000000, 270000000, 270000000, 270000000 };
    assertEquals(2305843009483693951L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case20() {
    int[] numbers = { 987654321, 987654321, 987654321, 987654321, 987654321, 987654321, 987654321, 987654321, 987654321, 987654321, 987654321, 987654321, 987654321, 987654321, 987654321, 987654321, 987654321, 987654321, 987654321, 987654321, 987654321, 987654321, 987654321, 987654321, 987654321, 987654321, 987654321, 987654321, 987654321, 987654321, 987654321, 987654321, 987654321 };
    assertEquals(2305843010201348272L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case21() {
    int[] numbers = { 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000 };
    assertEquals(2305843010213693951L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case22() {
    int[] numbers = { 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 1, 1, 1, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 2, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 2 };
    assertEquals(1125899906842624L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case23() {
    int[] numbers = { 1003, 1001, 1000, 1002, 1000, 1003, 1004, 1002, 1004, 1005, 1004, 1004, 1003, 1000, 1000, 1001, 1005, 1001, 1002, 1000, 1003, 1003, 1005, 1002, 1001, 1004, 1003, 1005, 1000, 1005, 1004, 1003, 1005, 1003, 1004, 1002, 1004, 1005, 1002, 1002, 1004, 1001, 1004, 1000, 1002, 1005, 1000, 1000, 1004, 1000 };
    assertEquals(288230376151712743L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case24() {
    int[] numbers = { 1000005, 1000007, 1000003, 1000003, 1000006, 1000007, 1000005, 1000004, 1000003, 1000000, 1000002, 1000004, 1000007, 1000004, 1000003, 1000007, 1000002, 1000003, 1000002, 1000005, 1000007, 1000007, 1000003, 1000000, 1000006, 1000001, 1000001, 1000004, 1000006, 1000006, 1000004, 1000006, 1000004, 1000007, 1000000, 1000001, 1000001, 1000002, 1000001, 1000005, 1000005, 1000000, 1000006 };
    assertEquals(2305843009214693951L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case25() {
    int[] numbers = { 999999991, 999999997, 999999993, 999999991, 999999990, 999999993, 999999995, 999999998, 999999996, 999999992, 999999991, 999999991, 999999993, 999999996, 999999996, 999999990, 999999998, 999999992, 999999994, 999999996, 999999993, 999999996, 999999996, 999999996, 999999995, 999999998, 999999996, 999999991, 999999990, 999999990, 999999997, 999999997, 999999993 };
    assertEquals(2305843010213693941L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case26() {
    int[] numbers = { 235857565, 221602550 };
    assertEquals(490038005L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case27() {
    int[] numbers = { 555785557, 125740864, 863111154, 595742977 };
    assertEquals(2703269204L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case28() {
    int[] numbers = { 699941145, 339788511, 472789281, 845483099, 959647936, 563964808, 269415281, 647687104 };
    assertEquals(34629153648L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case29() {
    int[] numbers = { 647435249, 803314427, 101746030, 964429523, 223737792, 68515974, 28150428, 125939064, 319945227, 880135873, 447607422, 8304030, 54616924, 977496243, 200084211, 688775573 };
    assertEquals(549824329861L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case30() {
    int[] numbers = { 523956777, 870026136, 106698929, 79274264, 626167319, 806819344, 197171767, 220148874, 869478997, 244529565, 945331946, 276812202, 576132594, 748665937, 121622204, 32295658, 330209878, 273838685, 209464832, 501549133, 642315585, 636167405, 778774046, 281641907, 844060543, 976822490, 810188417, 517044450, 801011353, 162695609, 180175857, 532864569 };
    assertEquals(72057594144626864L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case31() {
    int[] numbers = { 453381899, 896620462, 37990500, 217362760, 29719649, 215773553, 739245534, 30200886, 483496386, 505404724, 756663654, 592389735, 372026736, 708612244, 923864984, 776042099, 954534621, 270858854, 675201114, 625437329, 912463350, 458367504, 74585147, 807894854, 974760403, 477659282, 102437899, 447369076, 972739094, 297881347, 985344042, 257386203, 198147693, 399754088, 50127358, 992970900, 590360959 };
    assertEquals(1152921504644837475L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case32() {
    int[] numbers = { 69122726, 93541221 };
    assertEquals(203340453L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case33() {
    int[] numbers = { 577407437, 736270213 };
    assertEquals(1651149260L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case34() {
    int[] numbers = { 27096035, 298594390, 460425141, 235956357 };
    assertEquals(1309698180L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case35() {
    int[] numbers = { 727312500, 521644191, 839367970, 236040594, 189380898, 349154372, 385330230, 397552844 };
    assertEquals(17529023555L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case36() {
    int[] numbers = { 960279467, 800243597, 537543980, 627721315, 966332421, 403751475, 251094527, 221083798, 988457022, 918523234, 816380508, 954657304, 782274915, 782224124, 559484609, 142724240 };
    assertEquals(4398189235343L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case37() {
    int[] numbers = { 528365618, 665524313, 235143161, 4475297, 496903020, 914280336, 138855536, 483782301, 628087128, 243187789, 219058790, 122584390, 422268174, 745856404, 648707562, 695835340, 373986475, 27861841, 709477528, 657488096, 588097078, 895013274, 725032201, 916747047, 705627486, 670368540, 472580435, 855900854, 28482944, 986502272, 24691132, 45314335 };
    assertEquals(18014398537343824L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case38() {
    int[] numbers = { 66111822, 901323553, 120043437, 33574315, 27918777, 466777994, 889149, 495588311, 194492499, 381518458, 947371899, 286397799, 487783925, 857521141, 399205507, 105056546, 561852370, 315342679, 437315059, 185693701, 319305989, 804412056, 526862732, 768844849, 107070267, 388356354, 942340016, 102031025, 400926077, 143966520, 68076598, 833930512, 23317426, 203907340, 120631317, 970233972, 801410459, 309325868 };
    assertEquals(1152921504640421290L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case39() {
    int[] numbers = { 364490003, 715408767 };
    assertEquals(1252279678L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case40() {
    int[] numbers = { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
    assertEquals(1125899906842624L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case41() {
    int[] numbers = { 1, 2, 1, 1, 2, 2, 1, 2, 2, 2, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 2, 2, 2, 2, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1 };
    assertEquals(1125899906842624L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case42() {
    int[] numbers = { 5, 10, 7, 6, 5, 10, 9, 10, 5, 10, 8, 9, 9, 8, 10, 7, 6, 9, 10, 6, 8, 9, 6, 6, 9, 6, 7, 5, 9, 8, 10, 6, 9, 9, 6, 7, 9, 8, 6, 7, 8, 9, 8, 10, 7, 5, 7, 10, 6, 10 };
    assertEquals(2251799813685252L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case43() {
    int[] numbers = { 58, 48, 59, 46, 29, 24, 38, 37, 39, 48, 44, 32, 44, 29, 31, 51, 51, 30, 56, 39, 57, 46, 32, 36, 40, 40, 24, 37, 29, 55, 33, 46, 25, 37, 23, 51, 53, 57, 36, 42, 55, 41, 52, 26, 49, 29, 44, 34, 50, 43 };
    assertEquals(9007199254741014L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case44() {
    int[] numbers = { 16980, 15834, 16744, 11681, 18064, 19497, 13666, 9116, 16465, 10731, 8440, 18246, 15097, 16843, 14594, 7870, 19592, 9193, 12031, 12601, 8528, 9084, 8447, 15282, 7075, 12139, 8441, 15731, 19011, 14570, 18541, 20137, 17290, 11821, 18076, 10886, 7268, 14594, 17206, 9841, 11932, 9612, 12604, 14403, 11888, 14141, 10176, 10174, 7212, 18361 };
    assertEquals(2305843009213701026L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case45() {
    int[] numbers = { 34318, 28848, 46912, 22709, 21631, 44334, 41956, 38932, 39002, 30513, 25852, 41790, 26297, 52817, 25411, 27541, 45176, 35778, 29969, 27124, 26128, 42836, 49044, 41319, 30208, 43711, 31518, 31476, 23045, 41069, 42007, 48776, 23782, 56941, 51469, 40026, 20404, 33756, 22329, 35193, 43900, 30121, 26844, 40093, 36474, 49005, 49819, 29978 };
    assertEquals(2305843009213714355L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case46() {
    int[] numbers = { 1072901, 3859045, 995297, 3683954, 1001850, 4039454, 1148240, 1199431, 3585117, 3450722, 2473474, 2183502, 2118901, 3949789, 1444753, 823591, 1304318, 2033975, 1510082, 2297550, 1198529, 3342426, 2336853, 1069029, 2966400, 3716528, 2111794, 3716426, 1912854, 1132818, 3271153, 1564892, 3593606, 2980068, 597752, 3532360, 1283917, 3518770, 1107041, 3883017, 1739120, 3763298, 1939012 };
    assertEquals(2305843009214291703L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case47() {
    int[] numbers = { 33603696, 38820812, 41406487, 39732337, 38222020, 31426393, 34110779, 43345829, 48053538, 49807584, 28464602, 46264000, 35772251, 43768413, 41481020, 38217105, 33309217, 41885036, 30054093, 43087163, 40117670, 29125880, 30873599, 45175806, 30041943, 35872207, 42774909, 44300252, 40852416, 28965274, 44256276, 34607812, 37918868, 37885233, 44320284, 41016379, 45575303, 32328032 };
    assertEquals(2305843009242158553L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case48() {
    int[] numbers = { 615710367, 828121299, 663163955, 975276184, 640537976, 998211095, 794924189, 956921120, 620878206, 764485506, 699578478, 669163154, 772478680, 914119058, 940119645, 611342962, 770619280, 598891628, 727284047, 771372743, 716947274, 704330816, 734356532, 861495820, 752292939, 746935244, 864243989, 984891734, 761041947, 995159153, 797080726, 837868288, 790812076 };
    assertEquals(2305843009812585579L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case49() {
    int[] numbers = { 760265624, 569282114, 696059557, 672289975 };
    assertEquals(4864249409L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case50() {
    int[] numbers = { 312071265, 188952715, 324521323, 183187130, 252725036, 168635937, 193748935, 104616538, 106047928, 131220792, 192848456, 306638149, 256899146, 92744101 };
    assertEquals(549848557988L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case51() {
    int[] numbers = { 522123452, 589830328, 315436987, 342645637, 445303921, 804602161, 402459443, 380454425, 267079239, 284914380, 728120225, 322349158, 530348969, 445323427, 718158227, 502161837, 438351881, 479780186, 384481599, 566123810, 547131716, 655069057 };
    assertEquals(562950220500550L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case52() {
    int[] numbers = { 719920934, 719364707, 720115683, 638379714, 571312262, 583881215, 715264040, 740207673, 646199325, 722986352, 774576651, 544411074, 650561187, 593008245, 650823047 };
    assertEquals(8796637433281L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case53() {
    int[] numbers = { 590604882, 513531580, 658742168, 631775470, 576602033, 717667847, 647539264, 735794909, 698296962, 727783750, 635566299, 491137194, 620875805, 543096504, 512960162, 496287897, 688221438 };
    assertEquals(17592677181609L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case54() {
    int[] numbers = { 740963613, 644726975, 826637708, 731671419, 712478268, 872891455, 880265042, 926080333, 954708551, 952898372, 704899547, 788957219, 671647499 };
    assertEquals(2199667982526L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case55() {
    int[] numbers = { 497049138, 692021067, 178694997, 355318725, 459144763, 220782914, 506278761, 456456222, 222989218, 396852334, 704609550, 531667317, 227102797, 653136762, 583430107, 197454156, 282931480, 375578973, 839506205, 779324918, 826704601, 348240237 };
    assertEquals(281475155405652L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case56() {
    int[] numbers = { 617063229, 636474530, 501001020, 311603490, 671242581, 689924923, 559427070, 517466912, 402805381, 507403086, 519086393, 604741412, 494917883, 488790034, 529445518, 412895655, 680120335, 323914265, 581593892, 369071119, 385135646, 499211048 };
    assertEquals(562950265024801L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case57() {
    int[] numbers = { 669195871, 709593466, 663112277, 614498463, 690450890, 682478180, 621650747, 643766176, 703462664, 665575011, 715523054 };
    assertEquals(550370312350L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case58() {
    int[] numbers = { 762251236, 719512653, 884461982, 855096015, 891277775, 961757981, 978612762, 939900781, 730424424, 866271739, 869040161, 686042771, 892579882, 948463500, 800138858, 742460199, 812942158, 795042065, 919888160, 662536117, 976068499, 860266833, 704341276 };
    assertEquals(2251800476221364L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case59() {
    int[] numbers = { 867, 7091, 197156, 2672235, 325, 3186275, 41989, 14883, 1277, 15, 136475, 132095, 155248, 11387, 6431, 7556, 1812, 20049, 14441, 7, 214779, 1896273, 4713, 1984, 885, 478, 1613640, 43, 492082, 30860, 438, 157 };
    assertEquals(68719476892L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case60() {
    int[] numbers = { 649888, 130363, 98069, 648754, 647363, 76817, 386758, 199668, 129147, 174642, 419586, 914315, 115950, 389364, 302501, 902001, 213989, 139291, 757490, 113286, 404945, 367453, 360549, 367626 };
    assertEquals(549755890704L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case61() {
    int[] numbers = { 349, 16136, 3063 };
    assertEquals(20231L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case62() {
    int[] numbers = { 524, 251, 381, 186, 902, 516, 643, 291, 635, 832, 475, 193, 772, 968, 1016, 974, 224, 215, 217, 161, 204, 767, 602, 949, 843, 163, 203, 217, 430, 466, 169, 736, 378, 192, 687, 533, 207 };
    assertEquals(8796093022368L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case63() {
    int[] numbers = { 122, 95, 99, 119, 130, 21, 23, 28, 56, 76, 44, 14, 86, 29, 106, 67, 206, 285, 10, 229, 477, 46, 24, 10, 289, 31, 378, 20, 13, 244, 215, 61, 130, 83, 49, 87, 104, 38 };
    assertEquals(1099511627785L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case64() {
    int[] numbers = { 7272038, 14134620, 12531546, 7940529, 5716835, 30923886, 6614826, 8063007, 8783064, 3172637 };
    assertEquals(2150656284L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case65() {
    int[] numbers = { 7451, 6166, 4626, 4955, 4374, 7260, 4164, 5390, 6259, 5301, 7620, 4308, 5716, 4388, 5987, 5036, 6592, 5865, 8181, 4431, 4955, 8050, 7221, 6072, 4372, 4493, 8102, 6162, 5539, 7392, 5082, 6458, 4637, 6110, 5675 };
    assertEquals(70368744181827L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case66() {
    int[] numbers = { 23788, 650788, 40674, 3774, 35080, 11824, 321113, 3012, 9071, 254479, 92515, 188867, 431484, 78179, 4652, 5155, 26935, 3099, 2535, 56634, 93248, 3184, 8989, 4756, 154525, 57576, 253646, 24147, 48207, 3489, 9409, 55812, 99437, 358545, 713975, 18800, 352753, 391490, 24588, 114348, 2929, 31332, 1768777, 388845 };
    assertEquals(18014398509484518L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case67() {
    int[] numbers = { 2666, 928, 2665, 2063, 3125, 176, 64, 143, 56, 797, 174, 1378, 642, 346, 14, 110, 26, 24, 23, 92, 12 };
    assertEquals(8388630L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case68() {
    int[] numbers = { 82, 129064, 4438046, 888970, 6, 6966, 100410, 716, 30515, 769278, 2598077, 19, 165, 53334, 2, 5923, 2, 724311, 8273, 3766, 354085, 2350465, 9765299, 17384, 3, 1997, 4, 30, 2, 132, 102744, 18, 38, 18, 123780, 8, 308648, 75230, 9335530, 3, 2287, 22, 1502509, 120, 251, 3, 1257, 155437, 2851, 11838 };
    assertEquals(1125899906842625L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case69() {
    int[] numbers = { 868023, 5864, 9496529, 439885, 23504, 9179, 15181876, 538, 6977, 367, 287012, 5864606, 2217, 15510, 14901, 2044142, 114, 1845, 129, 193, 619469, 14111680, 81, 4062, 919, 3551, 378, 976, 4686303, 21850, 600, 652, 5834279, 2334, 4867, 2192, 28256, 3057, 558, 768, 2369326, 395, 7803737, 88, 185, 29144, 6208, 270, 5586543, 223798 };
    assertEquals(36028797018964048L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case70() {
    int[] numbers = { 10284827, 305913, 17160683, 1893793, 6185557, 5073935, 10236, 39300, 51985, 2185285, 3679, 12949, 16937734, 3228, 14251, 5159481, 53669, 6469016, 1775111, 116042751, 7184229, 126928983, 277471, 7256964, 4571300, 127105, 6698344, 50243236, 226167, 161430, 1785120, 5166, 23348, 248727, 7056651, 888714, 27962262, 33717443, 18771243, 7389711, 27694520, 3402398, 216518, 7011, 44293, 48068127, 7549558, 10193714, 3449, 58905 };
    assertEquals(1152921504606850203L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case71() {
    int[] numbers = { 399236, 399219, 99515, 1804, 204, 259914, 31237, 248, 235, 16769241, 509605, 1467, 1008120, 14701, 2300628, 48083921, 57458864, 1918077, 1580345, 685175, 2015, 239, 1197443, 13642, 321104, 1959766, 511, 11133, 23504145, 27779, 10661698, 8280513, 37828664, 122659, 997, 26258, 59333, 195, 1648, 124834, 344391, 14156896, 709, 537, 54644221, 217867, 196, 13196910, 5728, 7729 };
    assertEquals(72057594037928130L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case72() {
    int[] numbers = { 45, 7337, 91, 623, 492, 29536, 882, 787, 73304, 26620, 35, 3819, 36089, 3752, 1401, 16, 4499, 476, 2574, 43128, 205, 11376, 5841, 158, 1557, 10117, 16, 14007, 50443, 720, 3431, 8456, 17, 3963, 4621, 38, 82, 507784, 956, 1062, 54, 280, 44, 25554, 940, 377, 2929, 166, 9191, 766 };
    assertEquals(9007199254741007L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case73() {
    int[] numbers = { 45619, 178774, 15754, 3471, 26143, 1270, 1216, 6849, 1838, 32335, 594567, 31864, 460062, 32249, 247937, 1251, 8641, 292314, 87435, 7046, 516288, 1527, 2173, 10503, 421222, 1244, 4888, 64864, 413300, 4847, 108380, 15806, 239547, 687970, 851221, 819831, 2246, 99742, 127828, 8918, 4739, 14030, 4506, 31220, 636238, 21366, 1037, 470559, 3106, 23766 };
    assertEquals(576460752303424524L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case74() {
    int[] numbers = { 636, 12694, 16061, 5968, 1048, 392, 394, 254, 988, 1365, 3507, 245, 2017, 1076, 1599, 568, 5915, 246, 3265, 1907, 9339, 11832, 7046, 11103, 615, 3162, 3510, 482, 144, 240, 225, 136, 1690, 4002, 10697, 12062, 463, 3200, 222, 3197, 1619, 844, 11030, 5482, 13785, 5772, 557, 3922, 716, 1754 };
    assertEquals(72057594037928071L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case75() {
    int[] numbers = { 6905315, 2043146, 18710, 23, 1701, 64, 71, 12, 1367052, 87, 126569, 247, 22900, 231, 651881707, 6, 6445, 45161, 122072, 31387357, 235, 457315, 1119, 48967, 317965322, 43335, 105, 24037992, 2, 278, 869436716, 5877, 8087188, 216, 423, 59147705, 121, 102612886, 6, 3153, 9, 1892390, 2391, 14509586, 686176, 2, 191, 15185052, 319, 559632 };
    assertEquals(1125899906842629L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case76() {
    int[] numbers = { 2, 45714, 173, 252441159, 6971, 97766226, 20, 16, 10646, 4903780, 86420130, 2206219, 10047, 400871, 713875, 53819, 1419684, 4, 156435, 11099652, 1973, 6, 223538236, 27, 42548, 673, 66697, 3, 12090753, 89, 147342035, 529, 100584, 137434, 3760092, 820054138, 3, 14, 1733521, 62497304, 65835879, 455, 8058, 759353, 1908, 5164145, 24849, 2438694, 12165, 64 };
    assertEquals(1125899906842626L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case77() {
    int[] numbers = { 15894, 226, 4915, 27, 166804000, 190620568, 1856139, 919, 4580, 4224710, 2499, 5, 39, 199, 2643, 291683, 252, 569928701, 12404671, 375, 114020, 123401692, 115, 601005, 794747, 30710, 82, 448684, 3426761, 59627, 9429, 204552, 85, 108360234, 30, 3530105, 53673, 8, 536714218, 961367581, 13187, 57193550, 11, 106663, 814, 86640, 377060035, 50, 585947, 6661 };
    assertEquals(4503599627370500L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case78() {
    int[] numbers = { 38819, 886812880, 112863, 104429450, 597, 3, 222431, 251546, 155549, 245772, 5, 2, 30, 85617, 51734210, 871962, 3, 271908, 3776, 1816, 63, 9719758, 437948, 26989, 25, 132385, 4616254, 13, 464754, 70209681, 4926739, 24992694, 14, 22825894, 97320268, 215399529, 8075, 263289367, 704, 125, 260134586, 18, 512329993, 5986761, 12, 1827470, 18, 550466217, 71, 20320018 };
    assertEquals(1125899906842626L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case79() {
    int[] numbers = { 29, 41, 49, 45, 33, 43, 42, 4, 17, 14, 37, 8, 48, 46, 24, 16, 47, 31, 3, 21, 26, 18, 50, 28, 22, 38, 7, 2, 5, 40, 23, 19, 36, 20, 10, 34, 32, 25, 6, 1, 12, 30, 39, 15, 35, 13, 44, 9, 11, 27 };
    assertEquals(1125899906842624L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case80() {
    int[] numbers = { 70, 55, 40, 44, 30, 60, 53, 26, 32, 41, 48, 62, 51, 66, 54, 43, 42, 39, 52, 27, 50, 56, 58, 34, 57, 36, 31, 75, 49, 37, 67, 68, 65, 29, 45, 64, 46, 35, 74, 47, 38, 72, 71, 28, 61, 69, 73, 59, 63, 33 };
    assertEquals(9007199254741017L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case81() {
    int[] numbers = { 188, 231, 228, 221, 199, 184, 203, 226, 222, 198, 189, 217, 223, 190, 201, 229, 182, 224, 215, 205, 212, 216, 193, 227, 187, 230, 197, 204, 211, 194, 214, 213, 200, 192, 195, 220, 196, 218, 185, 207, 206, 219, 208, 209, 186, 225, 210, 202, 183, 191 };
    assertEquals(72057594037928117L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case82() {
    int[] numbers = { 5954, 5934, 5946, 5944, 5967, 5953, 5963, 5956, 5929, 5957, 5974, 5969, 5975, 5938, 5952, 5958, 5932, 5973, 5978, 5964, 5933, 5965, 5943, 5945, 5931, 5935, 5960, 5930, 5971, 5977, 5940, 5951, 5936, 5942, 5966, 5947, 5939, 5941, 5955, 5961, 5972, 5950, 5976, 5949, 5948, 5937, 5968, 5970, 5962, 5959 };
    assertEquals(2305843009213699880L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case83() {
    int[] numbers = { 4923948, 4923919, 4923946, 4923933, 4923930, 4923950, 4923944, 4923929, 4923936, 4923939, 4923942, 4923935, 4923927, 4923931, 4923917, 4923932, 4923924, 4923922, 4923934, 4923914, 4923926, 4923915, 4923921, 4923937, 4923923, 4923913, 4923928, 4923949, 4923951, 4923945, 4923916, 4923925, 4923941, 4923940, 4923912, 4923920, 4923938, 4923918, 4923943, 4923947 };
    assertEquals(2305843009218617863L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case84() {
    int[] numbers = { 582838205, 582838202, 582838211, 582838188, 582838186, 582838187, 582838203, 582838190, 582838210, 582838194, 582838213, 582838204, 582838189, 582838192, 582838206, 582838199, 582838207, 582838193, 582838201, 582838197, 582838185, 582838208, 582838214, 582838209, 582838184, 582838183, 582838195, 582838191, 582838198, 582838212, 582838196, 582838200, 582838182 };
    assertEquals(2305843009796532133L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case85() {
    int[] numbers = { 999999971, 999999961, 999999964, 999999965, 999999982, 999999970, 999999954, 999999969, 999999963, 999999956, 999999962, 999999958, 999999975, 999999973, 999999979, 999999976, 999999967, 999999955, 999999977, 999999953, 999999983, 999999951, 999999952, 999999957, 999999978, 999999966, 999999981, 999999959, 999999972, 999999980, 999999960, 999999968, 999999974 };
    assertEquals(2305843010213693902L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case86() {
    int[] numbers = { 2758, 2745, 2765, 2750, 2738, 2727, 2732, 2771, 2770, 2768, 2754, 2729, 2746, 2753, 2742, 2774, 2743, 2739, 2741, 2761, 2737, 2763, 2764, 2769, 2744, 2767, 2756, 2760, 2766, 2740, 2775, 2733, 2730, 2757, 2735, 2747, 2749, 2762, 2776, 2731, 2773, 2736, 2748, 2759, 2751, 2752, 2772, 2734, 2755, 2728 };
    assertEquals(1152921504606849702L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case87() {
    int[] numbers = { 128, 16, 512, 256, 256, 268435456, 1024, 8192, 2097152, 128, 64, 67108864, 131072, 8, 32, 2097152, 64, 268435456, 67108864, 1048576, 4, 8, 65536, 134217728, 4194304, 134217728, 16777216, 1024, 131072, 536870912, 256, 256, 8192, 1024, 4, 64, 256, 2097152, 32, 4, 268435456, 32, 512, 128, 16777216, 8192, 8, 2, 256, 1048576 };
    assertEquals(2251799813685249L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case88() {
    int[] numbers = { 531441, 59049, 4782969, 6561, 129140163, 81, 387420489, 27, 81, 531441, 4782969, 387420489, 387420489, 531441, 81, 6561, 387420489, 4782969, 177147, 43046721, 531441, 2187, 729, 243, 3, 1, 1, 243, 1, 387420489, 43046721, 9, 59049, 243, 6561, 81, 2187, 6561, 43046721, 177147, 6561, 2187, 43046721, 43046721, 531441, 1, 6561, 6561, 387420489, 19683 };
    assertEquals(1125899906842624L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case89() {
    int[] numbers = { 64, 4, 16, 64, 65536, 4, 268435456, 268435456, 1024, 4, 16, 16, 1024, 16, 16, 67108864, 16, 4, 16777216, 16777216, 1024, 65536, 268435456, 16, 65536, 256, 268435456, 262144, 67108864, 65536, 16777216, 16384, 16, 1048576, 16384, 262144, 16777216, 256, 1048576, 1, 67108864, 1048576, 65536, 268435456, 16777216, 256, 1048576, 4096, 1, 16777216 };
    assertEquals(1125899906842627L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case90() {
    int[] numbers = { 390625, 125, 9765625, 625, 5, 390625, 625, 15625, 78125, 48828125, 15625, 25, 3125, 25, 78125, 15625, 25, 1953125, 1953125, 1953125, 244140625, 625, 390625, 1953125, 5, 25, 625, 1, 625, 48828125, 48828125, 3125, 78125, 78125, 3125, 1, 625, 25, 125, 125, 390625, 48828125, 78125, 125, 3125, 390625, 78125, 1953125, 1, 9765625 };
    assertEquals(1125899906842624L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case91() {
    int[] numbers = { 100000, 10, 100000, 1, 10000000, 1000, 10000, 10000, 10000, 10000, 1000000, 1000000, 100, 1, 100000, 100000000, 1000, 100000000, 1000000000, 100, 100000, 10000000, 100000, 1000000, 1000, 10000000, 1000, 1000, 1000000, 1000000, 100, 1000000, 1, 10, 1000, 1000000000, 1, 100000000, 10000, 1000, 10, 10000000, 100, 10000, 100, 1, 100000, 100000, 100000, 100000000 };
    assertEquals(1125899906842624L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case92() {
    int[] numbers = { 8111104, 8111104, 1, 2848, 8111104, 2848, 1, 8111104, 8111104, 8111104, 2848, 2848, 8111104, 2848, 1, 1, 1, 1, 8111104, 1, 1, 8111104, 2848, 1, 1, 2848, 2848, 1, 1, 1, 2848, 2848, 2848, 2848, 2848, 2848, 8111104, 8111104, 8111104, 8111104, 8111104, 2848, 1, 2848, 2848, 1, 8111104, 1, 1, 1 };
    assertEquals(1125899906842624L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case93() {
    int[] numbers = { 1, 1, 394949, 1, 1, 394949, 394949, 394949, 394949, 394949, 394949, 394949, 394949, 1, 394949, 1, 394949, 394949, 394949, 1, 1, 1, 394949, 394949, 394949, 394949, 1, 1, 394949, 1, 394949, 394949, 1, 1, 394949, 1, 1, 394949, 1, 394949, 394949, 1, 1, 394949, 394949, 1, 394949, 394949, 1, 1 };
    assertEquals(1125899906842624L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case94() {
    int[] numbers = { 4194304, 1048576, 33554432, 67108864, 8, 32768, 256, 1024, 512, 1, 2097152, 131072, 128, 524288, 2048, 16, 16777216, 8192, 8388608, 2, 4, 16384, 536870912, 268435456, 134217728, 65536, 4096, 262144, 64, 32 };
    assertEquals(1610612735L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case95() {
    int[] numbers = { 81, 19683, 6561, 1, 1594323, 9, 177147, 2187, 27, 729, 43046721, 387420489, 14348907, 243, 4782969, 129140163, 59049, 3, 531441 };
    assertEquals(655855944L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case96() {
    int[] numbers = { 256, 4, 64, 1, 4194304, 1024, 16384, 268435456, 16777216, 4096, 1048576, 67108864, 16, 262144, 65536 };
    assertEquals(536870911L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case97() {
    int[] numbers = { 625, 244140625, 1, 15625, 390625, 3125, 25, 78125, 9765625, 5, 125, 1953125, 48828125 };
    assertEquals(311249488L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case98() {
    int[] numbers = { 1000000000, 1000000, 1, 10000000, 100, 100000000, 100000, 1000, 10000, 10 };
    assertEquals(1134217727L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case99() {
    int[] numbers = { 2848, 8111104, 1 };
    assertEquals(8115199L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case100() {
    int[] numbers = { 1, 394949 };
    assertEquals(394952L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case101() {
    int[] numbers = { 15, 1048575, 31, 1, 32767, 2097151, 15, 7, 7, 134217727, 1, 134217727, 127, 7, 8388607, 3, 127, 4194303, 4194303, 3, 8388607, 1048575, 1023, 268435455, 7, 32767, 262143, 1023, 511, 33554431, 2097151, 131071, 536870911, 524287, 524287, 16777215, 4194303, 2097151, 255, 7, 536870911, 1048575, 1, 67108863, 1, 63, 8388607, 15, 8388607, 65535 };
    assertEquals(1125899906842624L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case102() {
    int[] numbers = { 177146, 43046720, 26, 14348906, 43046720, 2, 8, 8, 177146, 59048, 80, 59048, 2186, 129140162, 26, 129140162, 2, 14348906, 8, 387420488, 43046720, 2, 728, 19682, 19682, 14348906, 4782968, 177146, 531440, 177146, 2186, 242, 19682, 728, 129140162, 242, 19682, 387420488, 4782968, 387420488, 14348906, 177146, 728, 1594322, 80, 43046720, 1594322, 14348906, 4782968, 43046720 };
    assertEquals(1125899906842631L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case103() {
    int[] numbers = { 255, 4194303, 15, 268435455, 63, 16383, 1048575, 65535, 255, 16777215, 4194303, 3, 1023, 63, 4095, 1023, 1023, 1048575, 16777215, 63, 1023, 1048575, 255, 16777215, 262143, 67108863, 1048575, 268435455, 67108863, 262143, 15, 16383, 3, 262143, 63, 16383, 268435455, 1048575, 1023, 262143, 67108863, 1023, 15, 4095, 255, 4194303, 15, 63, 4095, 16383 };
    assertEquals(2251799813685262L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case104() {
    int[] numbers = { 9765624, 244140624, 3124, 244140624, 1953124, 624, 3124, 624, 4, 390624, 48828124, 124, 1953124, 624, 244140624, 390624, 1953124, 15624, 24, 9765624, 24, 24, 244140624, 15624, 24, 1953124, 78124, 124, 3124, 48828124, 24, 78124, 244140624, 9765624, 124, 1953124, 124, 9765624, 78124, 24, 624, 9765624, 390624, 78124, 624, 624, 15624, 244140624, 24, 124 };
    assertEquals(9007199254740995L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case105() {
    int[] numbers = { 9999999, 99999999, 9, 999999, 999, 99999999, 99, 99, 999, 9999999, 99999999, 99999, 9999, 99, 99, 9999, 9, 999999, 9, 999, 999999, 9999999, 999999, 999999999, 999999, 999, 999999999, 99, 9999999, 9999999, 99, 999999999, 999999, 9999, 99999, 999999, 999, 9, 99999, 999999999, 9, 9999, 999999999, 99999999, 9, 99, 9, 999999, 999, 99 };
    assertEquals(4503599627370504L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case106() {
    int[] numbers = { 8111103, 8111103, 8111103, 8111103, 8111103, 2847, 8111103, 2847, 2847, 8111103, 2847, 2847, 8111103, 8111103, 8111103, 8111103, 8111103, 8111103, 2847, 2847, 2847, 2847, 8111103, 8111103, 8111103, 8111103, 2847, 2847, 2847, 2847, 2847, 2847, 8111103, 8111103, 8111103, 8111103, 2847, 8111103, 2847, 8111103, 8111103, 8111103, 2847, 2847, 8111103, 8111103, 8111103, 8111103, 2847, 2847 };
    assertEquals(1152921504606849822L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case107() {
    int[] numbers = { 394948, 394948, 394948, 394948, 394948, 394948, 394948, 394948, 394948, 394948, 394948, 394948, 394948, 394948, 394948, 394948, 394948, 394948, 394948, 394948, 394948, 394948, 394948, 394948, 394948, 394948, 394948, 394948, 394948, 394948, 394948, 394948, 394948, 394948, 394948, 394948, 394948, 394948, 394948, 394948, 394948, 394948, 394948, 394948 };
    assertEquals(2305843009214088899L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case108() {
    int[] numbers = { 7, 8191, 131071, 2097151, 3, 1, 1048575, 262143, 1023, 63, 255, 524287, 536870911, 134217727, 32767, 268435455, 67108863, 8388607, 2047, 33554431, 4095, 511, 65535, 4194303, 31, 15, 16777215, 127, 16383 };
    assertEquals(1073741822L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case109() {
    int[] numbers = { 1594322, 59048, 177146, 4782968, 2186, 242, 80, 387420488, 129140162, 728, 43046720, 26, 2, 14348906, 19682, 531440, 6560, 8 };
    assertEquals(655855943L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case110() {
    int[] numbers = { 16383, 262143, 67108863, 63, 268435455, 15, 4194303, 1048575, 255, 16777215, 1023, 65535, 3, 4095 };
    assertEquals(402653182L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case111() {
    int[] numbers = { 124, 24, 78124, 244140624, 4, 390624, 3124, 624, 48828124, 15624, 9765624, 1953124 };
    assertEquals(311249487L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case112() {
    int[] numbers = { 999999999, 9999, 999, 9999999, 99, 9, 99999999, 999999, 99999 };
    assertEquals(1134217726L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case113() {
    int[] numbers = { 8111103, 2847 };
    assertEquals(8115198L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case114() {
    int[] numbers = { 1, 2, 3 };
    assertEquals(8L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case115() {
    int[] numbers = { 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000, 1000000000 };
    assertEquals(281475976710655L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case116() {
    int[] numbers = { 53454325, 43534, 4532, 321312, 13213, 5345, 6546, 76575, 98797, 99808, 43543, 4232, 453345, 8756, 456, 54, 54334, 1 };
    assertEquals(120563188L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case117() {
    int[] numbers = { 29877788, 99999999, 1000000000, 565200300, 1000000, 25678912, 23232323, 15, 2, 800001, 900000055, 1000005, 257, 1025, 1023, 8048, 500000000, 29877788, 99999999, 1000000000, 565200300, 1000000, 25678912, 23232323, 15, 2, 800001, 900000055, 1000005, 257, 1025, 1023, 8048, 500000000, 29877788, 99999999, 1000000000, 565200300, 1000000, 25678912, 23232323, 15, 2, 800001, 900000055, 1000005 };
    assertEquals(1125899907642624L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case118() {
    int[] numbers = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 90, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50 };
    assertEquals(1125899906842624L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case119() {
    int[] numbers = { 123, 2, 4, 525, 6, 4, 34, 567, 8, 65, 43, 24, 567, 8, 8, 65, 432, 2, 456, 789, 87, 654, 3, 456, 78, 9, 7, 6543, 456, 78, 6, 76, 543, 245, 677, 998765, 4345, 657, 54, 35, 43, 7579, 6, 52453, 677, 854, 354676, 213, 5367, 9 };
    assertEquals(1125899906842625L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case120() {
    int[] numbers = { 1, 2, 3, 4 };
    assertEquals(16L, signalintelligence.encrypt(numbers));
  }

  @Test
  public void case121() {
    int[] numbers = { 1, 6 };
    assertEquals(8L, signalintelligence.encrypt(numbers));
  }

}
