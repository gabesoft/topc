package topc.test.math;

import junit.framework.*;
import org.junit.Test;
import static org.junit.Assert.*;
import topc.math.*;

public class RGBGameTest {
    double DELTA = 1.0e-09;
    RGBGame rgbgame = new RGBGame();

    @Test
    public void case1() {
        String[] board = { "RG", "B?" };
        assertArrayEquals(new double[] { 0.0, 0.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case2() {
        String[] board = { "RR", "R?" };
        assertArrayEquals(new double[] { 1.0, 0.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case3() {
        String[] board = { "BB", "B?" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case4() {
        String[] board = { "??", "??" };
        assertArrayEquals(new double[] { 0.2098765432098766, 0.308641975308642 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case5() {
        String[] board = { "???", "???", "???" };
        assertArrayEquals(new double[] { 0.10704669003708767, 0.34847330183407 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case6() {
        String[] board = { "BB", "GB" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case7() {
        String[] board = { "BB", "BB" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case8() {
        String[] board = { "RBR", "R??", "R?B" };
        assertArrayEquals(new double[] { 0.11111111111111116, 0.5555555555555556 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case9() {
        String[] board = { "??B", "G?G", "???" };
        assertArrayEquals(new double[] { 0.03703703703703698, 0.23456790123456794 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case10() {
        String[] board = { "GGGG", "GRBB", "GGGG", "GGGG" };
        assertArrayEquals(new double[] { 0.0, 0.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case11() {
        String[] board = { "BGRB", "GRBB", "B?RR", "GBBB" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case12() {
        String[] board = { "BRRBR", "B??RB", "BBRBR", "BRRRR", "RGB??" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case13() {
        String[] board = { "BR?RG", "??BRB", "RG?GR", "BRG?B", "GB?RB" };
        assertArrayEquals(new double[] { 0.0, 0.33333333333333337 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case14() {
        String[] board = { "??G?G?", "?GGRB?", "RRGGGB", "RRRRRB", "RRG?RR", "?G?RR?" };
        assertArrayEquals(new double[] { 0.0, 0.18823350099070268 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case15() {
        String[] board = { "BGG?B?", "GRR?G?", "GGGGGG", "GBGGRR", "GR?B?G", "G?BG?B" };
        assertArrayEquals(new double[] { 0.0, 0.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case16() {
        String[] board = { "BR?RRRR", "BRBRRRR", "BG?RR?R", "BBRB?R?", "BRGRG?G", "RBRRRRR", "RG?B?BR" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case17() {
        String[] board = { "BGGRG?R", "GGG?RG?", "R?GGRBR", "RGR?R?R", "GGG?R??", "RG?RBRG", "GRGBGR?" };
        assertArrayEquals(new double[] { 0.0, 0.2171925011431185 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case18() {
        String[] board = { "B?BBBBRB", "RRB??R??", "GGGRRGRR", "GRG??BBR", "RBBBBB?G", "?BRB?BRR", "GBRRBRRB", "G?GBRG?B" };
        assertArrayEquals(new double[] { 0.0, 0.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case19() {
        String[] board = { "?RBG?GBG", "GGG?RRR?", "?GBGR??G", "GGGRRG?G", "??GGGB?B", "GRGRBGRG", "??R?RR??", "BBBGRRB?" };
        assertArrayEquals(new double[] { 0.004115226337448541, 0.1607986587410456 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case20() {
        String[] board = { "BBGGGGGG?", "GB?GGGGGG", "GBBBGGRGB", "G?GGGB?BG", "BBBBBG?GB", "BBGRGGBBG", "GBBGGGBBB", "BGBGBGBBG", "GGBGG?GGR" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case21() {
        String[] board = { "G?GBGBBRB", "GG?GGGRBB", "BGBRGBBGG", "GGGB?GRRB", "G?RBBGBBB", "BG?BBBBBB", "?GGBBBRB?", "RRBGBBBBR", "?R???BBBB" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case22() {
        String[] board = { "??BR?G?GRG", "GG?GRGRGRB", "BGGB?GGR?R", "BRRRG?RRGB", "GBRBRRB?GB", "RRGRRRRRR?", "GBGRBGRRGR", "BR?GG?RRRR", "R?GBGRR?RB", "?R?BGGBBRR" };
        assertArrayEquals(new double[] { 0.0, 0.33333333333333337 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case23() {
        String[] board = { "RRRRGGGRGB", "BBBRBRRBGB", "BRBBBGRBBB", "BBBB?GRBBB", "BGRRBRBB?B", "?BBBRBBBBB", "GBGBGRBBGB", "BGRBGRGBBB", "R?GRGB??RG", "BR?GBGGR?B" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case24() {
        String[] board = { "RBGRGR??R?R", "RRRB?RB?RRG", "R?RR?BB?RGG", "GR?RB??R?GR", "?BRRRRRB?RB", "RBGRR?RGBRR", "??BBGB??RBG", "GG?RGBG?R?B", "?B??GBRGBR?", "R???RRRRBRR", "RBG?RBRRRR?" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case25() {
        String[] board = { "B?B??BB???G", "??BB?R?G???", "R??RBB?R?R?", "BBRG?BB?GGB", "??BR?B????B", "????BBB?R??", "G???R?BR?RB", "?BBG??B?G??", "B???R???B?B", "???BG?B???G", "?BG??G??RB?" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case26() {
        String[] board = { "RRGRGBRGRRRR", "RGGBRGGGRBRG", "RGRRRRRRRGRR", "RBRRRGRBRRRR", "RBRRGRRRBBGR", "RGRGRRGRRRBG", "RRRRRGGRRRBR", "GRGGRRRGRRRB", "RRRGGRGRRGGR", "RRRBBRRGRRRG", "BGBRRRBRRRRR", "RGGRBRGGGRGG" };
        assertArrayEquals(new double[] { 0.0, 0.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case27() {
        String[] board = { "RBRGRBBBBGBB", "GRGGGRR?BRRB", "RRRRBRRRRBRG", "GRGGBBBGRGRR", "RBBRRBBGGRGB", "RBBBRRBGGRBB", "RGBRBGBGBRGG", "BBRGB?BBRBRG", "RRBGBGGGBBBB", "RRRRRRR?RRGR", "GGGRRRR?RBRR", "BBRRGBRGRRRG" };
        assertArrayEquals(new double[] { 0.0, 0.33333333333333337 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case28() {
        String[] board = { "??GGGBBG?GBGB", "BGR?G?G?GRGG?", "GRGBGGRGG?RG?", "GGGGGG?GBBG?B", "GG?GGRRGBBBGG", "G?GGGG??GBGGR", "G?GBGGR?BGGB?", "G???BGBG?BR??", "RGGGGRGGRGRGG", "GGGGBG?GGRG?G", "GBGGGGGGRGGBG", "G????GGRG?BBG", "GBGG?GG?R?GGB" };
        assertArrayEquals(new double[] { 0.0, 0.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case29() {
        String[] board = { "BBB?BGGB?B??R", "?BRGB?B?BBBBB", "BGGG?BR??GGBB", "RRGGGGGRGR?BR", "G??G?GGRRBRBG", "?BR?G???BGR?G", "R?BBRBBRRGRR?", "RR?B?GBRBB?G?", "RGRBRGBRGR?GG", "R?RBR?RGGGBGR", "??RRG?RB?BRB?", "B?GR?R?GGBBG?", "RBR?RGBGBGBRG" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case30() {
        String[] board = { "??G??RG?G?RRG?", "GBGRG???G?RGG?", "GGGRG???????RG", "G?GGG?G???BR?G", "B??GBGB?G?????", "?GG?B??RR?GG?R", "??RRG?R?G?G?B?", "?GB?BGB??BGG?G", "???G?R?G?GGGBB", "G?BG?B?GG??GGG", "?RG??????GGRRG", "RGGG??GR??GR??", "GRG?BRG?G??G?G", "?GB?GBBBRBBG??" };
        assertArrayEquals(new double[] { 0.0, 0.7612315990272722 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case31() {
        String[] board = { "BR??B??RR?BBBB", "B????B??R?GBRB", "RRR??RRB?????G", "R?RB?RRBRBRRR?", "?GBB?R?GG?R?BR", "?R???RB??BRRBB", "BBB??R????R???", "GR?R??RG?BR??R", "BGBB?R??BBBR?B", "BB???????R????", "B??RBRR?G?RR?B", "BBBRBRRB??BR??", "R?BRRRR?BRR???", "RRRRRB?RBB???G" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case32() {
        String[] board = { "??G?GR?RRGG?R?G", "RR?R?G?RRRBGGRR", "?GBG?BG?BR?G?R?", "GGGRRGGRGR?G?RG", "GGRG?GGR??RGR?R", "B?GRBRG??R?GBRR", "BR?RBRRGRRR??GG", "GBGGBRRGGRGRGG?", "GGGR?GBG?R?BGRR", "??G?RRGBBGBGRRR", "G?RRBGGB?GBGRRR", "R??BRRGGR?GR?BG", "G??GRRGGGG?G?RB", "?BG?GRGBG??G?G?", "G??RGGRGGRBG??R" };
        assertArrayEquals(new double[] { 0.0, 0.4066773169552218 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case33() {
        String[] board = { "BBBBBGRBBBB?RGB", "BBRBBG??GBRRBBG", "GRB?RBBRRB?GGGR", "RBBRRRRRRGBGRRB", "BRBRG?BGRB??RBB", "RRRRGRRBBRRBBRB", "GBBRBBRBBBGBRRR", "BRBR?BRGRBRBBRB", "BR??GBBRRRBBBGB", "BRBBRRRRGB?BRRR", "RBRR?BBBRBRBGBB", "GRBRBGBRRBRRGBB", "BRBBBBBRRBGRBB?", "?RBBGGB?RBRBRRR", "BGB?RBRBGBRBRRB" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case34() {
        String[] board = { "GG?GB?RR?GB?RGBB", "RG??R?GBGBG?GGBB", "BRRBG?B?BR?GRBG?", "BGGR?RGRRRBG?BBB", "??RGR?RR??BBGBB?", "?GRBBB?BRBBGBR?G", "??BBGR??GGRBB?B?", "R?B?BG?BBRGBG?BG", "??GRRBB?BBR?GRBB", "????RRRB?G?B?B?G", "GB?GGBG?RG?GR??R", "G?BRG?BGBBBRR?BB", "BRRGB?BB?RBB???G", "GBGG??RRB?B?RB?R", "G??B?G?G?GBRBG??", "GB?GBBG?GBGBGBB?" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case35() {
        String[] board = { "R?RB?BB?RRRBBRBB", "RRB?BBRR??RRRBBB", "?BBBBRBBB??B??RB", "BRB?BBRBBB?B??R?", "BBB??BBRB??B??BG", "RRBR??R???B?RR?R", "B??BRRRRBBRB????", "?RRR?RBR?R?R?BRR", "???BRRBRBRB?RRR?", "BBRBB???R?RR??BR", "R?BBB??RR??RRR?B", "BB?RBR??R?RBBRBB", "??RBRBBB?R?RB?BR", "RB?BB?RRR?BR?BRR", "?RR?BR??RBB??RR?", "R?B?RR?R?BBRRRRB" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case36() {
        String[] board = { "?R?R??RBRRBRBBR?B", "RBG?RBR?R?RRRR?BR", "BBRR??B?BRBBRBBR?", "BRB?BB?R?BBB?BR?R", "?BR????RR?R?B?BB?", "RBRB?R?B?BBBRRR??", "RBB??BBB?BB?GBBBR", "?BBRBRBR?R?B?B?BB", "R?BGBR?BRBGB?R?BR", "?B?BBGBB??BRRB?R?", "B?B??BRR?RB?B?BBB", "BBGBRBBBRRR??R?BB", "??????BBRR?BRBBBR", "RRBBRBBRBRRBBRBRB", "RB?B?BBRR?R???BRB", "BRB?BR?BBBBRRBR?B", "?R?B?BBBBBB??RB??" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case37() {
        String[] board = { "RRGGBGGBRR?BGBGBB", "G?GB?G?GGGBRGBG?G", "BGGGGBBGBRGGRBGGG", "BGB?BGBGBGBGGRBGG", "GGGBGRR?BGRBBGBBG", "GGBBBR?GGGRRRGGGB", "RBGBGGG?BBGRGGGRB", "GB??BRG?GBB?B?RGG", "RBG??GRGGGGBB?GGG", "GRGBGGBB?BGBBGGRG", "?GGR?G?RBGGBGB?BG", "BRG?GBGRGG??GGGBB", "GBGGBBGGBBGRB?BBR", "RRGGGBGRGR?BRGGR?", "BRBGBBBR?RBBGRRBB", "?BRBGGBRBBRBBGRBB", "GGGRGBGBGRG?RBR?G" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case38() {
        String[] board = { "BBGBGGBR?GR???BRRR", "BBG?BBRRBBRGRRBBGG", "R?RBGG?RGRRBRBRGB?", "BBR?G?BBGBRGRR?RBG", "BBRRBBBRBGG?R?G?B?", "BGR?BRBGRBBGRGBR?G", "RGB??GB??RGGBBR?BR", "???G?RR?B?RGB?R?B?", "BBRGRBBGBRB?BGGBRB", "GRB?RG?GBBGGB?RGBG", "GRBBRRBBB?GG??BBBB", "?BBR?BB?GG??BRB?BR", "BBGRGB?BR?RBRBRB?B", "?BBBBGGB????BBRB?B", "?BBRGRRB?RBR??BGG?", "GRB??BGR?BB?BGRGB?", "RBGGBBRBBRGGRRGB?G", "BGRBBGRRBRBR??B?BR" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case39() {
        String[] board = { "??R?R?RRGRG?RG????", "GR??G???????R???R?", "?RGRR????G?R?????G", "RGR??R??RR??RG?R?G", "?????G?RRRGRGRGRR?", "GRGR?R?R????R?R???", "RRR??BRG?RR?RRBBRR", "?RR?R?RGRR???RR???", "??GRRRRR?????G??RR", "?GG???BR??RB?????G", "???G???G?G?R??R??R", "?R??RR?G?????RR???", "BR?BR???R???RR???R", "RRR?RR?BBGRR?RG???", "RBRRR?RRRR??RGG??G", "RRRR???R??RRR????R", "R??GRGRRG?R?RG?RRG", "RB?G??RG???R??R?R?" };
        assertArrayEquals(new double[] { 5.08052634252687e-05, 0.6726783604128597 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case40() {
        String[] board = { "RGRRRGBRRRRRRRRRBBR", "RBRBBRBBGRRRRRR?RRB", "RBRBR?RRR?GRRBRRG?B", "RRRRRRRBRRRBRGRRGRB", "GRRRRBG?RGRRRRRRRRR", "RBBRRGBRRB?RRRBRRRR", "R?RRGRRRBRRRRBRBBBR", "BRRBRGRRRRGRRBBRRRR", "GBRRRGRRRRGRRBB?RRB", "??RBRRRRRRGRBRGBBRR", "RBBRGRRRBBRBRBBRRRB", "BRBRRRRB???RBRRBRRR", "RBR?RRRRRGRRBR?RRRR", "RRRRBB?RRBGBRRRRBBR", "RRRRBRGRRRRRRRRBG?G", "RRRRBRRBRRRBB?BRGBR", "GRBRRRRRRBRRRRRRRBR", "BRRRBBRBBRBRBRB?RGR", "RBBRBBRBRRRRRRRR?RB" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case41() {
        String[] board = { "RGGGRGGRG??RGRGGGGG", "?GGG?RGRGRGB?GBRGGB", "GGBRG?GR?RGGRG?GB?G", "RGGGG?RG?RGBRGRGG?G", "RGRRGR?GBB?G?RGBB?R", "?RGRGGBGRGGR?GBRGG?", "GRB?GRGGGRGGGGRBGRR", "GGGRRGGRGGR?RGGGGBB", "GGGRGGGGRGBRGRGGRGG", "RGRRRB?RRBRGGGGGGRG", "R?GRGGG?GGRGBGRRRGG", "RRRR?BG???RGGBGGGRG", "GRRGGRRGGG??GGGGRGR", "GG?GGBR?RGG?RGRG?GR", "RGG?GR?BGBRB?GR?R?G", "RR?RRGRBRGGGR?RRRRR", "??GGRBGGG?GGRRGGBRG", "RBRGRRGGGGG?B?RGG??", "RRGRG??RRGR?GGGRGGR" };
        assertArrayEquals(new double[] { 0.0, 0.2171925011431185 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case42() {
        String[] board = { "G??RGGGR?GRG?GRGGG?G", "?GR?G?GR?GG???GRGGBG", "RGR?GRG?GG?GG?RG?B?R", "RGRG?GRBGGG?RR??BBR?", "GGGGGRGRGR?GGRRGRG?G", "??RGRRGG?RGR?GRGGG?G", "GRGGRRRRGR?GGGG?GGRG", "BRG?GB?G?G?GGRRGRGG?", "RGGGRGRRGG??RG?G?RG?", "B?GRRR?RRGGBB?GGGB?G", "G?GGG??R?R?RRGRGGGGR", "RRGGGRGGRR?GGGRGR?R?", "?GR??G?GB?RGG?RB?GRR", "G?GRGR?R?RG?GGGRG?RG", "G??GG??GRRGGGGRRGG?G", "GG?GR??RGGG?G?G?GGGG", "GGR?BGR?BG??GGG?GGGR", "R?GGRRGRRGGGRR?RR??B", "??GGGRGRG??RRG?G?GGB", "RGG?R?GRGBGRGBRGBRGR" };
        assertArrayEquals(new double[] { 0.0, 0.08491727198586885 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case43() {
        String[] board = { "GBRBBR??GGG?B?GBGRGG", "GGB?G?GG?GRG?GBGRBRG", "B??G?G?GRB???G?????B", "??GG?RG?GB?G??B??BRG", "GGBGG?G?GGBG????GRBR", "G?GRRRGG??BRGRGR??G?", "??RB?BGBB?BB??GGGGRG", "?G?GG??GR??G??????GG", "??R?G?GGGG??G?R??RGR", "??R???B?RGG??B?GR?G?", "?BBG?BG?GG?GRG?RGB??", "G?GB??B?GGGG???G?G?G", "??G???GRGGRG?GGR??GG", "??G?RGGRRBG?RR?BG?GB", "?RBGGG??RBR?BGRGGG?G", "GG?GGG??GG?GGRRRB?GG", "G?GG?G??GBRR?RR?RGG?", "?BBGGGGRGGGB?GGGGBBB", "GG??GR?RGG?G??R?RB??", "RGBG?G?G??G?GRR?BB??" };
        assertArrayEquals(new double[] { 0.0, 0.928770267203727 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case44() {
        String[] board = { "R?RR?RR??RRRBR?BR?RB?", "RB?R??????R??R???B???", "RRRRR?RRR?R??BR?R??R?", "?RRR?RRRR??RR??????GR", "RRB???GR????GR??RRR??", "R?R?R????R??R?R???RR?", "R?R?R?R???R???RRR??R?", "?R????RRRB???R?RR??R?", "???RR?R?R??R?RRB??RR?", "?RRRR?RRR??R?R???R???", "RRR?RRRRRGR?RRRRR??RR", "RRR??RR??RRRR?R?RGRGR", "RR??RRR?R??RRRRR??GRR", "RRRRR?RR???RR?????GRR", "?RRRRR?B?GR?R???R?RR?", "R?RRR?R?R?R??GB??RB?G", "????????RRRRRR?R??R?R", "????RRRR?R??R?R?RR???", "R??R?R?R?GRR????R??R?", "??R??RR?R?R?R?G?RRR?R", "GRRRRR??????RG????R?R" };
        assertArrayEquals(new double[] { 1.1917234443381552e-05, 0.6108158113525025 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case45() {
        String[] board = { "GGGR?RR??BRGBB?RRBBBB", "R?GG???B??RRBGRG?GRRR", "GRGGRGRGRG??GB??RR???", "??RBGBB??RG?GGGRBRGGB", "B?R?BGR?GBBB?GB?B?RRB", "?B?BBBBRBG?GR?RGRRR?B", "RBB?R?GB?G??B??RBBBR?", "GGRB?RRR???BRGRRRRRBR", "BGBGG?BBGGGR?B?G?BRRG", "BR?G?GGBGGRBB??GRG?G?", "BGRR?BGG??R?GBBRR?RG?", "GGBGGGBGGB?BR?B?R?RGG", "GGGBBBBR?R???GBRB?B?R", "GRRGBGR?GB?GRGBGGR??B", "BGG?G?RGBBGBG?R?G??GB", "G?GB?RR?G?GBRG?RGB?BR", "G?RG?BGRBGRBR?B??G?BG", "BB?R?GGGGBRGB??BBRR?G", "BR??B?GR?B?R?BGBGBRGG", "?BGBGG?RBBRBGR??GGGBR", "RBB?BGBRG?GBBGGR???GB" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case46() {
        String[] board = { "?RR?B?????B???RB??R??R", "??B?BB?R?R????RRRBB???", "B?????B?R?BRB?B???R?R?", "B???BB??RR????RR?R??B?", "GRBB?B????R??B?RB???G?", "??RB?????R?????BRR?RB?", "B??R???B?????BR?R?BR?R", "???????R?BRR???????RRR", "?RR??R???R?B?RBRR?RR?B", "?G?B??R??B?R????R??BR?", "R??B????R?B???B?R??RB?", "RB???????R?RB??RRR????", "?R??B?B??BRRR??R?R???B", "????R????B?RRBB???B??R", "??RBBR??BRRB???R???R??", "??RRRR?R?????BBG??RRRR", "???R?RR?R????RR??G?RRB", "B?RR???RR???RRRRBB???R", "??B?GRBB???B?G?GR?R?R?", "??BR???R?BBB?RR?B?BR?B", "??RB?????R??RG??B?RRBR", "???R?B???R??R???R???G?" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case47() {
        String[] board = { "RG?GRBG?RRRR?RRG??GGRG", "RGGGRG?GGRGBR??GGR?R?G", "??RR?RRG??GRRGRGGGRR??", "??BR?BBRRRRRRB?GGB?RRR", "?R?RR?RRRRB?RRRRR?GGGG", "?GRGRGBR??RRRR?GG?RGGG", "?B?RBGG?RGGGRBR?RRBRRG", "RGRGR?GBRGGGRGR??GGGGR", "RRGBB?RRRRRRGB?GRGGG??", "RGGGRGRGGRGRGBG?RRGR??", "??R?RGRBRGG?BGGG?GRB??", "R?GBR?GRRRG??GRGG?GR?G", "GGRRRRB?R?RG?RGGGRGG?R", "??GRRBRGRBRRR?RG??R?RR", "?RG?RGGGRRGR?RRRRRR?BR", "GR?GRGGRR??GRG?RR?RRRG", "??GR?GRRG?RGRRRGGRGBB?", "RBRGRRRR?GG?GRGGGG?RG?", "RGR?RR?RGRRGRB?BGRGRRR", "RGB?RRR?RGRRRRBGRRRRGG", "?RGRGRRRRGGRGGRRG??RRR", "??GGRGR?B??GB?RGGGRG?G" };
        assertArrayEquals(new double[] { 0.0, 0.5752724580346086 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case48() {
        String[] board = { "RRR?RR?RBGGRRGGGBG??RBG", "RG?GRRGRRR?RBRRRRRBG?RG", "?BGGGRRRRRBRBR??BRR?RBB", "RRB?GBGBRGR?BB??GBRR?R?", "GGRBRR?RB???BRGB?RRRRRB", "RRG?GR?RR?RRBRR?RRBR?G?", "RRGB???GBGRRGG???BRGGRB", "RRR?G?RRRRGG?RBRRRGRG?B", "RRBR?R?BRR??RRBR?RGRRGB", "GR?RRGRGRGRRR?GGBGBRGBR", "G??RGR?R??GRRRBRR?GRG?R", "??RRR?RRBRR?RG?RGR?RRGR", "RRR?BG??GGRRG??R?GRB??G", "RRRBR?RBR?BGRB???RBRBR?", "R?BRBBRBRRBB?GRG?RGGBBB", "RG?BRGRBRRBRRR?RRGBGRRG", "RRRGRRBBGR?GRBRRR?RGGRR", "BR?RBRRBGRB??RRRBG?BBBR", "G?R?RBRGBR??GRRRGRBR?GB", "?RBB??GRRG??G?BBR?B?RR?", "GRG?GBGBBRRG???RBRRRGRR", "B?BRGGBRRR?RBRRB?GG?RGR", "?RR??RRRRRGBB?RG?BRRRG?" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case49() {
        String[] board = { "RRRR??RGRBRRRRBR?RRB?GB", "RBR??RR?RR?RRRGRBRRRRG?", "RRRG?RBRRR?RRRGB?R?GRRG", "GBR?RGBGGBRRR?BRBRBRRRR", "R??RRG?RB?RR?RRBR?RRR?B", "RRRRRR?RRR?RRRGRRR?RRBR", "RBR????BGRRRRRRB?RB?RR?", "RBRRRBR??RBRRBGBRRR?RRR", "RRRRR??RRR?RRB??BGRBGRR", "?RRBG?RR?RRRRRB??R?RGGR", "RRGR?RRRGGB?BRRRRRRRRBR", "BRBR?RGB?RR?RRR??BRRGB?", "R?BRRB?RB?RRB???RR?RRGR", "B?RBB?BRRRRRRBRR?RR?RBR", "?RBR??RR?B?BRR?RRRBBG??", "BR???BRBRRRRRB?BGB?RRBR", "GR?RRRRRBR??RRBRRRBBRRR", "BRBBRRRBRR?RRRRBR??RRRR", "RRRBBR?RRRRRRR?BRRRBBRR", "BGBRRRR?R?RBBRRBRBG?RR?", "?R?RRRRRRBRBRR?R?BRBBRR", "BBRRR?RRBBRBRB???RBBRBR", "?BBRGRRBRB??RR?GGGBRR?R" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case50() {
        String[] board = { "GR?GBG?RR?GRRRRRRRRRG?RG", "?GRR?RGRR?BGG?RRGRRGRRRG", "?RRG??GRRBGGRRRRRR?BG?B?", "R?GRRRBGRRR?RR?BRR?BGGRR", "GGRGRRRBRRG?GRRG?RGR?RGG", "R?RBGRRRBGRGRRRRGRRRRB??", "RGRGR?RRG?RGGR?BBRGRBR?R", "GR??RBB??RGGGGR?RBRBGRRB", "RG??RRRGBBRGRRRRGRR?RRRR", "RBRB?RG?R?BRR?RRR?RGGR?R", "?BRRBRRR?RRRRRG?RR?RRB?R", "?RRRRRBGRRGB?RGGRRGRGR?G", "???GBRRRR???BRGRR??RBGGG", "BRR???BRGRRGRRBBRR?RRRGR", "RBR?GRRRRRGG?GRGG?RGRGR?", "BG???GGRRRRRRRB??R?RRRGG", "RG?B?RG?GG?RRRRRGRBGG?RG", "RGG??RGRGRGGRGBRR?RGGGGR", "R??RGGB?RGBBGGRG?RGRRBRR", "RR?BR?RRGRR?BRRGRRRRRB?R", "R?GRRRRBBRR?RGG?RGGGG?RG", "GGRBRGGR?RGRRGRGRBRRGR??", "R?RGRRRRRB?RRBRRGRR?GRRB", "GR?GR?BRBRGRR?GGRGG?GGRB" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case51() {
        String[] board = { "BBBBBGGGGBBG?GBGGBGBGBBG", "B?GRGGGGBBBGG?BG?BBBBBBB", "G?GGGBB?BGBBGGGGBBBG?GBB", "GBBGBBGBBGGGGBRG?BBGG?BG", "BGGBBBBGGRGGBGGGBGB?GGBB", "BBGGGBGGBGGGBBBBBGGGB?BG", "BGBGBGBGG?B?G?BB?BBBB?B?", "BGBGBGGBG?RRGBGGB?GGBBG?", "BGGGBGBGBGB?GBBGGGBGGGBG", "B?GGBGBGBG?BBBBBGBG?GGGB", "GBBBGGBBG?BBBBBBBGB?RGGG", "GGGBRBGGGBB?BGBGBGGGGGBB", "B?RGBGGG?BGBGGGBGG?BGBBB", "GBGGB?GBGBBBGGGGGGGBBBBG", "GGGBB?GG?GBBBGGBG?GGGGBB", "BBGG?BBGGBGGBGBB?GBBBBGB", "G?GBBGGGGBBB?GGBGGGGGBGB", "GGBBGGGGBB?BGBBBGG?BBGGB", "BGGGGBGBGGBBGGBBBG?GBRBG", "GGBB?BGBBGGB??BBGBGBGBBB", "BGGBGGBG??BBGGGBGB?GGBGB", "BBBGBGGGGBBGGB?G?GGG?BGB", "?GBBGG?GG??GBBBGBBBGBGBR", "GGGGBBBBGGGGGBBGB?GG?GBG" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case52() {
        String[] board = { "R?BB?RBG??G?BRB?RRGB?R?R?", "GB?B?BG?BGR???BGB?BB?R??G", "GB???GR?B?B?RR?GRBGRBB?RR", "RR??R?BGB?RB?RBBBG?G??R?B", "GBRRGGGRGGGBGB?BBRBRBBRBR", "BRRBRRG?GR????BRG?GBRG?BB", "GGR??RG?R?BGRGRGRGGRGGG?G", "GRBBRBRRRBRG?B?R?GRR?GG?G", "B?GRRRBGBBGRBBGBRRBBBBBRR", "RGGGRR?GG?B?GB??GBR?GBRGB", "??B?B?BBBBBRGBR?GGRGBBRB?", "RGR??GGRBG??RRBRB??RBG?GB", "BR?RBBGRRBBGGBRBRB?B??B?R", "GRBGGBRRRGGGRGRBGBR?RRBBB", "BR?BR?RGG?BRBBBBRR?GGB?RG", "BRGRBBRRGB??RGRB?BRGGRG??", "?BBG?GR?B?RR?BB?BGGRGGR?R", "RR??BRRGGRBB?GBRBRGBBG???", "RRGB?BGG?RBRBRBRBRGBRBGG?", "G??G?RBGG?RGGG?GRR??GRRRB", "GGGRGR?RBRGBBR?RBR?GRB?GB", "GBGRR?GBB???RBGGBB?RBBGRG", "GGRRGG?RGBG??RR??RGRBBRGB", "RR?RBRGBGR?GBGRGRGGBRB?R?", "??BGG?GGR??R?RGRR?GBRRG?R" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case53() {
        String[] board = { "BBGGGBR??BB?BRGBGBBBGBGGR", "?GGG?GBG?BR?BGGGGGBGR?BB?", "BBGBB?GGG?GGRRGBRG?BGBGG?", "RGGRGG?GGGRBBGGBBBG?G?BGR", "?GBBGBBBBBBBBGGB?BBB??BBR", "?BBBBBR?BBR?BBGBB?BRBRRGG", "B??BBR?GGGBRBGGBB?B?RBRGG", "??GBBBBBRBR?GBGGBGBRBGBGG", "GRGBG?GR??B?BGB?RBBBR?B?G", "R?BB?BB?BRG?BBBBGGGGBBRGG", "BB?GGBGBBBGB?BGBGGGBGBGRB", "BGGBRBB?GBBBBBGBBBGBBRBGG", "RGBBG?G?GBBGBBGBBBBRBBGRB", "?BGG?BGGRB?G?GBBGGBBGBBBR", "GGBBBRBRBGGRGBBBGGRRBBBRB", "GBBGGBR?RGGBBBBRBGBGGG?GG", "BG?RBBBRBGB?RBGGRRB?BGGBR", "?GG?BRBBGBBGGBGBRGG?R?BBB", "GBRBGBGRB??G?B?GGGGGBGGGR", "GBRRGRB?GG????BRBRBGB??GB", "BBR??RBGBGR?GBG?GGRBBBBG?", "GRRBRBGBB?BBBBGBRGBBGBB?B", "?GRBGRB?BRBGRBGGGGR?GBBBR", "BGR?G?B?RGGBRGGGGBRRB?BGG", "GBGBRGR?BG?RGGGBRBGGBBG??" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case54() {
        String[] board = { "RBBBGBBRBRBBRBGBGBRRGRBRBR", "BBBBBBBGBRBB?BBBBBRRGGBGRB", "RBBBBGRBBBRGBBRRBBBRGRGGRB", "BBBBBG?RGGBBGBRRRGRBBBBGGB", "GRRRGGBRBGBRGRRBRR?BGGGBRB", "BBGGBRRBRBBBRBRBRBBRRGBRRG", "RRRRGRRGBRRGBGGBBBGBRGRBBR", "RBRRRBBRGBGBBBBGBBBBGGRR?B", "BBBRGGGBGBBRBGRBBR?GRRBRBB", "RBRBBGBB?RRRRRB?BRGRBBRRBB", "GGG?RGRB?RRBGBGBBRGRRBGRRR", "BGBRRRRBBGB?RBBRG?BBRRRGRR", "G?GBRR??BRRGBGRBBRBBRBRBGG", "BGBGRGRGBRRRRGBGRRR?RRGRRB", "BBGRRBGBRBB?GGBBGG?BGBGRRG", "BR?BRBGBRRRRRGRRBRRB?BBBBR", "BG?GBGRBBRBGRBBR?BRGBRRRRB", "BBGBGBGGGRGRBBG?BRRBBRRBBG", "BRGGRBRRBRBGG?BBBGBBGRBBRB", "BBRBGRRBBGRGRBB?BBBGBRGBRG", "BRBBBRGRBGBRRRB?GBBBBBBBBB", "RGBBR?RBRBBGBBBRRRBRBRRBRB", "RRRGGBGRRBBGRRRGGBBBRBRRBR", "RBBBBRRBBRG?GGBRGBRGRRBBBR", "BBRBRRBRRGR?BRBBGBGGGBRRRG", "RGRBGBGRGGRRRBBGBBBBBRGRGB" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case55() {
        String[] board = { "BGGGB?G?B?BBBB????G?GB?GBB", "??GBBBG??G?GB?RB?B?G?GBGBB", "B??BGBGGG?RBB?BG?GB?BBBG?B", "BB?BGBBBBBBBB?G???GB?G??BR", "G?????G??BGBBGBBBB??BGBBG?", "BG??BG?GGBBGBGBG??BB??BGGB", "BB??GG?BGGB?GB???GGBGB???G", "?GGG?B??BG????BG?G????BGG?", "??G?G?B?B?B???????GG????G?", "?B???B???GBB?B???GBGB??BBG", "GB??BG??G??B?BG?GBG?GG?GGG", "?GB?G??B??GGRG?BG?????GG?G", "?GGB?GG?B????G?G?BGG?G?GGG", "??G?GRG?GGG?G?G?BGBBGGG?GB", "G?BB?BG?GGGBGBG???B???BRGG", "BG?GGBBG??B??BGG?BB???R?GG", "GBGGG?GBB?B?BGGB?GBBBG??GB", "BRGBGGG???G?GBBG???B?G?G?B", "?GBBG?G?G??BBB?B?GGB?G?GGG", "G??GRB??GG?BGGGBG?GBG?GGG?", "B???BBG?GBG?GGB?G?GBBR?GRB", "GB?GGBBB?G??BG?G?BB??BBBGB", "G??GGG?BGB?BB?GG??????B?GG", "GGG??GGB???B?G????????BB?G", "??GBG??GR?B?GGBG??GGGBG?GB", "B?GRGBBGB?GG?G???RGBBRG??G" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case56() {
        String[] board = { "GBRGBG?GRGGBRBBGRRRGRBRBRGR", "RRBRRGRRRGBBRBRRRRRGBGBRRGB", "BBGRBRRBRGBRGRRRBBGGRGRGRGB", "RBRBBGRGBRBBRGRRGGBBRRRRRRG", "BRBRRGGGRGBRBGGBRBRRGRRBGGR", "BGRRBRRGBBGRRRGRGGBRGGBRBGG", "BRGBRBRGG?GGBBGGRGRRRGRRB?B", "RBGGGGBRRRRRGBRBGG?RGGBGRBB", "BBBBBRRBRGGBGBGRBRGRRRRGRRG", "BRRRRGRGRRRBRRGBRGGGBBGGRGR", "GRBBRRGRBBBRGRRBRRRRRGRBRRB", "RBRGBRRRBRRGRRBRRGBRRRRRRRR", "BBRRBGGRRGRBRRGGBRRRBRGRGGG", "BGRRRRRBRBGGRRRBRBRRBRGGRGR", "GRRBRGBGRRRBRRRGGRRRRBGBRRG", "GBRGRRGRBGGGGRGBRGBBRRRRBBR", "RBGRB?RRBRRRBGRRGGGGBGRGRBB", "RBGRGBRRGRRRBGRRBGGRGBRBRRR", "RRRRRGBB?BRBBRBRRRG?RBGRGRR", "RRRBRRG?GBRRRGBBRRGRRGRRBBB", "GRGGGBGRRRRRGRBBRRGRGRRGBRG", "RGBGRGRRRGRRGRBBRRRBBGRRRBG", "RGRRBGGRBGRGBBGRRRRRRRRBRBR", "GRRGBGRBBGBBRGGRG?BRBRGBBBB", "RBRRBBRRRRRRRB?GGBBBBRRRGGG", "RGGBGGRRGRGRRGGRBBRRBBRRR?R", "R??BBBRRBGBGRRRGBGBBRRGRGRR" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case57() {
        String[] board = { "GRGBBBGBGRRGRG?GRGBBRRRBRRG", "RGRGGGGRBBRBR?GBRGGGGBRRBBG", "?GRGGBRBBRBBGGBBBBRGGGGBBBG", "RGBBGGGBBGGBGGBRRGBRGGGRRGB", "RGGRGBGBGGGGRRBBGGRG?GGGGBB", "BGBBRGRRGBRRRRBRGBBRRRGRGGR", "RRBGRGGRGRGRGRGRGRGG?GBGGRG", "RBBRGGBGGRBRGRBGRBGGRRGRRGR", "RGGGRBBGRRRGRRGGBBRRG?RGGGG", "RGRRGGBRRRBGRGGRGGRBBGGRG?G", "?GGRRGGRGGG?GBBGRGGBBGGBGGG", "GR?RRGRGGRBBRGRGGGG?BBRRRGG", "GGGGGGRGRBGBRRBRGRBGGGGG?GG", "BRGGRRBRBGGRGRGGRGGGGGGGGGG", "GBGGBBRGBGGRGGRRGRGGBGGGGGR", "BBGRRRGGGR?GRRBGRGRGGRBBRGR", "GGRBGG?GGGBGBRGBBGRGRGGBRGG", "RBGRGRGG?GRGRBGGGGRBBRGGRGR", "BBGGRRGGGRGGRBRGRB?RRGRGRRG", "BGGGGR?RGBGGGRGGGGGGGGGGRGR", "RGGGRGRRBBGGBGGGGRRBBBGBRGB", "RRRGGGG?RGGRBGRRGRGBGRRBRRR", "GBBBRBGRRGRRRRBGGGRBRRBRBRG", "GGG?GGRGGRBRGGGGGRGGRRBGBGB", "GRRRGBGRGBBRRBRGGRRGBRBGGGG", "RRRGGRGGGRBGBRGGRGRGBGBGGGR", "GRBGGGBGBBRRBGBGBRBRBBGRGGG" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case58() {
        String[] board = { "GGRG??GG?G?GGRG?GBRGGGGGRG?B", "BRGBGGGRGRRRBGGGR?B??RBG?B??", "G??G??RR?GGG?R?GRR????G??GG?", "GGRB?G?GBBGBGG?G?GGRGGG???RG", "GG?GRRGGBGBRG?GRGG?G?B?RGGGG", "GR?R?GRG?GG??BGGGGGB?RGGG?GG", "GGGGGGGGRGG?GG?BG?GG?GGGGGBG", "G??GGGRGG?G?GGRBGGGG?GBGGGG?", "G?RG?GG?GGGRGB???BRGGGGRG?GB", "GGGRG?RGG?GGGBGBGGGG?GR?GR??", "RGGB?GGGGGGGG?GB?GBRG?G?R?GG", "BGGGRB?GGG?GBGG?GBRGBGGG?R??", "?GRG?GGGRG???RRGGG??BRGG?R?G", "GB?BGGRGGGGG?GGGGGGG??RRGGBG", "GGGG?G?RGRRBG?GBRG??GGGBGGRG", "RGGB??GGBBGR??GGG?GGBR??GRGG", "?GGGGGG??GGGR??GGGGGRGBGR?G?", "?BGGBBGGG?R??GG?R?GG?GGG??G?", "RGG?GGG??BG??GG?G???GGRGGG??", "?GGGRGGG?GRG?B?GGGGRGB???G??", "GGB?GRGGGG?RGGGGGGGGGR??GGGG", "?GBRGGG??R??G??GGGRGRG?RGRB?", "GGBGRGRBGG?RGGRBR???GG??GBBR", "BGRBGG?RGGBGGGGGGGRGG?GGG??B", "?RGRGG?GGGR?GRGRRG?BGG??GRG?", "GGR??G?GRGGGGGGGRG?GGGG??GB?", "RGBR??GBBG?GBGBGGG?G?GGGGGR?", "GGGB?GGGR?GGRGGGBRGGRGRGG???" };
        assertArrayEquals(new double[] { 0.0, 0.9965745126092183 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case59() {
        String[] board = { "RBGBGBBGBBRBBRB?BGGRBGBRBBGB", "BGRB?BGBBBBBBBBGBBBGBGGBBBBG", "GBBBBBBBBBBGG?BBBBBBBGGBBBRG", "GBBBBBGBGGGGGBGBBBGRGRBBGBGR", "GBBGGGGG?BBBRBRBGBBGBBBBBBGG", "BBBGBGBGBRBBBBBGBGBBBBBBGBBG", "BGGBBGGBGGGRGBBBGBGBG?BBGR?B", "GGBGBB?GGGBBGGBBGBBBBBBBRRBB", "BBGBGBBBB?BBBBGBBGGBBBBGBBBG", "BBBRBBGGGBBBBGGBBGGGBBRBBBBB", "BGBGBBBBBBBBGBGBGBBBBRBBGBBB", "BGBBBRBGBBBBRBBGBBBBBRBBGGBB", "BBBBG?BBGBBBGBBBBB?RBBB?RRBG", "BBGBBRGGBGBGGG???GRBBBGGBBBG", "GBBBBGG?RBBGBBBBG?GRRGBBBBGB", "RGGGGBBRBGBBGBBBBBBRGGBGGGGG", "BBR?BBBBRBRBGBGBR?RRBGBBBGGG", "BBGRRBBBBGGGBGBGBRGGBBBBGGBB", "GBBGRBGRBBGGBGBGRRBRBRBGGBBR", "GGBGBBGBBGBBBGBGGR?BRGBBBBGB", "BBGGBBB?BGRBBRB?RBBBBBGGBBBG", "BGRBBGBBBBBGB?BBBBGGGGBBRBBB", "BBBBRBGBBBBGGB?GGBBGBBB?BBBG", "GRBBBGGBBRBBGGBBGBGBB?BBBBRB", "BBBBBBGBBBBBGRBBGBGBBBBBBGGB", "RGBGGGBGBBBBGGGBBBBBBBRBGBGG", "GBGBGGGBBG?BBBRBBGBBBGGBBBBR", "BBGBBBBBBBGGBGG?GBBBGBBGGRBG" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case60() {
        String[] board = { "?GGBB?GBBRRBR?BGRRBGGG??GGRGB", "GGGGBGBBGGRR??GGG???B?RGBGBG?", "?RRGBBBBGRGGBBBGG?GBBG?BGB?GB", "?BGB?GR?RGGGBBBBRB?BGGB?BRGR?", "R??BB?G?RBBGRG?BB?GGBGB?GR???", "G?GGRGGGRGBGB??BGR?G?BRBR?BR?", "GGBBBRBBB?RGRGGBBBGBR?BGBBR?G", "BGRGGBGRB?GGB??RGBGRBGBG?GRRB", "GR?BGGGR?BRRGBBGGB?BGRBBBR?RG", "RBGGBGGGGBBRRBB?GBR?BG?BBRG?B", "RBGGG??GGGG?RBBRRBGGRGBGRG??G", "?GBRR?BBG?BB?BRGRG?GBB?RGG??G", "R?GBRRRGB?RBRRRGG??B?RB??BGG?", "R??BRBG??BG??GBR?RRRGGBGBGGGB", "GBRGGBBBRB??BGB?GGBBBRGGGGGB?", "B?BR?BBRBBGRBGR?GBGRRRRBBGBG?", "BBBGGGGGGRBBGGRB?BR?GGG?RGRGR", "GR?BBBRGB?RRG?RRGG?RBBGBBB?RR", "BBGGBGB?GGR?RGGBBG?RGB?GG?GGB", "RRG?B?RGGGB??GBG??GBG?RRRGGGR", "GBBGB?B?BBRRGBBGRGRRGBBR?BRGB", "BGGB?GRRGRBBBGGRBGGB??BRBGBR?", "?BBBRGBBGRG?BRBGRGRBBRBGBG??G", "?B??GGBRGGBBG?B?BGGRBGBGBGRRR", "BGR?BGRBRB?GBBGB?BGRRRGB?BBRB", "RBBB?GG??GBGGRBGB?R?BGB?GGRB?", "?GRGB?B?B?B?GG?RBGBGR?GGGB?RB", "RRB?BGB?GGR??BBB?BRB?GGGBGGRG", "GBGB?BBRGBBBBBBB?BG???GGRGGRG" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case61() {
        String[] board = { "RRRBRBRRBBBRBRBBBRRBRRRRBBRRR", "BRRRRRRBBRBBRBGBRBBRRBBBRBRGR", "BBRBRBRBRBBBRR?BBBGBB?GBBBRRR", "BRBRRBRBRBBBRRBRGRRRRBRGBRRRR", "RBRBRRRBRBRRRRBRRBRBBBRRRRRBB", "RBRRRRGRRRBRBRRBBBBBRRBRRRRBB", "RBRBBRRRBRB?BBBBBBRBRBRRRBRBB", "RRRBBRBRBBRBRB?BGBRRBRGBR?BRB", "RRGR?RBRBRBRRRBBBBBR?BBBRRRBB", "RRRRBBGRRRBBRBRRBGRRBBBBBRBRB", "RRBRRBBRRRBRRBRRRBRRBRGRBBRRG", "BBBRRRBRRBRBBRRBBBBRBRRBBRRBR", "RR?BGRRRRRBBRRBBRGBBRRRBBRBBR", "RRRBBRRBRBR?RRBRRBRBBGRBRBBRG", "BBBBBBRRBBBBRBBBRRRRBRBBRGRBR", "RBBRBBBBRBBBRBBRBBBRBBBBRBBBR", "BGBRBRRBBBGBGRRBBBBRRBBRRRBGB", "BBRRBBBBBRRRRRRBRBBBRBRRRRRBB", "B?RBGRRBRBBBBBBGRBGBBRRBB?BBB", "BBBRRBRRRBRBBGBRRRBBRBBBRBBRR", "BGRBBBRBBBRRRBBRRRRBGRRBRRBRB", "BRRRRGRBBGBBBRGBGRRBGBRRBRBRR", "RBRBBRRRRBBBBRBRBRBBBBBBRRRRR", "RBBBBBBRBRBBRBRGBBBBRRRRRBRRB", "BBRRBBRRBBBBRBBBBRRRRBRBBBBBB", "GRRRRGBBRRRRRRGRBBB?RRBBBRGBB", "RBGBBRRGRRG?GRRBBRBBRBGRGRBBR", "BRBGRBBGRBBRRRRRRRBRRBRGBRBRB", "BBBRBRBRRBGRBRRBGRBRRBBRBBBRR" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case62() {
        String[] board = { "GGRGGGR?R??RRRG?RG??GRRRRGGRGR", "?RGGRGGGRGRG?RRGGRRGGGGRGGGGG?", "GGG?GGGGGRGRBGBRGRGR?GGRGGRGGR", "GGGRGGRGGRRRGGGRGGRGG?G??GGGGB", "RBGRRRRGGGRGRGGRG?RGG?RGGG?RGB", "GGRGBRRBRGRGGRGGGRGRRBGGRGBRRG", "GGRGGGRGRRGRGGGRGGGGRRRRGGRGRR", "GGRGRR?GRGGGBRRGBGR?GGGGRGRGRG", "RGGGR?GRGRRRGGRB?GRRRRGGGBGRRG", "RRBRGRRGRGRRG?RRRR?RGGGGGGRRGR", "GG?RGGGRRGBGGGGGRRRRGGGGGGRRGG", "GGRBGGRGGGRGGGBGRGGRGRRGBGGGBG", "?GBRRGG?GGR?GGGR?RGRGGGBRGRGBG", "GR??RBRG?GGGGGBGRGRRGGBGRGGRGG", "GGBR?RGRGGGGGGGGRGBG?RGGRRRG?R", "RGGGGGGR?RG??BG?RB?GRG?G?GBGGR", "G?R?GRRGGGGGRGG?GRGGRRGRG?RGGG", "GR?RGGRGRGGGGRRRGRGGBRGRGGGGBG", "GRGGRGGRRRGRGRR?GGG??GGGGGRGGG", "RRGGGGRRGGGRRRGBGRGGGGB?GBGGGB", "BRGGGGGRGRGRGRRGGGGGGGRGRRRGGR", "RG?R?RGGGGGRGBBRRGGRGR?GGGGGGR", "GGGG?GRGRGG?GGRBGRG?GGGBGGGGRG", "GRGGGGBRRRGGRGGRRGGRBRGB?BRGGG", "RG?GGGBRG?GGGGGRGGRRRGGGGGBRGG", "GRRRRGRG?RRGGRGR?RGRGG?GRRGRGR", "RRRGGGGGGGGGGGGGRRBGRGGGGGRRGR", "GGGGGGGGRGGGGGRGRGRGR?GGBGGG?R", "BGGBGGGBRRRRGGRGGRGRG??B?GGRGB", "RRRGGRGGBRRRGRRRGGGGRR?RRGGGGG" };
        assertArrayEquals(new double[] { 0.0, 0.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case63() {
        String[] board = { "GBBBGB?BGBBB?G?B?BGG?BBBBBBB?B", "??BBGBBB?GB?BGB?BBB??BRB?GGGBB", "BB??GBBBBRBBBGBBBGGBBBBBBGBBBB", "BGGBG?GBGBBGGRGB??GRGB????BGBR", "BBBBGG?G??GBB?BR??B?BBBBBBBBGG", "GR?R??BBGBRBRBBBB?G??BRGGGBRGB", "B??BBG??GBBB?BBG??BBRGBGB?BGBB", "GBBGBGBGB?GB?BG?GB?BGBB?BBBBBG", "B?BBBBG?BBGRB?BGB?BG??B?GBGGRB", "?BR??BBB?BB?GBBBBGBRB?BBGR?GGB", "??BG?BBG?RBBBG???B?BBGRB??G???", "RBB?BBBB?GB?BBBB?BB?G??BBB?RBB", "BGRB?BGBGRBBBBRB?BBBBBGGBBG?GB", "??BGB?G??GG?GBBBRBBGBB?BBB?R?G", "BBBRBBG?BBRGBGBBBBBGBBB?B?BGGB", "BBBBGGBG?????BGBG?GGGGBGB?BGRG", "BGBG?BB?GRBBBBB??BBB?RG????BRB", "BBBBBGGBBGBGG?B??BBBBGBGB?BBBG", "BB?B??BRGGB?BBBG??GB?BRBG?G??B", "?RGBBG??BBBB?GGG?GBGB??GB??BGB", "GGBGGB?BBBGRGBBBGBBGB??GBBBGBB", "BBBGGBGBB?BBRB?BBG?GBBGBBBGGBB", "RBBBBGBB?BG?B?B?BBG?BBGBBB??RB", "BBBGB?B?G?GB?BGBB?BBB?BB?B?B??", "BGGBB?BBBBBBBBBB??B??B??BGBBBB", "BBB?G?GBG?BBBBB??B?B?BBBGB?GGB", "BB?B?B?BBGGG??GBBBBBB?GGBBBBBR", "BGGBBGBBGG?BBBBGB?G?BRGBBBGGBG", "G?BBG?GB?BBBB?GRGGB?GBBGBGBB?B", "GR?GB?BB?BG?B?GGBB?BGGBBBB??GG" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case64() {
        String[] board = { "?R????R????????????????R?GGRR??", "???G?????R???????????R????????R", "????R?G??RRR?????R?GGG??G??G???", "??????R???R??G?R??R?????R?R?R??", "?????????R?R???GG?R??R????G?R?R", "R??G?????????R??R???GG??G?R????", "??G?????GRG??R?GR???G?????G????", "?R??????RR????R???????????????R", "???????RR?????R?R?????R???R????", "?R?????????R???????????R????G??", "RG?????RR???R??R????R??????G?RG", "R???????R????R???R??GG??R???R??", "??R?????R??????R???RR??????????", "?????????R???R???G??RGG?G??GG??", "G?????R????R?GR???????????R????", "R?G???G?R?R???G???????R????R??R", "R?????R????????G???????????????", "????G?G???????????????B????????", "??G????R?R?????R?G???R??R??????", "??????R???????????RR??R???G??R?", "???????R?R????G??????R???????R?", "?G????R???????RR?R??RR????R????", "???G??RR?????R?????G?RR????G???", "????RR?R?R??R??R??G????????R???", "??????????R?????????????RG???G?", "????????G????G????????????G????", "?????RG?R???R?R?GR??G??????????", "????G??????G?????????????R?GR??", "????R?GR????????R???????G?????R", "????R??????R????G??R?????R?????", "??RRR??RR?R????RR???????RR?G??R" };
        assertArrayEquals(new double[] { 1.967204177333315e-12, 0.997406965679925 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case65() {
        String[] board = { "BGG?RRGG??RG?R??GBGR?GR?GGGR?GG", "RRGGGR?G?GR??GBG?GRR?G?BBGBBGG?", "BRGRBGGGBGGBRBGRG?GRGBGR??GGGGR", "?RB?GRG?RB?RGBGG????R?RGBR?RGBG", "RGB??RRBBBR?RGR??BGGBBBR?RRBGRR", "B?RRBG?B?RRB?GBRG?GRG?R?RR?G?B?", "GBRBR?RRGRRRB??RBBBR?RRG?GBGR?G", "GR?GBRRRGB?BG?G?RGGBRR?GBR?GGRR", "BRBBRR?G??B??BR?GR??GGBGR?BRBB?", "?RR????G?GBGG?GG?RGRR?GRGGRBG?B", "GGBG?RGRB?B??GBB?GGGGRG?RRGGRGR", "R?R?G?R?R?B?G?RR?RRGR?BBGR?RRBR", "RG?BR?GGR?G?R?RRGGRR?GRG??RRG?R", "RGBR??GR?G?RRRRBR?RGRGGGBGRBGGR", "RRRBGRGGGGRRGRBR?R?R?G?GRRRBB??", "RG?GBG??BGG?RR??RR?GRBGG?G?RGRR", "BGGR?B??B?????BRG?BGGG?G?GBGGBG", "GRR?GRRBG?BR??GBRBG?GBG?BBRG??G", "RRR?RBRR?GBGRRBG?GGB??GGRRRB?RG", "?RRGG?G???RGGRGGRB?GBB?RRRGRRGB", "R?RRGGBRRR?G??BG?GB??R???GBRBGG", "GGBR??RG?RRGBGR?GGB??R?BR?G?GRR", "?RGBBGGRR??GRBBR?B???RBGB??GRGR", "GB??G??GBR???BRB?GR??GBGRGG??G?", "GGB????BR?G?RR?RRR??R??BBG?RRGG", "?BRRGR?RRR??R????G?BR??G?BBRGRB", "R?RBBRBBG??RRBRRG???RBBGG?BGRRG", "??RGGG?RBGBRRB?RGRRR?B?R??GBRBG", "RGRGGRR?BR?BGGGGG?RG?RGB?RGBBGB", "RGG?GB?G?RG??B?GR??BGRB?B?GRRGG", "GGBRRGBRGRR?GB?GB?RBBB?RB?RG?RG" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case66() {
        String[] board = {};
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case67() {
        String[] board = { "B??GR?GBBB?R?BGRGBRRRGGRBBB?BBBB", "?RGB?RGRBBBRBBRBBBBR?RB?BGBGRBB?", "BRBBBRRBBRBBRBBRRBB?BBRBR?RBBBBB", "??R???BBRBRB?BBBBRBB?BBBGRRGRRGB", "GRBRRBRRBRBRBGRRRR?RBGBBBBRRGRBB", "?RBBGRRG?GBRGGG?B?BRG???G?R?BGBB", "BRBR?BRBBBRRBB?BRGBBBR??GB?RBBRR", "RBBGRB?BBG?RBRRBBBRBGRBBR?BB?BB?", "BBRB?BBGB?RGBGRBB?RBRR?GRBBBBBG?", "G?BBGB?B?RBB?R?RBBGBGBRBRRRG?R?B", "R?RBGGGRBRBRRBRBBB?B???BBGBB?RRB", "BBBGBBBBBBG?RBGRBBBRBR?RRRBRBRGB", "?R?RBBRBBGBBBR?GB?RRGBBRBR?GRRRB", "RBRRGRBGGBBRBBGBB?BGRBRB?B?GBBBR", "?BGB?BR?BRRR?BBBBBBBGBRB?RRBRBGG", "?B?BRRBBGB?BRRRG?BB?BBRBB?RB?RRR", "BRRB?RRBBGRGGBBRRRBBBRBBRRBRBRRR", "BBBRRBRRRBBBRBGBBRBBGBRBB?RB?BGB", "RBRBBBRGBB?BBRRBGBB?BRGBRB?B?GBB", "BGBBRBBRBBBRGRBGRG?BB?BB?RRBRBBB", "??RB??BRGBBRGRRBRBB?BRRRBG?BR?BB", "BBBBB?GBBBBRRBBRRRRRRRRBBGBBRR?G", "BBRGBBBBR?BG?BB??BBRRBBRBBRR?RRR", "G?GBB??GR?RBB??BBBBRBBBRB?RRBB?B", "GBGRB?BBRBBBRRBGR?RB?BBG?BBBRBBR", "BBGBBRRBRBBBR?RBRG?BRRBR?RBBRRBG", "B?RBRBG??RG?GBBRR?BRBB?GGBBRBGBB", "RB?GGRGGBBGBGRRBGRBBRBGRR?BBRBGR", "RBRRBBRBBBBBBGRBBRBRB?RRB?BBRBRB", "GBBBRB?B?R?GGBRBGGBRRBBBBGBBBRGB", "BB?BBBRRBRBBBGBG?RRGB??RRRRB??RR", "BRB?BGBGBB?BRGGRRBRBBRBBRGGBBRRB" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case68() {
        String[] board = { "BRGBGRGBBRBRBRBBBRRBRRGRBBBRBRBRB", "RBRRRBRGGRGBGBRBGBBGBRGGGRGGGBRGR", "GGBGBGGGBBBGGBBRRRGBGGBRBBGGRRBGG", "GBRRGBGRGRBBBGBRGGBBRRBRGGBBBRGRG", "RBGBRBRGBBBRBRBGRBBRBBGRRRBBBBBBG", "RBRBRGRBBBGRBGRGRGBGRGGGBRGBBGRBB", "RGRBGRBGBGGGBRGRRBBGGRBBGRBGRBGBG", "RRBBBBBGGBGRBRGRGBRGBBRBBRBBBRRBG", "BBBBRBGRGGBBBRGRBBBBBBRBBGGGRBGGG", "BRGBBRRBRGBGBGGGRGBBBGGGRGGGBBBGG", "GBBRRGBBGBBBBRGBBBRBBBGGGBBBGBGBB", "RBBBRBGBBRBRGGBRGGRRGBGGGGGRBGRBR", "BBGBRGRGBBRGRRRGBGBGGGRRBBBBRRRBB", "BBBGGGBGBBGBBBRBBBRGRBGBGRBBBBRGB", "BGRBGGRGBGBRGBRBBGRGGBBBRRBBRGRGG", "GRGGRGBBBGGGBBGBRGRBRRGRRRGRBGBGB", "BGRGBGBBBBGBRBBBBGGBGRBGRGGGRRBBR", "BBGBBGBGGBRBGRBBGGRGBRRGBBGBGRBGG", "RRGRGBGRBBGGGBRGBRRRBGBBBRGGGBRRR", "BRRBGGGBRBBBBGRRGRBBBGGBGGBRGGGGG", "RBBGBRGBBRRBRBGBGGBBGBGRGBBRBBGGR", "BRGRRBGGBGGBBRGGRBGGGBBBBRRGBGGBB", "GGGBRGRBBBGRBBRGRRGGBGBGBGBGGBBBG", "BGGBGRRBBBGBBBBGGRGRBGGBRGBRBRBBG", "RRBBRBRGBGBRRGBGBBBBGRRRBGBRRBRGB", "GRBGGGGGRGBBGRRGRRGBGGGGGRGBBBRGG", "GBRBBGBGGGGGGRGBRBGBRBGGGGRRRGGRR", "BBGBGRGGRGRBRBGRBGBRGBBBBBGBGBGGR", "RBGRGBRGGGBRGGBBGRBRGBBBBRG?BRGGB", "RRGRBGBBBBBRGGBBBBGRBRBBGRBGGBRGB", "GBRBGBRGRBGBBRGBRRRBBBBGGRBRRGGBG", "RGGGGRBBBGGBBRGRBGGBBRRBGBGBRGGRB", "BRBRGGRGGGRGBGRGGGGGRBBBGBGRRGGRR" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case69() {
        String[] board = { "B?BGB?BB?GB???GB?BB?GBRR??B?G?G?R", "G??BG?GGBBBBBB?GG?GBGB?B?BBBBGBRB", "????BBBB?G??????BBBRGRG??BGBGBBRB", "?G?BBGRGGG?GG?GGBB?B?GGB?BG??BG??", "??GGG??BBGBGGGB?GBBG?GB???BGB??G?", "??GBBB?B?B??BG?GGB?GRBGBB??RG??G?", "BB??BB??BBB??BB?GGB?BB?GG?GBG???B", "GB?GBBB?GBBB?GRBRBBBB???GG?GBB?R?", "?R?RGG?GGR?BB??BBB???GBG???BGGGB?", "GBG??BGBGB??B?RB?G?R?G?RB?GB?GBBR", "BBBR?G?BBG?GGGGG??GBB??B??BGB?BGG", "B????????GB?B?GB?GGBG?RB???GG?BGG", "?GBB??G?GGB?GR??BGGBG?GBB?RR??G?G", "BGBG??GB?BBG?B??G???BB?G?GBGGGBBB", "??GG?B??B?B?GGGGBB???B?BGG?GGGGGG", "BB?B??BB???GB??G?GB???BBGBBR?G??G", "BBB?BGBB?B?B??GGBGB?BGB?BGBGB?R??", "BB?G????BGRBBGBG?B?G?BGGGGBGBG?BB", "??GRBG??G?R?B??G?G?GR?BG??GGGBBBB", "?BG??G?B?B?GBB?BBGBBBG?B???GG?GGB", "G?G?B??GRBGBBBRBBBG?GGG?G?GGGB??G", "G??B??B??BGGR?BGG?GB?GBGB?BG?BB?B", "??RBBB?????B?B?G?BBB?G?BBGBGG??BG", "BBGRGBB?B?BGG???B?BGBG????B?B???G", "GBGG?BGB??????B??BBB??G??BBB?GGGB", "B?GBBGGBGGGBGBBGBBBGGG?GBB?GG?B??", "B?BBG?GG?G????B??G??G?GB?G?GB?GBG", "?B??B?BB?BG??BG?GB?G?BGGGBBBB??GG", "???BGB??GB??BBBBGG?GR??BBBB?B??GB", "G?BBGGBBG?GGB?GRBBB??BBBB??BBBGG?", "BG?BG??RB?GGGGGBB?BB?BBBGBB???B?G", "B?B?B?RB??B????RBBGB?GG???GBB????", "BB?BGBG?GBG??GBBGGB??B?GB??BRBBBB" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case70() {
        String[] board = { "?RR?RB?BRRRRBBR??B??BBBBBR??RRRBR?", "R?RRR?R?G??RR???R?R?RBRB?R?B??RR?R", "RB?RB???R?R?R?R??G?R?R??RR?RR?BRR?", "??R?B?RBBRRBRRR?R?R??RRR?RRRRR?G??", "R?RR?R?BRR??R?B?BRRRR?R??RRB??BR?R", "R??R??RBB??RB?R??RRRRB??RRR??????R", "?B???RBRBRBR??????R???RRRBRRB?B?BB", "RBRB??RR???RRR?RB?GRRRRB?RRRR?RR??", "?R?RR?RR?BR?RRR???RRRGRBBRR?R?R?BB", "R??BRBR??RRRGRRRRR?RRR???B???RRRB?", "??????RB?R?R?RRR?RB?R?B?R??R???BBR", "?RRB???RBB?RBRR?RRBRBBR??RB??RRR?B", "RBRRBRBBR?BR??RRR?R?RBRRRBR?????R?", "?R?RR?RRRBR?RBBR?RB?B?RR?RRBBRRR??", "BRRRBBR?RR?RRRB?BRR?RGBR?B???BRRR?", "?RBB???BRRR?R?R??RR??BRRRR??R??RGR", "?R?RR????RRRRR?R?R?B????B???R?RBBR", "R??RRRB?B???R?BBRRRR?RRR?RRR????R?", "???R?BRR?RRRRRR?RR?RB?R????BR??R?B", "??RR???BRR?RGRRRR?RB??R???B?????G?", "BRB???R?R?R?RRGGR?R??RRRR?B?RR???R", "RRB??R?RR??R???BRRRR?RR?RR?R?R?RRG", "RR???BRRRR?BRRRRBB??RR??R?GRRR?RRR", "?GB?R?RRR??R?????BRRBRRRRB?RRBBBR?", "B???RR??GR??RBR?R?RRRRR?RRGRR?R?BR", "R?BRR?RBRRRRR?BBRRG?G????RRR?R??RB", "???R?RRR?RR?RBGBRRBBRR??RRRR??????", "??R??RBR??R?BRR?BRB?RR???BRR?B?RR?", "B?BRRBR???RBR?RRRR?R?R?RBRRR?BRRR?", "R???G?BBR?R?BB?RBR??B????RBR?RRR?R", "R?RR???RBR?RR??GR?RR?R?BRRBRG?R?R?", "BR??R?RRG?RGR?RB?R??????RRR??RR?BR", "?GRRB?R??R???R?RG?RBRRBRBR?RRR???R", "??BRRR?RRBR?RB??RBR?RR?BBB???G?RRR" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case71() {
        String[] board = { "GGGGGGRRG?GGGGG?BGGGRG?G?G?RGRRR?R", "GGGRGGGGR??RGRGGRGGGGGGGRGGG?GG?R?", "GRRR?GRRR?R?R?GG??RRGGG?GGRGGRGGGG", "?GRGG????GGG?GGGG?GGGGGG??GGGGG?GG", "G???RGGGGG?BGGGGGGGRGRR?GRRR?RGGGG", "GGGGRGGGG?GGRGGRGGRGG?G??RG?GGGRG?", "GGGG??RGGGR?GGRGGGGRRGGGBGGRRGGRGG", "RGGGGGRRGGGGGGGG?RGGGG??GRG?GGGGRG", "GGGGGR??RGGRG?GG?G??RGRG?GGGG???R?", "G?GGGRGR?G?G?RR??G?RRGRGGGG?GGGG??", "G?GRGGBGGGGG?GGGG?GGG?R??G??G?RGGG", "RRGGRGGG?GGRGGG?GRGG?R?GG?GGR?GRGG", "GRGGRGG??G?GGR?RGGGG?R?GGG?G??GGG?", "?G?GGGGGG?R?GGGGRGGGGGG??RG?GGGGGG", "GGGRGGR??GRGG?RGGG?R?GRBRGGGGGRRGG", "R?GGGRRGGGGRRG?GG?GG??GGRR?GRG?GRG", "GGGRG??GGRGGRGG?R?GG?GG?BGR?G?GR?R", "GGGGGGBGRG?RGG?G?R????G??G?GGGGRGG", "GRR?GG?GGGGG??GGGGGGGGGRGGGGRGG?RG", "GGRG?RRGRGGGRRGRG?GG?G?GGGGGR?GGGR", "GG?GGGGGGGGGGGGGGGG?GGGGGG?RRGG?GG", "??GGGG?GGGG?GRRRGRGRGGRGGGR?GGGGGG", "GGRGGG?G?GGRR?G?R??GGG?GG?GGGGGRGG", "??GGRGRRGG?RG?GG?GGR??GGRGGGGGGG?G", "GGGGGGGGGGGGGR??GRG?G?RGRGG?RRG?GG", "G?GR??GG?GRRGRR?GGRGRGGGGGGGGGGGGG", "G?GGGRGG????GGR??GRGGGG?RRGG?GGGGG", "?GG?GRG?GGGGGGGRGGRGGRGG?GGGGRRGGR", "GG?GGRGG?GRGRGGGBG?GG?GRBRGRBGR?GG", "GGGGGGRGRGGGGR?RGRG?G??GRGGGRGR?GR", "GGB?GRRGGGGGGGG?GGGRGRGRGG?GRGGBGG", "GGGGGG?GGGGRGRG?G?GGGRGGGGGGGG?GGG", "??GR?GG?RR?GRRRRGGGGGG?RGRGRGGGGG?", "RGGRG?GGGGG?GGGGR?G?GGRRG?G?RRGRGG" };
        assertArrayEquals(new double[] { 0.0, 0.08156773713721133 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case72() {
        String[] board = { "RBG?R???R??R??RB??RR??R???BGB?RRRB?", "B????BB??B??RBRRGBBBGG?B?BBGR??R???", "?RB??GBGR?G?B??????GRRBBB??RRBGBRRG", "??G?RBRB?G?BR??RG?BR?RGB?RBR?RBB???", "?GG??R????B??RR?G?BB?GBBG?R??BB????", "R??RR?B??RB?R?BRG?RB??BRBR??BG??G??", "G??BR?RRB?BR?B?RBB?G?B????B?BBBG?B?", "B?????BB?BB??B?RG??????RRBG??RRR???", "RB?R??B?BG?G???R?B?RB?GB???BB????BB", "??R?G???BG?GB?R?BG?BBRG???B??BR?B?R", "R?????R?GBRGRR??G??G?BR????RBR??G??", "GR??R?R???B?RR??GG????RBGBBR?RGR??G", "B??G?B?BBRBGBRRB?????BR?????BR?R??B", "RGR?B??B???R?B?GRB?RRGBRG??GGBBBG??", "B????B??RBRR?RBRBB?B??BGRRB???GB?BB", "B?R?RR?R?RBGGB?R?R?B?R?RBB?R???RBB?", "B???BR?RB?B????B?B???RB?GRG?R?B??BB", "???G????BG?BB?BB?BBRGG?R???R?R?G???", "???B???BGBG???B?RRBRBGBG?R?BBBGRB??", "B?B???B?B?RB?BBRRR???RR?RBRBB?BB??R", "???B??R????BB??G??BGG?RRRRGRRRBB?G?", "RBBB???G?B???R?GRRR???B??BRRBB?RBRR", "?RRBR?B?BG?R?RR?GBGR??BBRGR?????RG?", "BB?RGBR?R????GRG???GR?R?B?RG?BG??R?", "BG??RR???BG?R?RR?RRB?BBB??B???RB???", "?RRBGG?R?R?G??B?RBRR?R?R?BR??GBRG??", "??BB?RRR?????RRBB?RBBRBR?R?BG???BGB", "?R?RR???R????RGR????R?R??R?RB?R???B", "B??RBGBG?BR???R?????B?R??RBG??B??RR", "?GGG?G??R?RR?B?B???G?R?BGG??GB?????", "?????RGRBR??B?B?G?B?R???B??B?????RG", "GG??R??????BRRB?B?GB?RGR??B?BR??B??", "?G??RBR?BBR?G?GB????BB??BGR?R???RG?", "???B??BRB???GR???BGB?BRRB???B?B???B", "B?RRB??R?G?BBBB??R??B?G?G??BRGG??BG" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case73() {
        String[] board = { "GRGGRRRBRRGRR?BRBGRGRRR?RBRGRRRRBRR", "?BBBRBRRGBRRBB?BBRGBGRBGBBGRRBBGBRR", "RBBBGGBRGRBBBBRRGBRBGR?BBRRGRBR?RBR", "GRRRBBBRRRRGGRBRGRBBBRRBRBBBBGBGBBG", "BBBGRRGGGBRRBRBBRRRRRGRBBGRBRRGRRRB", "BRGRRBRRBRRRBB?RRBGB?RGGBRBGBRRRBRR", "RGRRRGRRRBRBG?G?RRBBRRRBBRGRBGBRBRG", "RBRBRBRBGRBGBB?RGGGRBBRGBBRGRGRRRBB", "RGGGRGBBGGRRGRRBRRBRBBBRRRRRRGBB?RB", "RRRBBRBRGBBBRBRBRBBB?BBBR?RBGBGRBRB", "RBRGGRBRBRRBBR?GRGRRRBBGRRGRBR?RRR?", "BRGGRRBRRG?RRBGRRRBBBRRRBRBRRRGRGRB", "RBBRGRBGRBRRRRRRGGGBRBRBGRRBRBRBRBR", "GBBRRBRRRRBRRRRRGGBRRRGBRRRBGR?RBRG", "BGRBGRBGBGRBBBRRRBGGRRBBRBRBRBBBRGR", "RGRRGBBBBRRRBRRRRRBRRRBGRRRBRGBBGR?", "RRRBRGBBRGRGRRRBRBR?RRGRRBRBRBBBRRB", "R?RRRRBRBRRBBBGGRRBGRGGRRRRGRRBGRGR", "RRRB?BBBBGRBRGBGBBBRRRRBGBRRBRRRRGG", "BGBBGRBBRBRRBRBBRGRRBRRRBRBRRRRBRRR", "B?RRRRRGRBGGRGBRBRBRGRGRRR?BBRBRRGR", "RBBRBGGBRRRRRRRBBBRRRRRBBRRRBRBGRBG", "BGBRRRGBBRB?BBRGRGBGGGBRB?RBRRRRBGR", "BBRGRBRRBRRRRRBGRBGBRRRGBRRG?R?RGBR", "BBRBBBBRRBRBRRBGRBBRRRBBRBRRRGBBGBR", "RRBB?BBRBGRGR?RRBRRBGRBB?RBRBRR?BRR", "GRRRRB?RBRGRRBRBBRRGRRBRRRRRBRBRGRB", "GGRBRRBGGGBGRRBRRBRBRRBGR?RR?G?RRGB", "RRRGR?GRGB?BBBBRRRG?RRBBRRRRRBRRGBR", "?RBRRRRRBRRRRRBRBBRRBRGRRRRRBGRBGGR", "BRRRRBBBGRRRRB?RBGBBBGR?RBGGRBGRRBR", "BBBRBRR?RBBBRRG?GBRGRBGRRRRRRRRBGRR", "BRRBRGRRRBGBRBRGGRR?BRRBGBBGRGGRGBR", "RRRRBBBRRBGRGRRRBGRRBRRBRBRRRBRBRRR", "GRRBRRRGBRRBRBRGRRRBRBGRRGRRBRRRBRR" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case74() {
        String[] board = { "B????RBR?BBR???RBBGGBGBBB?BRR?B?BBG?", "BR??BB??GB?R?GBBRBBGBB?BBBBBBB?BBGB?", "BGBBBB???RBBB?BB?B??BB?GR?R?B??RBB??", "R?BR?BRRBBRBBBBBB??BGRRB?GRR?B??BRGB", "?BBB??R??BB?B?BBBBBBBBB?BBB?BBBGR???", "BR?R?GBG?BBBBBBRB?BB?BBB?RBRBBG?GGG?", "B??BGBRBBRRBBBRB?RBRRB?R??B?B?RBBBGR", "RB?RBBBB???BGGBBBBBB??BBB?BG?GRRRBR?", "G?BB?B?RGB?BBR?BGB?RRBB?B?BGBBR?BBB?", "?B?GRBRB?B?BRBGRGRBRRB??BB?B?B?BB?R?", "??BGBBG?B??RB?B?R?RB?B??RB?B???BBB??", "BBRBGRBBR??GBRG??GB?BB?RRBB?BRGR?RBB", "BBRB?BG?B???BG?BR??RB??BG??R?G???BRB", "??GB?BBRBBBR???BBBRB?BRBR??R?B???RGB", "BBBGRB?RGR?BBBBRGBB?B???B?B?B??BBR?R", "GRBRB??G?BBBBRRG??BBB??GB?B?B?R?G??B", "?BB?B??BR???B??BBRG?BR?BG?BGBB?GRB??", "?B??BB?B?RRBR?BRBG?RRRR????B?BBBRBRB", "BGBB?R?BG??BGB?R???BB?B?BBBB???G?RBR", "?B?BBBBG?BR??B??BBRGB?B??BBBGR???B??", "RBBR??BB???RB??BBBBB???B?B?BBB?BB?R?", "??BBR?BBBRR???RBBBRBBRBBBBBBB?BBBBBR", "BB?BBB???BBRGBRBBB?????RBBRBRBB??RBB", "BRBB?BBBB?BRBB?B???RRRRRB?B?BB?BB?BB", "?R?BB?B?BGB???BBG?BBB?GB?RRB?BB???BB", "R?BBBB?R?BBRB???R??BB?BBBBB??BBGRG?B", "BB??BBB?R???BBBBBBBBRRBBB?BRBR?B?BR?", "BBBBBRR?B??BBBRB?B?B?BBRRRGBBBGBR??B", "RG?RRRBBBBG?BGBRBGBBBBBBGBBBR?B?RB?R", "?B??BG?B?B?BB?R?G??BR??BG??BBBGBBGBB", "B?BB?RBGG?BRBG???BRB??BBBRB?BBRBRRGR", "GB?BBB??BG??G?BBB?BRBB?RB????BB??B??", "BB?R?BBRB?RB?RRBBB??BBBBRGB?B?BB?RBB", "BBBRB?B?BBB?GRBRBB?BBBG??RBBGR?B?BBG", "RRBB??B?R?B?G??GGBB?G?B?BGRBB??B??RB", "?BBB?BBG?BB?B??RBR??R?RBBBGBBGRB?BR?" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case75() {
        String[] board = { "BGB??GG??BGGBBR?GRGGB?BGRGGR?G?G?BBR", "?B?BG??GGBGGG?RGGBGG??GG?GGG?GG?R?G?", "?RGBB?BGGGG??BRRG?GB?RR?BR?B?BG????G", "??RGG?BB?BG??B?B?GB?GB???B?R??BG?BGB", "?BBGGR?BGGG????GG??BRG??R?B?R???G?BG", "?????R?GRB?BBGBBBGGB??R?BRR?GG??GGRG", "GGBGBB?G???GBBG?GR?GB????R???G?G?BGB", "???BBGR?RG???GG?GRGR??GRGG??GG??RR?B", "GB?BR?RGG?RG?G???GG?G?G???RGG??R?BGG", "?RRGRGRG??GRBGRBBB?BGR?G?BG?BBRGRGRB", "B??RRBR??R?RG??G???R?B?GGB?B????RG??", "??RR????RGG??B??????RG?GRGB?GGGG??B?", "GG?BGGRGRB?GG?BG?G?GBG?BB??GBBG???GG", "RB?GG?GG???RB?G?BGRBGGG?RGG?GG?R?G?G", "G??BBB?GGGRGG?BBGR???RRB??GG?RB??R?G", "GGGBGGGRB?BRRG??GBGGB????B?GG??BB??B", "R?R?BR??B??BG?RG??RG?GG?R?GGG?RGGRBG", "GBGGG?B?GGBBGG?G??G?B??GBBBGG????GR?", "BRG?RGGG??G?RG?B?R?BRBBGGRGGRGBGBGGR", "G?????GGBGBGBBGB?RG?GBB?GGB?B?RRR??B", "G??GGBGGGB??G?R?B?BGGBGGRGG?BRB?G??G", "BGG???GRGGGB???G????R?B?????GGBBGRGG", "GGGG?GBRBR?RG?B???B?G??GGGRGGGGG?RG?", "G?GGG?B??B?BRRBRGG???BG??BGGR?GGRRRB", "?BB?G?BB??GGR?G?RB???B?RBGR?G?G?BBGG", "?B?BBGBRBRRGRGGGB?R?BGRGRBGG?GGGR?BB", "??BBBGRGGGGG?R?GBB???B?B?G???BBGG?BG", "RGR??GGBBGG???GGBRG??GGB??GBGBGRR?BB", "BBG?GBGB??RGBGGB??R?BB?RB??RG?GBRRGG", "?B??RGG???GBB?G?GR?????RG?G?BBBBG?B?", "?G?GG??GG?G?GGRB??GGR?BBG?GGGGGG?RG?", "?G??GBGGGG????G???RRGRRR?G?GBBB?GGGB", "GBR?GR?BB???????GBBGGRBGGGB?G???BBBG", "G??B?BGRGB??BGRRR??G?BB??GBGR?????RR", "RGGGRRGGB???G??GGBG??RBG?GGBGB?G?G??", "BBRB???BG?BBB??R???RR?GG?B?GGGGGRG?B" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case76() {
        String[] board = { "GBGGGGBGG?GGBBBG?BBRBGBBBGBR?BGBGBG?B", "GBBGBBBBBBGBBGGGBB?GG?GGGBGGGBGGGGB?G", "BBBGGB?BBBBBBBGBBGGGGBBGGGGB?BGBBBBBG", "GBGGGG??GBBGGBGGGGBGGGGGBGGBGBGGBBBGB", "BGGBBGGGB??BGGGGGGGBBBBGBBGGGGBRGGBBG", "BBGBGGGBGGBBBBGGGRGGGGBGBBGBGGGRBBGGB", "BGBBGBBG?GBBBGBGGBB?GGGGGG?GGGGGBBGGB", "BGGGGBBBGB?GGGBBBGGBGBGBGBGGGBBGGBGBG", "G?GBGBGBGBBBGBG?GGGBGBBBBBBBBBGBGBGBG", "?BBGGBBBBGBGBGBBGBGBBGBBGGGGBBBGGBGGG", "BBGBBGGGGGGBGGGGGBBBBGBBBRGGBBRGBBGGB", "GGBBGGBGBBBGGGGBGBGGG?B?GGBGGGB?GGGBG", "RGGBGBGBBGGBGBBBBGGBGBGGBGGGBGBGGBB?B", "GGGGG?GGBGGBBBBG?BBBBBGRGBGBGBBBBBBBB", "GGBBG?BBBBBBBGGBB???GGBGGGGBGGGBGBGGG", "G??BBGGBBBBG?BGGGBBGGBGB??BGBG?BBBGBG", "BGBGBBGGRBGGBG?GRGGGBG?BGBBBG?BBBGGGB", "BG?RGGBGGBBBBGGB?BBGBGGBBBBGBGGBGGBGG", "BGGBBBBBBBGBBBBGGB?BGBGBGGBBBGGBGGBBG", "BBBGGBGBBBGGGBGGBGGBBGBGB??BGGGBGGBBG", "GGB?GGBGBGGBGGGGBBGGGBGBGGBBBGBBGGBBB", "GBBBG?BGGGGBGGBGGGGBBGBGBGBBGGGBBBBBB", "B?BBGBBGBGGBGBGGBBBBGBRGBGGGBGRGGGGBG", "GGBGGGGBGBBBBGBBGGG?GGGBGGB?BGGGGG?GG", "GGBGGG?B?GBBBRB?BGBGGGGBBGBG?GBG?BBGG", "G?BBG?G?GBGGGG?GBGGGGGGBBBBBGBBGGBBB?", "BGGGGGBGRBGBGBBBGBBGGGGGBGGB?GGBBGBGB", "BGBGBGGBB?BGGBGBBGGBBB?BGGGGG?GGGGGGB", "BGGBGGBB?BBBBBGBGBGGBGGGG?GGGBG?R?GBG", "BRBB???GBBGGGGBBBGGGGBGGBGGBBBGGBBBGG", "GGBBBGGGGB?GBBGGGBBBBBGBBBGBGGGG??GGB", "GB??GBBGB?BBGBGBGGBBG?GGBBGBGBBB?GGBG", "BBGBGGBGBBGBGGG?GBBGBB?BBGGGBBBGBG?BG", "GBBB??BGBGGGBG?GGGGGG?G?BGG?BGGGGBGBG", "GBGBGBBG?BBGBBBBGGGBGG?BB?GBGGGGBBBBG", "BGBGBGBGGGGGGGBBBBBGBBBGBGGBGGB?GGBB?", "BGBGGGBGB?GBBRGGBBBGB?GGBB?BBBBBBGRBR" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case77() {
        String[] board = { "GGRBGRRG?RRRGG?RB???GRGRGR?RGGGRGRGGR", "RRB?RGRRG?GGGGGBGGRGGGRGR?R??RRRGRRGR", "RGG?G?RRGRGGR?G?GGR??GBRRGBRRGR?GGG??", "RBBGGGGBRR?GG?G?GRGGBRRGGGGGGRGGGR?GR", "GRRGGGGG??GGRG?GGGGR???RGGRGR?RGG?BRR", "RBGRGBGRGRGG??GGGGGGRRRR???GG?GGGGGR?", "GGRRGRGR?G??RGRR?RGRRBRRG??R??RG?GG?G", "?GB?RGGGGGB?RBRBGRGRGGRGBRRRBBGGRGRRR", "GBBGGGR??B?RRRBGRRRBRRRRGB?G?RRRBGGGG", "B?G?G?GBGRRRR?GR?G?R?BRGGRG??GRGRRGGR", "GGGGRRRGBGRG?GGGRGBRG?RGRBRRR??BBR??G", "?RBRG?RRGGGGRGGRGG???G?GGGGBB?GRR?GGR", "?????GGGRRRBRBGG?RBBRRGRRGGRRBRGB?RGB", "RG?RGGGG?RBG?RGBGR?GB?G?GR?RRGG?RRR?G", "GRGR?GRGGG?RG?G?GRGRGRR?RBG?GG?RRRGGG", "?RRR???GGGBGGR??G?B??RGRGRGG?RRGGGBRG", "GGRRG?RG?GGRBGRGGGRGRGRRB?GBG?RRRRRR?", "R?R?GBB?GRRBBGGGRBRBRG??RBB?G?G?RGGRG", "GGBGRR??RRGGG?B?R?RGG?RG?BBRG?G?G??R?", "RRGG?BR???R?RRGRGBGG?RRR?RRRGBBR?GBGG", "?GBBGRR?RGGG?R?G?GGBGRGG?B?GGG??GBGRR", "B?GRG?RGGBGR?RGGGRBRBGBB?RRGGRRBRR?GR", "??GGGGGGGGRRR?GGR?R?RRRG?GGGB?R?BGRBB", "RRGBGGRBGGRRRGG?RGGRR?G?RRGRRRGRGGGRG", "?G?GGRBGGGRGGRR??G?B?GGGR?GRGGRGGGBBG", "RBRRGRGRRGGRGRGR?RG??R???RGGGG?GG?GGR", "G?BRRBRRRG??GRGBBG???RGR?GBRGGGGRRGGB", "RGGBRG?G??GGRG?G?RGGGRG?GGRGR?BB?RGGR", "R?RRGRBRR?G??RRG?GGG??RGBGR?RGGRGG?GB", "GBBRGRRRRG??G?RGG?GBRGRG?RGGGG?B?RGGR", "BRR?GBRB?RGBBRRGBRBR????RGG?RGR??GRRG", "?G?R?GRRG?RR?RRGG??RR?GG???GGRRBG?R?G", "GGGRG?R?GGRRGRBGBRR?GGRBGGG??RRRGG?GG", "R?GRBRGGBB?RRRGBGBG?BR?R??GBBRGGG?BRG", "RRGRGGRGRGRGGRRGRB?RGGRR?BGRG?RR?G?G?", "?RBR?G?R?BGGBGBRGB?R?RG?BR?GGGG?G???G", "?GGBGRGGGRGG?RG?RGGG?RRR?G??G?R?GGB?B" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case78() {
        String[] board = { "BR?GRRR?B?RRRR?RRBRGR?RRRB?GRGBR?GR??R", "RRRRRBGRR?G?RGR??GGGG?G?B?BGGRBGRR?RRG", "?GGRBRRR??GRRGRR?RGGRRGRRRBGGBGBR?RRGR", "R????RRRR??RRGR?RR?G??RG??RGRBRG??RB??", "GGB?RR?GRGRG?RBRG?RG?GRG?R?RRGRGRRRG?R", "B?BGGR?BG??RR???RBG?RRRRG?GBRR?GR??RRG", "RGB?RRRRRGGGR?G?R??GBGGRRGR?G?RG?R????", "?RRGGRB??GGRGGRRRR??RGRB???G?BGGR?GR?G", "G???GBR?GB?R??RR?R?G?RR?R?RBRG?R???R?G", "BGR?B?RB??GG??RR???BGGRGGR??GGR?G??BGG", "R?B?RG?GGG??BB?RBR?GG?GR?RG?GRB??RGBBB", "G?B?RRRGR?RGGRG?RGBRRRGB??RGRBGRGR??GG", "G?RGRR?GRRBB?RRBRRRG?GRGBR?BRBRGRG??BB", "RRRGGR?G?RG?GG??GR?RGRGGGGG?B??BR?R??B", "?GBGBG?G?B?B???G?BRBG?RRGR?G??G??GRRBR", "?BB?GGBGGRR?RRRGGR?BRG???B?GR?RBRG?R?G", "RGGGGRGB?BGR?RGGGGR?R?BG?RRGR??GRRRR?G", "?GRGR?RR?RG?RBRG?GRGG?R?R?RGR??RRRBGBG", "R?RRR???RGGG??RBRG??RR??BGGRGGBRBRRR??", "B??RR?GR?????B???R?GGGRG??BRBBG?RB?RB?", "GRRGRGRG?GRRR?G?RGGGG?GGRG?RRGBGG?R?G?", "B???BGRR?RRGGRG???RG?GBGGB?GGGR??RRGRG", "??GR?BRG??GGR??G?R???RG??B?RR??GGGRB?R", "GBRGRGRGRGG?RBB?GGR?GG??RGR?GR??RRGR?G", "BG?RGRRRG??G?RRGGBRGG?RRRGRRB??GR??BBR", "GB?RR??RGGG?RGR?GRR?BBBRR?GGG?RRGRR??R", "?R??RRGGGRGGR???G?RR??R??R?RGG?RG???GR", "?G??G?RR?GGBGG?GG?????G???RG???B?R??BG", "R?G?RRGRRG???R?GGRR??R?RG?GG?R?B?RRRRR", "????RRGRGGGR?BR??GG?BG?RGGGGRB?R?R??GB", "GB???R?GRBGRRB?BGBB?G???BB?RRR?GBGB?RG", "RGGBRGGRGG?G?R?GGBRRGG?R?GR?RGRGGBRR??", "RB?R?R?RGRRR?????GRR?BBGG???G?G?RGR?R?", "G??GG?BGGGGRG??BRRRRB?GGR??GR??RBGR?RG", "RR?GGB?RG?GRG?BR?GRRRR?GGGGGR??RGGBG?R", "?RRG?R?BGBGGRG?RR?BBRR?GRGGGRRG???GG?R", "RR???RBR??RR???RRGRG?R??GGRBR?R???RGB?", "GR?G?RGR?GGG?G??GRR??GRR?GGB?RBRB?R?BB" };
        assertArrayEquals(new double[] { 0.0, 0.9984775611596526 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case79() {
        String[] board = { "?GGGG?BGBGGBG???GG?GGGG?GGG?GGGG?GGG?G", "GBGGBGBGGGB?BG?GG?GGGGGGBGGBGGGG?GG?GG", "?GGGGGG?GG?GGGGGGG?GGGGGGGBBGGGGBBGGGG", "BBGG?GGGG?GGGGGBBGGGGGGGG??GGGG?BGRGGG", "GBGGGGGGGB?G?G?G?G?GGG?G?GGGGGGGGGGGG?", "G?GGBB?G??G??BGGGGBG?GG?G?GR?BGGGBGBGG", "GGB??GGGGGB?GG??BGG??GBGBGGBBGGGGBGGG?", "GGGBGG?GGR?GGG?GGG??B?GGGGBGGGG?GGGG??", "BGGBBBGGBGGGBGGBGGGB?RGGGG?G?GGGGGGGGG", "BGGG?BGBGBGGGGBGGGGGGBGGGGBBG?GGGGGGGG", "GBGG??GGGGBG?BGGG?G?GGB?GGBBGGGG?GBGGB", "GGBGGGBGGGR?GG?BGGGGBGGGGBGGBGGBGG??GG", "BBGBGG?GGBBG?GB?GGGGG?GBGGBGGGGGGG?BGG", "BBBBGGGGGGGBBGG?G??GGGGBGGGBBGGGGGB?GG", "GGGGGG?BGBGG?GGGGGGGGBGG??GBG?GGBGGGGG", "GG?GGG????G?GBGGGGG?GG??B?GG?GRBGGGG?G", "?GGBG?G??BGGGBGBG?BGBBRGGBBGGGG?G?G?GG", "GG?GGGBG?BG?GGBGGGGG?GBGGBGGBGGGG?GGGG", "GGGGGGBBGBBGGGG?GGGB?GGGGGG?GGGGGG?G?G", "G?GBGGGGBGBGBGBB?G?GGG?GG?GBGGG?GGGG?G", "GB?B?GGBG??GGGGGBG?BGGGGG?GRGGGGGGGGGG", "GBGGGGGG?GG?G?GGGGGGGGGGBGGGGBGGG?GG?G", "GRBBGBGGGRGGGGBG?B?BGGG?GGGB?GGGGGGGGG", "G?BGGGG???GBGGR?GRGGGGGGGGGBGBG??GG?GG", "BG?GGGGG?GBGG?BGGGGBGGGGB?GG?R?BB?GBGG", "?GGG?GGB??BBG?GGGGB?BG??GGGGBGGGGGGGGG", "?GGBG?GGBB??BGBBG?BG?GBBGG?GGBG?GGG?GG", "G??GGRGGBB?GGG?GBGBG?G?GGGGG?GGGGG?GBG", "BG??GBGGG?GGBGGGGGGGG?GBBGGGGGGG?GGG?G", "B?B?GBGBBGB??GG???GGGGBBBGGGGGBB?GBGGB", "GGGB?BGGGBGGG?BGGGBBG?G?GBGGGBGGG?GGGG", "GBG?GBGGGBG?BBGG?G?BRGGBGGGGGGG?GGGGGG", "GBG?GGGGBGGGBGGBGBG?GBGGGGGG??GGGGGG?G", "G?GBGGG?GG?BGBGGGGBGBBGBGBGBGGG??GGGGB", "GGBGGGGGGGG?GGG?GGGB?G?GBGBGBGG??BGBGB", "G?GGB??BBGGBG?GGG?GGG?BGBGGGGGGGGGGGG?", "BGGGBGBGGB?GGBGGGG?GGGGGGGGGGBGGGGGGG?", "GBBBBG?G?GGGG?GGGBGGGGGG?GGGG?BGBG???G" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case80() {
        String[] board = { "BBBGBGRRGGRRRBRRBRGRRBBBBGBBRRG?BBR?RRG", "GBRBRRBBGRGBRBRBBBBGRB?RBRGRRRBBBBBBGBB", "RGBGR?BBBB??RGBR?RBGRRG?GGRBBRBBBBBR?GB", "GRBBBRGGBBRBR?RGGBBBGBRBGRGBBRGGBRGGBRB", "RBBBBBBR??GBBBBBRBBBGRBRRB?BBRRBGBG?RBG", "BBR?RBBBRBGBGGG??BG?BGGRRGBB?BRRRBBRRBB", "G??RGBBGBRGBG?BGRBR?BGBRGGBB?GGB?B?RBBG", "BRG?BR???RB?RBBR?BBBBBRRG?R?GGBBBRBBGRB", "?GRBRRRR?RGGBBGGRRGBBBBBGBGRRBBRR?R?GGB", "GBRRGRRBR?BGG?GBBBRBGGBBBRGGG?GBBRGGBBB", "BBRGGRGRR?BBGGBRBBRBRGGBRG??RBRGGRRBGRG", "RGBBBBBRRRBGR?RBRB?R?BRRRRBBRRGGRRRGRBB", "BRBRBGGBRRRRBGGGRGBGRB?BRGRRBBBBBGBBRBB", "BGR?GBR?RRRBRRGRGBGBRBRBRBRRGBRGBBRBRBB", "BBBBGRRGRGBRRRR?GB?RR?BBBBGBBGBRGRRRBBR", "BRGBRBBGRBGRGRGRRRGRGRBR?BGRRBRRRRBGRGB", "GGRRBRBGBGRRRBRBRBBGB?BBBR?GBBGR?GGRGBB", "GGBBRRBRRGRRBRBGRRGGBGRBBRBGGGBBBRBBRBB", "RRBG?RBRRB?GBRRBGRBRRBGRRBBRRBBGR?GBB?B", "BBBGRGRBBRRGBRR?RBRRGGBRRBGGBRRGRGBRBRR", "GBBRB?GR?RGGRBRGBBGRRRGB?RR?R?GRGBRBBGR", "GRGBRRBBRGRB??RRRRBBBGBBGRBBBBRRRGR?GRG", "BBRGBGRB?BGGRGGRRBRRRG?BR??BBG??GBBRGRG", "?BRBRG?GBGBGGBBBGRRRBR?GRBBBRBR?RBRBRBG", "BBR?R?BR?BRGRR?B?BGBBGRGRRBGGBBRGR?RBGR", "RBBBRBRGRBBRR??RRRBBBRBR?RBGGGR?RRBB?RR", "GGBRRGRR?RBGRBRB?GRGBRRGRG?GBRBRGG?BGG?", "GR?RBGBGBGBRRGBGR?GBRRBBBBBG?RBRRRBRBRB", "RBGRRBRGRRBRRRRB??RGGBRBBRRRG?RGBRB?GGG", "G?GB?RBRBGRRGRRRGRRBGB?GBBRBGRR?BRR?RBB", "BGGRBGGRBRBBBGRBGGBBBGRRBG?BBGBBRRBRRRR", "?BBRBRGGBG?RGRRRBGB?RBBBBRRRBBGGBRRRRRB", "BRGRBRRRGGR?GGBBBRBBBGB?GRRGBGBGRGRGRR?", "BR?G?RRGRRRBBBGGBBBGGBBRGBBBRGGBBBBGBBR", "GG?GGGGRB?GBBBBBGGRGBBBBB?RB?GRB?RRBGBR", "RB?RBR??BGBRGRGRRBGBRRR?GRBGG?GBRBBBR?G", "BGBGB?BRBBBGG?BGGGRBRGRRRRBB?BRBRBBBBRB", "R?RBRRBBBBBB?RRGBR??BBGBGRGGBRGRRRRBRBB", "BBBGBGBRG??GGGRRRGBRBRBGBB?RBRGBGRBBGRR" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case81() {
        String[] board = { "G??GB?GG?RG?BGBGGRG?GGGGRBGGG?GG??GGGR?", "?GG?G?G??GG?GGGRGGG??GB?B?R?B?B????G?GG", "RBGGGG??BGG?GGBGGGG?GRGG??GGG?????GGG?G", "G???G???GGGGGGGGGGRG?RB??BGBR??RGB?G?RG", "GRGGG?G?RG?GG?GRGB?GR?GGBG?RG??GG?GG???", "GG?GBGGG?G?G?BGGGGGGGGGGG?GBGGGGRG?BBBR", "GG?R?GGG??GBG?GGGGG?B???GR?R??GG??GBB?G", "R???G?GBG??BGG??GBR?B???G?RG???BG?GGGB?", "?GGGGB??RGBGRRGGB?G?G??B??BG??B?GGGGR??", "???GGG?GGBGGGGGG?B??GB?G?RRGB?G?RGGRGG?", "GGG?RG??G?G??GG?GGBRGGB??RGGGGBG?RBRGG?", "BGGG?GGGG??RBGGG?GG?GGG?G??BGGG?G?GGBG?", "B?G?GGGGGR?GGGRG?GBG??RG?G?GGG?GRGG?GGG", "G?G?G?BR?BBGGG??G??G??BGG??GGBGBGGG?GGG", "??GBGGGRR???BGGB?RG?GGG?GGBB?GG?B?B?GGG", "B?B???R??BGG?G?BGGBGGBGBGG???GG?G??BR??", "BGGRBG??GGG?GG?RRGRGGGGGBG?GBG??GGGBGG?", "GGG??GG?G?RGG?GGGBRGGG?GR?GG????G??G?R?", "B?R?G?RRG?G?RRGG?GRGGGRGG???GGGGG???G??", "G?G???GGGG?GR??GG??BG??G?GG?GGGGBBBRGG?", "?GGBG?G?RGGGG??GBGB???B?????RGG?GG?BG?G", "??GRGG?RG?G??BGGGGRBBGGR??GGBGBGGB?GGGG", "GGGG?G????G?RG??GG??GG?GGG?GG?GG??GGGG?", "??RRG?GG?G?GGBGGGGRRGGGGGGGGRBGGB?RGB?G", "GGBBRGGRBRGGBGGRRGG?BG?GRG?BB?BBRGG?G?G", "?GGBGGG?B?GGB?GBGGGGG?G??GGGG?GB?GG???G", "????GBB?R?BG?G?GGG?GBGGGGRBGGG?G?BB?GGB", "?G?RGBGRRGG?GB?GBG??R??G??GG?G????GRRBG", "?G??B??G?RBGBRBGRGGB?BBG?BBGB?BG?G??G??", "?GG??RGBBGG?GG??G?RGGRBGG?B???B?GGBGG?G", "G?G?GGRG?G?RBB??G?R??GRGGGBBBGR?GRBGG?G", "G???GBGGG?R??B?BG??G?GGBG??B?BBGG?G?G??", "GGG?G?RGB???GG?G?GG??G?BRBRGGBGGGRGGGR?", "?G?GRGRGG?B??RRGBBGRG?BGGR?BBGGGGB?G?R?", "??GG??B?GGRG?G?GG?GRRG?G?BBGGGGGGGRG?BG", "?G?GB?GB?B??RGGGGG?GB?G?RGGBGG??G??GGGR", "B?BGGGGG??BGG?G?RRGG???GGG??GRB?BGR????", "?GB?GGG?GGGG?BGG??RBGGBGBGBGG?G??G?GGBG", "GGGG?GRG?GBBGGGBB?G?BGBG?GB?GB?G??R??GG" };
        assertArrayEquals(new double[] { 0.0, 0.9984775611596526 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case82() {
        String[] board = { "?G?BG??R???R??????R?RR?R?R??R?RRGRR?BBBR", "?BRBRGBR????R?G?R?GRRB?R??BRR???BR?B??RR", "B?R??G??RR??GRRGRG?RGBR?R??GB?BG???RRG??", "R?RR???B???R???????RRRR?R??RGG??GR?G?BB?", "R?GRBR?GGG????G?RRGR??RG??R??R??GGR?BR?B", "???GGR?GB?BR?RG???G???RB??GBGBRBBRR??GRG", "B????R?B?BB??RRR?RG?R???B?????G?GGBB?RB?", "RRR?RG?GB??GGG??GR?B?R?R?BR?BRRGRRBGG??B", "R?G???GR?B??R?R?GGRGRRGR???GBRRG???R??RB", "?GR??G?????GRG??BGGR????B?RGG??G?G?BB???", "??G??RR?RGR?R??RRRR?G??GRG?BG???R???R?G?", "BRRR???BRR?RG?RR?G?GR??B??GGBR?R?GRB??G?", "???????GGG?BR??GR??????RRGR?GBGB??R??G?R", "?R?GRGG?????BRRG?GRBG??B??????G?G?RBBR??", "RR?GGGR???????RGR?BG???B??R??BR??G?BR?G?", "R?G?G??RRRGBRGR??R???R?RRR??B?R?GG?????R", "??B??R?GGR?R????GBR????RG???G?BB?GG?G?RR", "RRGGRGRRG??B?????RR?G?GR?RR?B?GBR??RGG?R", "GBBG?????GRR?B?R?G?R????G?G?RG?G??BR???G", "???????RGRR??R?G??G?GBRR??RGGGB?GB???RR?", "G?RR??RB??G?G?B?RGG?RBR?G?R?GRR??BG???G?", "R?GGRR?GB??GRGRR?R?G?BR???GB?BGR?R???GRG", "B?????????RB?RRGB?RRB??R?R?B??????RB?G?R", "B?BRG?RG???R???GG??RG?RGG?R?GRGB?G?GRGG?", "RB????GB????RB??RBR?GB?R?????RGR?R??G?RG", "R?G??B???R??RRG???R?B??R??R?GG?R???RB?GG", "?G?G?R???B??GRG?G??RR??G??BR?GG?BG?B?G?G", "R?R?BRB?G?GR?R???BR?GGR?RRR??G?RR?G?R?GR", "RR??GR?GB??R??G?RBG?B?G????G??????GRRRR?", "??RG?GB?RGGBG???B?RB??RR??BGR????RGB?RR?", "?GR?R?R???GG?B?GGBBRBR??G???R?R??RBR????", "????G??GR?GBGGB?GB?RB??RRBRG?RGG?B?R??RG", "G?G??G?G?RBG?R?R?RG?RGRB??GRRGRR????B??G", "GRB????RBRG???RRBRBRGR????R???R???GG?GBG", "???GR?RR?????G???RGBRGGR?GB?B??G??R???B?", "?BGRG????RGRGGB?GG????BRG?BG??GRGR??????", "?RBG?BRRGR?G?R????R??RB?????GG??R??BR??G", "??G??G?RRR?RR?BRRRGR?B?R??G?G?R???G?BG??", "R??????B???R?????G?R?RR??R?RGBG???B??RGG", "R???R???G?RGG?G??B?R?????G??RGBB???GBB??" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case83() {
        String[] board = { "RGRGBR???RRRRRRRG?RBBRG?BR????B?G?RRRRRB", "?R?R?G???RRRRRB??GBRRRR??GRBRB?GRR?RG??R", "RRRBRRBBRRRBRG?RGR?R?BRBRGR?GRGRBBRRBR??", "?GGR???RRR?G??GB?B?BGR?R?RBGB???BGBRRBR?", "R??RRBRR?R?RRRRG?R?RGBGRRR?RGR??R?GRBR?B", "?RBR?RR?G?RRBBRRRR?RRR?RBRRRR??RRB?GR?RR", "BRGBRRRR?BRBRGR??G?R???RR?RBRRR?RR?BR?RG", "RB?BRGBGBRR???R?RR?R?R?BB??????GR??RRB??", "RB??RRGRR?RRRRR?RGRBR?RGRRRRRRRGR?RRR?GR", "??R?B?R??RBGGGR?GR?R?G??RRRRR?G???RRRG?R", "RGRRR?R??GBRRRG??R?RR?BG?G??RRR?GR?R???R", "RBR?R?R?R??RR?BRRR?R?RRRRRR?RRRRRG?RRRRR", "???R?RRGBRGBBRRR?BB??R?R????R?RB??R??G??", "B??RRG??B?BRR??BGRRRRRR?R??R??B??RB??RRR", "B?BRRGRRRBR?R?BGG?GRRR?RRR?R?RR??RGRRR?B", "?R?BRG??R?RR?R???RGRBR?????RBR?????R?R??", "?RGRGBR?GGRR?G?BRR?RGR?RB?RRB?RRRRR?RRRR", "?RRRRRRR?RRRRRBBRRBRR?RB?RBR?B??G?RR?GR?", "???RB?R?R?R???R?RBR?R?RR??RRR??RG?BRGRR?", "??BRR?B?GR?RBRGRBRRRRGRG?R??R???GR?R?GGR", "?B?G?R?G?R?RRRB??RG?RG?RR?B?RRGBRB?R?BGB", "R?GRR?BRR?R??RR??GRRR?RRB?RRBRB?RR?RGR??", "B?RRRBBB?RRRBRRRB?RRRRRBRB?RBRG??RRR?R?R", "B???RGGR?RB???RRR??R?RRRBRRRR?RR?B???G??", "?RRR???B???GB?G???RRRRRRR??R?RGBR?G??R??", "?RBG???R?RRBGR??RRRB?BB?RR?R?RRRR??R?RRR", "RR?BR??RRGR?R?R????R?G?BRG??RRG???RRG?RR", "??R?R??RRRR?R?RR?RRRRR?R?R??R?G?GBRR??RR", "R?GRRR?RRR?R??R???GR??RRRR?R????R???G??R", "R??BRBRR?RRR?G?RBR??RRR?RGBR?RGRRR?RGR?R", "B??RRR????RRRR??RRRRR?BR?GRGR?RRBRRRRRR?", "BR??RRRRGBRRRRR?R?RRR?R?RG?G?RB?RBGRRRRB", "?RRG??R?B?RR?R??BR?RR?RR?RR?RRR?G?RRR?RR", "G?BRR?R?R???RR???GRBRR?R?RRG?????R??R?RR", "?R?RR?RR?RRRR??GBR??RRRRRGR?BRRR?R?RR???", "RGRRR???RRRRRBRRRRGR?BRRRRRR??B?RRR??RBB", "RB??RBB?RRG?RR?RRR?GRGGRRG??R?RBRBG?RRRG", "R???RGRGR?RRRRR??BR???RRRRR?R??R???R??RR", "?B?RB?R?R??R??RBRG?R????R?RRGRR?RR?B???R", "?RR?R?RB??GRR?RRRRRRBB?RBB??GR??GRR?RR?R" };
        assertArrayEquals(new double[] { 0.0, 0.9996992713401783 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case84() {
        String[] board = { "BBG?R?GG?BGB?G?RG?G?BG?B???BG?GBBG?BG?BG?", "B?GGGGGGG?B???G??GBGBBB?RBBG??GB??BG?GGBG", "GBG??BB?G?G????GG?G?GB?BBG??GGGGGBGBBG?BG", "GBGB?GBGBGB?GRG?GBGG?GBGB?RG?BBBGBBGGG??B", "??B?GGGGBGGG?GBGGGGGGBGGG?GG?GGGRRGGBGG?G", "?BBG?GB?BBGG??G?GGGGBGG?G?GGGGGBBRBGB?GBG", "RGG??GGGGR?GBBBB?GG?GGBBBGRBBBBGGGGRGGGGG", "GB?BGGG?G??G???G?GGB???GGGGBBGGRBGBGBRGG?", "??GBBBB?G?G?G?GGG?G?BBGB??GR?G?BGBR??GG??", "?GGGBB?B?GGBRGGGRBGG?GGB?BGR?RG?B???BB???", "?GGGGBB???RGG??GGBG?GG?BGGGB?GGGBG?GBR?GG", "?GB?GBBG?????GGGGGB?GBRGGRRG?BBGGGGGBGRGB", "?GGBGGGGG?GGGBGG?G?GGBBBBGB??R?BBBGRGBGBG", "?B?BGBGR?G?GGG?B?GBBGGGG?BBBGGGBGGRB????B", "B?GBGB???RGGBRGB?G?GR?R?B?GGG??GGGGB?BG?G", "GB?GRGBBG?G??GBGBB?GBBBGB?BGG?BGBBGBGB?BG", "GGG?G?RGBGGG???B?BRG?GBGBG??BB??G?GGGGBGB", "GBBGB?GGBGGGB?GBBGGGGG?B?B?G?G?B??RGBBBGB", "GGBBBGB?GGRG??BRB?GGBGGBG?BGG??BGR?RGGG?G", "GB?GBG?B??GGBGBGGBB?BBBBR?BBG??G?BGGBGG?B", "GGBGB?B??BGG?GRGBB?BGBGGBGR?GRBGGB?B??G?B", "BBBBGG??BG??GGG?GBG?B?BGGGBG???G???G???G?", "??B?GBBGR???GB?B???G??BGBG?G?GBG?GBBB?BG?", "GBGGGB?GGBGG?GB?GBBBBG?GGGB?G?G?BGGB?G?BB", "??BG?GGGGGBGBBGB?RBB?B?BBBB????GGB?GBG???", "?BGB?GR??BBB?BBBGG?GGGRBGGGGGRGB?GGGGBGB?", "GGB?BGB?GGGGRR?BGBBG??BBBB????RG?GB?G??BR", "BBG??GGGBB?BGGBBB?GBGBG??RGBBGBR?BBGGGBBG", "GGGBGBGGB?B?GGBRBGGG?B?B?GBGBGB?GG?BBG?GB", "GBGBBR?BB?GG?BGBB??BBBGB??GBG?B?BGB?GBBG?", "BBB?GBGGB?RBG?GGBRG?G?BGGG?BBGBB?RR?BBGGG", "BBGBR?BG?RGGBG?GGB?G????GGGGG??BGRG??GGG?", "??GGG?G?GBGRBRGB??BGBGB?GRGBBBG?BBG?GBGG?", "GG??GGBGB??GGGBGBBGRG?B?GG?GBGBGG??G?GBGG", "GB?BRGG?B?BGGGGG?G??BGBBBG?BGG?B??GGB?BBG", "?BRBB?GRBBGBBGG?RGBG??BGGGB???BG?RB?GGB?G", "GB?G??G?G?GB?G??BGGB?GG?BB?BGGGG??G?GBBBB", "GBBGBGGGR?BB?GGGGGG?GGGGGBB??BGBGGB?RGGGG", "G?G?GGG?BBBGGG?G?BBBGGBGRB?GBG?BGBBGG?BGG", "B?GGGG??BBGGBG?GGGB?BGGB?BBGGBGBGGGG?BBGR", "???GBG??BGGGBB?G?GG?BBBGBBGGBGG?B?GRBGBGG" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case85() {
        String[] board = { "RG?GGGRGGBB?BBGG?GRG?R?G??BGGBBGGB?B??GGR", "?GRBBBGRBGBRG?BGG?RRGGBGRRRGR?GR?????B?GR", "GG?RBGB??RBGB?R??BBB??BBBBRGRGGBBR?GBR?GB", "?BBGB???BRBRB?BGR??GG?RG???GGG?B??BBGGBBG", "B??RGRBRGBBG?BGGGG?GRR?BRRGRB?GR?R?RGRBBR", "RGBBRGB?GR?RG??G?RB?GG?RBBGRRBBR?B?RBR?G?", "GBG?RRG?RRRR?BRBRBGGRBG??R?BBGGGBRBGBRRBR", "G??GRGGR?RR?GRGR?R?R?G?B?RGR?RGRBBGG?GGGG", "GRG?GGRB??BR?BBBRBBRGRRBRBGGR?GGBR??RRBGB", "BR??RRGGGBBR??BB?BRGRG?BG??GG??BGG?BGGGR?", "RB?GRBBGB?BR??GGRGB?RBRGRRBR?B?B?GRBB?GG?", "GGG??R?GGG?B?G??BG?GRB?RBGBG??B?BR??BGRRG", "GRRGB?RR?GG??G????R?B?RBBGRG????B???RRRR?", "RRBBGG?B??B?BBBRB?R?BGGRRBBGBRR??G?RB??GR", "RG????GBB??GR?RGRRBBBGBB??BBGGG?BGRGGRBRB", "GG??RG?G?BGG?BBB????G?B??BBBG???G??GBGGGB", "BBGRRGBG?BGG?G?GRGG?RBGRG?B??GGRG?RBRRGGR", "B?B??R?BRR?RR?BG?BGGBR??GGRBGGBRRRGBGR?RR", "BG?RGGRR?GBRRBBRRR?BB?GB?G???GG??R?RRBBBG", "?GRR?R?GRGGGG??RBB??R??BRBGGRGG?RB?BG?GBB", "BRGGBRGR?RBBR?GBBRGG?R?GBGBRR?GRG???RG??B", "?GRRBB??GGBBR?RGBG?RGBRBGG?GGRGG?BB?G?RGR", "BGR??GG?G?RG?GR?BGRG??RR?GBRRBBB??GRB??BB", "GGRRG?RGRGGGGR?BB?GBRG??BBGBBR?BBRGGRRGR?", "BB?B?RGGGRGGGRGB?RRBGGRBB??BGGRGRBG?G?BR?", "RBRRBRRBRBGGRGBG??R?R??GGGB??RRRGB???RG?R", "RRBGG?RR?GR??GR?RB?GGRR??B?B?GRGGGBGGBBBB", "BRGGBRBB??RGGGBBG?R?B?G?G????BB??R?B??G??", "RB?RRGRB?GBG?G?RG?RR?B???G??GB?RRGRG??BGR", "?BRGRG???BGRG?GB??GRRGGB?B?R?GRG?RBBG??RB", "BR?B??GGRRR?BB?RGR?RB?RBBR?R?RR?GRB?RG?G?", "??RGBGB?GR??GRR?BGGR??G?GGBB??GBRBRBGRRBG", "?GB?G?GR?BRGRRBG?RGBG?GGGGGRBG?G??RRRRR??", "RB????GG??BRGBB??RRGRGG?RR?GBGR?GRGRR?GB?", "?GG?GBB??BGRGRBBR???RR??GGBBBGBRG??R????G", "RGRGRGBGBR?B?BGG?RBGRBG?G?GBRR?GGRRBRGGBB", "G?R?GB??B?GGBBRB?GGRR?RRBRBRR?GB?BRR?BGR?", "?RG?GB?B?G??BBG?BGRR?R??GR?GGRG?GG?BRRGG?", "?BR???GRGGB?BBBBR??GBRBG?R?B?BRGGB?BGR?GG", "B?BGBB?RG?R?G???GRGB?G?BRGGBGBGGGBGRBBGBG", "RBR?R?BGGGGG??GGRGGR?GGBR?GRG?RGB?R?BBRG?" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case86() {
        String[] board = { "???B?GG??BGG????????B???BG?GGGBGR???GRGBGB", "?BG??RB?BB??GGGG??G??BRGGG??G?G??BGB???GBB", "B??GG?BGG??G???BB?GBGBG??GB?GGGG????GBG?R?", "????R??BG???BBGGGBGGB?B??????GRG?G?RGB?G??", "?R??GG?R?BG??????G?BR???G???BBBG?RB?????G?", "?RG????RG?R????GRB?R?GG??BG???BGR?BG?RRGRG", "BGB??B?RB?RB??G??GRR??B?BGGR??R?G?RR???RR?", "?BRGG??R?G????B?B?RG??RB?G?BB???GG?G?GB???", "GBGR????GGBGBBGGB??G??GG?BB?????G?R?G?????", "GRG????G?G??B??GB????????BGG?G?????GRBRBBB", "G??????B??G??GB????G?BGGGGB??BR?G???BGGRG?", "GB???G?BGBGGGGGG??B??R?G???BGBRB??BG?GG?G?", "BG????BG?G??GGG?GG?R?????????GG?BB???B???G", "???BRR?RGBGGBR?B??G???B???GBR??BGB??BGRRG?", "??RG?G???B??BBGG??B??????GGGRG?BRR?GRG????", "???GGGGG??GG?????GRGGGGG??G?RBRGG??B??G???", "???B??GGB?BRGR?G?B??????RG?G?G?B???RR??G?R", "?BRRR??GG?G?????G?BG?G??B??GG?R??BRBG?G?BB", "GR?GG?RG?B???G?????GRBGB?BG?G???GG?G?G???B", "GG??RGRBG?B??GR??G???R??R?GRB???RG?GG?B???", "??????GGGG?R??RG?GR??G??????GBR????BG?G??R", "????R?BGGBB?G?GGBGBR????B???G??B??GBB??RBB", "G???????G??G??R?BBBG??B?G?RG????GBB?G?R?RB", "?????GRG?B????RRGG??B?BB???GR?GG?BG??R?G?G", "??B??R??????G????GBGGB???GR?R??????G??G???", "BG???G?BB?G?BGG?BB?G?B?RG?????BG??G??G?B?R", "BG?B??BBR???B?GG??GB??G?B?GB?BGB?R?RRRBG?R", "?RGGG????GG????G???B????GG?B???GGG?R??BG?B", "GB??R?BRGRBR?RGB??G?R?RGRG?RGG??RBBR??B?R?", "B??GGG?BG?RR??GBGGB?BG?GBBB?????G?GG?BR?R?", "BB??B???B?BB?GR???B????RGB?G????G?G??G?BRB", "???B????GB?GBR?????????GRR???R??B??BB??RRB", "?BBB?BG?B?B?G?G??BR?BG??GGRB??GBGBBRBG???G", "???RGRBG???B???B???R?GG?R?GBGR?G??GGG?????", "R??G???BBB?GGRG?GGB??B???GRRGBG?????BGGGG?", "???GG?G??G?GBG?BGGB?BRGB?B????G???GBG???BG", "B???G?G???B??GB?GRG???R??RRGG??G???RG??R??", "RG?B????G???GB????GG??B????GG?G???R?GR??RB", "???BR?RG?RB??GBRGGBBG?G??G??B?BGBGR???R?GG", "?G????R??RG?B??GR?G??G??GB????BG?G?R????RG", "???B?G?RGR??B??G?BBGB??BRBR?G?G????BR??BB?", "BR??G?????B?BG?R?BBR?B?BR?????B?B??R?????G" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case87() {
        String[] board = { "R?GBRGGB?BGRRBBB???RRBRGBBRBBBBBBBBRBB?BB?", "B?RBBBBR?BB?BBBBRBBGBRBBRGBGGBGBGGB?B??GBR", "GRBBRRGG?BBBB?B??GBBGRB?BBRBBRRRRBGBB??BB?", "??BBGGBBGR?BR?RBBRR?BBBBRGBB??GRRR??BB?BBR", "GBBR?BGG?RGB?R?B?GBBBRBB?BBRGBBBRBGBGB?BRR", "BBBBRBBRBBRBBBRRRR??GBG?BBBRBBBB?BRBRBGBBB", "RGBBGBBBG???G??BB??RR?B?R?RBGBRBRBBBBBGGRB", "?BBBRGBBBGRBR?GB?BGBBBBBBGB??B?BRGG?RBB?BB", "BBBB?B?RRBGB?BBB?BGRBGBRBBBBGBBBGBB?G?RBBG", "B?GGBBRBBRBBRR?GGRBRBBB?GBRGG?GRBRBBBGRG?G", "RB??BGBBGBBBBRRGB?RB?RGBB?BGBGBBGBBRG?RGRG", "?GR?G?B?GBB??RR?BB?R?BB?RR??GGBBBGB?GGBBBR", "B?BB??BGB??R?BBBBRGGGB?BBGBBBBBBBBBBG??GBB", "??BBB??B?B?RGB?BBB?GG??BGG?GRRRRBBRBGB?RB?", "BGBBBR??GRGBBGBBBB?BBBBRBBGR?BGGRBGGBB?BBB", "BBBBRRR?RGGGBG?GR?BBBBBB?RGGBB?GRBBBBBB?BB", "RGBRBG?BBR?BGBRBBGRB?BBGB?GBB??RGGG?BRBBBB", "GBB??RGRBB?B?BGGR??BB?BBGRBGBG?BRGRRGGGBRG", "??RBRBBRBGBGGBR?BRRBR?GGRGBBGB?G??BB?RBRBB", "BBBBR??GR?B?BGBB?BBG??B?RGGBGBB?BBBGG?BBBR", "BBGBBBGRB?BB??BBBGBGGBRBBG?BBRRBGBBBR?BBBG", "GBBB?BGRBG?BRGGGBBBBBBBBGGB?BB?BB?BBGG??RR", "BGBB?BG?BRBB?RRGRRBGBBBBBRGG?RGBRBRB?B?RBB", "GBBRGBB?BRB?RG?B?B?BBB?BBBR?G?R?BBRBBG?BBR", "?BBBBG???BBBBRB?????BRRR????GB?GBBB?GBG?GB", "BB?GRBBGB?GB?BBGG?BBRBBBBBBRB?GBR?BBRG??B?", "BBBGGB?BBBB?BRBBBGGGGRGBBG?GBBB?GBB??BBBGB", "R?R?BGRG?B?RB?G?BBR?GRG?GRBBBG?GG??GBBGBGB", "GBBB?RRBBGBBBBG?BRR?BRBBBRGBRBBB?BB?BBBBB?", "BBB?GGRBBBBG?BB??GBBBG?BBRBBBGGRG?BBBGGBG?", "BB?RBBBGG?BBRGBBG??BBRBB??BGBBB?GB?BRBBBB?", "B??BRRGBBGRBBGB?BBBGBGGBR??BB?BBB?RBBB?BRB", "GBBB?GGGRBBG??BBB?BB?BGGGBG?RBR?BBBGBGGGGG", "GG?BBBBGGGRR?BGBG??BRBRGBBGBBBR?BBR??GRBBB", "?G?BBR?BGGG?GBBGBBBBGB?GRBRRG?B?BBBBR?B?BB", "BBBBGBBBB?RBBRGB?BRGRBRRBBBRB?GGG?GGG??BBR", "RBBRBRBBGBBBBBBB?BBBB?B?GBB???RBBGG?BBR?RR", "BBBRBBRRGBBB?GBB?BBGG?R?BBRB?B?RBGRBGGBB?B", "BRRBBGBB?BBB?BBGR?R?BRBBBGBGBGBBBBBBGGBGRB", "BRR?BGG??GBBR?BGG?GGGRGGBBB??B?BG?BRBBRBBB", "BBBRGRBBR?GGR?GRB?BBRRBRBBBRBBRB?BBRRRGG?B", "BB?BGBB?RBBG??BB?RBRBGGRB?BBBBBBGBBBBG?GG?" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case88() {
        String[] board = { "BRBGBBBRBRRBBBRRRBRRBGBRRRRRRBBBBBRBBBBBRBB", "GBRRBBBRBBRRB?BBBBRRRRRBBBBGRRBRBBBRRBBRBBB", "RGRRBBBRBRRRBBRBBRRRRBRRRBBBBBRBGRRBRBBRRRR", "RRRRBR?BRBRRBRRBRBRRRBRBRBBRGRBRBBBRBBBRRBB", "R?BBRRBBBRBBRBRRRBBBBRRBBBBBBBRRRBRBRBBBBBR", "RBRRRBBBRRBBRBRRRRRRRB?BRRRBBRRRRBRRRRBBBRG", "BRBBBBBBRBBRBRBBBRRBBBBGBBBRBRGBGRRRBRRBBRB", "RBRBRBBRRRB?BBBRRRBBGB?BRRBBGBBB?GRRRBBBRRR", "BBBRRBRBRBRRRBRBRBBBRRRRRBBBBRBRRBRBBBRRBRR", "RRR?GRRBBRBRRBRRRRBBBBRRBBRBRRBRRBRBRRRBRBR", "?RBRRBRBBRBRBBRBBRBRBRRBRRRBBRBBR?RBBBBRRBB", "BR?RBGRBBRBBRRBRR?B?GRBB?BRBRRRBRBBRRRRRBBB", "RBRBBRBRBRBBRRRBBRBRBRBRBRRRRRRBRRRBBR?BRBB", "BBRRRBRRGBRBR?RBBGRGRRRRRBRRRRRBRRRRBRRBRRB", "GBBRBRRBRRRBBBRBBRBRBGRBRBRRRRBBRBBBRRBRRRB", "BRBBBBBRBBRBRBRBBRBBRBRGRBRRBBRBRRRBRRBRRBB", "BGRRRBBRRBRBBRRBBRRRBBBRRBBRB?BRBBRGBGRRBRR", "RBBRRBBGBBBRRRBBBRBBBBBBBRR?BBBRRBRRRBRRBRR", "RR?BBBB?R?RBBGBRBBBRRRBRBBRBRRBGBRBRBBRGRBB", "RRBBRRBRRRRRRRBBBRBBRRBRRBRRBRRRRBRR?BBRRBB", "?RRBBBRRRBRBRRBBRBRBBBBBRBRRRRRRBRBBRBRRBBR", "BBBBRRBRRBBRBBRBRRBRRRBBBBRRBRRB?BBRBBGBBBR", "RRRRBBRBRBBRR?BBRBRBBBGRRBRBRRBR?RRRRBRBBBR", "BBGBBBRBRRRRRBBBRRBRB?BRRRBRRBBBGGBBBRRRBBB", "RRBBRRBRBBRRBBRRRBBRRB?BRRBRBRBRBRRBRBBGBRB", "BRRRRBBBRBRRBRBRRBBRBRBBRRRRRRRRBRBRBRBBBBB", "BBRRRBBB?RBRRRRBBBBBRBRBRRRBBRRBBBRBBBRRRRR", "BBBRBBRBBBBB?BBBBRRRBBRBRRRBRBRRBBBBBRRRBRR", "BRBRRRRRRBBRBBRBBRRRRBRBRRBBRR?RRBBRBBRRBRB", "BRBRBRRRRRRRGRBRRRBRBRBBRBRB?BBBRBGBBBBRBRB", "BBBRBBBRRBBR?RBRBBRBBRBBRRRRRRBBBRBBRRBBRBR", "RB?RRR?RBRBBBRRRBRBRBBRRBRBRRBBBBRRBBBRRBRR", "BGRRBRBB?BBB?RBRB?RR?BBRBRRBBBRBRBRBRBBBRBR", "BBBRBRBBBBRGBRBBBRRBRBRRRRBRBRRBRBBBRRBR?BR", "RB?RRRRRBBRBBRBRGRGBB?BBBRBRBRRRBBR?RRBRBBR", "RBBBBBRRRRRRBGBBRBRRRRBBRBRBRRB?RRBRBBBRRRB", "RBBBRRR?BRBBRRBRBRBBRRRBRRBR?RRBRRBRRBBBBBB", "BRBBRRRRRRBRRRRRBRRBBRRRGRBRBBRRBBRRRRRRBRB", "RBRRGBRBBRB?BGRRGRBRBBRRRRRBBRBRBRBRBRRRBRB", "RRRRRRBGBRRBBBRBGBBBBBBBR?BBR?B?BRRBGRBRRRB", "BBRBBBRRRRBRRBBBBBRBRBRRRBBBGRRBRRBRBBBRRBR", "BBRRRRRRBBRRBBRBRRRRRRRBRRBRRR?R?BRRRBBRBBB", "BBBRBBRBRRRRBRRRBBBBBBB?RBRBBRR?BBBRRBRBBRR" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case89() {
        String[] board = { "GG?BGGBBRB?GGBBBGBBGBGRBBGRRBGBBBBGBGBGRRRR", "RRBRBGGB?BG?GGRBBG?BGGGBBGB?BRBBGBGGRBG?BBB", "BBGGRBRBBGB?BGG?GGBBBBBGBBGBBGBBBGGBB?GGBB?", "BRBBBBBBBBBGBGGB?BGGRBGRBGGGGB?GGB?BGBBBBGB", "RGRGR?BGG?RBRGGGRRGGBGGRGB?BBG?GGGGBRBGGRBB", "B?BGBBGBBB?RRGGGGGB?RBRGGRBBRRG?GBBBGGBBBGB", "GBGBGGGGGGBGGGBGRGGBG?RBGGRGG?BBG?GGRGGRRGR", "BGBGBRGBGGB?RGRBBGBGBBBBBBBGBBBGBBBBGBGBGGB", "GRGGBGBRGBRGRRGBBGBBBBBGGBBRGBBGBBBGBGRRGBG", "BBBGB?RGGGBBGBGGGRB?RBRBRGRG?BBBGRBGGBGBGBB", "GGRBBBBBGBBR?GBBRRRG?GBBGBGGBRGBG?GBR?BG?GG", "BBBBGBGGBBBGBBGBGBBBBBBRBBGRBBGR?GBG?BBG?GG", "RBBBRGGBBGG?GBBRRRBRBBGRRRGB?GGGGBRGRGGBBG?", "BBGBBRGBBRGRRBR?GBBGGGGGGRGGRGBGBGGGGRGBGBB", "BBBBBBBGRBGGRGBGBBBRGBBG?RBBBGGGGGBBBGGBBGG", "?GBGBGGBGBG?GBRBGBGGGBBBBBGGBGBBB?BRGRRBGBR", "RGRGB??BBRGBBGGGBBGRGB?BR?RBGBGGBRRBGGBGBBG", "GBBBGGGRGGB?GRBBGGB?BBBGRBBBGGGG?BBGGGGBBRR", "GBBG?GBGBBGGRBRGGBRBBGRBBGBBBBB?GRRRBGGBG?B", "RGBGBRGGGGGBRBBBGBGBBGGG?BBGBBBBBGGBBBGRGBG", "GRGRRRBGRG?BGGRRGGRGGBB?GRBG?RRBRBBRGG?BRBB", "RGBBGRGBGGBRRG?RRGRBBBBB?BBBRBGGR?GGBGGBRBG", "?BBGGGBBGBRBBGBBRRGBBBGBGRG?RGBRGBBBBGG?B?G", "GRGBBRBBGB?BBGBGBBBGBBBGGG?BBBGBGGGGBGGBBBG", "GBBRBBBBGGRGBGGGGGGGRBG?B?B?RBBBRRGG?RBGRBB", "RBGGBRG?BBGRBBGG?GBGRBBBBBBBRRRBR?RGRGGRBBG", "BBBBBBGGGG?BG?BBGRB?BBRGGGGBRRRBBRGGBGBBGRB", "BGBBBBGRBBGGBBBGGBRGBGBG?GRRG?RBBBGGGRGBBRB", "GBBBBGBRGBBGRBGGGGGGBGBBGG?BBBGBRBBGBRRRBGG", "GBGGBBRGBGB?GGRGBGGBRGRGBB?RRBRBRGGGBBGBGBR", "?GGR?BGBBGGGBBGGGBBRGBGGGGGRBBBGBBBBRRBBGBB", "BBRBBGBBBGBBBBBGGG?GBBRBG?B?BRBGRGBB?R?G?G?", "G?GBBGGGBBGBGBBBBG?RG?GRGRRBBBBBRBRGBGBGBBG", "GBGGGB?BBGGGBGBBBBBB?GBGBBRBBGGRBGBBBGRBBGB", "GGRBBBG?BRBRRBGBGGBRRG?RBGBGG?GBRGBBGGBB?G?", "?BBBGBBGGGBBBBGGGGBBGRBGGRBR?RB?GBBGRBB?G?B", "GBGBBGGB?RBGGBGBB?RBBGBBGRGBBBBGGGGGBBB?BBG", "?BBBGBGBBBGGGGBBBBR?BGBGBBBG?BBBGR?GGGRBGBG", "?RBBGGGGGRBGGBBB??GGRGGGRGRBG?BBRGRBGGBBRBB", "G?RRGGGBBGGBRGGBRBBBGBGGBGGGBBGGBGBBBBRGGGB", "BBRGB?RBBGBBGB?RGBBGGGGGGRBBBGBBBRRGBR?BRGG", "GGGBBG?BRBGBRGBBRBRBGGGBGBGGBRBBBBGGGGBGB?B", "BGR?GGBGGBRGGGBB?BGBBBGG?BGGGRGRGBRRBGBGGRB" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case90() {
        String[] board = { "BG?GRR?B??GGR?GG??BB??GGG?BBB?GBGG??BG?BGBGG", "?GBG?BBBBBRGGB?BGBBBRGGG?RBBBBGBGGB?B?G?BR?B", "GRB???B?BGBB?RBGRBBGB??GB?G?B?BR?BBBGGG?GGBB", "?GGBRB?BB??GGG?GB??GGG?B?RBGGGBB?BB?GBBGBB?B", "BGGGB?BB???GG??BGB?B??BRGBBBBRB?GGBBGGGBGGB?", "B??RBBBGBG??BGBB???GBGB?G?BBG?G??RG?GBGB????", "GG?G?G????BRG??BGG?BRBBBG?GBGBGGB?GRB?GB?G?G", "?GRBGBGBBBB??G?GGR??G??R?BR?GGBB?BGBGGGGBG?B", "B??BB?BGGB?BBGRG?BGRBBB?BGRGBBBGBGGBB?GBB?G?", "?GB??BG????GBBBB?GB?RG?BGBGGG???GR?GBGBGB?BG", "BGG?B?GRGBBBRG???BR?GGGBBBGG??GBBGBGRGB?G???", "BGRB?GBGGGGGRBGBBGBG?BGBGGGGBGGBG?GBGBB?BGBG", "?GBB?GBBB?BBG?G?G?BBGGGGBGGRGRRR?GBBGBBG?GBG", "B?GGGBGBGRGGGB??GGB??BBBBRGGGBGGGBGBGRBBBBG?", "?BBGGGGG???B?B?GB?RGR?GBBGGRGBBGBGBGGGB?G?GB", "BBRBBBBGG?B?B?BB?GBB?BGGGG?B?B?GGGGBRBBGRBGB", "GB??GB?RB?BRGRBB?GG??GB?BRR?B?GGGGGBGGG?BGBG", "BBBBGGBBBBBBG?GB?GGRGG?GRGGBGRBG?GBGBBG?B?BG", "GB?GBBGG?GGBGGBGR??BGB?BGBB?BBBG?GBBGGGG?GRB", "?BB?GGBG?BGBGGGGBGBG?BB??GBG??GBGBBG?G?RBBGG", "RBBBBGR??RRGBG??GBGBG?BGBGBBBBRBBBBBBGGR???G", "GBGBGRG?GRGGBBGGGRGBGRGGBGBGGBBGRG?BBRBBGGBG", "BG??GBBGRRB?GB??GGR??RGGGGB?B?BRGGBG?BBGB?B?", "RBBBG?R?BBGGGGBBGBBGBB?BG?GB??BBB?BB??BGB?BG", "B???BB?BBGG?G?BB?BBBGRBBGBBG?BGBRBB??GG?GRGB", "GGBGBBRBB?BB?BB?GGGBGBR?RBBGBGBG?BB?G?G?B??B", "B?GGR?BG?RBGRGGG?G?B??BBGGGBB?GB?G?GBBGBRGGG", "BBBBBGG?GBRB?BGRGRBBBG?BBBBGGBGRB?GB?GGB?BBB", "?G?BBBG?BR?GB?GBBBB?B?B??GG?BGGB?BB?GBBGBBRB", "GBBBGGGBBBGG?BGBGG?BBGBBBR?BBBG??BRRG?G?BG??", "R?BRBG??GBR??B?G??BBBBR?BGBBBBBRB?B?BGR?BBGB", "RGR?GBG??G?GRBBRBGBGGGGGG??BB?GBGB?BR??G??GG", "BRGRBBB?BGBBGGB???BBBB?BB?BGRBBGBG?GB??BBBG?", "?B??BR?BB?GGB??BB??B???BBGBBR?B??GR?GGB?BBR?", "BB?GG?BGBRBBGRBR?BGBR?RR???RGG?RR?BBR?GGRGGG", "BRGG?G?BGB??R??GRRBB?BBBBBBGG??G?BBBGBG?GBB?", "GB?B??GBG??BGBGBG??BBGGGGGGB???B?GGG?GB?GB?R", "BBGG?BBBGGGBBRB?BGG?BBB?GGGBBBGG?GGGBB??RGGR", "G?GGBBBBG?GBB?RB?GBGBGGBRGRG?BRG?BBBGGB???B?", "BBGGB??BGGBG?R?GBG????GGBRRBG??GBBGRBGGB?B?G", "B?BBGBBG?BGGBBBBRGG?GGBGB?BGBGGB?BBBR?G?GGBB", "?GBRBG?GRBBG?GBBBBBGB?GBBGBB?BRBBBGGGGG?GGBR", "GBB?B???GBGGR?BBGBG??BB?BBGGBR?RGRGBG?BGB?GG", "GBBBGB???B?B????GBB?RB??GGG?RBGBBBGGGRRGRGBG" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case91() {
        String[] board = { "BB?RBGGBGGGRGGGGB??B???GBG????RBG?R??B?GGBGB", "GGBG??B???BBG??????BBBB?GGR?BBG?G?????B?B?GG", "BGBG??B?GBBG?BR??G?RGGGRGRBGBBGBG?RGR?BB?GGB", "?GRGGGGGBBB?BGR?B??BGBB?GGBGBBB?GBRB??GRBB?B", "GG?GBG?GRG??BBGBBGGG?GG?B?BBGGGG?BBG??GGGB??", "?BGBBG????????GRBBB?B??B?BB??BB?G?BGBBBGGBBB", "B??BBGGRGG?G?B?BB??G?RBBGB?GBBBBGRR??G??GG??", "?BG?RG?GBB?G?B?BG?G?BG?G??GG?B?B?BB??BBG??G?", "BB??B?BGBB????BBB?B?BGB?R?B??BBB?G?BBG?GGGB?", "?G?BB?GG??GRBRB??GG?G??GGB?BG?BBR?GG????BG??", "GBGG??GR?B??BR?BBGG???GGB?RBG?GBBRBBGBB??BBB", "BRB?B?BGB??BGBBG??G?RG?BBRBB?GGG?G??GB?RG?RR", "BGB?BBBBGBB?BGB?B?BBBBBBBB?BG??R?GB?B?G???GG", "GBBGRGGBG???GBG?G?GGG?BGGBRGBGB?GGBG?BG????B", "?GB?BR?B??B??G?GBB?G?G?B?BGG?G?GB??BBBGBG?BG", "GBRB?BRBGBB?B?GBBG?B?B?GB?GBBB???GBRGGRBBGB?", "G?B?B?BB?G?GG?BG?G?G?GBB?B?B??B?BBBBB?RB?GB?", "BBBBBB?GG??BBBBBBB?G??GB?BBG?BG?GB?B?BB??B?B", "?RBGG?BBBBG???RB?GG?????B?BGG?G??GG?BG??GRBG", "B?GG?GG?GB?GRGGBGB?G??BRG?GG?G??GG?BB??BB?GB", "G???BRBG?GB?RRG?GB?G?BBB?B??GB??B?GBBGBBBBB?", "?B?GB??G?BBBBG?BBBBG?G?BR?BB?B?BB?GGG?GRGB??", "GG?B?B?B?BRBBB???BBB?GG???BRBBGBGGBB?GB?BR?B", "??BGGGGR?BRGB?GGBRGB??GBGBGBBB?GBBG??GB??G?B", "B??R?BGRGBB?GBBRBGGBB?BBRGGGB??GGBGBBBBGB?GB", "?GRGGGGRBB?RB??GGG??BGB?R??BBBB?BBGB??GBBG??", "GR?BG?GGGRG?BGB?GGGBBG???BG?BG?R?G?BG?G?RBGG", "BB??BRB??G?GG?BGG??B??R?BG?GGGG????B?BG?RGGR", "?GBB??B??GBR?GBGBG??BGB????GGBGGBGG?RGG?GB??", "??GB?GBGBBBB?GG?B?BGG?RBBR?GGRGGBB??BBB?BRBB", "B?GB??B??BB???B?GGGG?GG??B??B?BB?RG?GGRBG??G", "GGB?BG?G??B??B?GG????GRBGGGGG???BGGGGBGRBRGG", "BB?GG?BG?BG?BGBBGGBG??RGB??GB?G?B?BG?GGG??GG", "B?RBGGB?B?BBG?BB?R?GG?GB?BGG??B?RB??BB?GGBBG", "G??R??GBGGB??G????G??BGGGGRB?G?BGGBBGRB?BG?G", "??B?B??BB??BBB?BGGG?GRB?BB?BBGG???BGB??RB??R", "?GRRGGBB?B??BBGBB?BB?BBGBB?BB??RBGGB?GBGBBG?", "BGBGBGBRBBGB?GBB?BG??BRBB?GBGB??GB?RBG?B?B?B", "B?BB?BR?RRBB?B?R??RBBG??B?BGBGRBR?BBBBGB?B??", "???B?GBBBB???G??BRG??B???GRBRB??B??GBGG??BB?", "BBG?B??B??G?GBG?GGBB?BBR???G??BRBR?B??GGGB??", "G?RBGGR??GBB?G?BB?BG?GGGGBBG?GBR??GGG??G?BB?", "BB?GG?B?BG?BGB???BB??GRGB??BBGGBG?BGBBBGG???", "G?B?BBGG?GGB?BB?B?B?RBGRB?B?BRG?B?GG??????GG" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case92() {
        String[] board = { "GGRGBRGR?BGRRGBBRR?GG?GBGGGGG?GRGGBRBBBBGRGBB", "RGGGBGBGRB??BBB?BGRRGGGBGBBBGGGBBGBBRGBBB?GRG", "RBB?RG?GRBGGGGGB?B?BBGGGGGGGBRGRRGGBGBBBBGBGB", "RGRB?G?GGG?RGGG??RBGG?BRGBRRRGBGRRBRBGGGBGGBG", "GRBRRBGGBGBRGBGRRB?BBBGGBBB?GGBBGG?GBBGRR?GRB", "G?BRGG?GBG??BRRBGBBGG?BGGGRBGBGG?RB?BGBBBGGRG", "BGG?B?RGBBGBGGBGBBBGBR??RBBBGBGGGBRGB?B?GR?GG", "GRGBGRGGGB?G?RGBGBB?R?GGBGRGBGGGBRRBRGBG?BGGB", "BRBBG?G?BBGBGGGGRBBB?GBR??GRBGG??GGBG?GBBGGGG", "R?BBBBGGBGGGB?RB?GBRB?GBGBBRGGGRGGGG?RBGBBGGG", "GBGGGRBBBGGBRRGB??BBRRGG?GBGGRGGBGGBGBGRR?R?B", "BB?GGRGBGGGRRGGRGGGGGGRR?BGGGGR?RBBBGBBBB?GGR", "G?BGG??RRG??GGGRGB?G??R?BBRGBGGBBG??RRGB???RG", "B?B?BGRG?GBGBGGGGBBGRBGB?GGGBRBR??RGR?BBGGBGG", "R??GB?RBBRRGGR?GBGB?RBGRGGBRGGB?RR?BBBGBGB??B", "BBRBBBRBR?GBG??GBGBGGGBGGG??BGBGGBGGBGBBB?B?R", "GBGGR?GBBBGBBRGGBGBBRGGGBBGGRGRBRRBBBR??BBGGR", "?GGBBB??BBBBGRRGGBRBGGGRG?RG?GB??BB?GBBBBGGGB", "RGBG?GRBG?GGGGBBBBGGBGGGGGGBRG?BGGBR??GGBG?BG", "BBBGGGGGG??BGG?BBBGBBRGBGBGR?GRB?BGB?GBRGGBBB", "BGB?GBGBRRBBGBGBBGBGBBGB?GBBB?BRBBGRBBBBRBRGB", "RRGRGGG?BGBGGGGRGGGG?BBGRRRG?R?B??GGRB?RBGBRB", "BBBGB?G??BRGGG?GR???GGBB?GGGBGR?RGBGRG?GBB?RB", "GBBB?R?GR?BGGGRGGBBGGBBBGGGGB??GBGBBGB?B?BRGG", "BBRR?BBB?BBGBGGBGBGGBGGGRG?GGGGBRGB?GRGGGGR?R", "RB?BGBBGGRGG?RRGRBR?BBBB?BB??RRGG?GGGR?BB?BBB", "B?BGGBGG?BGGBGGBGRG?BGGRBBBBBGBBRBG?GBRGRRRG?", "BGBBR?G?BBGBBGBGBGGGG?GG?BBGGB??GBGBG?R?BGGGG", "GGRRB?BRBBBG?GRRBGRR?GBGGBRGB?GGBBBR?BGRBRBGG", "GG?GBBGRRGGGG?GR?BBGGBGBGRGR?GBGBGRBBBBBGGBBG", "RB?B?BBG?G??R?GBBRGG?BGRGR?GGG?GGGGGBGBGBRBGG", "G?RGGBBBGGGGGGBRBG?BGR?BR??BGBGGRBBBBGGGGGGRG", "GGRBRBG?BRGBG??B?GBGBGBBGBGRGBB?BRG?G?GBBBBR?", "GB?GGG?BBGGBR??BB?GBGBB?BBGGGBBG?BGBGRBGBGGRG", "BGGBRBGRBGRBBRGRGBRBB?RG?RRG?G?BGB?GGGB?RBGB?", "RRGBGBGB?BBBG?BBGR?RR??GBBBBBBRGB?RRG?BRRGGGG", "GGG??RGRGGGGBGGGRBGBRRGGGGGBGGGG?RRGGGRRGBRBR", "GBBGB?BRBGR?BBGGBRG?GGGGRRRBB??GBRBBBBBG?GGBG", "GB?G?GG????BRBGRB?GBGGB??GB??BBB?BBGGGGBGGGRG", "?BGRRB?BGG?BBBGGGBRRGB?G?R?BBB?RBGRGGG???RB?B", "BRB?G?B?BGGBRGRGRGGRGGBBRGRRGGGBGGGG?BBRBRBRG", "B??BGGB?GBRRGBBBRGBGGBGBGG?B?B?RB?G?GGB?RB?GG", "GBG?BG?GG?BGRGGGBGGBRG?BGBBB?GGBGGRBBGRGGBGG?", "GGGBBBBB?BGBBBGRRGGBBBGBGGBBRBBG?GBB?GB?GBGBG", "GBGGGBRGBBG?RGGRGBB?BB?GGGRBRR?BGBRG?BBBBGBGG" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case93() {
        String[] board = { "GGBGR?BRBBGRR?RG???B?BG?G??RBBRBR??GBGGBRRB?B", "B??RRR?B??B?BBB??G?RB???GRBGR?GRB??BG?RR?R??G", "RRBGR?B?BRGGB??RGR?BGBRBR?BRGGGRRBGBBGGGBB??B", "BBB?G??B?RGG???BRR?RRGRB?G?RGR?RBRBB?RBGRBGR?", "GRB?B?BBGRR?GGRRRGG?RBGBBGGBGGGRGRBRGGBR?R?R?", "B?RRB?GGB??R?BG?GRBGGBBG?BB?RR?GGGBR?G?G?RG??", "RBG?RGBBBG?G?BRG?RRRGRGGR?RGRR????BRG?G?RRG?R", "RBBR???GBB??GGG??RB??GBBR?R?BR?RG????BRG?BBBG", "G?RBRBGRBRRB?GGRGB??BR?GB?RRGG?B??BRBB?BGBBR?", "?GBBBGRB?GGRB?GB?R?BBGBBRBGGGRBGGG?GBBR??BBBB", "?GG??BGGRGGB???BBBB?RBGBRBRBG?GGB?B?GGBRR?GR?", "?GRGG??RRRBGR?GBRBGBBGBGRBBBGGBBB?G??BB??BG?B", "?GG?BB??GG??RGBR?B?R?RBG?GGRGBRRBBR?BRRBG?G??", "?G?BBGR?BGG?BGGRGGBRGGBGR????GGBBB?G?G?RBBBBB", "GB?GG?GBGGGGBR?GBGBRRB?B?BRBBRRG?GBB?RGRB?GBB", "G?GBRRBGGG?G?RGG?B???BBGR?RGGR?GBBRBBGGB?RGBB", "?BRBR?G???BGG?B?RG?BRGR?R?RRB?G????GBGG?GRGB?", "RBGBBRG??RRRGRB?G?RB?RR???BBBRR?BBG??B?GB?RRB", "BGB?BG??GBR??GBBG???R???G??G?BGGBRB??BBBB?BBG", "????G?RB??????GRGRBGBBRGGBGRBGBGBGGB?GBBBBBGB", "BRBG?GBGBRRBGGBRRRGGBBB??GBBGGGGBBBBBG?BBBBBR", "GRB?RB??GRR???RB??GB??GRG??RGB?RGRG??BBRG?BGR", "R?RGB??BRBG?GRRR??BRB?BB?GGRGRGB?BBGR??BRRBBB", "?B?BBG?GR?RGB?BRBRBB?GG??B??R?GBBGG?B??B??B?G", "GB?B?R??B?R??B??R??RRRRGG??BBRGRGBGGBR???GR?R", "?BGGBBBGBR?G?RBB?GBGRRG?G?GGB??BR??GRGGB?BBGG", "GRGRRB?BB?R?RBGGGB?B????RGGBB?BR??GRBG?RGRGB?", "GGB?BGBBGGG?BR??B?BBR??R?G?RBRBGBG???RG?G?BR?", "R?RG??GRRBG?G?B?BB?GBBR?BBGB??RB?R??BR?GRBG??", "?BGRB?RRB?GR?BG?RRRGR???BGR?RBRG??BBBGR?GGRGG", "?GG?R?BG?RGB???G?RGRRG?RGGRRGBRB?B???GB?RRBBR", "RRB?GB?RGB??GBRBGG???B?GGG??GBGG?B?B??RBBG?GB", "BGRB??GG?BB??GBBBBRRB?RG?RGGGB?GGR??R?G?GGR??", "BB?BB?B??RR???G??BBBBG??B?GRGGRR?????GGGBB?RB", "RR?BRGGR??RG??GBBG??BGGGBR??B?RG??BRRBBB??BBG", "R???RG??R?GBB?GRB?GB??B?GGGGBB?BG?RBG?GGB?BR?", "?RGRG??BRGG?R?BBG?BRRB?R?BRGB??G?R?G?BRR??BGR", "GB??RGR?RG?G?B?GRBGBB?BB?RGBR?B?BRB?GGB?BG?BG", "G??GRGBB?GR?BG??GB?BB?R??R?BBRB??GGRG?GBG?RBR", "?BGBG?G??GBB??GGR?RRRB?B?RGGG??GB?BGBBGBG?R?G", "BBGB??BGGGRGB?BG??B?GGRBRG?BRGGRG?RBGB?GBBR?G", "BB?G?GGGRGG?RBGBRBGRGGBG??BGRRGGRGR?BGBG?BGBR", "BBRB?BB?R?BBGGGBGBRBB?B?BGBRGBGRB??B??GG?BB?R", "GB??RB?BGRBR?BR?GGG?GR?G?BGB?RGGB?????BR??BGR", "GBGBBBBBRGBR?GGBB?B??BR??BG??BBGGRB??G?GBG??R" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case94() {
        String[] board = {};
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case95() {
        String[] board = { "?GBGRGB?BRB?G?BR?R?RGB?BRGBBGBGBRG?BGBRRGRGRB?", "?GRBBRR?B?GBGBRG?GRBRGR?G??G??RGBRRRGGBBR?BRBG", "RRRBGR?BGRRG?RBR??GRRGRRR??BBGGRB??BRBRBB?R?BG", "RB?BG?GBGGBGBRGGRBRB??G??GRRBBB?B?RG??G??RG??B", "GBGGGBB?BGRRRBGRGB??BRB?BGBBRRR?R?GBRBBGBB?RBR", "BRRBRGG??BGGGRBRGRRGRGRGBGGGGRRRBGRR?BGBB?R?RB", "RRRGGGBGBG?BGG?RRBRG?G?BRGRR?BRGB?G?GRRBBRGGB?", "RGR?G?RRRBGRGRRGG?RGBBRRBR?GGBRR?BBBRG??GRGGBR", "B?RRRRB?BBG??RBR?G?B?RRBGRGBR??G?G?G?G?RGRGGB?", "B?GGR?B?BG?GGGB?G?RRRRGGGGGBRBGBB?GGBBGBBRRGBR", "GGB?GRGGGBGGBRGGGRGRGGRB?GRG??G?GRBR?BG?GRRGGG", "GR??GBGRRBBRGBB?B?BBBGRRGB?BGG?RBB?GBGG?RBGBRR", "G?BGGBGBGRRRBGB?R?BBBGRRBRR?BBGBB?RB?BRGRG??RR", "RRBBBBBGGRGRGR?R?GRR?RRRR?G?B?RR?RBRBRRGB?R?R?", "?BBRGGGGR?GRRGRBRBG?R??GGGRRRG????BB???RGG?GBB", "???BGRR?BGRRR??GB?B??GRR??GBGBGR?RGRRG?BGB??BG", "G????RB?G??BB?GGGRGGBBRRRRR??GRRRRGRRRGGRGB?GR", "?GBGRG?GB?GRBGRBR?GRRBRR??GR?R?BRGRGBBRBG?RRG?", "??RRBGRB?RR?G?RRRRRBB?RR?GRBBR??BBBGGR?BRGRRB?", "G?RB?RBGGGG?RR?G?RRRR?RGGR?RRGBG?RRRRB?GRRRG?G", "GG?RGR?GBG?RR??RR?RR??RGRR?R?BRBRR?BRR??BGR?RB", "BB?RBGBR?B?RGRBG?RRRRRBBRGRGGGR?RGR?G?RBRRGR?G", "RG??BR?BRGRGGRGBRBRG??GBG?RB?RBG?RRG?RBGR?BBBG", "GGGRGRGRBRG?BB?BRGGBGG??B?B?BB?RRBGRBBR???RR??", "G?GGG??B?GGGB?RG??GB?RBBRRBR?G?GBGBR?RR?RR?GBB", "GBG??GG?GG??BGGRRR?RG?B?RRRRRGGRBRGRRBG?R?RBB?", "GGRRB?GBB?GRB??RRBGRRR?GRG?GB??RRBG?BRRGGR??B?", "BGGBRRG?RBRRGGBGGGGRRBBGBRGGBGB?BB??RRRRB?G?RG", "RGGGRGRBRRRBB?BRRGGBRRG?BRR?RGRGGRRGGG?G?RRR?G", "RRRB?GRRRBBBBBBRR?RBB??RBBGGBRG?BBGGRR?BGGGB?R", "RRGRRGGBBGGRRGR??RBRRGB?BBR?GRGRGBGRBGBRRR??RB", "?RBG?RBRGGR?RBBGGBBRRGRGGBBRRRBGBRGB?BBRRBGRG?", "RR?GRR?B?B?GRRRGB?G??B?RG??G?RRBGRRBRR?BR?BGBR", "BR?GG?RR??RRRRBB?R?R????GG?BG?RRRRRBRBG???GRGB", "??GRRBRBGBBRGRRGR?RB?RG?RBRBGRBBGRBRBGRGRRGGBB", "RRBB?G?BBBRBBGGB??RGBBBBR?BRGGRRR??R?G?R??GGB?", "GRGRB?BRBRGRGBGR?G?R???BGGRR?RBBGBRBBBRRRBGBG?", "?BBGRRBBRG?RRBRBG?BBGGG?RGG?GB??RRBRGGB?GRRGGG", "RR?BBBG?BGBRR??RBGBGRGRRBGRRBGGRRGGRRGRB?R?GBG", "BBBR?RB?BBGR??RG???GG?R?RRBBR?RBRG?G?R??RGR?GR", "B?GB??RBG?RB?R?BG?GGBRRBGGBGB??RRRB??G?BBGBRGR", "GBBB?R?GRRGBRG?BGRRB?GGGGRBR?BGRGGB?RGRGGRGRRB", "RGR?RRBBRR???GRBRBRRBRRRGBG??G???GBB?GRRG??GR?", "R??G?RRGG?GGGGGRR?RGB?G?RGGGRGBRR?RRG?GGGGR?G?", "GRGB??GGGR??GBR?BR?GGGBG?BBRBBGGGRG?GGB?GGRBB?", "?BRBBRBG?GBRRB?RBBBRBGGRBBRRB??GG?GG?GB?B????B" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case96() {
        String[] board = { "?R?RRRBGGR?GRRRGRR?GRBGR?GRRR?BRGBRBGG?GGRG?RGR", "RRGRR?GRRRGRRBBGRRRRGRRRG???RRR?R?RRRGRRRRRR?GG", "GRRGRRRG???GGR?RRRRRRR?RRRRRGGGR?RRGRGR?RBRRR?R", "RRRRRGGRRR?RRRRRGG?RRRRRRRRRGGR?GR?RGBRRRGRR??G", "GRRRGGGRRG??RRGRRR?RR?RRRRRRBR?GG??RR?RRGGR?BGR", "RRG??RRRRRRGGRRRGRRRG?GRRRRGRRRGGGRRBRRGRGGGRR?", "GRRRRRBRR?RRRRRG?G?R?RRRGR?RGRR?GGRRRRRR??RRBGR", "RRRRGRGBG?GB?GGGGG?RR?R?RRRRRGRR?GR?GRRRGRRRGRR", "RBRRRRGRRRRR??GGR??GGRRGRRR?RB?RRRRRRRR?RRGRG?G", "RGRRRG?RBGGRRBRRRR?RRR?GRRGGRRGRGRR?RR?RRRGRRRR", "GRRGRGRRGGRGRRRRGRBGRRGRG??RRGGRRBRGGRBGGR?RRR?", "?RGRRR?GGRGG?RRRRRRRGRGR?RRR?RBRGBG?RGG?RRBRBGR", "?BRRRRG?BGRRBGRRR?R?R???GRBRGRRGBRRRRBRRRRRRBGG", "RRGGR??RRBGGRRRRR?RRGRRRR?RGRR?GRGGRBRRRRRG?RRR", "RRRGRRR?RRR?GGRR?GGRRGRGGRRRRGRGGRRGGRRRGRGR?RG", "RGB?RR??RRGGRBGRGRRRRGRRR?RRRGGBRRGGGR?RRR?RRRB", "??G??GRRGR??RG?BG?GGRRGRRGR?RRGRRRGRGBRRRRRRRRR", "GGGR?RRGRRBGRRG?RBGR?R?BR?BR?R?GG?RGRGRRG?RRRRG", "GGGR?BBBRRRRRRR?RGRBRR?GG??R?RRRRRRRGG?G?RGGRRG", "RR?GRRRR?GRRGRRR??R?RRRGGRRRB??RR?GRGRRRGGGB???", "??G?GBRGRRR??GRRRRGB?G??GRRRRGRRRR??GRGRBRGGGRR", "R?RRGG?RRRGRR?GR?GRBRRRRRRGG?R?GRGRRRRRRGR?RGGR", "R?BRB?RRGGRR?RRGGBGR?RRRGRRRRRR?GR?RRGBRRRRGRRR", "RGRBRRRRBRRBG??RGRRGBRR?RGGGR?GRR?RRBGRRGGGGRGR", "GGRGRRR?RGGRR?GR????RRGRG?RRRGRRGBGGGRRR?R?RGRR", "RGG?GBGRRRG?RRRR?RGRGRGRRRGRRRGGG?GRRRRRR?RRGRR", "GRRRRRGG?RGRRRRRGGGRGBRRGR?GRGR?BBR??RRGRRRRRRG", "GRRRRRGR?BGR?RBRRG?RGGRGRRGRRRRGGRGRRBRGGGGRGRR", "RR?RGR?RGGG?RRRGRRGRGR?GG?R?RRR?G?RR?RR?BR?RRGR", "RGRRG?R?G?GR?RRGRRR?RRRRRRRGRGRG?GRGRBGRBR?R?GR", "RG?GRR?G?RRR?GR?RRRRRGRRR?RRRRR?R?RGR?BGRR?R?RG", "?RRGBRRRRR??GGB?RRRRR?GRGGRRGGRGRR?RRRGG?GB?GRR", "GRRBBRGGB??GG?RRGGGRGRGBGGGRBR?R??B?GRRRRGR?G?R", "GRRRR?RRRBRRRGGRRRGRRRGR?RRRGR??RRRRGRRR??RB?RR", "RGR?R?RR?RGGGRRRRRGR?RGRR?GBGGGGRR?RR?GG?G?GBRR", "BGGR?BRRRBRRG?GRRGRGGRGRGBRRGRGGRRRRRGGGR?RGRB?", "RGRRG?GRR??RRRGRBRG?RBRRGR?R?RGRGR?GRRRGGRGRGGR", "?RRR?RRGRR?RRRG?RGG?GGGRRR?GRRRGRGRRRRGB?BGGRGR", "RRGBR?GRRRRRRRRGRR??BRRRGGRRGBGBR?RRR?RR?GRRBR?", "?RRRRRRRRRGRRRGRRGR??B?GGRGGRRBGG?RR??GRRGRRRRG", "GRGRGGRRRG?RRRGRRRRRG??RGRRR?GGGG?GRRRGRRGGRRGB", "GRRGGR?RGRGRRRRGR??R?RRGGGRR??RB?RRGRGBR??RGR?R", "G?R??RRRGRRRRR?RGGR?RGRRRGRBRRRRRBG?GRRR?RG?GBG", "RRRRRRRR?RRRR?R?RR?RRRRRRRR?GR?RGRRGGGRRGRR?BGB", "RBRRRRGRGRG??RRGGRRG?R?R??RGBR?RRRRGGGRRRR?R?RR", "BRGRBR?GR?RGRGGR?G?GRRGBBR?RRRRRRRGGRRRRRBRRRG?", "BRGRRRRRRGBGRGRGRRRRRRGGBRRGRRRGGRBRRGR?BRR?R?G" };
        assertArrayEquals(new double[] { 0.0, 0.8024691358024691 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case97() {
        String[] board = { "GBGRGR?GRGRGGGRGGB?GBRR?RBRGGGGGRR?RGRRRGRGGRGR", "GRBRRGGRGRRGBRRRBGRRGBRGRGGRGRGRBRRGRGRRRGBRGRG", "GRRRB??RR?GR?GGG?RGGR?BRRGGRGGBRRRB?GRG?RRRGGGG", "RBRGRRGBRGRGRRRRRGRRRGRGGRGRBRRGBRGGBGRGGBR?BRR", "?GRGGGBGGGGBGGG?RGRBGRRB?RBBR?RGRGRG?RGGRBRGRGG", "?GGGGRRRRRGRBGGG?RGG?RRRB?RRR?G??GRRGGBBRRRRBRG", "RR?BG?RG?BRBBBGRRGGRB?GGRGRGRGBGGRRBGGRRBGGGGRR", "RRGGGGRRGRGGGBRRRGRBGGGBGGR?GRGBRRGRRB?RGBRRRBG", "RRRRRBGBR?GRGGGRG?RRGRGGRGRGRRGRRRRRRR?GR???GGR", "G?RGGR?GRGGB?GRRGBGRRRGBBRRGGRRGBGRRBGBBRRGGR??", "RGRRGRGRR?GBRGRGBGGRGRG??RGBRRRGRR?BRGGGGGRBG?R", "BGBGGGGRGGR?RGGRGRGRBGGGGGRRRRGRRRB?GB??GG?GRRG", "GBGGRBBBRRRRRGR?GRBGBGRRB?RGBGRGGRG?B?GGGBGGRRG", "RRRBRGGGGRGRGRGGRBGGGRBBGGRBGRGGRGBBGBBGRGBRRRG", "G?RGRRGG?RB?RRBGGRRGRGRR?GRGRRG?RBRGRRRGBRB?GG?", "GGGBGBGRRGGRRR?G?GRGGGBRGRGR?GRBGRGRRGGGGRGGRGG", "GR?RBBBGRGGGGGGGRGRGRRRBGGRRGGGRGGGRGRRGBRRRRG?", "BRRRGRRRGBGGGRRRGG?RR?RRRRRRGBRGBBGRGGGGGRRRRBB", "?GGRR?BGGGGRGBRGGGRRGGGR?GRRRGRBRBRGBGBRGGBRRGG", "GGGGRRRRGRRGG?BBBGBRGGGBGGBGRGRRRGGGRRGGRGRG?GG", "GRGGGBBBRGRBRGBRR?GGBGBGRGB?GBBRGRGRGG???GRGGRB", "BGBRR?GR?RGGRRGGGGBGBRGRGGRRRRGGBRRGRGRGGBR?RGR", "BGBRBGRGRGGGGGR?RGRGGGG?RGBRRRGGGRRRRBGRGRGRRRG", "B?BR?GRBRRRGRGGGGRGG?RBGGGGRR?RRRG?RRRRGB?BRBGR", "BGR?BRRRRRRGGRGBRGGGRRRRBGGGGGRBRR?RGBRRBGGGGG?", "RBRGBGGRRRRBRRBBRGGRRG?RGGRRGRRRB?GG?BGGGRR?BBG", "RGBGRGRGBRGGRBGGBGGRBBBBGRGRGBB?RBBGBRB??GGRGGB", "GG?BRRRRRG?RBRRRGGGGRBGRBGGGRGB?GRBGR?RRGBBGGGG", "BGRGRGGRGGGRRGGBBGGRGGRBGRBGGRGRGRRBRRGRRBRRRRR", "?GBGGRRBG?R?GGGRGRGGRRRRRGGBGBBGRRRRBGBRGGGGRGB", "RRRRBRGRGGGR??GRGRRGGRRGGRRRRBR?RGBRR?GRRBG?RGR", "GRGGBGGBGGGGGGRGRGGBGGGGGGRGBRRGGGGGGGRGG?BG?R?", "GGGBGRGGR?GGGRRRBRGGRRRBGBGGG?RRRGG?G?RRGRGRRGG", "RG?BGGRGGRGGBRRGRGGRG??GGRG?GRGGGRRGGBGRGGRRR?B", "?RRGRBRB?RR?RBGGBRB?RGRR?RGGRBGGRRGRR??GRRRGGR?", "RRGRGRG?RGRR?BG??G?BRR?RRG?GGRBGRGRB?RGRRRG?GRG", "BGGBRGRRRGGRGGGR?R?GRRRGBGGBRGRRBRGGGRGGBRBGB?B", "RRGRRGGGRRGRGRGGRBGBRGGGRRRRGGGRRGGGRRBBRGGGRGG", "GGRGRRBGGBBRGRGGRGBGGRRGGRG?RGRGBGR?RRRGRBRRRGR", "RBGGBBRRRRRGGGGGGGGRRBGGGGRGGRGRRGGRBGRRBGGGRB?", "GRRBG?RG??RBGGBRBGB?GGRRGG???GRGBRRRGGRRGBBG?GG", "G?GBR?GRG?RGRGRRRRBGGRBGGGG?GGRGGGRRGRGGR?BG?R?", "?BBGRRRBGRRGG?RGRGRGRR?RB?RGBR?G?BRGGRRB?G?RGBR", "RGGBBGGRRGBGGRGBBRRGRRRBGBRGRGRG?GB??RGGRRGBGRG", "RGRRGGRGGGBRRRGG?GRGGRGRGGRBGBGGGGGGGGGRRGGRRGG", "BRRRRGBRRBG?GGGR?RGGBGGRRB??GBBGGRGR?GGG?RRGRB?", "GRBGRG??GGGRRBGGRGGBRGGRBRBRGBRGRRGRRRGRBG??BGB" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case98() {
        String[] board = {};
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case99() {
        String[] board = { "GG?G?GGG?GGG?RGGR?GRGGR?G??GGG?G??G?GG?G????G??G", "R???G???GG??GGG?GG?GG?GG?G?GGGRG?GGGG??G??GRGGG?", "GGR??G??G??G?RG?GGG?GGG??GGGG?G?RGG?RGG?GGGGGGGR", "GG?G??G?GGG?G?G?GG?G?G?GG?G?G?GR?GGG??R???RGG???", "???????GGGGR??GGGG?GGG?GGG???R???G???GGGGGGGG?G?", "G??GGGG??GG?GG?G?R?GGGGGGG??????GGGGGGG?B??G?GG?", "GG?RG?G?G??GG?GG?GG??????G?GGB?GG?G?R?G?G?GGGGGG", "GGGGG??G?G?GGGGG?GGGG?GG???GGG?G??GGRG??G??RGR?R", "?G?GG?G??GGR???GBGG?GGGG?G?GGGG?GGG??G?RGGRG???G", "RGGG???G?GGGG??GG??G?GGGR?RG?GG?GR?G??GG?G?GG?GG", "?GGGGG??GBRGGRG??GG??G??GGGRG?G??G?G?G?G??G?G??G", "GGGG?GGGG??R?GGG??G???GGGG?GRGG?GGG????G??RR?R??", "RGGGG?RG?GGGG?G?GGGGG?GGGGG??GRGGG?G??GGGGGG?G?G", "??GGG?G?GRGRG?GG?R?G??GB?GG?G??GGGGB?G??GGG??R?G", "G??GG?RRG?G?G?G?RGGGGGGGGG??G?GGG?BG?GRGRG?G????", "GRGG??RGRG?GGR??GG?GG????R?G?GGGG?G??G?GGGGRGRBG", "?BG?GG?GG?GRG?G?R??GG??R?G?GG??????G?BG?GG?GRR??", "?GB?R?????GG?GR?G???GGGG?G??B??G?GG?RR?R????G???", "?G?GG??G?GGGG????GGGG?G?G?G??GG???GG?G?G?GG?G???", "RG?GGG???RGR?????G?G??GGRG??GGG????GGG??GG??G???", "?GR???GRG??G???G?G???RG?G?BGGGRG?GGG??G?GGGG??G?", "???R??GG?GR?GGG?B??G???GR??G?G??GGR?GG?GG??GG?GG", "GG???G?GGGG???RGG?GG?GBGRGGG?G??????R??GG???GG??", "GG?G?GG??G?G?G???GGG????????GR?GG??G???G???G???G", "?GG???GGRRBGGGG???GGG?G?GGRG?G?GGGG???BG??RR?GG?", "RGGG?G?R?????GG??GGG??G?RGG????GB??????G??GR?GGG", "GG???G?B?GG???GRG?G??GGGGGG??GGR?GGGG?GG?GGG?GG?", "GGG??????BGGG??R?GGG?G?G???GGGGGGGGG?G??G?RGG??G", "?G?GG??G?G???G??GGG?GGGRG?GGG?G???GRRGGGB?GG?G?G", "?GG??GGG?G?GGRRG???G????GG??G?GGBG?G?G??G???GG?G", "?G?GG???GG?GR?BGG?G?GGG??G?RB?GG?G???GG??GGGG??G", "B?GGGG??BG??GG???RGGR??GGRGGGRB??GG?G?GGGBG?GGGG", "GG?G?GG?GGGG??GGG?GR????G?RGG?G?GG??R??GGG?BGBG?", "?B????G??GRG?G???G?GRGG?G?GR?GGG?GG??G??GRGGGGGG", "G?GG?RG??GGB????GG??GGGGGG??G?G?GRGG????G?G?GG?G", "G?GGG??G?RGGG?GGGGRGGGGGG?RGRGGG?G?GR?G?????????", "G?G?GG???????R?GG??GGGG??GG?G???G?GGGG???R?GG?G?", "GG?G????G??BGGGGG?G??G?G????R???GGGGGR?GRGGGGGG?", "GG??GG?????GBG??RR?GGRGGG?GG????G???GG??GGRGGGG?", "G?G?G?GG?RGG??G?R?G?GGGGG?B?GG??G??GG??GGGG?G?G?", "RGGG??GBRG?GRG?RG?G???GG?GGGGRG?BGRG?G?R?G?GGGGR", "???RGGR?G?BGG?G?GRG?G??GR?GR?G??GG?G???GGR?G?G?G", "?GGGGGGGGRGGGG?GGGGG??GGG??RG????GGG?RG?G?RRGGG?", "GG?GGG?????G?RG?G???RG?G??????GGGGGGGRR??BGGGGGR", "?GRGGGGGGGG?G??G??RG?R?GRG?GG?GG?R??G?GGGGR?BGGG", "GGGRG??GGR??GGG?BG?GGGG?????GG??GG?GGGGGRG?????R", "????GR??GGRG??????G??GGGG?G?G?GGG?GG?GG??G?GGGGG", "?G???G?G?GGGGGGG??G?GGGG?G?G????GG?GG???GG?GGGGB" };
        assertArrayEquals(new double[] { 0.0, 0.9825788871542989 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case100() {
        String[] board = { "R??RRBB?B?R???????B?R??B??B?B?RB??R?RR???BRR???B?", "B??RBB???RB??RR??B??B????RRRB??RR??BR???R??RB??R?", "???R?BR??BB???BB??BR?????R??RBB?RBBB????RRR???B?B", "BR?BR??B??BRRRBRR?R??BR?RRB?R?BBRR???RB?R?RBRBRR?", "?B??BB??B??B?R???RR?B????BR??BBRB?B????BB?B?BBR?R", "B??RBBBR???B?RGRRRRB??R??RBB??RR??BRB?RR??R??B?B?", "RR?RR??BBR??R??R?RR?B?????R??BRR?R??R?B??B???R???", "RR?RBR??BB?R?RBB???BBR?R????B?BBR???RR?RBG???RRBR", "RR?B?R?B???BRRR?R?????B??RBR?BR?R?BR?R??BB?RBR??B", "?BRR?RBR????????R??????R?B??R?BBB??????R?RBR????B", "?BRR????BB?BR??R???B?RR?RB?RR?B?B??B??RB?R?B?RB??", "B?RRR????????BBR??R?RR???B?BB???????BRBRRRB????RR", "?RRRBB?B?BRRBB????B?BB?RRBRR??RR?BR?R??????????B?", "?R?B?BR??BBBB?R??RR?B?B?R??????RBR?B??BRRB???BR?B", "RB??RB??RRBBR??B?????BRB?R?BBRR?RBRB?BRBR?B??R???", "?B?B?R?R????B??B???R?R?B?B?RB????R???B?BRB?BBBB?B", "?RB?B???B?B??R?RBBR??B???BB?R??BB??B?BRRB?R?BRR?B", "?RRRR?BR?RBR?RB??RB?B?R???BR?R?BB??BBR??R??RR??R?", "?G?RB?B????R??R??B????BRRRRBB?B??RR?RRB??R?R??R??", "R?RBBBBBBBRB???R?R?????B?R?B?R??BB?GB????B??B?BB?", "RB???RB????B?BRRRBR?B?B????R????BRR?R??R?R?B?R??B", "?BR?BBB?BBB?B??BB??R???BR?RRB?R???B???R?BR???RR??", "BBRRBRBBB?R??B?RR?BBB??B?R?BRBBR?B??BRR?BR?R?B?RB", "R?B?RBB???B????R??B??B???BR?RBBRR?BB??BBB??RR????", "RBR??R??BR?BR????B???BBR???B?GB?RRRB?B?RBRBR?R??R", "RRRRBBB???RRR?RRBR?R?RBBRR?BRB??????????R??B?B??B", "?B???R?R?BR?BRRBR?BR?BB??BR?R??BBBBR???R?R??BRR?R", "RBBB??B????RRBRRB?RR??RRBBBG?RR??B?B??BR??R?BBRBR", "B?RRR???B?RRRRRR?R????R?B??BR?B?????B??RBB?R?RBB?", "BRRR?BRB???????R?BB?RBBR?R??R?RR???BRB????B??R??B", "B????R?BBB?BB??RBRB??B???BBBRRB??RBR???BRBBBR??R?", "??BB????BR?RR??R???RB?RR?RBRR???B?BR????RRRB???R?", "?R??RR??B?B?RR???RB????BRR?BB?B?R??R?B?B?B?BR????", "????B?BR?B?R?B?RB?????BBR???B?B???R??RRRB???R??RB", "?BRR????RBB??RR??B?BB??????R?B??R??R?B?RGRB?RB???", "??BR?RRBR??R?BB?GR???B?BB??RRB?BRR??B?BR???BR????", "B?R??RR?B???BBRB????R?RB?RB?BB??R??BBB??RB??RBR??", "B?R???BBR?RRRBB?RR??B?R?R??RBRR???RB?BRR?RRR??R??", "B?B??B???B?RBRB????R??R?B?R?RB???BB??R?RRRRR?B???", "?R?RR?R??R??????BRBRR??BR??B??BBRB??B??RR?RR?R?R?", "R?RRBR?BRB?B???????R??BR????R??RBBR???B?BBRRB?B?R", "BRRRB??RRB????????R??BRBRBR?B?R??RB????B???R?R?B?", "R???RBBR????RR??BBRRRB?B??G?BRBBRBB?BBB?????BB?B?", "R????RB??BBR?BR?B??R????RRR?????B?BR?BR?B?RBR?R?B", "RRB?B??RBR??BBB?BBB?R??B?R???B??R?RB?B?R??RRBR??R", "???B?RR????RR?B?B??R?RRR?B??R?RB?R?R???RRBR?R?BR?", "RB???RR??B?RB??BRBRGR????RRRR???B???B?B?BB?B??R?R", "B?RR???RB??BR??RR???RRBB??B???B?BRBRR?BB????RRB?R", "?RB?BBBB??B?BB?B?BBR?BBRG?BRBRB?R?RR?B?BR??R?????" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case101() {
        String[] board = {};
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case102() {
        String[] board = { "BRBGRRRRRBRGBRGRGGGRBGBBRGGRBGBRBRBRRBRRGGGBGRRGRG", "RBGRR?RRRGGGRGGBGBRGGGRGRGGRBGGGGBRRGGRBBGGRRGRGBR", "GRRGRRGRRGBRGRRRRRGGBGGGRGRBBRGRGBBBRGRGRRRRBRRRGR", "GRRRB?RBGGRRRBGRGRGRRBRRGGBGGRBGRGRRRRBB?GBRRRRBGG", "RGRRGGBGR?RGRRRGRGGGRG?RRGBGGGGRGRRRRBGRRRRGRGGRGB", "RRGRRBGRBBGRRRRGGRRRRRRGRGGRRRBBBG?RGBRRGRGRGGGRGG", "GBGRRGRGRGRGGG?GRGGRGGRBRGGBRGBBRRGRRGRRRBRRR?GRGR", "BRRGRRBRGRRRRGRGRGRGRGRRGBRGBRRGRRGGRRRGRRGGBRRRBG", "RRGGGG?GGRRRGRRBGGGBRRRRRRGGRRRRBBBRRG?RRBGRRGGRRG", "RRRBGBBRGG?GRGRRRBRGRRGRRBBRRRGGGGRRRBRRRGBGGGRGGR", "BGGGRBRBRRGRGGBRRGGGGRBRGGGBGBRBBR??BGRGGRRRGGRRBG", "RGGRGRRBRBBRGBGBGBGGRGRRRGGGGRGGRBRGGGRRRGGGRGBGRR", "RGGRRRRGBGRGBRRGRRGRRGRRRRRRRRRBGBRRGGGGRGRGRRGRGR", "RGGRRBBGRRGBRGRRBRRRBGBRGRRBR?GGGGGGGRRBRRRRGRRRBG", "BGGGRRGRBBRGRGRGGRGBRBGRGRRRRRRBRRBRRBGRBRRRGRBRRG", "RGGRBRGBBGRRBGRGGRBGGBRRRGRRRRBG?RBBBRRGRRRBBBGRR?", "RGRGGRRGRRRGGRGBRGGGRRGGBRBGRG?RBGGRRGRGRBRBRRRRBG", "RRRRGGGBGGGRGBRBGGRRG?RRBRRRBRRGGGRRRGGGRRRBRGRGRG", "RRRRGBRRRRRGRRRGRRGGRGRRBRRRGG?GRBRBGRGRRRRGRBGGR?", "RRR?RGRGRGGBGRRGGRGRBRGRGGRBRBGGRRRRBRB?GBRGRRGRGR", "GRGB?RRBRBRGBRRBGRGBRRBGBGRRRBBRGRRGRGGRRBRR?GRGGB", "RGBRB?RRRGBRRBGRBRBBRRBRGRGRRGGRRRGRRRGRRRRBRBGRRR", "RBRRGRRRGGRRGBBBGGRRRBGRRRBRGBRBRBRRRRBBBRRRR?GGRR", "GGRGRRBRRRRGBRR?RRBBGRBRGGRRRRRGRRBRGGGRBGRBRBGRRG", "RRRBG?RGGGBGRRGGRRRBBGBGRRRGGRG?RRRG?RGRBGRBGBGRBG", "GRBBBGGBRRBGGRBBBBB?RGRBBGBBRRRGGGRRBRGR?GRRGRRRBR", "BBGRRRRGGRRGBRRGGBGBRGRRGGGRBGR?RGRGRRGBRBGRGBGRGG", "BRRGGGBRBR?RGRRRRGRRBRGRGB?RGRRRGBRGRRRG?RGGGRRGRR", "BGRGRRBBGGBGRGRBRRG?RRBRRRGRRRBGGGGRRRRGBRG?BRRRG?", "BRRR?RBGGGRBGRGGRRRGBBRGGGRGGRBRRRRRRRGRRGGBGGRGGR", "GBRGRBRBRBRRGRRBRGBGBRBRRRRGRRRRRRBGGRRGGGGRGRBRGR", "RBRGGRGRRRRRGRRRRRBGGGBGRGBGRRRRGGRGRGG?GRBRGGRRRR", "RRGBRBBRG??RGRRRGRR?GRBRRGGBGGRGRBRRGRBBRRBRRRBBRR", "GGRRRRGRR?RBRRGBGRRRRRGRRBGRRGRGGRRBBBBRRGB?GRGGRR", "RGRRRRRBRRGRRRRGRGBRBBGGRRBRBGRBGRGRRRGBBRRGGRRRRR", "RGG?GGRBGRRBRGRRGR?GRBGBGRGRRRBGB?BBGGRGBRGRRGRRGR", "GGBR?GGRGGRRGRRBBRBBRGGRRRGRRBRGBGBRGGBGGGRBRGRRRR", "RBBRGBRRRBRRGGGGRRRRRGRRRGRBGBRRGRGRRRRGRGBRBRGGGR", "RRBRGGRGR?BRRRRRB?GRRBGGRRGRRGGGR?GRBBBRBRRGGRBRRB", "?RBRGRBRRGGBGBBRRGRRGRBRRGBGRRGRRRGGRRRGRGGRRRBRBG", "RRRBGRRGR?RBGBGRRGGGRGGBRGGRGRRRBRB?GRRG?GRGGRBRGG", "BGBGGGGRRRGGBRGBRGRBRGRGBRRGRRRRRGGBRRRRRGRRRGRRRR", "?RG?RGGGBGRBRGRRRGRBRRRRBRGRBRBRRRRRRRRGRGRRRRBRGR", "RGG?RB?RRRGRRRRRRBGRGRBGG?BRRGGBBRGRBGRGGGRRGGBB?G", "RGGBRRRRBRBGRGRGBRRGBBR?GBBGGGGRGRGGRRR?BBGBGRRBGG", "RBBRRBRGGRRRGGRGRGRRRRGRRRGB?GGGGGGRBBRRRGBBRGGGGR", "GRBBGRGGGRGGR?GRRGRB?GRRRRG?B?RGGGRBRGGBRRBBRRGGRR", "GRBBGGGRGBBGGGBRGBRBRRBGGRBBG?RRBGBB?RRBGRGBBRRRRG", "RRBRGBGGBBGBRRRRGRRGRRBBRB?GBRGRRBRRGBRRRGGGRRRRGG", "BRGRRRGGGGBG?GGGRGGRGRGGGRBB?GBGRGRRGRGGBRRGGBRRRB" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case103() {
        String[] board = { "RBR??G?RBRRBRBBR??BBRBRRRB?BBRR?GR??R?BBRRR??BBRBB", "?RBBBRB?BBRGBBB?B?BRRBRBRRBBRB??RB??RB?BRBRB?BRR?B", "B?RBB?BGBRRRR?RRB?BB??R?BGB??B?RBRG?RRB???RRBGBBRG", "G?RRB?BBBRGB?BRBR?RBBRRBBB?BB?RBGRB???RB??B??RB?RB", "B?BB?BRRBBRR???RBBRB??BB?RBB?R?RRRRBGRBB?R?B?G?RRB", "BRRBRG?GB?RBB?R?RRRBG??BBBB?B?R??B?GR?BB?B?B?B?B?B", "BB??B??B?GBRG?BRBB?RB?RBRG?GBBBB?BRRRB?R?R?GGR?RBB", "R???R?BBG??R???RR?RRBG?B?RBRRB?BB?RB???R?BRBR?RBBR", "B?RBG?RG?BB?RBG?B?B?RBB?GRRBRBBB?RRBBBGB???RR?GR?B", "?BBGB??BR?RR?R?GRRBRRBBGB??RRR?B?B???RBR?R??R?GBRB", "B?RGB??B??BBG?RG?RR?GB?RBRBBR?G?BBRRBRRBBBRBB?RBRG", "BBR?RBBRRRBRB?BB???BB??RBG?B??GB?BBR?RBB?RBBRBRBG?", "BBRGRBR???GGGBRB??RBRBBBRBR?RBGBB?G??GB?GRRRR??RB?", "RBB?RRB?BR?BB?GRBRGBB??BB?R?BR?RRRRBB?BBRRBBRRB?RB", "?RGB?RRBGGRB?BBBRRB?B?BRGBRB?B?BBRB??B?B?BRRGB?GB?", "BBBBBR?GBRR???RBB?B?RRRB??G?BB?RB?BB?BBB?R?RBBBBBB", "GBBBRRBGBBR?BRRBB?R?BBBBR?R?B?BB??B??B???BRRRR?B?B", "?RGGBGRR?BRBR?BBBBRBRBRBB?RBB?BRR?B?BRBBRR???RR??B", "GR?BRBBR?B??R??RGRGRR?GRRBBGBRB?B?RBRRGRBB?BB?BRBB", "RBG??B??RR??RB?BBRGB?GBBB?B??RGBBR?GBRRBRB?BB?RRGR", "??RBBB?RRRB?B?R?BB?R????BBB?B?BBB??RRRR?R?B??RRGBG", "RBBRRRR???BBRG??RRBB?B?GRRG?BRRBRBBB?R?BB??B?GBR?B", "G?GB?RBGB???G?B?RGGBRBBBBGR?BBBB?BGBBRGBBBR?BBBBRB", "R?RBRGB?BBBRBBBGBRRR?RGGRBGRRBB?RBBBBB?BBBB?GR?R?B", "RG????B??G??BBG??R?B??B?R?B?B??RRRG?BRBBB?BGRBR?BB", "?B?RBBBRBR?RG?BRB?BR??R?B?B?RBGG??RRBRRB?RRBR??BRG", "G?BBBRR?B?GRR?B???BGRRB??B?BR?R?B???RBB?GBR??BGRR?", "RRRGGR?RBRRRB?BBBB?BGBB?BBBB??RRR??RBBBR?BBRRB?B?B", "?R?R?BRBGBB?BBR?RB??R?GBRGR?BRBRBGR?BRBGBBBG?BB?BB", "RB??B?B?BBBRR?BB?BG??B?G?B?BBRRRG??RB??GR?RBBBRBRR", "RBRGB???BB?GBRBRB??RRGRR?BR?GRB?BR?RRRBRBBBRBBRBGR", "?BG??RRBBRBB?B??GBB?BGRR?RRBRR?RRRBBB?GBRR?B??B?RB", "RBBBBB?BBB?RGGR??B?BR?RRGBBGBRRG??GRR?RR??BRB?BRB?", "BBB?B??B???BB?GBRRR?BBRRBBBR?RB?RBRB?RBBGBRBR?R??B", "RRB?RRBB?BBR?R?GRR?R?RB?RBRBR?BB??BBRRR?R?G?RRRG?R", "B?BBBRGRBR?R??RRB?BRGR?RBBGB?BRRBBBBBBR?B?BRB?B?BB", "?GBB?BRBB?R?RBRGR?RBBBGRGBBBRBB?R??BRBBBGRB?GB?R?B", "RBRR?RBGBBGRBR?G?RBGRBBR??RG?RBRBRBRR?GBGB?RBGBR?B", "BB??R??RR?RRB?GB?GRB?R??RBGR??RRRB?BRRB?BBR?B?BBGR", "RRRRBRBR?GRBB?RRBGB??B?BB?BR?GBRGB?GG?RRB?BBBR?R?B", "RBBB???R?RRB?G?B??GBBB?RBBRRRRR??BBBR?BBBBGRRR?RRB", "?RRR?BRGRR?GBBB???R?GB?BRRBRB?BBBRR?B?R?BGRRRBRBRB", "?B?BB?GRRR?RBBBRRR?BR?RR??RRBBBBBG?RR??RBB?RB??RBB", "R??BRRBBR?RRBBBBRBBRR??BB?B???GGBBB??R?B?BRRBRRBRB", "R?R?R?B?GR?BBRR??BG??R?BBBBR?BRR?RRRGRBB?BR?RRBR?R", "G?BRGRRBRB?RBBR?GBBBBBG?RRBB?B??BGBR?BGBBRRBRR?BBB", "BBBR?BBB?B??RBBRRGR?BRB??BRBRB?B?R?R??RB??BBRR?RB?", "RBRR?B?RBBRB?BBRRR?RB?R??RBGRRBBBBB??R?BB?RRR?RBB?", "BRR?RBB?????B?B?RBG?BBR?GBBBBBR????BRR?B?G??RRB?BR", "B?BBGBB?B?B?B?B?GBB?RB?GBB?RRB?BR??B?RR?G?BRRRRBBG" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case104() {
        String[] board = { "G??BG?B??B?G?R?BBB?RB??RBBRG??BB?BBBB?B???RRBRG?RB", "BR?BBRRR?BRR????B????B?RBR?RBR?BBBRB?R?R?R?RRRBG?R", "?R?BR?BB?B?BBBRRRB??RRB?R?RRBB???RBB??GR?GBR?R?BBG", "?BRB?R???RBBBRBB?BB??RG?B?BB?BBBRR?R?BBB?B???BBBBR", "BR?RBB?R?BBBBRRBBR?R?BRRRB?RBBBBBBRB??B??BBBR?B?R?", "R?BBGBB?RR?BBBGBGB?R???RR?RRB?RRB?BBB?R?BBB?B?B??R", "BGBRRR?BBRRBBBBRBBBBBRB?BBB?RRG?RBRR?BG?BBR?G??BB?", "B???BRGBBB?R?RBB??R??B?BBBBBBGB?RBG?BG??BRR?B???R?", "?BB?RB?BRRBB?B?R???R?B?R??B?RRR?BR?BBRB??BRR?GBR??", "?R?GRBRB?RBBBGB???RR?R???B???BRRGBBBG??BB?R???BRRR", "RRRRRB??RRRR?GGB?BB?BBBG?BBBR?B??RRBR??RRB?G?RRRBB", "BRRR?R?BBBR???RBRRRR?B?RB?BR?BRBRR?BBBBRR????R?RBR", "?BRRGGGBGRB??BB?B?BB?BR??RB?RBBGRBRRB?B??BBGBR?RBB", "BBBR?BBBBBGB??BBGRRBB?B?RBBBB?B??BBB?BGRRGBRB?B?RB", "?R?RRB?B???B?RBBRGBB?GBBB?RBBBBBR?BB?GR??BBB??BBBB", "R?R??RRR?R?B?BRRRBRRB?BG???R?BRBBR?B?BRBBRR?RG?BBR", "BRB???B?BGBBBRR?BBRBR??BRRR?BR?BBRRBRRBBBBRBG?B???", "B?BB?BRR?GB?GB?RRRR?BBRBRG??GGRRR??B?BRBRRG?BBRB?B", "BR?RR??BBBGBRBRRRRBBB???RRBBRBRRBB?GBRR?BBB?BRBBBR", "R?BGB??BGR??????BBR??R??BRBRRR?R?RRB?BRBRB???B??BB", "??BB?RBGB?GB?BRR?B???RBBBG?RBR?BBRBRRBBRBGR?R?R?RB", "?BRGBRBRBGB?BRRGRB?????BRBBBRRBB?RBRRBR??B?B?RBRBR", "?RRBB?GB???RB?B?B?B?RRRRG?RR?BRRR?RBB??G?GB?BRBRBR", "RRR??BB?RRBRBB?R?BRR?G?BBGRRBRR??R?B?????BRRBBBBBR", "???B???B?R?GGRB?B?BBG??BRGB??RB?GRRGBRBBRRBR??GRBR", "B?G?BBRBRB??RB??RBB?RRBBBBGR?BRB?BBBRGBBBR??BRBB??", "??GBBBRBB??RBB?B??BRRBB?BRBB?R????RGRRRRBB?B???R?B", "?RR?RRRGGRBR?G?RGR?R??BG???R?RB??RRGGBRRBRRBBGBBRR", "?BGBB??BB?BBRB?BRRGBBBBBGGR?GG?BG??B??BRR??GR?BR?G", "?RRR?RGRB?R?BRBB?B?BRGBBG?GBB?BB??RB?BG?RRBBR?BBB?", "RBRR?RB?RBGB??BB?BRRRRBRR?BBBB?RGBBBB??BRBGRB?GRR?", "????BRRRB?BBR?RB??G??BB?RRBB?BBRBBBRRBRRBRRBGBRR?R", "B?BBBBGBBBRBBGRRGR?G??BBB?GB?R?BBRRRB?BRBBRBBR?GGB", "?RBR??B?BGR?BBR?GRRRBR?RB?R?G?R?RBBR?RRBBBGRG?R???", "BBBB?RGB?BG?RRBBBBRRBB?B??RRBB?RB?RB??R??RBB?R?RBR", "BRBBB?BG?BR?RB?RBBR?BBBR?R?R?B??B?BBBB?RRR??RB?RRB", "RR?G??RRRRBBBBB?RBBR?BBBBRBRBBBBBBBBBRGB??BBBRB?R?", "?B?RBBG?RBRGBBBRBBBBBR?RRBB?RB?BRB?????B?BRB????RB", "BBRBRRBB?B?B?BBB??BRB?B?BB???B?BB??G?BRB?B?BGRBBBR", "BBBRRBG???RBR?BRRRGBBBBB?RRBBRR?BR??B?RBR?BBB?B?RR", "?BBG??BBBGR?BRR?BR?BB????RBBRRRBRRR?BRB??BRBBRGBBB", "??R?R?RBG??R?RB?B??RR?BBB?BBBBBR?RR??B?BRB??BRBGBB", "G?R??R?RBRR??RBBBRG?B?RGGBR???BBGBBB?GBRRRBB?BRRRR", "RRRBRRBR?RBRB?R?RGRBR?BRB??BB?BGB??R?B?R?BB?RBGB??", "R?RGBRBRBRR?B?GBBRGGB??BGBBGRR?BR??R?BB??RRRBBBRBG", "BB?RB?BB??B?B???RB?GRRBRRBGBRBBR?R?R??RR??RBBBRB??", "BG???RRR??RBGBB?B?BR?RB?BR????BRB?RBBR?BB?R?RRR?R?", "B??BR?BB?B?BBRR?RBBRBGB?BBB?R???R?BRB?BBBBRRR??BBB", "?BBRB?BBRBRRR??BBRR?BRRBRR?B?RR?R?B?BRRRBR??RBR?B?", "B??RR?R?BRRB????BRBBR?RB?BRRR??RRBBGBR??BB??BG?BBB" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case105() {
        String[] board = { "?GBGGGGG??BG?B?G?B??BGGGG???G?GG?BBBGGG?GGBR??GG?B", "GGGGBGBGBBBBGBGGBB?GB?GGBBGBGB?GB?B?G?GGGGGBG?BGBG", "BB?GG?B?BGBG?BBGB??GB?BGBG?GBB??GBBBRG??BGGBGBBBBG", "GGGGRGG?G????BBGBB?BGGGG?R?GB?B?G??BGGBGB?RGGRGB?G", "GG??BB?GG???G?BG?GBB?GGBBB?B?BGBRBB?GGBB?B?G?GG??G", "GG?B??G?GBB??BG?B????GGG?GG?GBGG??GB?B?GGG??G?RGGG", "B?G??G?BBB??BBGR??GB?B?GBBGB?G?GGGGBGG?G?BG?BB???B", "G??GBG?BBGGR?BBGGBGGBBBG?RBGGGBGGBB?B???B?G?BGBBBB", "BBB???BGGBG?G?GBBBBB?GBGBR??G?RB?BBB??G?BBGB?B?RG?", "B???BG?GBGGGGB?GBGRGG?BBB?BGB?GGGGBG??BGGBGGBBBBB?", "????G?B?R?G?BGB??B?G??GGGBGGGGG?BB?BBG?BBBGBG?GGGG", "G?GG?GBRB??R?GGG?GBBG?GGRBG?GBGBGGBBGGGG?GB?BGBB?B", "GG?BGBG?G?GGG?B???GG?B?BBBBGGBGG?B?BGGB?GBGGG?BB?G", "GBG???B?GG??BB??BBBGG?GBGBG?GGGG??GGGB???GB??G??G?", "GGGG?G???GG?G?GB?BGGGB?BGBG?GRB?GBR?G???B?GB?GGGBG", "??BG?BGGG???RBRB?BRB??GGBBGBGBBG?BGGGGGB?B?BB?GBBB", "GBBGG??BBGG??BG?G??BGGGG?GG?GGG?BBGGBBGBGGGBBB?BGG", "GBBG?B?BGBGGBB?GGB??B?RBGGRGBGBGG???BB????B?BBBG?B", "BGG?GGB?GB?GG?GGGGG?GBGGBGGBGRB??BG?G?BGB?B?B?GBBG", "G??GG?GG??BGGG?B??BGG?GBGG?BBG??B??BGBBG?GGB?BGGB?", "BR??RG?BG?BGBBBBGGB??G?B?B?B??GRG?GB?GBGGBB?GBGB?B", "BGBGBGGGG????G?GBB?GGGBGGGG?GBGBGBBGG?BG??G?BG?GBB", "GBG?B??GGGGBG?BBGBGGG???BR?BGBGG?GGBBG?RBG?BBGBGBG", "B?GGBB??BB?BRB?GB?GGBB??GGBBG?GB?GGBBBBGGBBB?BBBGG", "BGBG?G?B?GGGBBBGGGBGBG?RBB?BBGBG?G??B?GRGB?G?GG?GG", "GB?GB??BGB?BG?GBBBGGBGB??B?GBGGBB?GGGGBGGB?BGGGGB?", "GBBBGGBGG??G?RGB?GG?GRG??G?BBGGBG???BBB?GBBGBRB?G?", "GGG?BGGBG??GGGGGBBBBG?GG?GBGGGRGG?GBBGR?BGBGG?BGGB", "GG?BBBB?GBGGGB?B?GGB??BBG?G?BBGB??G?RGG?GGB?G??GGG", "BB?B?G???B?GBBG?R?G?G?G?GGGBBBBGBGB??GG???B?G?GB?G", "BGGGBG?B?RGGBG?G?G?G????BGGGGGGB?BGB??BG?BG?GBBG??", "?BBGG?B????B?BG??G?BBGBGGBG??G?GGGG??GGGG?B?GGGGB?", "BRB?BBG?G??GGB??B??GG?G?GB?BG?BBRBBG?GBBGGGBGGB?GG", "GGGBGGGGGBB?BGBGBGBGB?BG?BGGGBG?BBGBGBBGGB?BG???G?", "?B?GGG?B?G??B?B?BG?GB?R?BB?GGBGB?GG?G??GGGG?BBBG??", "GB?G?B?R???G??GGGR?GGGGB?BBBGB?BGGB??B?G?GGBGBG?BG", "GBBG?B?GG??GGGRGGBGGGGGG?GBBGBGG?G?BG??BGGGB?BGBBR", "B?BBGG?G?GGGG?BBGB?BBB?BB?RG?BGGBG???GGGGGBBGGGBGG", "GBB?B?BGBBGBBGBGRBG?GGBG???BGG?B?GBGGGBG?B?BB?BGBG", "?G?BB?G?BG??GG?BGG??B?G?GBGB?GB???GB?BG??BB??BGB?G", "GB?BBBBGBBB??BB??GGG?BGBGBGGBG?G?BGBG??BGGBG?GGGGB", "R??R?BBBB?G??GGGGGB??GG?B?GGGBGGBBGB?GG?G?GGBB?BGG", "?B??BG?RBBB?GBBGGG?GGBBBG??BGGBRG?BB?BBBG?G?BBGB??", "GG?B?B?GBBG?BGGBBBB?GBGRGGB??GBGG?G?RGG?BBR?GBGBB?", "???BG??R???RGGG?R??GRB??GB?GG?B?GGGB??BG?GG?GG?GGR", "?BBBGBGGB??GGG?BGB?G?BGB?BBGGB??GBBGG??GGBGGGGBB?B", "?GBBGBBGBGBGBR??BG?G?G?GB?BB??GBBGGB?B?GBBBBGBGG?B", "B?BGG??GBGGBGG?BBBBBBGGG?BBBBBGGGGB?G?GBG?BBG?B?GG", "?G?GBGG?G??GRGBB??B?BGGGGBG?B?GGBG?GGGGBBGR?G?G?BG", "GBGGGGG????GG?GGG?GBGG?G?B????G?B????GGB?BBGG??BBG" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case106() {
        String[] board = { "RBRBRRBGRBR?RRRRR?GRB?GGBRBBRR?RRBBGRBRRRBRGRBGRGR", "BGGBRGGRGRRRBRBB?BBBBBGBRRGG?GRRBGBB?RGBBBBBBBB?BG", "BB??BBBRRRGGBRBGB?RBB?RRGBRR?BRRRRBGBR?GBBRBBRBGGR", "RRRRBGRBRRRR?R??BBGGBRBBRBRBBRGBBBG?R?RGBGRBBBB?RR", "?BRRBRBBRR?B?BG?BBG?RBGGGRRGRRRRBRRR?R?RGB??BR?RRB", "B?RGRRBBBGGBRRRGRRGGRRR?G?BBBBBBRGGRRGBBRR?GGGBBRR", "BBGB?BRGRRRGRGGR?BR?R?BRRBBBRBGB?GRGGRGBBRR?G?B?GR", "RBBBBBRB?B??RGRB?RRRG??GG?RBB?RGGBGRRRBRBBBRGBBBGR", "RRBBB?RBBBBGRRR?R?GB??BBB?BGRRGRRBBGBRBGRRRG?RBBGB", "BB?BRRBBGRRRBRBGRR?GRRRBRRRGR?G?RGBRBBRRG??RRBBG?R", "BBR?R?BRRBB??BBRBRB?RRRGGB?RRR?RBRRGBGRG?RRBGRBR?R", "BRRGRBBRRBRRRG?RRR?B?GRBRR?RGB?RBRR?RRBBRRRBBRGBGR", "GBGRRRRRRBR?RBBRBB??RGGB?GRBRRGB?RG?BR??RBRRB??B?R", "BBRR?BGR?BR?GRBRBBRRR???RBRBRGR?BRBBR?GB?RBBGRRBB?", "?BRRB?RBBBRGBGRRB?RRRB?BRRBRBRB?RBBBRRBGBBB?RGB?BR", "B?GRRRBR?R?GBBRRBGBRBBRGBBBGG??BBBBRRRBRGBBRRGBRRB", "BBBRRB?BG?RBRGBRRBRRBGGRRBRRRBGBBBRRRBRRBR?RRRGBR?", "GRGRG??BRRB?RRGRR??BRRBB?BRRGB?BRRB?B?RG??RBBRRRBG", "GR?RRRGBBB?BRBBGRBRGRBBG?GBBR?BBBBBBR?GBGGRBGRBR?B", "RBBRBR?GRRBR?BB?RRRBBBBBBBRRBGG??BBGGG?R?B?R?RGBGB", "???BRRGB?BBBBBBRRRRGRBRRGRBRRRGR??B?B?RR?RBRRGBBBR", "?BRRR?BRBB?BBBBRRBRGBR?R?R?GRGBBBGBBGB?RRBBBBGB?RR", "BGRGRRR?RBR?GRRBBRRB?BR?GR?BRGGRRGBGBBR?GRGRBB?RGR", "RBRR?RRRBB?GB??RBRBGR?BRB?RGGRRGR?R?RRGBRBBGBBR?RR", "RRRBBRRRBR?RBGBGBBBRGGRR?RRRRBBRR?B?G?RBRBRBRBR?G?", "RRBBBBB?BRBBGRBB?RBBBRRB?R?B?RBRRBGR?RRRG?GRRRR?BR", "RBRRBBRBBB?G?R?BRRB?RRBRB?B??RB?G?B?GGGRB?GBB?B?RB", "RRRBBRRGRBRGBRR?G?RRGBGBRBBBBBBGBRBBBGB?RBGBRBBBRG", "BBRGRRRB?BBBBB?B?B?BBBBRBGB???RRGRG?BRBGRRRRR?RBRR", "RBBRRGRBBBRBBBRBRB?GBGBGBRBRRRRBBBRBRGB?BRBBBGRRGG", "?RRRRB??GBBBBRRBGBBRR?RGB??RBRR??BBBBRBBGB?GGRBB?B", "BRRRBBR?G?BBR?R?BRRRRBBBBGRBBBBB?RRRRRGG?RGRR?RG?B", "B?RBRBRB?GBRBRRRRGGRBBRGGBBRB?BRBR?RB?RBBBBGBB??GB", "BGB?BRRRR?RRB?GRBRBGRGB?B??BBRBGRR?RR?BBGBBBBGGR?R", "RBBRRRGBGRGB?RRR?RRRRRGB?BRRGBRRR?BRRRRRBRBR?GGBBR", "BGBBBG??GRBBB?BRBB??BRBBBB?GBRRR?RBGBRRBBBBBRGBGR?", "BGBGBRGRBRRRBRRBBBRRB?RRBBBRBR?B?RBRRRRB?R?BRBRBBR", "GBRBBRRRGBRRRRBRRBGRR?GRGBBRBGRBGGRBG?BRGBR?RBR?BB", "RBBRBRBRBR?BRGBBRR?GBBRGRR?RGRRB?BR?RB?RBBGGGRRBR?", "BBR?BBRBB?B??B?BRRB?GBGBGG??R?BBR?BBRBBBGRGGRBRGR?", "BGBRBBR?R?BRBRBBRB?RRB?RBBBBBRBBB?BBBR?BGBBR?GBRB?", "BG?BBRRRBRBRGBB?RBBGRB??GRGRBRBGBR?GRGRBBBGR?BRGBR", "?RG?RRRBBBRGRRRBBRBRBRRGBRRRBGG?RRBBBBR??B?BB?BRBR", "?GBRGRBBBBBB?GBBRRBBRBRRGRBRBB??GRRRB?RRRBBBBB??GB", "BBGBBBBGBR?G?GG??GB?RB??G?GGRBRRRGRRBRBGGGG?RBR???", "GRRRBB?RB?GBRGRRRGRR?GB?RBBGRBBRBGRRBBGRBBBBRBB?RR", "GBBG?BBRGRBBR?RRR?RRGBBBRBR?R?RGRRBRBRBBGG??BGR???", "RBB??RGBB??RR?BRBGBRG?RB?BBBB??RRG?BBR?GR??RBRB?B?", "BRRBBBRBRGGRBRR?BBB?BRRBRRBBBRRBBBRRBR?GRRBRGGBBBR", "?B?BB?BBBRBRBGB?RRGRGBB?RG?BBR?RRBGBG?BG?RBGRBRBGR" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case107() {
        String[] board = { "G?B?BR?B?BGRRG?BBBR??BRRGGGBRGB?B?GGBGBRBGGRGBBBGB", "RBRBBBBRBBBRBRRGRBRBRB?RBRBRBB?RRRBB??BBGGBBBGGBBG", "GGRGRGR?BGRR?GRBRBRRG?RRGG?GRRGGGBBRGBRGGB?B?BGRGR", "RBGGRGRRBGGRRGGGGRRBRR?GRRRBBBR?BBGRGGRRBG?GGGR?BG", "BBBR?RB?RBRBRBGBGGGRRGGBBRBRGBBRBBGRB?GBB?BRRGB?RR", "BBGBRGGR?BRRBBBRBBBGGGGRRBBGGGRRBRGBGR?RBRRBBGRBGG", "RR?R?BGBRGBRRBGRBBBRRBBBRBGGBRBG?RBRRGBBGGRRBGGRRR", "R?BRRBGBGBRR?GRGBRRGRBGRBRRBR?BBGBBRBR?RBG?GBRBBBB", "BBG?RB?BBGRRBGG?GBGBBBRRRBRRRBGRGRG??B?R?GRBBGBGRR", "?BB?BGR?RRGGB??BGGRRBRRRRBRGBG?G?RGBBGBRGGBBBGBGRG", "BBBBGRGR?GRRRRG?RRGRBGB?RBBRBB?BBRRBBRRBGRGBRRRGBB", "B?BRGGBRR?RR?GRGR??GRRGBGBRBBRGRGBRRRGRRBGRRG?BGBR", "RGB??BRB?RBBRRR?BRBBGRGRBGG?GBBBGRR?RRRRGBRBGBBG?B", "?BGGBRRRG?BBRBRRGGBRBB?GBGG?GGRBB?BG?BBRBBRBRBGRGR", "??BGBRRBRGG?RGRBRBRGGGGB?G?B?B?RBBRRGRBGRBRBBBGGBR", "BBBRBRBGBGBGBGBBGBR?RRBGGBRRRBG??BRBRBRBBRBBRRRGBR", "RGBG?RGBRGBGRGBGBBBBRRGBBRGBGBG?BRGBBRGG?RGBBRGG?G", "GRGBRBGGR?BBBRGG?BR?BBGRGRBRBGBGBGGBGRGGBRBBBGB?GR", "G?GGBR?BRGR?BRBBGBRGGRBRRGGBBBRB?BBBB??BGGGRRGRRGB", "??GRRRGRR?BRGBG?B?RBGGBGRBGRRRBGR?RBGRRRBG?RRG?BRG", "GGRBG?BBGRBGR?GRR?BRGRBRGBR?BG?GRGGBGRRB?R?BGRBBRR", "GBB?RRRBGRBBGBBBRBRRGRBBBRGBGRRRGBBRRRRBBRRRBBBB?G", "BBBRRBG?GGRBGRBGG?GRBRBBGBGBBGBGGGR??GBRGRRRBGB?BR", "RGGGRR?BRRRBRBGGBG??BBRGRGBBGBBRGRGRBBGBRBGBGRG?BG", "RGBGBBGBBBGBRBRBBBGBBBRGRGGGGGRBBGRGGRBRGBRGBRBBGB", "RGBRBGGRRBRR??RB?RBBRRBBRRGRGRRBRBG?BBGRRGRBBBGRBR", "?R?GRBRBBBGRBBGRGBGRBBBRBBRGGBBRGRRBBBBGGBBGRBRGG?", "RBRRB?GBGGR?BBBBBBGBGR?BBBRBG?RBRGBRBBG?BBGRBGBRR?", "GBBB?BGGRGRRBRG?GRRGRRRBGBBBRGGRRRRRGB?BBRRR?R?BBR", "RRGBRGBBBBGRRRRB?RBBBRRRBGBBGGGRGRBBR?RGBGR?BG?GRB", "?GR?RGGBBGRRRGGB?GBBGGBBGRRRRRR?BBRR?BRGBRBGGBBGRG", "RB?GR?GR?GG?G?RR?BB?B?GGR?RBBR?RRBGBR?GGRBRGRGGBRB", "GRRBR?RGGRBRGRBGBBBBRBRRGGBBRRGG?BR?RRGBBBRGRRRGRR", "BBBBRBGGBGRGBGGRBBBG?RGBGBBBGBBBBRR?RB?BBBBRRGBRBB", "GGGGBGBBGRRGBGBBGR?RBBBBRBBGRBBRRBBBGRBBBGG?GGRGGB", "R?GBRRGRRRBB??RRGR?BRBBRBGBBGRGGG?RRGRRGBGRBB?RGBB", "GR?GBRGBBGB??RRGBRBRRRBBGRRRGRRRBGRRR??RR?GRGRBBBB", "GBRGRBRBBGGBGRG???R?RR?GBRRGRRRRB?RBGGGRR?R?GBRBBR", "GRRRBGG?BBRRBRRGRBBRG?G?BBBRGRBRRRGGGRGGGBBGBGRGRG", "BBBBBRBRRRRRRGBBBBGRBBBBBRBRGRBBRGBGRRRR??GRRBRRB?", "BBRRRGRBRRGRRBGRBBB?GRRBRRBGRBRBBBBBBGRGR?RB?BB???", "BBRBRBRGBBGBRB?RRR?BBGRRBBR?BRRBBG?RB?BGRRGBBBGBRB", "BR?GGGBRBR?RRBRGBGBGGRBRG?BRG?BGRRBRRBRRGGGRGBBRBR", "GBG?RRBBRRGGR?BGRBBRBBGGGBGBRR?RBBRBRRRBG?RGBBRBGB", "GBGGRRGRR?RBRGBBGBGGRBBBRBRBG?BG?RRGBGR?R?GBG?BBRG", "BGGBGBRRRRRBGRBBBBG?GGBB?BGRRGRBRBR?BBBGGBBBGBR?GR", "GRRRRGBG?GBBR?BRRRBR?GB?GGR??RGRGRR?RRR??GBGRGBRRR", "RBR??BBR?BGGBGRB?BRBRBGBG?B?BGRB?BBBRBBRGBRBRGBRRR", "GRRRBBRBRBBRBB?RBRB??GGRBG?BBGBBRRRGGRGGRR?GGGGRBG", "?GBR?R?BRBBRGGRBRGBBBBBB?B???BRGGB??BGBRBGRBBGRRGG" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case108() {
        String[] board = { "?GGGB?G???GBBGBGBGR??????GBGGG?G?G??BGGBG?GBBG??GB", "BRGBB?GBGGG?B??G?BBG?GB??G?GBB?BG?G??B??G?G???B??G", "?B????BGG????GGB?BGRBBB?RB?RBB?B???GB?RBGB??GGGBB?", "??GG??B?B?G?G???RGGGGB?BGR??GG??G?BRB??BB???GG?G??", "?G?G???G?BBGBGGGGG??BBBG??GB?BGBBB?RBBB?BBGG??B???", "GGGGBBBGGB?BBBGGGG???B?GGBG??BGGGR?BG?G?GB??GB???G", "?GG?BGG?GRB?GGBG?B??G?BG?B?GBR?BBB?R?GBBGB?B?B?GG?", "B??GB?BG??G???GG?GGG?BB?BB?B?GB?GGGGGGBG?B?GBG??GG", "BGG?B??B??GG?BBRGGBGG??RBBGGGRGGB?B?GB?GGBBBG?G??G", "BBB?GBBG?G?B??G?G?GBBGGBBRBB?G?B??BG?BBGR?GBGGB??G", "G??BB??B?B??GG?GGG?BG?????BGRGB??B?GG??BBGGBG??G?G", "B?BB?GBGR?B?B?G?RG??GBGB?BGBB???????GBGB?G?G?BRBB?", "BB?BRBB?GB?BBGRG?GGB?B?R?B??BGB?GGBRR???B?BBR??G?G", "BB???BGGBB??BBGGBGBBGGBR?BG?BG?GGBGRBRGGG?GB?GBBGG", "????GBBG?BBGG??BG?BGGG??GGGR?B?G?B?G?GG?BGG?GGG?GG", "BBBGB?BGGB?GB???B??G?BGG?R??B??BB???BBGB?BBBB?B??G", "R?BBBGGRBG?G??GGB??GGGG?GGBGBB?GB???GG??GGG??BBGGB", "BBGGBGG??BGGGB??BGGGB??BBG??GB?BBGBGB?GRG?GGGB?BGB", "??G?G?GBGGGGBBG??G??GRBBBGG?GRRG?GBB?GGBB?B?BBRB?B", "BGG?GGGGGGG?BBB?BRG?B??BGGRB?BGR?B?BBG?G?BBGBRBGGG", "?GG??G?BB??GGBBRB?GRGB?B?G?GBGB?G?GGGB?BB???GGGBG?", "RR???RB???B??GBGGGB??RGBBGBG?G??BGBGBBBB?GB?G?BG?B", "G???BGBB?B?GB?BGGG?G?B?GGGBB?B??BG???BG??GR?GB?BBG", "BGB?GB?BBG?G?B??BGGG?G?GBBGRB???GBGR?GGGBGGB?GGBB?", "????BGB??GRBB??GGGGB?G?GBR?BGGBG?GGG???GGGG??RB??G", "BB?G?G?GB?BBGGR??BBG??BGG??????BGBG?BB?BGGRG??B?GB", "G?BGGBBBGGBB?G?BR??BBBBGG??GB???GBBGGGBGBG??G?BB??", "?BGBGG?BG??BBGR?BBGGRRG??BBB?BGGGBGB?G?BGBB??GBBGG", "R??GGBBGBBG?BGGR?GB?GBB??G??BBB?GG?GGBGBB?GBBGBBB?", "?BG?GG?GR?GGGGGB???B?BB?GGGG?BB??B?BGBBBB?BG?B?G??", "?GRGG?GGBB?BG?BR???GB?BBG?B???BBBGGG?BB??B?GBGG?BB", "BB?G??RBBG?GR?GGBG??G?GGB?BGB???GB?BB??B?B?G??B??G", "BB?GGB?GGGGR?RBB?G?GGGGGBGBGG?G?BBBG???B?G?GBBRBRB", "BGBG?BBG?GBGB?G?BGBBBR?GB??G?BGBBGBB?BBBGGB??GB??R", "BBB?R?GBGBGGGB?BBGBGGBBG?B?GG??RBBGGB?BB?GBRG?G?GB", "GBBB?G??BG?R?B?GG??R?G??BR?G?GBGBBB???BBBGBBBBBB?G", "GBGBGGBGBGB??GG??BGB??BBBBBBR?G????BB?GGGGBG?BGGGR", "B??B?BB?BBB?BBBBGG??BB??B?GGBB?BR?G?BGB?G?????BG??", "BGG?GGBBRGBBGBG?GBB??RGBGRBB?RRBGGGBBG??G?GBG?B??B", "????B?GGGG?BRB?RBBBBG?GGGG??BGG?B?G???GG?BG?GBGG??", "B??G?BGGG?GBGBRGBGGG?BBGB?G?BGBR???BGB?BBBBBGGBBBG", "GRG?B??GGGBBGBG??RBBB?BGBR??B?G?RG?B?R??B?G???BBBR", "?BGGBBBG?BGG?BG?B?G?GG??BRBBBG?G?BBB?GBGGG?GG?R?G?", "BB?BGB?B?GBBR?BBBGGBBGBGBBG??G?GGRGG?GGR??GRGB?B?B", "BG?GGG?GBB?RRG?GBGGGGG?B?BG?BBGB?G??G??GGBGBB??BB?", "BB?BGBB?GG?GB?GB?GGBB??BGG?GBG?B??G?BG??B?GR?G?B??", "B??BBG??GGRBGRB?G?RB??R?B?????BB?G???RBGBBGGGBBGBR", "?RG?B??B?GGBBBBBGG?G??BBG?BG?BG??BRGBG?BB??GGG?GGG", "?BRGBGRBBGB??GGGG?GB?BR?B?B?BB???BBR?B?B?GG?B????G", "B??B?BRR?BGGG?G?GBR?GGBB?BBGGGGRB???GG??G?GGGGGGBB" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case109() {
        String[] board = { "R??R?RRRR?R?BRGGRRRG?RRR?GR???BRRRG???G?R?R?????G?", "R???GRG?RRBRBRR?RG?RB?RRRB??RR??BRB????R?B?R?GR??G", "R?GR??GRRRBGR?RRRR?RR?RR?GRRR?RGRBR?G?R?GRGGRR??RR", "?RR??R???RG??B??GGG??G?GGR?GRRRRG?R??RR??R?R????BR", "?RRRRG???G?RGR??G??G?R?RRG???????RR?GG?R??RG??G??R", "??BRRR?????G?B?R??????RRG?R?R??R??R??RG??RR???R?R?", "BG??RR?RRB???G??RRR?B?GR?GRGRR?GR??RGG??R?GGG?RGRR", "BRR?RR????R?G?GRGGRRGGG?R?R?G?GR?RR?R?R??GR?G???G?", "RR??RR?RR?RG??GGRG????G??R?RRR??GRRG?R??RRRR?RGGRR", "R?R?GGG??RGRRRR??RR?BR?????RR??B????RBGR?BRR?RRR??", "?GG??R?RR??RG?RG?R???GRGR??RR??RR?G?R?RR?R?GR?R?RR", "??R??R??RG??R?B??RGR???G?RR???RRRR??GRR??GR????R??", "B?RRR??BRRRG?G??RRB???RGRR??R?G?RR?G?RGG??RR??GG??", "??R??G????GRR?G???BR??R?GRR??RB?????G??GGG?GBG??RG", "BR???GRR????R?G???RRRR??R??R?G?GGBR?GG???R?G?R?RRR", "?RRGRBR?G??RRB??B?R???G?RGR?B??RRRB??GRGRR??RRRGR?", "R?G?G??????R??????RR??RGR?BR?RR?GR?R?RRR?BRR??RG?G", "??GR?RG?BG?RB?GR??GR?????R?G?GRGR?RG?R?RRG???RRG?G", "G??RRR???R?R?B?R?R???RRRRRR?G?G?GRGRR?R?R?RBG????R", "?RR?G?RG?G?GRG?R?G?RGGRR?GBR?R?RB?RR??RR??BRRR?RRR", "RRGGRG??GRG?GGGR??GRR??R???RRR?GR?R??GGR?G?GR?R?R?", "RGR????RR??BGB?BRR?B??G??RBR?R??R???R??G?G??GG?GR?", "RR?R?GGBRR??????RRR?RGGRR?R?G?GR??GG????R?G?RGGR?R", "R?GG?GRRBRRGR?RRRRRGRR?GR?R??GG?B?RG?R??G?GRRG???B", "GGRRGRRRB???RG?G??GRRRRR?R??RR?RGRRGRGG??G?RGR?RR?", "GG?GR??RRR??GRG??RRR???R?RR?R??R??RR???B??GGR?G?R?", "?RG?RG?RGGRG?R?B?GRR????R?RRGB?GR??B?RRBRRR?RRRR?B", "?R?BR??RGGR?B??RG?R??R?G?????RRBRR?BR?G???BR?GRRRG", "RG?GRR?R?R???R??BRG??RR???BRRG??RR??RG?G??RRGR?G?G", "?R?GRRGR??GRRRRB??BBR?RG?R?R????RRRBGRRRG???RG?RRG", "BR??B??R?RRR?BG?RRRGB?G??RRR?RRRRR?G??G???R?B?GRG?", "???RBRG??B?R?B?BR??RRRBRBR??G??GG?RRBG?RG?G?R??G?G", "R?RRRB?G????BGRR???RG?GGR?B????R?RR??G??B?G?GR?RBG", "?G??GG??R?RRG????R?GRBRG?B??RG????????GG?R???RBRR?", "R?R???RRGR??RRR???B??G??RR?RR?GR????R?R?RR?G?G?R??", "??R?RBRGG?RRR?R???RG??GGG?R??R?GR??????GGR??RRRGGR", "GR?RG???RGG???GGRGG?GRGR??GR???GR?G?G???RR?GB???GR", "R??G??G??G?BG???RG?G?R????R?R?RRRRGR??R?RR??R???RR", "R?????RR??GRR?G??G??R????G??GG?GRR?RB?RBGRRRRG?RRG", "RRRRGG?RGR?GRR?GGR?BR?GR?RGG?R?GR?RR???BB????RR???", "R?BRGG?????G???G?R?????RR???B?RR??RG??RRRRRRG?R?G?", "GR???RG??RG?RR??RRG??RG?R?RR?G?GG?GGB??GR????B?GR?", "??G???RRRG?G??R??GGGRG?B??RG?BR?R?B?G?GB?RG??GR???", "GR?GB?R?RR?R?RGGRR?RRGRR???BR?R???RBR?RRG????????R", "RR??GR?RR????B??GR??RRBRR??RRRGR?GGBRRRGR?R???RGR?", "?????RRRGG??RR????GRRRBG??R???R???RRRRRRRRRBG???RR", "???GR?G????R???R?B???R???B?G?G?G?R?RG??R?GRGR?RR?R", "R?GRRGR?RB??RRG???RRRGRG??R?RR?RRR?????RGBRR?G?R??", "?G??GG?RB????????B???R?GR??R?R???G?RB?R?G?G??GGBB?", "GBR?R????RR?GGGGGR??GGRGGRRG??G??GG?R?RRR?G??GRR??" };
        assertArrayEquals(new double[] { 0.0, 0.9989381068001949 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case110() {
        String[] board = { "G?RGRGR?R?RGRR??R?RRGBRB??RRR??RGR?R?GBBRRGGGRRRRR", "RRBRRGRRR?RRGRRGGRR?G?BR?RRRGBR??GRRRGRRRR?GRRGRGB", "RRG??RGG?RR?RGRBGR?GRRRRRRRGRRGG?RRR??BRRRRRRRR?RG", "RGRRG?BRGRRR?G?RRRGRRR?RGRRRRBRBRBB?RGRRGGG?RGR?RR", "RRBRRRGR?RRGRR?RRGRRR?BRRRR??GR?RR?RRBR?BRRRRRRRRG", "R?RBRRRRBRRR?RRB??RBR?GRR?RRBRGRRGBGBR?RRRRRR?RGBR", "GRGG?B?GRRR?GG?BR?GRG?BR?RR?GR?R?GG?G?B?G?GGRRRG??", "RRRGRRGR?RGRGRRRRG?RRBRRRR?G?RGRRRGRGGRRGBG?R?RG??", "GRRGGRBR?RGGRGGRR?RRBGG?RRRRRRBRRGRRGRBRGGRGRRRRGG", "G??BBRRRRGRRRGRRRRRRRRBR?GR?RG?RRRRRRRRGRGRRGBRG?R", "R???RRRRRRBGBRRRRGR?R??RBB?GRRRGRR?GRGGRRRRRRRGRRG", "R?RRGRGB??RGRRGRRR??RRR??G?BGG?RGGRRBGBRGRG?R?RRBR", "GRR?RRRRRR?RRRGRRRGGRGR??GRRRGBR?RRBRRBRGR?RRRRRGG", "RGRG?BRGR?RRGRRRRGRRBGRRRRBRRR??RRGRR?GRRRBRRRRRRR", "G?RGRRRR?RRGGRGRG?R?RG??RR?RG?B?G?RRRB??GGRRR?RRRR", "GRRRRRGRRGR?RBRR?RRRRR?GBGRR??RRBRR?RGR?RGRRRRR?R?", "RRRRRRGR???RRBRGRGR?RRBGRGRRRGRRRRRGRRR?RRRGG?BRR?", "BRGGG?RRRRRRRGR??RRRRRRBRGBRRGRRRRRRRRRRR?RRGGGBGB", "GRGRGRR??RRRRRR?RGRR?RRRRRRRGRRR??RR?GRB?RB?RRR?RG", "R?GGGRRRRR?RRGR?RGRRGRRB?GGGRGGGGRRBRRRGRRB?RRRGR?", "RBRRRGRRRGR?GRRRRGG?BRG?RRRGR?RGRG?RGGRR?RGRRRRRRR", "RR?R?RRRGRBGGRRRRGR?RRRRRGGGBGRRR?RR?GR?BRR?RBRRRG", "RRBG?RRRRRRR?RGGGGR?B?RRRRRR?RRRBRRGRRRRRGGGRRRR??", "RR?RRRRRR?RBRBGRRBRGG?RRBB?RR?RRGRGGRR?GG?GRRRRGRB", "RGRRRBGGR??RRRRR?BGGBRGRR??RRBR??RR?RRR?RRR?GGG?RG", "R?RRRBRRRGGGRRGRRBRGRGB?GGGBR?RRG?RRRBGR??RGGRRRGR", "RRGRR?RGG?RRGRGRGRRGRGGRRGGRG?GGG?RGRRBRGGG?GGR?RR", "R?RRRRBGGGR?GRBRR?GRRRG?RRGRRRRRGRGRR??BRGRBB?R?R?", "GRRRRGB??BRG???GRRGRGGRRR?RBRR?RRRGGGRRRGGG?RBRRGR", "G?RR?GBRGBGG?GRRRRGBRRRRBGGRGGRRGGGRRRRRRRGRGGGGG?", "GRRRGR??GBRR?RRGG?RRBRGRB?RRGGRRGRRGRRGRGR??GRRGRR", "?RGRRRRRRRR?B?RBBGRRRRRB?RRGRRRBRRGRRRGRBRGR?RRBGR", "R?GRR?B?G?GRB?RGR???RRRRGRGRRR?GGRRRGRGR?RRRRGRGRB", "BRRGRR?RRRRRBR?GRRGR?RGR?RGRRBRGRGRRRRGB??GRGBRRRR", "?RR?RRRGRGRGRGGGRRGRR?RRRGRGRRG?RGRRRGR?G?R?GB?RRR", "RRR?RGRGGGGR?GRRRGG?GRRRGRGBGGRRRRG?BR?GRRRRR?GRG?", "GGRGBBRBR?RRRRRBRRRRRBRRRRBR?RRRRBRGR??RGRG?R?BGRR", "G?RRRGGRBRRRGGRR?GRRRRRGRRRRGBG???GB?RRG?GRR?GRGRG", "R?GRRRRRRRRB?RR?G?R?B?RBR?RRRBRR?RRBRGR?GRRRRRBGGG", "RG?GRG??RRRRG?RRGRRRRRBRRG?RGR?RR?RR?RBGBRRB?RR??G", "GR?RRRBBRRR?RRRRRGRRGRGRGGR?BGGR??R?RRRRBRGRRRGG?R", "RRGRRGRRRRRRRR?RRR?RRRGRRRRGRGRRRBBR?????RG?GR?GRR", "R?RGR?GR?GGRRGGRGR?GRRRR?RGRRG?RGRRRRG?RRRRRRRRBRG", "R?RGRRR?GRGGGRGRR??RRGBRRR?RR??RRRR?RRRR?GGG?BR?RG", "RGGRRRBRBRR?G?RR??RBRRRR?RRRRRRBRBRR?BRRGRRG?RRBRG", "RGRRR?RRRRRRRRGRRRRRGGGGGRBRGRRGGR??GRR?R?RRBG?R??", "RRBRRRGRRRRRGG?RGRRGB?RBR?RGR?R?RRBGGRRRRB?G?BRR?R", "RBBGRG?RRRRR?RRRRRRRRRRGGBRBRR?RRGR?RRRRRGR??BRRBG", "R?RRGRRG??RRGRRRRRRR?RRRRGBRRR?RBRRRRRRRRRBRRR?RGR", "GBGGR??RRRR?RRRR?B?G??BRGRR?RGRGR??RRRGRGBR?RRRGGR" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case111() {
        String[] board = { "R?RR??RRRR??R?????RR?R?R?RRRR?RRRR?BR??R?R?RRR??RB", "R?R???R??R?RR???????R??RR?RRRB??R?R??RRRRRRRR??R??", "BRR??R????????RRR???RR?RR??BRRRBRRR????R?R?RRR?RR?", "R?RRRR?R??????RRR?????RR??????RRRR?R???R????R??R??", "RR?R?R?R?RR?R?RR?R?R????????R??RRR?R?R?BR????R???R", "??GR?R?RR?R????RR?RR?????R?RR??RRRR??R?R????R??RR?", "R??R??R??RR?R????R?R??RRR??RRRR?RRRRRR??R???R?RRR?", "R??RB????R?R???RR????R??R?R?RRR?RRB??RR?RR????BRRR", "RRR?RR?R?R?R??RR?????R???R??R???RRRR?RR??R??R?????", "?RRR?RR?R??B??R???RR??R??R??R?R??R??RR?R?RRRR?RRR?", "??R??RRRR?RRB???R???RBRRRRRR?RRR?RR?RR??R?RRR?R?BR", "?R?RR??RRRR?B???RR?R???R??RRRRRR?R????R??R?R?RR??R", "R??R?????R?R??RRRR?????RR??B?R?R?R??R???R?RR???R?R", "R??R????BRR?RRRRRR?R????RR??RRRRRRRRRB??R????RR??R", "?RR????R???G??????R????B?RR?R?R???R?R?RR????R?R?R?", "R?R?RR?RR????RRR?R?R?RR??RRR??RR?R?RR?R?RR????RR?R", "RR???RRRRR?RRRRRR?R?RR??????RR?RR?R??RR?R??R?RR??R", "?RR?R???RRRRRR??R??RR??RRRRRR?????R?RR??R??RRR???R", "R?????RR???R????R?RR?R??RRR??RR?RRR?RR?RR?R???RR?R", "RRR??RR??RRR??RR?R?RRRR?RRR??RR????????B?RRRR???G?", "??R???R?RRR????RR??R?B?RRR??R??RRR???R??R???RR????", "RRR?RR??R?RRBR?B?R?RRR?RR???R???RR?????R????R???R?", "???RR?R?R?RBRR??R??R?R???RRR?RRR?RR?R???RR?RRGRR?R", "R????R?R?R??RR??RRBR???RR???RR?R??RR?R????R????R?R", "R????R??R???R?????RR?RR????R?R?R?????R?RRB??RRRRRR", "?RR??RRR?RR?RR??RR???R?R?RRB?RRR??R??RRRRRRRR???RR", "RRR??R?R?R??RR??RRR??R?R??RRR??RRR????RR?RRR?R??RR", "RRRR??R??RR???R??RR??R???RRRRR??RB?R???B???RR???RR", "??RR?????RRR???R??R?RRRR??????RR???R?R?R?RRR?RBRR?", "??R??R???R??R????RR???RB?RB??R?RRRRRR?RRGRR?RR??RR", "?R?R?R??R?RRRRRR?RR???R??RRR?R???R??R????BR???RRRR", "?R?RR?RRR?R?RR??RR?B?R??R?????B??R?RRB?R?RRR?RR?R?", "??RR????RR?RRRRR??RRR???R??R??RRR?R?RRRRR?R?R?R??R", "R?RR?????RR?BR???B?R????RR?????R??RRBR?RR??R????R?", "?????R?????R????R???RRRR???R?R?????RR?R????RR?R??B", "??RR???R?RR?R????R??RBRRR?R??RRRR??RRRRRR??RR????R", "?R???B?R?RRRR??RR?R?R?????RR?RRRRR??RB???R??R?R?RR", "?R?R??R??RR??R??RRR?RRR??????????R?RR?RR?R??R?RR?R", "RR?RRR?R???RR?R?R??R?R??R?RRBRRRR??RR?RRRRR?R?R?R?", "???R??????R???????RBR?RRR?R?G????RR?????RR??????R?", "??GRB?R?R?B?RB??RR?R???RR??RRR?R?RRR????R??RRR??RR", "??RRRR??RRRR?R?R?RRR?????RR?R???RRR?R?R?RRR??RR??R", "?RR????R??????RRR?RRR???R?R?R??RBRRRR??RR?RRR??RR?", "?RR?RRRR??B?RR??BR?R????R??R??R?RR??RR?RR????BR?R?", "?????RRRR??R?R?RR??RRR??????RRR?RRB??R???R????????", "RR????RRR??RR????RRR?R?R??RR??R??RRR??R??R??RR??RR", "????R?RRRRR?R????RR??RR??RRRRBR??RRRRR?RRRR?RRR???", "????R?R?RRRRR?RR?R?RRRR?RR?RR?R??B??R?????RRRR????", "R?R??R?R???RRR??R???B?????RR?????R?R??R?RRR?RR?RR?", "RR?RR???R?RR?RR?B???R??RRRBR?R?R??R????RR????R?R?R" };
        assertArrayEquals(new double[] { 8.228340231397624e-11, 0.999303760417516 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case112() {
        String[] board = { "RBBBRBGGBBBGRGRBBGGRBGRRBRGGGGRGRBGBGGGBGRGBBGRGGR", "BBBGBGBGGBGBRGBBBRBGRBB?BBBRBBGGGBRGRBGRGBRGGGBB?B", "GGGRBG?GBGGBBGGGGBGGGRGGRBBRBBRBBBBBBBRGGGGGGBBGBB", "BGBBGBBGBGGGGRGBRBGGBGGBGBBBBBBBBBRBGGGRBGGGBBRGGR", "BBRBBGGRBB?GGBBB?BBBBGGGBBRBGGBBGGRBRGRBRBBGBBBRGG", "BBBGGBRBGBRGGGGRGGRGBRBRGGGBBBGGGGBGGRRBBGGGGBBRBB", "BGGRRGBGGBBGBGGGBGBGGRRRRBGGGRGRGBBBRBBRBBGBRRBBBB", "GGBGRGGGBBGBBGGBRBGBGBGRBGBBBGBGRRG??RGBBGBBBGGRBG", "GGG??RBRGBGGGBGGBGBGB?GGGGRBBGBGGBBRRBGGBGRBRBRGB?", "BB?RBBRBRRBGGGBBBB?GBB?RRBRGGRGRGGGGRGRGGGBGBBGRGG", "GBB?GGBGGGBBRBGGGRBBGBRGBGGR??RGGGRB?BB?GRGRBBGGRB", "GGBGBBBGBBBBGBGRRGBRGBBBBBRBBRBRRBGGGBRGGRBGBBRBRB", "GGBRBGBG?GRGGGBBBGBRGGGGGBGRBGGRBRBGBBBBGRGRGGGBRB", "BBGGBRRGGGGBGRGBRBRGGBBBBRGBBGRBRBGBRRGGGGBGBRBGGB", "GGBBRBG?RBBGGGGGBRGBG?BG?GBRGGGBBRGBBBBGRBGRGGGGBR", "RGBRBBGGGGRGGRBBRGGGGRBGBRBGRBGGBGGBGGBGRGBGBRGBBG", "GG?GBBGGBRRBRRBBGBGBGGBGGBBBGBBRRRBRGBBBBGBGBRBBR?", "GBRBBBBGBGBRBGRRRGB?GBGBBBBGGBGGBBRRRGBRGRBGGGBGBB", "GRR?RBBGRGBBBGGBBGGGRBBBBBBB?GGBGBBGBRRRRGBBGBRGGG", "B?RBRGRGBGGBBBB?GB?GBBGRBGGGBBGR?RRGRGBBBGBBBGBBBG", "BBGBBGBRGGGBRGGGGBBBRGGRGBGBG?GBGBBGBBBGGGBBGBGGRG", "BRBGBGGBBBBBGRBBGRGRGGGGGBRGGBRGRRBGBGGRGBGBGBBRBR", "RRBBRRBRGGGBBB?RBGBGBGRGBBGGBBBRBRGBGGBBBBGBBGBGGR", "GGGBGGBGRBBBGGGB?BBBRGBBBGRGBGBGBBGGBRRRRB?GRBGGBB", "RRBGRGGBBGGBBGBRBRGRGGGBGGGBGRBRBBRBGGGRGBBBBGGGBB", "RGGGBBBGGGGGRBGGBBGGRGBBBGGBBBGGGBBRGBGBGGGGGGGBGG", "BBGGBGBBRRGRRBBGGGRRGBGBGGBGRRBRGGGBRGBGBGRGBRBRGB", "BBGGGBGRGGRG?GRGGG?GBGBGGBBRRRRBGG?BGBGGBBBBBRRGGG", "?GGRGRBBGRBBBBGGGGGBGBGGBGGRB?RRGBRRGGBGRGBBGGBRBB", "BBGBGGGBBBBBRGGR?BGBBBRGGBRBGBBBGRGBGBBRGR?RGGBGGG", "BGBRBBRGBGBBGBBBGGR?BBBGR?BRGB?BRGBRGGBGGRBRGBGBGB", "BBGBRGGGBGBRBBGGGBGGGGRGBRGGBRGGGGGGRRRBBBGGGRBGRR", "GGBGBGGGGGBR?GBBBGBGRRBBGGBBGRGBGBBGBGGBGBGBRGGGBB", "GGBBBBBGGBBRGGRGGGGGGBBBGBGBGBBGBGRRBGRGGG?GGBGGGR", "BRRGGBGRRRRGRGGGGBGGRGGBBGBBG?GBBBGBGGRRBBGGBGGR?R", "GGGBBBBGGGBRRBBGGGBBGGGRBGRRGGBBGBGGGBRBBGBBBRGBGB", "GBBBGGBBBRBGBGBRGGRRRBBBRGGR?GGBGGBBBRGGRBGGGGBBBG", "GBGGBRRBBRBBBGGRG?GBBRGBGBG??RBGGGRBGGBGGGBGGGBRGG", "GGGRBBRRRBGBGBRBGBBB?BRBBBBBRGRGRBGBBGGGGGBBBBBBGB", "BGBG?GGGBGGGBBBGGRGGB?BBGRBGBB?GBGRRGBBBBGGGRBGG?R", "BGGGBBRRBGBBRBGGGBRGBRGRGGGGBGBBGRGBRGBGGGRGGGBRBB", "?GRGGGBBRBBGGGRGB?GBGGRBR?RBGGGRGBBBR?GBBBRGGGBGGB", "BGB?BRRRGGBGGRRGRBGGGGGBBRGBBBGRBBBBGGGBGGGBBBGRBR", "BR?R?RGBRRGGG?GBBGBB?BGBGBGBRBRGRRG?GGBBGGBRGRRRRR", "BBBGBBBBRRGBBBBB?GGBBGRGBGBBBGG?BBGGGBRGBBBBGRBB??", "RGBBBRBBGBGGGGRBBBBBBBBGBRRRRGGBB??BRGBGBBRGRGRRGB", "RBGRGGGBGGGBGGBBRBBBRGGGRBBBBBGBGGGGRBGGBRBBRB?GGG", "BBGRBRBBGBGBBGRGGBBGGBBGBGBG?GRGRGBBBGBGBBBBRBRBBB", "RBBG?BGBRGRGGBRGGGBBGBRRRBGBGG?GRRBGBRBBGGGGGBRBGG", "BGGGBBBGGBGGGBBBGBBGGGBRGGGRBGGGGBBBBBGRGGGGBBGBRG" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case113() {
        String[] board = { "?G??BGGG?G?GBGBGB??GB??GBBBBRBB?B??BGGG??BBB?G???G", "BGB??GG?BB?B?BB??BGB?B???BGBGG?BBBBBB?B??BG???BG?B", "RG?BG?BBB???G??B????????BBBG??GB?????G?GB??BBBGBG?", "?GBBBGB??B????B???B???GBBBB???BBBG?B?GB?????????G?", "???GGB?B?B??????B??BBBG?G??G?GBBB??BG???GBG?B?G?BB", "B?BBRG?BB?BB?B??B???G?B??BG?G??BB???BB??GBBBGBGB??", "?BB???GB??G??BB??GGB???GB?B??BBBB??GBG???B?GG?GGB?", "G?BGG?????G?BR?GB?B???B????GGGBGBGBGB??GGGGBB????B", "G?B?BGB?B?B?????BB??B??GB?B??GB???G??BGB??????BB??", "??BB????GB????GBG???GBBG?B???G??B?G??G?G??B?BR?GB?", "GB????G??BB?BGGB???GB??G?GB?B??G?BRGBG?BB?BG??GBBB", "GB???BBBG????GGBB?B?GG??BG?BB?BBBR?G??BB?BG?GBG??B", "????GBGRBBB?G???B?BGGB?B??B??BBG????G?B?BG??B?B?BB", "BG??????B?BG????G??B?G?GG??BB?G?G?G?G??B?B?B??GG??", "BBBB????B?GB?B?B?BGBB?B??BBG???B??GBGBGGG?B??G??BB", "?GB?B??G??????????????BB??G?GBG?B?G???GBGG??GBB?B?", "?B?B?B?GG?????G?G?B?B?BGB????G?G??G?B?B????G?G??BR", "BB????B??BG???B???BBG??GB?GRG?G?GB???GBB???B?BGBGB", "GG?B???GB?B?G?BR??B?B??GG???BGBG?B????B???GB??B?GG", "B?BBB??BG?B?B??G??G????G???BBB?RG?B?????GBGB??B?GG", "BBGG?????B?GBB??GG??GB??G??GG?GBGGB?BBBGBG?BGGGGG?", "B?R??BB??G?B????GB?B?B?GRB?R?B?BBGB?BG?R?G?G??????", "GBRB???BG??B??BG??BGBBBGG???G?BGR??B??GBG?G?BB?BG?", "B??G????BBG?B???GGB??G????B?G??GB???BBG???????GG??", "GBB??BB?B?BB?BB?B??GBG??B????G???B?GG?G???B??RBBBB", "?B?GBB??????G????B???B????B??BB?RG??BGB???B?????R?", "?BGG?BBBBB??G?GGBB??BGGG??R??B??BGB??GB?GB?BG???BB", "BB?BB?GB??GB???B?B????G?G?GGB??RGGBB?B?B???????B?G", "?G?B?GB??BG?B???B?BB?GBBBGG??G??G??BBBB??BG????GBG", "G?BG??B??BGBB??BB????BB?GB????G????GG?BBBGB???GGB?", "BB?B??G?G????GB??BBBB??B???G??G?BBB?G?BBBGBB??RB??", "G?B????BBB?G???BB??G?B?B??G?G??BB?GG?GBB??G?B??BGB", "B??GG?GB??BB?G?G?B?G????BB?BBBRBG?????B?G???BB???B", "GG??G????????B????G????BGGBBB?G??G??BG??GGG??BBG?B", "???GBGG???B?BBB?BGBGB???R???GGBB?G??????B??G?GBBGG", "GBG??BGGBG??GGG??G??????B?B???G?BGGGB??BGB???GB??G", "?GG?BRB???BBBGBB??GGB???B??GBG???BGBB?GBG??G??G???", "B?B?G?B?BB?B??BBG?B??GGB?B??B?B???BBBBGG?BBB??BB??", "G?BG??B??GG?G???B??BBBBG?BBG?BG?GG??B???B?B??B?B??", "G?BB??G??BG??????GGB?GGB?B?B?BG?BR?BB?BRBG?BB?G?GB", "?GB??GGBG???GB???B?B???????B??B?GGB??BBG???GGB?GBB", "???GBGG?B?RG?G??B?GB?GG?????B???B????B?G?BG?BB??GB", "RB?GB???BBGBB?B????B??B?GG?B???????G?BG?G?GBG?B??R", "???GB?BBB?GB?B?B???BG??BBBG?GB????B??BBB??G?????BG", "BG?GG??B???GBG?GG??BBG???BG??G?BBBR?BGG?B??GB?B?G?", "?G?R????BB?G?R?BBBG???GB?GBGBBB?B??B??BGGGG??B?BG?", "B?B?????GBG????B???B?BB?B??GB??G???GG?BBG?BG?GGBG?", "??GB?BB?B???GBG?????BB?B???G???BBBBB?B?G?????G???B", "??????B?G?B?BBGBGBG?????????B?B??B?BB?????B???BGGG", "??BB??BBBB?B?GBG?GB????B?B?B?G?BGB??BB??G??B?G??G?" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case114() {
        String[] board = { "GGBGGBBBB?GBBB?B?G?GBBGBGGGGGB??BGGBBBBGBGBGBG?G??", "BGGBBBGG?GBBG?BGGBBBBGGBGBBGBBGB?BBGBBGBB?GBBGG?BB", "BGGGB?GB?GGG?BBGG???BGBB?GG??GBGGGGGBRGBB??BBBBBBB", "GGBBBGBGBGGGGRB?BBBGGBB?BGGBGGRBGBBBBGGB?BBBBBGGBB", "BGGGBG?BBBBBG?BGGGGBGBBBGGBRBBGBGGGB?BBBBBBGBGBBGG", "BGGRBGBBBBGBBBBGBGBBBBGGGGGGGBBBBBGGBBBGG?BBGB?GBB", "GBGGGGG??GRGBBGBBBBGBBGGBB?G?GGBG?GRGBGBGG?BBGG?GG", "GBGGBGBBBBG???BBB?BBGRGGGGG?BGBBGBB?GGBGGGGRBGGBBG", "BBBGBGBBBGGB?GGGBGGGBBBGBBBGB?GBG?GBGBGBBBBGBGBBB?", "GGBB?GBBGBBBGBGGG?GGBGBBGBGBBBGGB?BGBG?BGGB?BG?BBB", "BBBGBBBGG?B?GGGGGRGBBGBBRBBBB?BBBBGGGBBB?G?BBBGBB?", "B?GGBG?GBRBGBRBRBBGBGBGB?G??GGBGBRGGBGGBGBG?GGGB?G", "?B?GGGGGBGGBBG?BG?BGG?GGBGBGGBBRBBG?G?BGGBGBBBB?BB", "BG?BBGGBGGBGGGBBBGBBGBGRGGGBBRGBRBGGBGG??BBGGB?GGB", "GGB?BRBBGGBBBGBGGBGB?G?BBBGGBGBGBGBB??BB???BBBBGBB", "GRB?GB?GB?BBBG?GBBGGBBGGGG?GGGBGBBBGGBBBBBGGBBBBGB", "B?B?B?BGBGBG??GBBGBG?G??GGG?BGGBR?GGGB??BGBBGBBBBB", "GB?GG?B?BB??GBB?GGBGB??BGBGGBGBGBGGG?BBBBGBGBGGGGR", "BGBBGBB??BGGBGRGGGB?BBGBB??BB???GB?BG??BBG?BGBBGBB", "GBB?BB?BG?BGGGBBGBGBBBBGBGB?B??BGBGBRB?GGGGBBBG?BG", "BGGGBBBGGBGBBGBB?BGG?BGGGBBBGG?GGBGBGBG?BBGB?BGBGG", "BGGGGBBGBBBBGB?GBRBBBB?BGGBG?GG?GGGGGGGBG?GG?BBBGG", "BBGB?B?GGBBG?GBGBBGGBBGBGBGGBBBBBGGBBGBBBGGGBBGB?R", "GB?GGGGGBBGGGGBBBBGBBRB?BBGRBGG?BGGGBBBBBGBBBG?BGR", "GGGBBBGGB?GBBBBBGBBRG?GGBGG?B?GB?BGGB?GBBGBGGGRGBG", "GGBBBGBB?G?B?BBBGGGBGGGGGB?B?BBBGGB??GBBBGGGBBG?BG", "GBB?BBBB?G???GBBGBBBGBGGBGB?RGB?BGGGBGBGGGG?GGGBBB", "BBGGG?BGBBBG?BB?GBG?GBBB??GB?G?BGBBBGRBGBGGBBRGG?B", "BBBBGBBGBBG?GG?B??GGGGRBGBBGBG?BBBBGGBG?GGGGBGBGB?", "?B?GBGBBBBGGGGB??BBBB?BBBGGBB?GGB?BG??GBBB?GGBGB?B", "BGRG?GG?BRBGBBBGBRGGBGBGGBGBGG?BG?GR?BGBGGBG?GBBBG", "BBBGGBGBGB?GGBBB?G?RGGGGGBG?GBGGGGGBGG?BGGGGGBGBB?", "BGBBGBBBGGBBBBGG?GBGBG?GBGBGBGBBGBBBGBBGB?BB?BGGBG", "GB?BG?BBGBBBBBBGB?GBGBBG?BBGGGGBBGBGGG??BB?BGGG?BG", "G?R?BRBBBBBGBGGRBGG?GBBGGBGBGBB?GGBGG?GGBGB??RGBGB", "GBGBBGG?GBBGGG?BB??BBBGBBBGGGBBGB?BGGGBBGBBGGG??BB", "G?BGR?BGBR?B?BGBBGGBBBGGGG??GB?GGGG?BGBB?GBRBGGBBG", "BBBBGGGGGBBBBGBGGBBGBBGGGBGBBB?GGG?BGGGGRBGBBBGBGB", "GGBBBBBGBGGBGGGGGB?BBGGB?G?GBGGG?GB?BG??B??B?GBBBB", "BGGBB?B?GGGBGB??GGGBGBBBBG?BBBGGGGB?BBGBBGBGGGGBGB", "BBBGBGG?GGGGGBGGBBGB?GBG????BGGGBGBB??GGBGGBBG?BBG", "GGGBB?BBGBGB?GBGGGB?BGBB?BGG?B?B??GGBB?BBGBGB?BGGG", "?G?GGBGBGB?BG?B?BGGBBGGGGB?GBGBRBBBBBGBB?GGGBGGRGB", "BB???BGBBBBGG?GGBGRBGBGBG?GGBBBGBBBBBRGGGGGBGBBBGR", "GB?G?GG?G?BBBBBGBGGRB??GBGBGGGGBBGBBBB?B?BG?G?BBB?", "BB?BBBG?BBGGBBBG???GGG?GGBBG?GBBBGB?GBGBGBBBGGG?G?", "?BBGBBGBBB?G?BB?GBBGBBGGBRBG??B?BBGGBGGBGGGBBBGG?B", "?BBBBGGBBBGGBGBB?BBG?GBBBGGGBBGGGBB?RBBBBB?G?BGBBB", "??GG?GBBBBG?BGGGBBGGGBBBGBBBBGBGB?GBGB?GG?GGBG??GB", "GBB?B??BBG??GGGBBB???B?BB?BBBGBGGG?BBGGBB?BGGGGBGG" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case115() {
        String[] board = { "GGBGGB?RBG?BBBGGGGGB?BBGB?GGBG??BGBBBBBGB??BBBG?BB", "BGB?GBGBGGB?BGB?GBBGGBGGBG?GGG?R?BBGBGBB?B??GBBGBB", "GBGBGBBBGBBGG?BBG?BG?GGBBB?BBGGG?G?GB?BGRBBG?BBBG?", "?BBBBBBGGBBBBB?BB???BGBG?GGGB?GB?GG?BBG??B??BGB??G", "?GBG?BBBG?BG?BBBBG?GGBGG?BGBB??R?G???GBBGGG?B?BBBB", "GBBG?BBG?G?BBGBBBB??BRGGBB?G??GBGGBB??GBGR?BGBGGBB", "BGBGB???GBBBBGBGBGBGBB?GBBGG?BBGGR?B?G?GBB?GB?B?GG", "BB?GGBBGBGBBBG????GB?GBBBGBGG?RBBBBBGGB??BGGBBBBBG", "B?GB?G?BGB?BBGG?GBGBBG???B?GBBGBBBB?GBG??BBGG?GBG?", "?BBBBBGBGB?B??BBBB?????BGG??GGBBBGGGGGBBBGBGGGGGG?", "GBBBGBBB?B??BGBG?BBBGGB?BBBGBG??BGB??G???BB?BG?BBG", "G?BB??BGGBB?BB?R?G?BGGBBGGGBGBGGGGBB?G?GBB?GGGBBBB", "G?GGBBGBGGBGB???BB?????GGGGG?GB?BR?GBBGGBBBG??GBBB", "BBBBGBBBB?GGBBGBBGBBGG?GGBBRB?BBGBGB?GG?GBGBGBBGBG", "GBBG?GBBGBBG?G?GGGB?B?BBBBBGBBGBGBBBGGGBBGB???BGGB", "?GBBGGGGGGGGGBBBGB??BBB??BBBGBB???BBG?BBBBGBG?BGGB", "B?B?BR?BGGBB?BBG?GBBGGBBBBBB?B??G?GGGBBBGGG?RBGB?G", "?B?B??BG?BB?BB?G?GBGGB?B??GGRBRBBBGBBGGGBGGBBGBBBB", "BBG?BGGG?GBGBBGBBG?BGB?GGB?G?BBGBGGGBBBGBG?GG?BB?G", "BBBBB?GBGB?RGBBB??GBB??G??GGBG??G?BBBBGBB?GGGBBBBB", "GRBBBGBGBB?GBB?B??GBGBBBG?BB?GB?BGB??BB?BBBBBBG??B", "G?GBBBBG?BBR??BBGGGBGB??B??B?BBBB?BBB?G?GBBBRBBBGG", "GB?BRBBGBGB?B???BBB??GGG?BRGGB?GGGGGBGBB?B?BGB??BG", "BB?GRBBB????GB?G?G?BB?BBGGGGB?GB??BBGGBGBBGBG?GB??", "?B?B?B?BBGGBBGBBGGB?BBBGBBGBG?GB?GBBG??GBG?BB?BB??", "?BBG?BB?BGGBGBBRBGBB?GGBBGBBGBGGBBGBB?BGGBBG?BBB??", "GGGBBGGBGB?B?GB?GBG?B??G?GB??B?GBGBBBBG?BBGGGBB?G?", "BBG?BGBBBGBGBBBG?BBB????GG?BBGGGG?GG?B??GGBBG??BBB", "BB?BBBBGGBBGG?BB?BBB?BB?BBB?BBGGBBB?BB?GBBB?G???BG", "BBBGBBGBBGBG?B?BBGGG???B???BGB?B?GBGGGBGBBB?BBBGB?", "BBBGGGBBBBB?BBBB??GBBBGG??B?B?GBBBG?G???B???BBGBBB", "B??BGBBB??B??GBBB?RBGBBB?BBBBG?BGG?BB?BB?B??GBBB?B", "GGBGBGGB??GBGB?B?BGBG?BBBGGBGBGBBBBGGB?B?GGBBBG?GB", "BG??GBBBBBGGB?BBBGB?RGBGBBGBB?B??GBBBB?B?GBBB?BB?G", "GBBB?BG?GB?BGBGR?B?G??GG?BGG?B?BBBB??BBBB?BG?BBB??", "?GGG??BB??BBBB?GGBBGGB?BGGB??BBBGB??B?GBB?G?GGGGRG", "?BG?G?G?B?GBBBBG??BBGGGGBGBB?GBB?BBGGGGBBBBGBGBG?G", "BB??B?B?B?GBBGBG??B?BGBBBGBB?RBBGRBBB?BBBBGG?GGGBB", "BGBBBBB?BG?B?B?BBB?BB??BBGGBGB?GBGGBBBG?GB?BB??BGG", "?BGG?GGB???RBBBG?G?GBBGBBGG?BG?BBGBB?GB?BBGBB?B?G?", "BGRB?GGGBRB?G?BB?BBBGGBG??GBRBG?BB??GG?GG?B?B?GB?G", "BBGB?BBBGGB?BBBGG???B??GBB???BBRBBBBB??BB?GGB?B??G", "B?GGBB?BGBBBBG?BBG?GGBBGBB?GBGBBGBGBGGGBG?GGBB?GBG", "BBBBG??BGBGBB?BG?BGGBG??GBBBBGG?GB?GBGGB?GGBBBBBGR", "G???GGB?B?B?GGGBGBGBBBGG?BGB?GBBR?GBRG?B??GGBRGBGG", "BGBG?G?G??B???B??BB?BGGB?GBGBB?????G??BB?BG?B?BGBB", "BBGB??GBBBBB?B?BGG?B?G?BGGG?BBBGGBBGGGBGGBBBB?BGBB", "B?BBRGG??BGBRBBBBBBBB?B???B?BGBBGGBRB?B?BBGG?GGBBG", "B?BG?BGGGBG?BB?BG?B??B?GGBBGBGBBBBGBGBGBBB?BBG?BB?", "GGG?B?GBGGRBBGB?GBB?BBGB??BBGGBBGG?GR?BB??RBB?G?B?" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case116() {
        String[] board = { "?????GGGGG?GRRRGGRRR?RR??RR??RRRGGR?R?GGG???R?RGGG", "RGGGGRR?GRR?GGRGR??RRG?G??R??G?GRGG?RRRRRGRGGRGGG?", "G??G?R?R?BG?G?GGB?RG?GGR?GRG??GR???R?GR??RR?GR?RGG", "G??GR??G?GR?GRGGG?R?RRGRRRRGG??GRG????GG?GGRGR?RG?", "?RR?RGG??RRRR?R??GG??R???GG???RGGGGR?RGGRG??GGRRRB", "B?BRR??RG???G??GRG?RR?RRGR?GRRGG??GR?RG?R?RGGRR?RR", "RR?G??GRR??RGRGGGGG???RG?RR?G??R?RGR?GRR?GRGG?R?G?", "G???GBG???R??GGGGRGRG??R?GGG?R?GR?R???R?R?RBG?R?G?", "?RGRR?RRB?RGRRRRGR??RG?GRRR?RG?G?R?BRRGGR???G?GG?R", "????R?RG?GR?RG??GG?G?RR?GRR?GR?GRG?RGR??RGG?R?GGGG", "GR???GGRGRGRR??G?G?R?R??GR?G??G?GR?RRRGG?GRG?RRRGR", "RGG?G??RRGG??GGRGGG??G?RRG???GRGGG?GGGG????GGR?G??", "GGRRG?RRGGR?GRGGRGRR?GG?G??R?G?R???R?GGGRGG?G?GGR?", "G?GRGRGGGGR?GGRGGG??G??R?B?B?G?RGGGRG?RGRGRG?G?GRR", "?GGB?G?RG???GG?GG?GGGG???BGGR??GGGG???GRR??RGRGRG?", "?RGRRG?RR?GR?GR?GGRRG?RRRRG?B?RG???R????RRGGGGGR?G", "RRGRRRGGRR???RG??GRG?R??RR?GGRG?RG?RRRGGG?RGRGG???", "?G?GG?GR?RG??G?G?GR?G?R??B?R??G?GRGRR?GRGBRGR?G??G", "BG?RG?RRGGG????RRG????G??RRR?R?GR?RRGGRGR?GG?RG?R?", "R??R?GR??RGG?RRGGGRGRG??GR?GG??G?G??RRBGGG??R???GR", "RRGGGBRR?GG????R?R?RGRG?GG???R?G??G??RGGRRGGGG?RGG", "GRR?GG?GG??RGRR?R??G?GG?G?RRGGG?GG??GRGRG?R?GG?RGG", "G?GGR??G?RRRRB??GRG??G???RGG????RG?R??????GGG?RR?G", "RRG???GG?GRRRR?RGG?G?G??GGR???RBGR?RRGGR??GGGRGG??", "RGRB?GGRR?RG?R?GGR?GR??RG???R??GR???GGG?R?G??G?GR?", "GR?G???RG??RGGG?GGGRR??GGRGRGGBGGGRG??R?GGRR???RG?", "RG??GGRRGRGGGGRGB?RGRBGR?GRR?RGRGG?GGGGRGGGG?GR?RG", "??R?RR?RR?G??GBR?GGG?R?R?G?RR?G?GG?RG?RRRB?GGGGGGR", "R?RG?RGGGR?GG?GRGGGRR?GGG?G?RGR???GG?RGG?GG?G?BGRG", "GRG?????RG?GGGGRR?GGRGRG???RG?G?G?BR?GRRGRG?G??GR?", "?RGBRG?GGR?RBGRG??RRB????RGBG?RGRG?R?RGGG?R??GRR??", "G?GR??GGR??RGR?RR?R?RRR???RGRGGGGR??GRGG???GRG??GG", "?RGGR??G?GR?R????GGGG?RRR??G?GG?G?G???GGR?GRRG??RG", "RRRGGGRR?GGGBR??GR??G????GGGRRGG?RRG?R?GRGG?GRGG??", "BRG??R?G?G?R???RGGGRR?RRRRRBR??????R?R??G???RGGGRR", "GBGRRGGGR???R?RGRG?GGGBRRRG????GGGR?GR?B?GGRGGGRGR", "GG?RRGGR??GG???GGR?G?RRG?GG???RG??GGGRR??GR??RGG??", "?G?G??GRBG??G?RG???G??BGRR??G?GRR?GGGGB??RRGGGGGG?", "?RGGGRG??B???GGRGRR?G?GGGGRGG??GG?GG?RG??R?G?G??RG", "G???GG?R???G?GRG?R??RGRGRG?R?GG?GRR??GR?RGR??G?R??", "G?GGG?RRR?G?RGGRBR?GGG?RG?GG??RR?RRGGRG??RR?G?RGGG", "RR?GRRBRG?R?RRRRGG??R?RGGGRGGGRGR?GRRGRGGGG?GGGGGR", "R?RRGGRRGRRRGRGGG??BGRR?GR?R?GGRRRG??GGRG??G???G?G", "R?GG??RGRGGGG?GG?GGRRR?R??GR??G?????R???G?GGGG?G??", "RG?GGGRR?GGRR??BRR?R?G?RRGGGG?GGRRGRGGG?G?G?GRR?GR", "??G?GGGGGGGR?GG?RRR?G?RRG?RRR??GGG?GRGGB?RRRG?GG?R", "?G??G?GG?RGRG?G?R?BG?RRR?G?G?GG?R?GRRRR?GGG?GGR?GR", "?R?R?GG?GGG??R?G?RG??RGG??R?RRG?G?RGG?R?G?R?GGG?GG", "?GRG???G?BRR??RGG??GGGRG?R?R?G?GRRR?G?RRGRGRR?G??R", "?RRRG?RR?????RR?GG?G?GRGGRR?G?G?GGG?RGR?G?RG?G?RGG" };
        assertArrayEquals(new double[] { 0.0, 0.9793343771293795 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case117() {
        String[] board = {};
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case118() {
        String[] board = { "GRGGRBRRBGRGBGGB?RGBGGRRRGRRG?GGRBBRBBBGGGBGGRRBRR", "BRRGGRGBRBRRBBBBRBBBB?GGBBBRRGRGBBRGBBRGBRBRRRRRGR", "?RBRGRRGRGRBBRRRGRBGBBRGBBGBBGG?GRBRG?BGBGGGBRRBRR", "RRBBBRRBBGGGRBRRRGBRGRGRGRRRBBRGRRGGGRBBRGBBRGBBGG", "RRRRRGRG??BGRGBR?BGRGBRBBRGRBRBBR?BGRGGGRRRBRBGBBR", "GGBBRBBRRGBRBGRRGRBRBR?RRBRBBBBGBRRBGGBGRGBRRGBRRG", "?RBGR?BRBRBGGBRGGBBRRGRRBBBBRBBGGRGBRBBGGGBGBRGBBB", "RRGRBG?RRBRBRGBBRBRBGBRRRB?RRGRRRRBRRBBRRRGBBRRRGB", "R?RRRRRGRRGGBRBGRRRBBRBBRRRRBBBBRBGRRBGGBBBRBBRGRR", "RBRGGBRGBBBGRBGRGBRBRRBBGRRRRGBGGBRG?BRGBGBRGBGBRG", "RRGGRBRBGRRRGGGRGRGBBBRBGGGRBGRRBRGBGBBGRGRGBRRBGG", "RGGBGBBGBGRBBR?RRBBGRBGGRRGBBR?RRBRRRBBRBRBBBBBBBR", "BBBBGBBGGRRRGBGR?BRBRBGRGBBBBBRRBBBBBBBRRBRBRRRRG?", "BRR?GRRBBGGBGBGGRGGRRBGBBBGGBGBG?GRGG?BRRGRGBBRBBB", "GBGRBGBRBBRGBGBRBBRBRBRBGRBBBBG?BBRGRRBRGGRRBRBRBB", "GRRGRRBGRRBRGGGBRBBRBBBRBGBBBBGBGBRBBBBGBGGRGRBBGG", "RGBGBBGBBBRBBRG??RRRRRGRBBGRRBGRBRRGRRRBGRBRBBBBRB", "BGRRBBRBRRRBGRGGR?GG?BBBBBBBBBRGBGBBRBBRGBRGGGBGRG", "RBBBBBRRBRGRRGRRBRBBRBGG?GRRGBBGBGRBGRRRBRRBGGBGBR", "BRGRGRBBBRRBGGRGG?GBRRRBGBB?BRRGBRBGGGGRBBGBGG?GBB", "?RGGGBRBRBRBGBBRBBBBRBRGBRBGBRGBBRRR?BBRBGBRBBBBGG", "GBRRBRGBRGBGGGGGGRBBBGRGBRBBRBG?BRBRBGGGRBRRBRRGRR", "B?G?BBRGRB?GGBBBBBRRBRBRRBBBGBGRRGRBBBGBBRRRRRBGGG", "B?RBGRBRGBB?RBRGBGBBBGGRGGBRBBGGRBGRRRRGGRBBBRBBRB", "GRRBGBBGRBBRBRBGRBB??GRGGBGGGRGR?RRRGRRRRBGBRGBBGR", "BGRBRBRBBRRRBRGRR?BRGRGBGBBGRBBGGGBGRRGGBGRBGBRRBB", "GBGBBBGRGBBBBGRBRBBGBR?RGRBRRBRGRRRRGBBGBBGB?BBBBG", "BBRRRRBGGRBRGRGBRBGRRRBBRRGRBRGGGGGRBRBRRBBRRRGBRG", "GBRRRRRRGRRBBRG?BBBRRBRBBRRRBRBBRRBR?RBRBRGGGRRRRB", "GG?BRRGRRRBGGGRGRGGGRRBBGGGRRRRGGBBRGRGRBGGGGRRRBB", "G?RGBRGBGRRBBRBBBBGRGGBBBBGGGRRRGGRBRBGRRGBRRBGGBB", "BBBBBRGBGGGRRBGR?GRBBRBRGBGGGBBBRBBGBRBRGBRBBBBBBB", "RGBGBRBBRBBRRBBRGRGBGGRGRGRBBBRRRRBGRRGBRGGRBGRGRR", "GGBRBGBBBBGGBRRGGG?RRRBGBBBBBG?RRRBBBRBRRRRRBRGBGG", "RGGBRRBRGBGGGBRRRBRRRGRBGBRRRBRGBBBBBGBRRRRGBB?RBB", "BRRGRGBRBRRBGBBGBRGBBRGRBBGRGBBGBRRGBRRGGRRGRGBRGG", "GRBRGBBRBBRGGBBBBRBRRRRGGRGBBGRGBBRBGGBRBBGGRGGBRB", "RGBRBBGRB?RBBRRBGBGBGBBRBBRBBBGRRBBBBGRRRBGGR?BRRG", "RBGBRGRGBBRBGGBGBBRBBGBBGRBBBGRBBBBRGGRGBGBGGRG?GB", "BRBBBBRGBRBBRRRRBRRBGRBB?BBRBRGBBRRGBBRRBBRBBGRBRB", "BRBGRGRRGGGGGBGRGGGRRBBRBBRBGRGRBBRGBBGRBBRRBBBGRG", "RGRRGGRBGGRBGGRRRBRGBGGRGGRG?BGRRRRGBRGBBBBGGGRBRB", "GRGBBBBGBRGBBRBRRGGRRGBBBBBGGGGBRRBBBGBRGRRRBGBGGG", "B?GRGGBRRBBGBRRRBBGRGBB?RRRGGBBRRBRRBBRRGRRRRBRBGB", "GG?BGBGBRRRRGBGBBGBRBGBRGRRGGRBRRBRGBBR?RBRRRRRBGG", "GBGRRBRBBGBGBGGGBRGBRG?BBGGGBGG?RGGBGBRBRGGRBBBGBG", "BBGBBGBGRBRBGBBGRBRBGRBBRBBRRGGRBBRGGGRRRGGGGBGBRG", "RBRGBRRBRBGBBGRGGRBGGGRGBBRBBBRRGB?BGRBBRRB?BBBGGG", "BBRRBBRGBBRRBRBGGBRRGRRGGBBRGRBRRGRGRRBBRRRRBBRGGB", "RGRGRRBGRRBGRRGBBRGRRBRGRBRRRGGBRGBBBBRRBBBGBBBRGG" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case119() {
        String[] board = { "RR?BB?RRRBG?RRRBGB?G?RR?BR??B?G??RRRG?RRB?BR???R??", "RRR?RRR???RBRBRRRRBR?R?BRBRR??GRB?R??BRBR?R?RRRRRB", "RBGR??G?GRR?RR?RG?B?GR???R?RRRR?RR??R?B??B?BRRR??R", "RRR?BR?BRRRR?RRR??RGRRRRB??RB???GRGR???RRBR???R???", "RGRR?BB??BBRRRRBRRGRGRG?BBGRR????RR??RBRRRRBGBBB?G", "R?RGGRRB??G???B?RRB?B?R?RRBR??RGRRRRBR?RRRGBR??R?R", "??G??BBRBR?RBRGB???BB?RR?RRR???RRBBRRRBRR?GBRB??RB", "?R?R????RR?RRRRRG??RRGR?RG??GB?R?RBGBRR?R??R???GR?", "R?G?R???BBR?RR??RBB?RRB??BR?RG??RR?R??RRRBG??RBBRG", "?RR??RR?BBRRBBR?RG??GRBRBRGRRR?RG?GG??BBRB?RRRR?R?", "?RRBB??RRGBB?RRRBBR??G?RR?RRRRRRR?RRBBBRRRB?GGB?R?", "BB????RRRR??R?RB?BRRR?RRRBR?GGGRRRGG???RBRBB?R?R?R", "BRRRRG??GB?GB?B?RR??RRR?R?RRRR??R?RR??B?G?GBR?R?RR", "BBBRRRBR?RRRRG?RR??GGRRRRR?RRRRR?R??RR?GR??RBRRRRR", "RR?B??B??RBR????GBRGR?RGB??R?R?RB??RRRBRBRBR?G????", "BR?RB?????BRBRRRRRBB???RRRRBG?R??R?B?GRRB?GRRB???R", "BRRR??BBR?BRRBGRGRBRRBRBGRRR?RRBR?R??GRBRRGGR?R?RR", "?BB??RRB?RRRGRGGB?RRR?G?RRBB?BRRRBRR?RGRB?BR?RRR?R", "RBBRRRGRG?RBR?RRBRRB?RBBBBR?GRR??RRRGRR??G?BRRGRGG", "???RB?RRR?RRGG?BBBB?RRB??R?BGR?R?RRRRR?RRRRGB?RR?R", "RRR?RRBBRRR?RGRB??RRB??B?R??R??BGBRRRR?R?RBBB??RBB", "RB?RGRRRRRR?BBR??BBB???BRR??G?RBBRG?GGBRRG?RR?????", "BBR?G?R??BBBGBRR?BRR?BR?BRRRRG??RG???RGRRGBRRBBRR?", "GB??GGR?BRGRBRRRR?R?BGR?B?G???RRRBR?R??RBR?BBGRBRR", "B?R??BRGBBGRR??R??BGGBB?RRRB??RR?B?B?R?RRGB?R?R???", "?R?B?RRRR?RBBB?G???G??RR??RBRGR?R??R??G??BBBBBR?RR", "?RBRBR?R?R???RRRBRR?R?BB?BRBRRB?R??B???R?RR?BG?RGG", "R???R?B?RRRRGR?BBRRGRB?G?BRR?RRR?RB?R?RBR?RBR???BR", "GR??RRGBRBR?BR?R?GR?RRRRGRB?R?RRG??R???RBRR?RR?GRR", "?RR??R???RRR?RBRGB?G?GR??RG?RRRR?R?R?BRGRRR?R?RRRR", "RR?B??RRBRGRRRRRRRRGRBRG?RG?????BR??RB?BR?RG?RR??R", "?RRGB?RRG???BB?BR??BRRRRGRG?GGRRRRRRRRRB?R???RB?BR", "R???BG?RRRRBG?BB?????RRGRRRGRRBB??G??R?RRRB?RGRRGB", "GB??RBR?GRGRR??BGRG?R?GRRRG?BRRRRGBRGG???R?RB??GBR", "RRR?B??G?R?R?RR?RRRG?GR?R?RBRGGRRRBRRBB?R??R?BRBR?", "RG??RR?R?B?R??G?GGB?R?RRRRGRRBR??RRR???BRR?RR??R?R", "RR?RGRG?GRRRR?RR?RR?RRBBR?GR???B?RR?RR??GR?B??RG?B", "?BRR?GGB??RRR?R?B?RRRRR?B?RRRG??RR??RR?BR?R?G?RB?R", "BRRRRR?RBG?RRG?RRRBGRBRRB?R?BBB?RGRRR?RR??R?R??R?R", "GGRRR?GRRRRRRRRR??RRR??B?RB????GBRG?R????BBRGGR?R?", "RR?R??BR??BR?BR?RGBGGR??RR?B?RGRGGB?G????RR??RG?B?", "?B?G??RR??RRGGBRBRB?RRRB????G?B?RRR?GRBR?RRBRR?BB?", "RR??RRRGR?BBBBGRR?R?RRRRBRR?R?R?BRRBR?RRRRG?RRRRR?", "?R?BRRB?????R??R?RRRRGRR?RRRR?????GBR?R??GRRBRRBBR", "GRRB?GRRG???BRR?RG?GR??G?G??B?RG?RR?BRRR?GRR??G?R?", "?RGGRRRR?G?RRR?R?BR??R?R??RRRBRR?R?B??RR???RR?RRRR", "GGG??R??BGR?BRG?R?BGB?R?R?B?R???RR?R?R?RR???R?BRB?", "?R?BBRRRRB?R?B??GBR?R?B??RBRR??GRRRB?RR??BG??RR?R?", "RR?BRRR??R?BRBRR?RB??BBRRRRR?RB?BRR?RB?GGGR?RBRB??", "??R?RGGBRRGRR?B?BGGGGR?GRR?RGR?RRRGG?RRG???BR?RRGR" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case120() {
        String[] board = { "BGR?RRRBB?RB?BBBBB?B?RB??RR???BRRR?RR?B?BBRBBR?RRB", "BRR?RRR?BG?BRRB?B?B??B?BGR?RG?RGBR?BRRBBBBBBBGRRRR", "?R?BBRRGRGGBR???GBGR?GR?BR?RRR?B?GRR??RRRBG?GRRRRR", "R?RB?BRRRRBG?GBBRR?RBRRR?RRRGRR?BRB?RBR?RR?RGB??R?", "B?BRBRRRB?BGRBRBR??BBRRBBGRBBRRRRRBRR?RGRRBBBGBRR?", "RBRB?BRB?RRR?BB??RRBRB????RRB??RR?BRR?BRG?RB??BRB?", "B?R?BBRBRBRB?R?R?BBB?B?RRBBRBBBGR?BBGR?BGBB?BRR?BB", "B?BRBRB?RBBRRR?RRRBRBRRRG??BRRRGBRRBBRR???BBRRR?GB", "GBBRRRRB?RR?BBBGRBB?BRGBBBBRRBRRBRB?GRB?RRBRBBB?BG", "?R??R?GRRRRGRR?RRRGRR?G??GRB?B?RRBRRRBRRBBBRRBBBBG", "BBRBBRGBG??B?BGBR?B?B?R?????BRR?RB?GB?BGR?RR?BRRR?", "RRRBR?R?BRBRRR??RGRRB?B?RBRBRBRRBBB??BRRRB??RBRBRG", "???RBR?RBR?BBGG??RGRBR?RG?G?BRBBRR??RB?BGRBRB?BRBR", "RG?RBBR??B??BBBRGB?GBRRRB?B?BG?GRBB??RGBRBBRBGBRGB", "RRBBRRRG?RRBBGG?BR?GRBRBBB?BBB??R?RB?BRGR?RRRRGRBB", "???G?R??GRGB?RB?GBRRRRRRRBB?R?GB??RR??GBRRRR?RGB?B", "?B?RRRBBG?BBR?RRBBBRB?G?RRRGGRRBRB??RR?BR?RBRRGRRR", "R?RBBRB?BRBRBR????G?RBRB?GRGRBRGRRRGRGRBG?BBBBG??B", "??RBRRBRR?RGRBGBR?RRGRRRRBBGBRRBB?R????GBBBGR?RGRR", "?B?RBRBR?BB?BBBRBBB?BRRBRRRRG?R?R?RR?RRBBGRBRRBGBR", "GBG?R??R?RRRRG?RRBB?BBBBR?RBBRRB?GBB?RGBRBB?GBRBR?", "?BGGRR??GBRB?BG?R?RGBG?BRBGBRB?BGBBB?BBGR?BBR?RBBR", "?BR?RBRRBR??BG??R?RBBR?BRRRR?RBRBB?GRB?R??RBRRRRB?", "??BBRRR?GR??BBBRR?BR?RRRRRRRRBRBGRR?BBG?RGBRRR?BBG", "BBBBRRRRRGBBGBBRBB?R?R?GGB??BBRRRRBB?R??G?RRGBRRR?", "RRRR?BBRBRBGBG?RB?RRBBGGRBRRRB?RR?BBRBRBRRGR?BRBBR", "R??R??R?RR??BRR?RBB?BBBGRRRGBR?B?R?GBB?RBBBRGGGRB?", "BRBBB?RRBBRBBBRBRBRBRBRBBBRBBB?RGBBRBBB?BRR?BBBBBR", "R?R?RR?RBGGBRB?R?R?BGRBR?RG?RGB??RBRR?BBR??BB?RB?B", "?RRBR?B??BB?BGBBRG?RGRR??RBBRGRBR?G????BBB?RBBRRRB", "BBR?GBRGB?R?RB?G?R??RRBR???BRGB??BBRR??BRB?BB?RGBB", "R?B?BBRRBR?BRRBBBR??BRGRRG??RGRR?RB?G??RR?B?R??BBR", "RRR?BRRB?RBRR?RRBRRGB?BRRBRB??RRBRBBG??RRGBB?GB?BR", "???R?BBBBB?GR?RRR?BR?B?RB??RGRBGR?GBGRR??BBBBR?RRB", "B?B?RBG?BBRB?RRR?BBBRBRR?RB?R?RR?GR?BBBRG?RBBG?BR?", "RRR?G?R?RRBR??BB???BRRRB?B?BRRRR?RBRGB?RRRBBBR?RBB", "RRRBRR??RRBGRBRBRB??BB?R?RRBRRGRR??RRRGBBBBR?B?B?B", "?RBR?R?GB?RRR??BBRR?R?B?RR??BRBR??RRB?RRR?BRB?BRBB", "????RRG?BRBR?RRBG?BGRBBB?RBBBR?BBGBR?B?GGBBBRBGRRB", "RRBR?R?RRBBBGBRR?B??RRB?BBBG?BRBBBGBRRR?RB??BBGBRR", "?BB?RRBBR?RBBRR?RB???B?RBBBBB?BRB?RR??BG?R?B??RBBR", "BB?RGBR?RRBRRRBB?BRGBBGBB?BBGRRRRRR?BBRRRR?RR?RR?G", "?GB?RB?BGRGB??GBBGBGR?BRB?R?RRB?BBGRB?BBRR?B?RB???", "R?B?B?BGR?RG??RR?BB?BRRRBGRB?BRRRB??R?RRB?GRB?RRG?", "?BRRRRGR??GBRRB?BRGBRRR?BBRRGRRRBG?R?BGRRBBRBBGB?R", "BBRBRBR?R??RBRGB?BR??BRRG???BBRGRB?BB?B??B?BBRBGB?", "RBB?RRRBR?RGG?RBGB?RBB?RBRG?RBRBR?BRRB?RGGB?G?R?R?", "B?RR?BRRR?GRBBR?GRB?BBR?RRBG?RBGRRBB?G?GRRB?RRBBBR", "BBBRGRRBR?BGRBRR?RBB??BRR?BBRRR?BBRRR?BRBR?R?B????", "G?BRB?RB???BBRG?RRRRGRR?BGR??RRBB?RGRBBBBBR?B?RR?B" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case121() {
        String[] board = { "RG?GG??G?GGGGGGGGG?G?G????GGBGGGG??????R??G?G?G???", "????GB?GG??GGB?G?????G?GGG???GGGGG??BGGG?G??GG?BG?", "G???R??G?B?GG????G?GGG???G?GG????G??R?RG??G?G??GG?", "??RG??G?G?GG?RG??GG?BGGGGGG?GBGG?R?GG??G?????G?GGG", "?R?G??R????GGG?G??GG????????GGG?GB??B?????R?GG?RGR", "??GG?GG?G?GG??RG??G?GB?BG??????B?R?GGB?GRR??GG??GG", "???GGG??RG???G????GG???RBB??G?GGG?GG???GG??G?GRGG?", "?G?GGG?G???B?G?GGG???G??G??GG?R?G?B?GG??G???G?????", "?GG????G?????G???GG???GB????GG???GGG??GR?RGB????G?", "GRG?GG???G???G?GBRG????GGRGRGG??G?BG?G?????B??R???", "?GGG?G?G?G??GGBR????G?GGGRG??G??G????GGG?G???RG?GG", "G???GG?GG?G?BGG??R??BG?G?BG???GG???G?G??RGGRGG?R??", "?G?GBG?????GGG?G?GGGRGG?G??BG??G??GG??GG?GGGG?G?GG", "G?GGG?GGG??GRGGG?G?G?G??GGG??BGG??GG?GG?GGG??????G", "BGG??G???G?GGBGB???GG??GG??GR???G??GG?G?B??GR?GG?G", "??G???G???GGG?BGG??G?G????G?G???G??GR?G???G???G?G?", "G??B?G?GGGGGB??G?GG?G??GGGG??GGG?GG??G??G?G?RGGRG?", "?????GG?R????GGG?R?GG?GRG?G?GGG???BGG?G???BGG?GGG?", "?G??G???G?GG?G?GG??G???G?GG??GGG?????G????GGG?BG?G", "?G??????B?GGGGR?G?GGG?GG?GGG??GG?G??R??R??G?GGBG?G", "GG???GG??G???G?G?G??R???GGGGGG?G????GGG??G??G?R?G?", "?GG?G???G?G?G?G?GR?GG?G??G?GGGGG?R?GR?GG?GGGBG????", "?BBG?GGGG?G?G?RG?GBG??RG?GGB?G?G?G?G???R??G???G?GG", "GG?GG??GG?GGGGG?R??GG?G????GRG?G?GG???GGGG?BG?BGBG", "??G?GG?GGG???G?G?GG?G?G???G?BG??????G?GGG??G?GGG??", "GGG??G?G?R???GGGG?????GG???????GG?G?GGG?GGRG????GG", "RGG??G?B??R????B????????B?G?GG?GGGGGGG?GGG?B?G???G", "?GBGGGGGG??GG??GG?RBG?GGR???G?GGG?????GGG?B?G???GG", "?GG??G?GG?G?GGG???GGG???G??G?G???G??GG??G??G?GGGG?", "RGG??BG??GG?GG??GGG?G?G?G?G??R???GGGGB?BG??GB?????", "RGG?GGG?GGG?GG?GGGGG?GR?G????G?G?GGGG???R??GGRG??G", "?G????G?GGG?G??G??G?GGG??GG???GGGG?????RG?BG??????", "GGG?G??GG?G?G?GG?GG????GGGR??GG?GG?GRGG???GG??GGGG", "?G??GG?GGGR?G??G?R??GG?GG?G??GGGG?????GGG??G?GBG?R", "G??GG?R?G??G?G?BBGG?R?G?GGG?????G???G??GG??GG??G??", "B?GRG?G?G????GGR???B?R?GRG?GG???G?G?GG?RGG????R?G?", "???G???GG??GG???GGRGB??GGR?GB?G??G?BG?G?GG??GG?GGG", "GG?BGGGG?G??G?GBG?GGGGGRGGG????GGG?G???G???G?R??GG", "BG?G????GGG??R??GG?G?GG??G?GG??GG?G?G?G????B??GG?B", "???RG?GGG?G??G??G??GRGGG?G?????G?GG???GGGGG??GGG??", "???G?GGG??G????R?G??G??BGG?GG??R?G??GG??????BGG??B", "??G?G?B?G???RG?GG?GG?????GG??G??B??GGG??GG???GG?R?", "GG?G?G??GR?GGG??????G?GGG?GGBG?RRG?GGGGGG?G??GGRG?", "GGG?GGGRB?B??GG?????B???GG?G???GGGGRBGG?G??GGGR?GG", "?G?????GG?GG??GGR?G?GGG?GGG?G?GGG??GG?B??GG?G???GG", "G??RGG?G?G?G??GR?????G??GGG???G?G?G????GGG????GGGG", "?G??GGGGGGG??B?G?G??GG??GG?B?GR?G?G?G?GGG????G?G??", "??G?G?GG?G??GG???G??G?RGGGGRG?R??GGGBG??G?G?G?G??G", "?G?GG???G?GGRB??GGGG?GGR??G?G?GG???GGRRG??R?????GG", "G?GGGGG???G?G??G?G?GGG?G???G?GGGGR?GGG??GR?GGG?GGG" };
        assertArrayEquals(new double[] { 0.0, 0.9986701130231087 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case122() {
        String[] board = {};
        assertArrayEquals(new double[] { 1.0, 0.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case123() {
        String[] board = {};
        assertArrayEquals(new double[] { 0.0, 0.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case124() {
        String[] board = { "RRRRRRGRRGRRRRRRRRGRRRRRRRRRRRRRRRRRRGRRRRRRRRRGRR", "RRRRRRRRRRRRGRRRRRGRRRRRRRRRRRRRGRRRRRRRRRRRRRRRRR", "RRRRRRRRRRGRRRRRRRRGRRRRRRRRRGGRRRRGRRRRRRRRRRRRRR", "RRRRRRGRRRRRRRRRGRRRRRRRRRGRRRRGRRRRRRRRRRRRRRGRRR", "RRGRRRRRRRGRRGRRRRRGRGRRRRRRRRRRRRRRGRRRRRRRRGRRRR", "RRRGRRRRRRRRRRRRRRRRRRRRRRRRGRGRRRRRRRRRGRRGRRRGRR", "RRRRRRRRRRRRRRRGRRRGGRRRRGRRRGRRRRRRRRRRRRRRRRRRRR", "RRRRRRRRRRGRRGRRGRRRRRRRRRRRRRGRRRRRRRRRRRRRGRRRRR", "RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRGRGRGRRRRRRRRRRRRR", "RRRGRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRGGRRRRRRRRR", "RRRGRRRRRRRRRRRRRRRRRRRRRRRGRGRGRRRRRRRRGRRRRRRRRR", "RRRRRRRRGRRGRGRRRRRRRRRRGRRRRRGRRRRRRRRRRRGGRRRGRR", "RRRRGRRRRRRRGRRRRRGRRRRRRRRRRRRRRRRRRRRRRGRRRRRRRR", "GRRRRRRRRGRRRRRRRRRGRRRRRGRRRRRRRRRGRRRRRRRRRRRRRR", "RRRRRGRRRRRRRRRRRRRRRRRRRRRRRRRGRRRRRRGRRGRGRRRRRR", "RRRRRRRRRRRRRRRRRRRRRRGRRRRRRRRRGRRRRRRRRRRRRRRRRR", "RRRRRRRGRRRRRRRRRRRRRRRRRRRRRRRRGRRGRRRRRRRRRRRRRR", "RRRRRRRRGRRRRRRGRRRRRRRRRRRRRRRRRRRRGRGGGRRRRRRRRR", "RRRRRGRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRGRRR", "RRGRRRGRRRRRGRGRRRRRRRRRRRGRRRRRRRRRRRRRRGRRRRRRRR", "GRGRRRRRGRRRRRRRRRRRRRRRRRRGRRRRRRRRGRRRRRRRRRRGRR", "RGRGRRGRRRRRRRRRRRRRRRRRRRRRRRRGRRRRRRRRRRRRRRGRRR", "GRRRRRRRRRRRGRRRRRRRRRRRRRRGRRRRRRGRRRRRRGRRRRRRGR", "GRRRRRGRRGGRRRGRRRRRRRGRRRGRRRRRRRRGRRRRRRRRRRGRRR", "RRRRRRRRRRGRRRRRRGRRRRRRRRRRRGRGRRRRRRGRRRRRRRGRRR", "RRRRRGRGRRRRRRGRRRRRRRRRRRRRRRRRRRRRRRRGRRGRRRRRRR", "RGRRRRRRRRRRGRRRRRRRRRRRRRRRRGRRGRRRRRRRRRRRRRRRGR", "RRRRRRRGRRRRRRRRRRRRRRRRGRGRRRRGGRRRRRRRRRRRRRRRRG", "RRRRRRRRRRGRRGRRRRRRRRRGRRRRRRRRRRRRRRRRRRRRGRGRRR", "RRRRRRRGRGRRRRRRRRRRRRRRRRRRRRGRRRRRRGRRRRRRRRRRRR", "RRRRRRRRRRRRRGRRRGRGRRRRRRRGRRRRRRRRRRRRRRRRRRGRRR", "RRRRGRRRRRGRRRRRGRRRRRGRRRRRRGRRRRRRRRRRRRRRRRRRRR", "RRRRGRRRRRRRRRRRRRRRRRRGRRRRRRGRRRRRRRRRRGRGRRRRRG", "RRRRRRRRRRRRRRRRRGRRRRRRRRRRRGRRRRRRRRGRRRRRGRRRRR", "RGRRRGRRRRGRRRRRRRRRRRRRRRRRGRRRRRRGRRGRRGRRRGRRRR", "RRRRRRGRGRRRRRRRRRRRRRRRRGGRRRRRRRRRRRRRRRRRRRRRRR", "GRRGRRRRGRRGRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR", "RRRRRRRRRRRRGRRRRRRRRRRRRRRRRRRRRGRRRRRGRRRGRRRRRG", "RRRGGRRRRRRRRRRGRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR", "GRRRRRRRRRGGRGRRRRRRRRRRRRRRRRGRGRRRGGRRRRRRRRRRRR", "RRRRGRRRRRGRGRRRRRRRRRGGRRRRRRRRRRGRRRRRRRRGRRRRRR", "RRRGRRRRRRRRRRRRGRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRGR", "RRRGRRRRRRRRRRRRRRRRRRRRRGRRRRRRRRRRRGRRRRRGGRRRRR", "RGRRRRRRRRRRRRRGGRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR", "RRRRRRRRRRRRGRRRRRRRGRRRRRRRRRRRRRRRRRGRRRRRRGRRRR", "RRGRRRRRRGRRGRRRRRRRRRGRRRRRRRRRRRRGRRRRRRRRRRRRRR", "RRRRRRRRRRRRRRRRRRRGRRRGRRRRRRRRRRRRRRRRRRRRGRRRRR", "RRRRRRRRRRRRRRRRRRGRRRRRGRRRGRRRRRRRRRGRRRRRRRRGRR", "RRRRRRRRRRRGRGRRRRRRGRRRRRRRRRRRRRRRRRRRRRGRRRRRRR", "RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRGRRRRRRRGRRGRRRRRRR" };
        assertArrayEquals(new double[] { 0.0, 0.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case125() {
        String[] board = {};
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case126() {
        String[] board = { "RRBBBBRRRRRRRBRRRBBBRBBRRBRRRBBRRBBBRRBRRBBBRBBRRR", "RRBRBBBRRRBBBRBRRBRRRBBRRRRBRRRRBRBRRRRBRRRRBRBRRR", "BRBRRRRRRRRRRBBRRRRRRRRRRRRBBBBRRRBBBRBBRRRRRRBRBR", "RRRRRRRBRRRRBRRRBBRBRBRRRRRRRRBRRRBRRBBBBBRRBRBRRR", "RRBRBBBBRRRRBRRBRRRBRRRRRRBRRRRBRBBRRRBRRBRBRRRRRR", "RRBRRBRRRBRRBRRBRRRRRBBBBRBBRRRRRBBRBRBBBBBRBRRBRR", "RBRRRBRRRRBBBRBRRBRRRBRRRRRBRRRRBBBRRBRBRRRRBRBRBB", "RRBRBRBBRRRBRRBRRBRRRRBBRRRRRRBRBRBBBRRBRRRBRRRBBR", "RBBRRBRBRBBRRBRRRRBRRBRBRRRRBRRRBBRRRBRRBRRRBRRRBR", "RBBRBRRRBBBRBRRBRRRBBRBRBRRRBRRBBRBRRRRRRBBRRRRRRB", "RBBRRRBRRRBBRRRRRBRRRRRRRBBRBRBBRBRRBRBBBRBRBBRBBB", "BRRRRRRRBRRRRRRRRRRRBRRRRRRRRBBRRRRRRBRRRRRBRBRRRB", "BRRRRRRRRRBRBRBRRRRRBBRRRRRRBRRRBRRRRRRRRRRBRBBRRB", "RRRRRRRBRBRRRBRBRRRRRBRRRRRRRRBRRBRRRRRRRRRBBRRBRR", "BRBRRRRBRRBBRBRRRRRRRBBRRBBRRBBRRRRRBRRRRRRBRRRBRR", "RBBRRRBBRBRRBBRRRRBRRRRRRBRRRBRRBRRBBRRRBRBBRRRRBR", "BRBBRRBRRBBRBRRBRBRBRBRRRRBBRBBRBRBBRRRRRBBRRRBRRR", "RBRRBRBBRBRRBBBRRRBRRRBBRRRRBRRRRRRBRRRRBRRRBRRBRB", "BRRBRRBRRBBBRBRRBRRBRRRRRBRRBRBRBRRBRBBRRRRRBRRRRR", "BRBRBRBBBBRRRRRRBRRRBRRBBBRRRRBRRRRRRBRRRBBRRRRRBR", "RRRRRRRRRRBBRRBRBRRBRRRRRRRRRRRBBRBRBBBBRBRBRBRRRR", "RRBRRRBRRRRRRRRRRBRRRRRRBRRRBRRRRRRBBRBRRRRRRRRBBR", "RRBRRRRRBRBBBRBRRRRRRRRRRRRBRRRBRBRBRBRRRRRRRRRBRB", "BRRBBBBRRRRRRRBRRRRRBRRRRRRRRRRRBRBRRBRBRRRRBBRBRB", "RBBRRRRRRRRBBRRBRBRRRRRRRRBBRBBBRRRBRRRRRBRRRRBRRR", "BRRRRBRRBRBRBRBRRRRBBBRRBRBBRRRRRRRBBRBBBRBBBBBBRR", "RRRBRRRRBRBRBBBBBRBBRBRRRBRRRRRRBRRRBRRRRBBRRRRRRR", "RRRRRRRBBRBRRRRRRRRRRRRBRRRRRRRBBRRBBBBRRRRRRBRRRR", "RRRRRRRBRBBBRRRRRRRRRBRRBRRRRRRBRRBBRRBBRRRRRRRRRR", "BRRRRRRRRRBRRRBRBRRRRBRRRBBRBRBRRRRRRRRRRRRRRRBBBB", "RRRRRRRBRRRRRRRRRBRRBRBRRRBRRBRRRRRRRRRRBRBBBRBBRB", "RRRRRRBBBRBBBBRBBBBBRRRBBRRBRBBBBRRRBBBRRRRRRRRBRR", "RRRBRRRBRRRRBRRRRRRRRRRBRRRRBBRRRRRBRRRRBRRRRBBRRR", "RRRRBBBRRRRRRBRRBBRBRBRBRRBBRBBRRBRRRRBRRRBBRRRBRR", "RRRBRBRRRRRRBBRBRRRRRRRRRRBRRRRRRRRRRRRRRRRRBRBRRR", "RRBRRBRRRRRRRBRRRRBRRBRBRBRRRBRBRRBRRRRRBBRRBRRBRR", "RBRRBRRRRRBBRRRRRBBRRRRRRBBBRRRRRRRRRRRRRBBRRRBRRB", "BRBRRRRRRRBRRBBBBRRRRBRRBRBRBRRRRRRRBRRBBRRRRBRBBR", "RRRRRRBRBRRRRBRRBBRRBRRRRBRRRRBRBRBRRRRBRRBBRBBRRR", "RRBBRRRBRBRRBBRRRRRRRRRRRBBBRBBRRBBBBBBRRRRBBRBRRR", "BBRBRBRRRRRRBRBRRRBRRRBRBRBBRRRRRRRRRRBBRRRRBRBRRB", "RBRRRBBRRRRRRBRRRRBRRRRRBRRBRBRRRRRRRBRRRRRRRBRRRB", "RRRRBBRBRRBBRBBRBBBRRBRRRRRRBRRRBRBBRRRRBRRBBRRBBB", "BRBRRRRBRBRRRRRBRBRBRBRRBBRRRRBRRRBBBRRRRRRRRBRRRB", "BRRRBRRRBRRBRRRBRRBBRRRRBRRBRRRRRRRBRBBRRRBBBRRRRR", "BBBRRRRRRBRBRBRRBRBRRRRRBRRRRRRRRRRRBRRRBRBBRBBRRB", "RRBRRRRBRRRRBRBRRRRRRRRRBRRRRRRRBRBBRRRRBBRRRRRBRB", "RRRRRBRBRRRBRBBRRRBRBBRRRRBRBRBRBRBRRRBRRRRRRBRBRR", "RRRBRRRRRRBRBRRBBBRRBBBRBRRBRBRRRRRRRRBRRRRRRRRBRB", "RBRRRRRBRBBBRRBRBRBRRRRBBBRBRRRBRRRRRRRRRRRRRRRRRR" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case127() {
        String[] board = { "BBBBGBGBBBBBGGBBBBBGBBBBBBBBBGGBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBBBBGBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBGBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBGBB", "GBBBBBGBBBBBBBGBBBBBBBBBBBBBBBBGGBBBBBBGBBBBGBBGBB", "GBBBBBBBBBBBBBBGBBBBBBGBBBGBBBBBBBBBGBBBBBGGBBBBBB", "BBBGBGBBBBGBBBBBBBBBBBBBBBBBBBBBGBGGBBBBGBBBBBBBBG", "BBBGBBBBBBBBBBBBBBBBBBBBBBBBBBBBBGBBGBBBBBBBBBBBBB", "BBBBGBGBGBBBBBBBBBBBGBBBBBBBBBBBBBBBBBBBBGBBBBBBBB", "BGBBBBBBBBBBBBBBBBBBBBBBBBBGBBBBBBBBBBBBBBBGBBBBBB", "BBBBGGBBBBGBBBBBBBBBBBBBBBGBGBBBBBBBGBBBBBBBBBBBBB", "BBGBBBBBBBBGBBBBGGGBBBGBGBBBBGBBBBBBGBBGBBBBBBBBBB", "BGBGBBBBBBBBBGBBBBBBBBBBBBBBBBGBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBGBBBBBBGBBBBBBGBBBBBBBGBGBBBBBBBBBB", "BBBBBGGBBBBBBBBBGBGGBGBBBBBBBBBBBBBBBBBBBBGBBBBBBG", "BBGBGBBBBBGGBBBBBBBBBBBBBGBBBBBBBBBBBBBGBBBBBBBBBB", "BBBBBGBGBBBBGBBBBBBBBBBBBBBBBBGBBBBBGBBBBBGBBBBGBB", "BBBBBBBBBBBBBBBBBBBBBBBGGBBBBBBBGBGBBBBBBBBBBGBBBB", "BBBBGBBBGGBBBBBBBBBBBBGGBBBBBBBBBBGBBBBBBBGBBBBBBB", "BGBBBBBBBBBBBGBBBBBBBGBBBBGBGBGBBBBBGBBBGBBBBBBBGB", "BBGBBBBBBBGBBBBBBBBBBBBGBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBGBBBGBBBBBBBBBBBBBBBBBBBBBBBBBBBGBBGBG", "BBGBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBGBBBGBBBBBG", "BBBBBBBBBBBBBGBBBBBBBGBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBGBBBBBBBBBBBBBBBBBBBGBBBBBBBBBBBBGBBBBBBBBBBBBB", "BBBBBBBGBBBGBBGBBBBBBGBBBGBBBBBBBBBBBBBBBGBBBBGBBB", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBGBBBBBBGBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBBBBGBGBBBBBGBBBBBBBBBBBBBBBBBBBB", "BBGBBBGBGBBBBBBBBGBBBBBBBGBBBGBGBBBBBBBBBBBBBBBBGB", "BBBGBBBBBBGBBGBGGBBBBBBBBBBBBBBBBBBBBBBBBGBBBBBBBB", "BBBGBBBBBBBBBBBBBBGBBBBBBBBBBBBBBBBBBGBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBGBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBGBBBBBGBBBGBBBBBBBBGBBBBBBBBBBBB", "BBBBBBGBBBBBBGBGBBGBBBBBBBBBBBGBBBBBBGBBBBGBBBBBBB", "BBGBBBBBGBBGBBGBBGBGBGBBBBBBGBBBBGGBBBBBBBBBBBBBGB", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBGBBBBBBGBBG", "BBBGBBBBBBBBBBBBBGBBBBBBBBBBBBBBBBBGBBBBBBBBBBGGBB", "BBBBBBBBBGBBBBBGBBBBBBBBBBBBBBBBBBBBBGGGBBGBBBBBGB", "BBBBBBGBBBBBBBBBBBBBBBBBBBGBBBBBGBGBBBBBBBBGBBGBBB", "BBBBBBBBBBBBBBBBBBBBBGBBGBBBBBBBBBGBBBBBBBBBBBBBGB", "GBGBBBBBBGBBBBBBBBBGBBBBBBBBGGBBBBBBBBBBBBBBBBBBBG", "BBBBBBBBBBBBBBBBBBBBBBGBBGBBBBBBBBBBBBBBBBBBGBBBBB", "GBBBGBBGBBBBBBGBGBBBGBBBBBBBBBBGBBBGBBBBGBBGBBBBBB", "BBBBBBBBBBBBBBBBBGBBBGGBBBGBBBBBBBGBBBGBBBBGGBGBBB", "BBBBBBBGBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBGGBB", "BBBBBBBBBBGBBBGBBBGBBBGGBBBGBBBGGBBBBBBBBBBBBBGBBB", "BBBBBBGBBBGBGBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "GBBBBBBBGGBBBBBBBBBBBBBBGBBBBBBGGBGBBBGBBBBBBBBBBB", "BBBBBBGBBBBBBBBBBBBBBBBBBBBBBBBBBBGBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBGBGBBBGGBBBBBBBBBBBBBGBBBBBBBBGBB", "BBBBBGBBBBBBBBGBBBBBBBGBBGBBBBBBBBBBBBBBBBBBBBBBBB" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case128() {
        String[] board = { "BGGRBBBGRGRBGGRGGGBRRBGBBGGBGBGBGGGGGBGRBBBGBBRRBG", "BBBGBRBBBGGGGGRBGGBBBGGBRGGBBRRGBRGGRGGRGGBGBBGGGB", "RGBGGRRBBGGGGGRRRBGBBBRGGBGRRRBGGBBRGBGGGBRGGGBGRB", "RGGBGGBGGGBGGBRBRGGBBGBGRBGGRGGGRBGRGRRBGGBGGBRBGB", "GGGBBBBGBGBBGGGBGRGGRGBRGGGBBGGGGGGRRGGGBBBGBRRGBB", "RRBRBBGRRGGBGBBGGGGGBGGBRBGGGRBBGRGGRGBGGGGGBRBGGB", "RGBBBGGGGBRRRRGGGBBGRBGBBGGRRGGBGGGBBBBRRGRGBGGRRB", "RRGRRRBGGRGGBGRGBGBGBRRBGBGGGBGRBBGRRGRGRGRGGGRBGR", "GBRGGRBBBBRRGRBGBGRRBGBRGGGBBGRRRGBBGRBGGGGGGGBRGG", "GBRGBBGRGGGGBBGRBGBBGGGGGBRRBBGGBGGGGBGRBBBGRGRBGG", "RGGRBBBBBBGRBRGBGRGBGBBRRGBGRRGBRBRGBBBGGGGGGRBGGG", "RRGRBRGRRRRBBRGGGBGBRGRRBGBRRGGBGBBGGRBGGGBGGGGBGG", "GBGGGRGBGGRBGGBGGBGBBRGGGGGBGGGGBGBGBGBBRBGBBBRBBB", "GGGBBRRGGGRBGRGBGBGBBGGGGBBGBBGBBRRGGRRBRBGBRBGGGR", "RBRGGBBGGRBGGRGRGBBBBRGGGBBGGGGBBGBBGBGBGGRGRGGBGG", "GGGBGGRBRRBGGGBGGRGGGRBBGBRGGRGRGRBBRGGBBGGGBRGGBR", "BRGBGGGBBGBRBBBBGRGBBGBGGBGGRBRBBRBBRGBBGGGBBBGBGR", "BGBGBRGRRBBBRBGBRGRBRGGGGBGBGGGBGGGGBBRBBRBGBRBRGG", "RBGGGRBBRBGBRBBBGGBGBGBGGRRRGGBGGBGBGRBGBGBBGGRBGB", "GGRBBRRGGGGGBGGGBRGBBBRGRBGGGGGBGGGBBBBGBRRRGGBBGB", "BGBRRGGBBBBGGBRBGGGBGRRBGBGGBBGGGBGBBGRRGBGBBRBGBB", "BBRBBBBBGBGBBBRGBBGRGGGBRGGBRBGGRGGRGRRGBBRRGBGGRR", "GGBGRRGBBBBGRGBBRBGRRBRGBGGBGBRGBGBGBGRRBGBBBBBRRG", "GGRBBBRBBGBBBGGBBGRGGBRGGRRRRBBBGGGBGGBRGBRRGBGRGB", "GBBGGBBRGBRGGBGBBBGGBGBBBBRBBBBGRBBBBRRGGRRGGGBBGG", "RBBRGRGGBGBGBBRGBRRRGBGGBGGGRGBGRBBGGBBRGGGGBBGBRG", "GRRRBGBBBBGGGRGGBBRGGGGGBGGGBBGGGGRBGGGGGBGGGGBBRG", "GGGRGBGBGRRGBGGGBBGRGRGBGBBBRRGGGBBGBGGGBRRGGBGRBB", "RBGBRGBGBGBGBBGRGRGBRBGGGRBBGGRRBBGGRGGGGGGRRGRBGB", "BGBRGBGGGBBRBBRBBBRBBGGGGBRBGGBGRBBBBBRGGGGGGRGGGR", "BGBRRBRGRBGRRRGRGGBGGBGGGGGBRGBGBGBBRBGRBRBGBGGGRR", "BGBBGGGGBGGRGBGBRBGBRGBGGBGGGGBGGBGBGRRGRBGGRBGBGB", "GRRGRGBGGGRBBBRRGBGBGBGGGGBGBBRGRGGBGBGBBRGBBBGGGG", "BRGGGRGRBGBRBBBGGGBGGGBGRBBGGBRBGRGGBGGBRGRGGBRRGG", "RGBRGBGBGRBGBRGGGGGGBRBGBGRGGGBGRGGGBGGGGGRGGGBGGG", "GGGGBGGGGGGGGGRRBGBGRBBGGGBBGBRBGGRRRGBBBGGGGGGBRG", "BGGRBRGGBGBGBGRGRGBGGGBBRRBRGBRGGRBRGGGBGBGBBBBGGR", "BGGGGBRRGGRBBBGBGGGGRGGGBRGRGBGBGGGBGBGGGBBGBBGGGR", "GBBBBRBBRGBRBRGRGGGBRGGGGRGGRRGRBBGGBBBGGRGGBBBGGB", "RBRRBGGGBBBRGBBBGRBGGRBBBGRGBBGGGRBRRGRRRBGGGGRGGB", "GRRGBGGBBBRBGGBRRGBGRBBRGBGBBGGBRRGRGGBGBGGBGGRBGG", "GGBBBBGGGBRGBRGGBBBGGBBGGGBGBGBBGGBGGBGGRRBGRBGGBR", "GGGBGGGGGGGBRRBGRRBGRBBGRGBRGRGGGGRRBBGGGGBGBGGBGB", "GBRRGBGGGGGGRBGGRGBBBRGBRBRGBGGBRGRRGGRRRGBRBBBGRG", "RGGBBBRBGRGGGGGGGGGGBBRGGBGGGRBRGGRGBRGBGGGGRGBGGG", "GGBGGBGBRRBGBRGGRBGBGRGGRRGGRBGBGBRGGBBGGGRGBGGGGR", "BGBGBRGGBBBGGRGRGBGBBGBBRGBGBGGRGBRBBBGBRGGGRGRBGR", "GGGGGBBBGBGGRGBRBGRBBGBGBBBGRGGGGGBGGBRBGGRBGBBGGG", "BGBBBBRBRBGBBBGBBGBBBGGBGGBBGGGRGBRRGGBBGBGRGGRGGR", "RGGGBBGGRRBGGRRGRRGGRGRBGGGRRRGGGRGGGRBGGBBBBGGBRG" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case129() {
        String[] board = {};
        assertArrayEquals(new double[] { 0.0, 0.9999999215835741 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case130() {
        String[] board = {};
        assertArrayEquals(new double[] { 0.0, 0.9999989606026343 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case131() {
        String[] board = { "GG??GGGGGGG??G?G?GG???G?G?G????GGG??G?GGGGGGGGGGG?", "?GG???GGG?GGG??G?GG?GG?GGGG?G?GGGG?GG?G?G???GG?G??", "GGGG???GGGGG?GGG??GG??G??GGG?GGGGG???GG?G?GG???G??", "GG?G?GGGG?????GG?????G??GG?G?GG?GGG?GG?G?????G?GGG", "GGG?G?GGGG??GGG??????GGG?G??G?G?G??GGGG?G?G?G?G??G", "G??GG?G?G??G?GG??G?GG?G?G??GGG?GG??GGGGG?GGG??????", "GGGGGG??????GG????GG?G??GGG?GGG?G?G???GG?G??GGGGG?", "G?G?GGGGG?GGGG?GGG?G??GGGG?GG??GG?G??GGGGGGGGG??GG", "GGGG??G??GG?GGG?G?GG?G?G??GGGGG???G?G???GG??GGG??G", "??G?G?GGGGGG??GGG?G??GGG?G??GGGGG??G??GGG?GGGG????", "??G????G??G????G?GG???GG??GG???G?GGGG??G???G?GG?GG", "GG??G???GGG??G??G??GG?G?G????GG???GGGG??GG?G??GGG?", "GG??G?GGGG?GG?G??G?GGG??G???G?G?G?G?GG?GG?G??GGG??", "???G?GGGGG?G?G?GGGGG?GG?G?GG??G??GGG???G??G?G???GG", "?GG?G?G?GG?GGG?GG??G?G?G??GGGGG?G?GGGGG?GG?GGG??G?", "G?G?G???GG???G??GGGG???G?G?G?GG??G?GG?GG?GG???G???", "GGG??GGG?GGG??GGGGGGG?G?GG??GGGGGG??GGG??G?GGG?GG?", "?GG??GGGGGG?G?GG?????G?G?G????????GG??GGGGG??G?G??", "G?G?G??GGGG?G??G???G?G?G?G?GGGG?GG?GG?GG?GG????GGG", "G?GGG?GGG???GG???G?GGGGGGG??GG??GGGG?G?GGG?GGGG???", "GGGGG?GGGGGG?G???G????GGG?GG?G??GGG????G???G?GGGGG", "???G???G?GGG?G?GGG?G?G??GGGG?GG???????G??G?G????GG", "GGG???GG?G?GG??GGG??G??G?GGG?G?GGG??GG?GG?GGGGGGG?", "GG??GGG?GGGG?GG????G?G?GG??GGGGG?GG???GG??????GG??", "???G??G?GG??GGG??GGG??G??G???G???G?GGGG??GGGGG?G?G", "GG???G??GG?GG?GG?G?GGGG??GG??GGGG??GG?G????G?G?G??", "??GGGG??GGG?GGGGGGGGG?????G??GGGG?G?G?GGG?GG??GGGG", "G?GGGG??G?????GG?GG?GGGG?GGGG?????G??G?G??GG??GG?G", "G?GGG??GGGG??GG???GG?GG?G?GGGG??????G?G??????GG?GG", "?G?GGGGGG??GGG?G?G???????G??G??GGG?GGGGG??G?G??GG?", "?G?GG?GG??G?GG?G??????G?GGGGGG?GGGGG?GGGGGG??GGG?G", "???GG?G?GGGGGG?G?G???G???G?GG?G??G?GGG?GGGG?G?GGGG", "G?G???G?GG?G?GGG???G??G?GGG???GG?G?GGGGGG?GGGG?G?G", "??GGG??GGGGGG???GGGG???GG???G?G??GG??G???G?GG?GGGG", "G??GG?G?GGG?GGG?GG????G??G?GG?GGGG?G?GGGGGGG??GG?G", "GGG?G?????GG?G?????????GGGG??G?G?G?GGGGGGGGG?G?GGG", "GG?G?GGG?G?G??GGGG?GGG?GGGG?GGG?GGGG?GG?GG?GGG?G?G", "?GGGG??G?G??G?GGGG?GGG?G?G?G?G???G??G?GGGGG?GGG??G", "G??G?GGGGGGGG?GG?GG??GG?G???GGG?GG??GGGG???GGGGG??", "GGGG?GG?G?G???GGGGGG?G?G??G?G??G???GGG???G?????G?G", "?GG?GGGGGGGGGGG?G?GG?G?GG?GGGGGGG?G?GG?GG?G???G???", "GGGG??GGGGG???GG?GG?G???????GG?GGGG?GG??G??G???GGG", "??G??GGG??GGG???GG?GGGG?G??GG????GGG???GGGGGG?GGG?", "?G?????GGG?GGG?GG?GGGGG?G??GG?G??GGGG??G?????GGG?G", "?GG????GGGGGGGGGG????G?GGGG???GG??GG??G?GGG???G??G", "?GG?G???G??GGGGGGGGGGG?GGGG??GGG??????GGGGGGGG?G?G", "?GG??GG?G?GG?????GGGGG????GGGGGG?GG??GG??G?G????GG", "???GG?G????G?GG?G?G??GG??GG???G???GGGGGGGG??G?GGG?", "??G??G??G???GG???GG??GG??G?G?GGGG?GGGGGG?G??GGGGGG", "GG?GG?G?G??G?GG??G?G?GGGG??G??G??GGGG?G?GGGGGGGG??" };
        assertArrayEquals(new double[] { 0.0, 0.9848161777902571 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case132() {
        String[] board = { "????GRR???R?RR?????R?R????RRRRRRR?R??R??GR??R?RGR?", "GRRR?RG?G???GR??????RR??R?R?RR?G?R????G??RR?R??RR?", "?RR???RR?R?G?R???R???R????R?R??????RR?R??R???????G", "GR??RR?RRR?RR???????GR???????RRR??GG?R?RR?R?RR?R?G", "?RG??RRR?RRR???RRRRR?G?R??????GRRR???RRG????R?????", "??R???R?R?G???RR??R?G????RG?GRRR??G??RR?GRR??R?RRG", "??G?RRR?G??RRR?RRR????R??????R?????????RR??G??????", "?R??R?RGR??R????GR???R??RR????GRR??RRR??R??RR?GRRR", "?GR?R?RRR?R?R?RR?GR???R?G???RRGRG?R????????RGRG???", "?RR???????R????R?GR?R?RRGR?R?R?R?R??G????R?R??????", "???G??R??GR??RG???G?G?RR?RGRR????RRRRRRRR??RR?R?R?", "?R????R?R?G?R??G?G?R?R?R???R??R??RRRG???G???RR?R??", "RR?RR?RR?R????RR?RR?????R??RG?GGRG?R?GRR???R??R???", "?????R?????R?RRGRGRR??R???R??????GR?R????????RR??R", "?GR??R????RG?R?G?GRG??R??GR????????RRRR?R?G?GG????", "??R?R???R???R?RRR?R???RR??R?R??RRR???R??R??G???RRR", "R??RG?R????R?R??G??RR???G?R?R??RR??R?????R??G?GR??", "?RRG?????????RR?RRRR???R???RR????R?RR??RRR??R??R??", "????R?R?R???RR?GRRR?RR???RR??GRR??RR?RRR?R?GR???RR", "R???R?R????RR?R?RR???R?RG???RR?R?R????RR?RR???G??R", "?R?R??R?R??RG??G?RR?R??R?R???R?R?R??R??GRRG??R??RR", "?RRR?RR??R?R???RG?R?RRR??R??RRR?RR?R?GR???G????R??", "??RR?????R????R???????G?RGR?RGRR?R???R?R?RRRG?????", "R?????RGG?RR?R?RRG?RR????????R???G?R???RR???R??R?R", "RRRRG???????RG??RRRR??RRR??????R??RRR??G?R????RRR?", "G?R??R?RR????RR??G??R?RRR???G???????RRGRR???GR????", "GRGRR????R?G?R??R??RR???R?GR??GRR?R?RRRRRRR?R?R??R", "?????RR??R??R?RR?RR?RR?RRRGG?R???R???RRRR?R??R???G", "??RR?RRRG??RRR???????RG??RR??RR?R?RR?R?RR?R??R??R?", "?R????R??R?????R???????R??R??RRR?GRRRGR?????????R?", "?RR?????RRR????RRRG??RR??R??RR??RGRG?R??G?R?R??RRR", "?G??RR?R??RGR?R?R????RRR??GGRR??GR???????R????????", "??GRRR?RR??GGR???RRRGR?RR?RRRRR?GR??RRRRRRR??R?R?R", "?R?RR???RR?G??????GRRG??????RR????RGRRG????RRRR?RR", "?G?????RRR??????R??RRG?R???RRG???GR???RR?G?R????R?", "RGRR?R??R???????R?R???R?R???G?RG?R?G??R?GRR?R?R??R", "?????G???RR?????R???RR?????R?R?RRRR??RRR???G???RR?", "R?RG?R?R????RR?R?????RGR?R?R?GG?RGRR???RG???G????R", "RRR??RR??R?R?R???????R?GG????RG?RRG???R?R?G?RGR?R?", "G??????????RR??R?RRRRR?RR?R???G??R?????R??????????", "??RR?G?R?R???R?G?R?RGRRRGRG??G?R??GRG?R????GR????R", "RRR?RR?R?G????RRR?G????RRRR?R?R????R???R??RR????RR", "???R?R?RR?R????R???????G?RRRRR?R????RR?RG?GRRRGRR?", "G???????R?RRRRRR??RRRR?G???RRR??RRR??R??G?RR?R?RG?", "?RRRRR?G?RR???RR???????GRR?G?RRR?RRRR?R?R?GRG????R", "??R??R?R?????R?GR??GR???R??????G???RRRR????R?????R", "RRR?R?R??R??????R???RRR??R???RRRR??RR?????R?R?????", "????R???RR?RRR????RR?R??RRR??RR?R?R?RR??RRRRGRR?R?", "G?R??RG??R???RRR?RRRR?RRR?R??RRR?RRR?????R?R?R?R?R", "GG?R?RR?R?RG??R??R?GRRRR?RR?G???R?RRR??RR???GR????" };
        assertArrayEquals(new double[] { 1.6653345369377348e-15, 0.997818334243419 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case133() {
        String[] board = {};
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case134() {
        String[] board = { "BB?B?BBBBBBBBBRBB?BBBBBB?BBRRBBBBBBB?B?BBRRB?BBBB?", "B??BBB?BBBBB?BBRBBBB??BBR?BB?B??B?B?BR?BBBBBBBBB?B", "BBBBBBB??BB?BBBBB?BBB??BBR??BB?B?BBB?BB?B?BBBBBBBB", "B?B?????BBBRBBBBB?BB??B?RBBB?RB?BBBBBB?BBBRB??B?BB", "?BB?BRBB?BBBBB??BB?BBBBRBBBB??B?BBBR?BRBB??BBR?BBB", "BBBBBBRBBBB?B?BBBB???BBBB?BBBB?BBB?BBB?BB?BRBB??B?", "BBB?BB?B?BB?BB??B??BBBBBB?BRBB?RRBBB??BB?B?RBB?B?B", "?BB?BBBB??RBBBB?BB?BBB?BBBBBBB?BBB?BBBBRBB?BBB?BBB", "B?BBB?BRBBBBB?BB??BBBBBBBBBBBBBBBBB?BBB?BRRBBBB?BB", "BB?B?BBBB?BB?BR?BRB?BBBBBB?B?BB??B??R?BR?BBR?BRBB?", "?BBBBR?B??BBBBBB??BBBBB?BBRRBBBB?BBB?BB??B??B?BBB?", "B?BBB?BRBRBBR??BBR?B?BBBB?BBRBBBBRB?BB?B?B?B?B?BRB", "RR?B???B?BBB???BB?B?B?B?BBR?BB??B?BR?BBBBBBBBB?BBB", "BBR?RB?BB???BB?BBB?BB?BBBBB??B??BBBB?B?BB?BRB?BB??", "?B?BB?BB?B?BB????BB?BBR???BBBBBBBB?BBB?BR?BBBBB?BR", "BB??BB??BBBBBB?BBBBBBBRBBB???BBBBBBBBB??B????BB?BB", "B??BBBB?BB?BBBBBB?R?BBB?BBBBR?BB??B?BBBB????BBBB??", "BB?????BBBBBB?BBRBB?B?BBRB?BRBB?BBBB??BBBB??BB????", "BB?RBBBB??B?RBBBRB??B?BB?BBBBBBBBBBBBB??BBBBB?BBB?", "B?BRBBB???BBRB??BB?BB?BBRBBB?BBRBBBBBBBBBBBBBB??BB", "B?BBBBB?B?B?BBBBB?BBBBR??BBB?BBBB??BB??BRBRBBBR?BB", "BBBRBBR?BBBB?BBBB?BBBB?BBBBRBBBRBB?BBR?BB?BBBBB?BR", "B?B?BBBBBB?BBBRBRB?BB?B??BBBB?BR?BRBB?BBBB?BB??BBB", "B?B?B???BB?BR?BBB?BBBB?B??BBBBBBBBBBB?B??BBB?BBB?B", "RBBBBBBBBRBRRB??BBBB?BBBR?BBB?BBRRBBBBBR?BBBB?BR?B", "BBBBBBBBBBBBBBBBBBBB?B??B???BBB?BBBB?BBBR?R??BB?BB", "BBBBBBBBB?BBBBB??BB??BRB???BBBB??BBB??B?BBBBB??BRB", "BBRBBR??BBBBBBBBBBB?BB?BRBB?BBBBB????R?BBBR?R???RB", "RBRBBBBR?BBBB?BBB?BBBRB???RB??BBBBBB?BB????B?BBBBB", "?BBBBB?BBBBB?RBBBRBBB??BBB?BB?B???BB?B???BBRBBB?B?", "??BBBBB???BBBBBBBBR?BBR?BBBBBBBBBBBBBB?BB?BBB?BBBB", "RRBBR?RBB??BB?BBBBBBB?RBR?B?B?BB?BBBBB?B?BBBB?BB?B", "BBRB?B?BBBBBBBBBBBRBB?RBB?B?B?BBBRB??BB?BBB??RB??B", "BBBBB?BBBB?RB?R??BBB?BBBB??RBB?BBB?BB???BBRBBB?BBB", "B???BBBBBBBBBBBBB?R?BBBB??BBRBB?BRB?BBB?B??B?BB??R", "BBBBBB?B?BBBBBBBB???BRB?B?BBB?BBBB?BBB??BBB?BB?B?B", "BBB??BRBBBBBBBBBBRBBRBB?RRBR??BBBB?BBBB??B?B?BB?BB", "B?BBBB??BBB?R??BBB?BBBBRB??BBBBBR?B?B???BBB???BBRB", "BBBB?BBBBBBBBBBRBRBBBRBBB?B?B???BBB?BBB?BBBBBBBBB?", "BBBBBBB?RBBB?BBBBBB?B??BBBBBBB?BB?B?B?B??BBBBRBB??", "BR?BBB?BBBB??BB?BBBRBBB?BB?B?BB?B??B?BBBBB?BRRB?B?", "BB?BBRB???BBRB?B???BBBB?BBBRBB??BB?BBBBBBB?BBBBBRB", "BBBB??B?BBR?BBBBBBBBBRB??BBBR?BBBB?BBBB?B???BBRBBR", "?BBRBB?BBB??BBBBB?RBR??BBBBB?B?B??BR?B?BBBBB?BBBBB", "BBBB?BB?B?B?BB?BR?BBRRBBRR???BBBBBBBB?BB??B???B?RB", "BRBBBB?BRBBBB?BBBBBRBBB?B??R?BBBBBRBBB?BBB?BB?B?B?", "B????BBBBBBBBBB????BB?BBB?BBBB?B?BRB?BB???BBBBB??B", "B?BBB?BBRB?B?B??BBRBBB??BBB?B?BBBBBBB?BBB??BB??BBB", "BBBBRBBBBB?BRB?B?B?B??B??B??BBBB?BBBB??B?BR??BBB?B", "?BB?BBBB?B????BRBB?RBB?BBRBBB???BBBBBB????BR?BBBB?" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case135() {
        String[] board = { "???G?G????B??B?GB??G??GG??GG?G?G???G??B?BG?G??????", "?BGGG???B?GGBB?G?G?G?G?????GGGB?????GG?B??G???G??B", "GGG???G??G??G?GG?G?B?G?GG????GGGGG??G?BBG?BBGBG???", "??B??GB?G??G?GGGB??GG?GGGBGGGG?????B?B??B?????GBGG", "BGG????GBGBG?GGGGGBB?BBGG???GG?B??GG??G?BBGGG?G??G", "GGGB?G???GG?GB??????BGBB?G?BG?GG?G???GG?G???B??G??", "G??G??????????GG?GGG??G?BG????G???B?BG?BGB??B?G?G?", "??GGB?GG???BGBGB???G?GG???G??G?G?????GG??GBGG?G?G?", "BG???GG???G?GG????G??GB???BB?G??BB?G????????GG?G??", "??G??G??G?GG?B?GG????G????GB??????G??G?BGG???G????", "G?????G?G??G?GGB?????G???B?G?G?G??G??G??G????G?G?B", "??GGG??G?G?GGBBB?BB??GB?????G??G?G?G??GBG?????G??B", "???BGG??BG???G??????????GGG????G????G??G???B?G??G?", "GGGBGG?G???B????B?G?B??GG?G?G??B?GG?G?GGG?B??G?GG?", "??GGG??GG?BG?GG?GB???G?G???G?G??B????G???G?BGG?G??", "??GB?????????B??G?GGGGGG??GG??G??G??G?G???GB??BG?B", "GGG???G??????G?B?GG?B????GG?GGG?????GG???GBG??GBGG", "????G????BGG?????GB?B???G??G?G????BBGGG??G???GB???", "G?GGG???G?????G??G??B?G?????G?G??GGG?GBGG??B??GB??", "B???G????G????G?G???G?G?B?BBG?GB?B?GG??B??GB?BG???", "???GB?G?GBG?GG??G?GB???????G??GGG?G?????BBG?GGGG??", "GGG?GG?G???GG?GGGGB???G?GG????G?????BGG???G??G????", "G??GB?B??B?G?B???GB??B?G?BGB???????G?G????????G?GG", "GGB?BGBG??GGGGG??G?G????????G???GGG??GGG??G????G??", "G???G?B?B???GG?G?????G????????G????G?GG?B?????B?B?", "B??????G??G?G??GG?G??GBGG?G??B?G??GG??GB???GG???B?", "?G??G????GBG?G???????????GB?GG?????B?GG?G????????G", "???G?G?GBGG??G???B?G????G?GG?GGGG????B?G????B??G?B", "??GG?BG?GG??GG?G????BGGG??G?G??G???G??G???G?B???GG", "????GG?GGGB??G?G?G???B?G??G????G???GG??BB??G??G?G?", "B?GG???G??G?B???GG??GG????G??G?????BB???GGG?GGG?G?", "?GG?BG???G??GG??G?BB?GB?GB??G?GB?BG???G????G???BG?", "?BG????B??BBG??G??G???BG??G???????GBG??BGGG?G?B?G?", "?GG?GBGG???GGG??????G?BGGB???GG?GBGGG??GG?G?BG?B?G", "B???GGGGG?GG???G?????GG????G??GG???B?G??G?GBG???G?", "?????G????GB???G???G??????GG?B?G?GG?GG?BG??GG?G???", "G???GG???GG?G???G?B?G??GG?GGG?GB??G????GG??G???G?G", "??GGGG?G?G??B?????BG??G??????B??G???????GG?GG?G??G", "G??GGG?GB?GGB??GB??GGB???BBG?B?GB??G?????G?G?G?GG?", "?BGGG?B?GG??BGB?G?????GG?B???GG?GBG?G?BB???G??G??B", "G?G??GG?????G?G?GG????G???B?GG?G?G?????GG?G?G???GB", "??G??B?G??GG??GGBGGG???GG???G??B????B?G??GB???BGBB", "?G?G????B??GBG??B??G?BB?G?GG???G??G??B?B???G?BG???", "??BBG?GG?G??G???G?G?????G?????B?G??B?????GGG???GB?", "?G???GG?G??GGBBG???G?BBGG????GGGB???????G??GB?B???", "G??GB????GGG???GG??????????GG??GB???G?GGGBG??G?GG?", "G?B???????G????B?GG??BB?G??G?????????G?G??BG???G??", "?????????GB??GB?BG???GGGB???GG?GGGG???GG?G?G???G?G", "?GG?????????B?GBGG?BG??????GG?G?G?G???GGBGG?G?G??B", "B?GGGGGG?G?G??G?????G????B?????G?????BGG??B?G??GGB" };
        assertArrayEquals(new double[] { 0.0, 1.0 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case136() {
        String[] board = { "R?", "?R" };
        assertArrayEquals(new double[] { 0.5555555555555555, 0.11111111111111116 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case137() {
        String[] board = { "?RRRR?R?", "?R?RR???", "?RR??RR?", "?RR??R?R", "?R?R?RRR", "??BBR???", "???R???R", "RR?R?RRR" };
        assertArrayEquals(new double[] { 0.200369179830845, 0.14032470655338092 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case138() {
        String[] board = { "R?", "GB" };
        assertArrayEquals(new double[] { 0.33333333333333326, 0.33333333333333337 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case139() {
        String[] board = { "RR??RRRG?R??RRR?R???G???RRRR?RR???", "???R??R?RG?RGR??R?RRR?RRR???R???RR", "RR?RRRR?R???G??RGRR??R?RR???RR??BR", "??RR?RGRR?RRR?G????G?RR??R?RRRR??R", "?GR?R???RGRRG??R?R??R?RR?R?????RR?", "R?RG???RRRRRR?G?R?RR??RRBR???R??RG", "?R?RRR?RRR?GRR??GR????RRR???RRG?R?", "?R?RRRRRRRRRB??G?R??RRRRG??R?R??RG", "?R?RRG?R???R??RRRRR??RRRRB??RRR?RG", "GRRRRR?R??R?RRRGR??RRRRRR?????RRR?", "??RG?R?R?RR?RRRRRR?R?RGRGRR??RRR??", "?RG?????R??RRRR??RR??RR?RG?R??G?R?", "R???RR?RR?RR??RR????R?R?R??GRRRRRR", "??R?????RR??????RR?RRRRGRRR?R?G?RR", "???RR?R????G?R?RR??RR?R???GRRRRR??", "?RRG?RR????RRR??GRRRR?RR?R??????G?", "RRRRRRGG??R??R???R??GR?R?R?RR??RRR", "R?RRRR?R?RG?RR??R??RRRGRRRRR??G???", "?RRRRRR?R?R?RRRRGRRRR?RRRRRG????R?", "RG???RRR????RR?RR?R??R?R?R?R??RGRG", "RRR?????RRRR??R?RR?R???GR?GRRR??R?", "RRR??R??R?R?RR???R??R????R?????R??", "RRRRRGRGGR?R?R??GR?RR?RGGRRRRRRRRR", "??R??RGRGR?G????R??G???GRR???G?RR?", "?RG??GR?RRR??R??GRRRGRR?R?G?RRRR??", "RR?RRRR??RR?R?RB?R?R???GRRR?RRR??R", "??RRGRR?RRR?????R???RGRRR??R?RRR?G", "?R?R?R???RR?R?R?????RR?R?RGR???RR?", "??GRR?RRRR???R?R?RR?R?R?RG??RGRG??", "RR??RRR?RR????RRR??BRR?GRR??RR?R?R", "RR???RRRGRG?R?G?RRR?RRR?R??RGG??R?", "R?R?RRBRRRRGRR?RRGRR?G?G?R??R?R?RR", "??RRRR?GR??RRR?RR?RRRRR?G?RR??RR?R", "??GRRG?RR??RG?RR?GRRR??R?R?R?RRR??" };
        assertArrayEquals(new double[] { 3.186639840890848e-11, 0.837759384780355 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case140() {
        String[] board = { "R?B", "R?G", "?R?" };
        assertArrayEquals(new double[] { 0.11111111111111116, 0.18518518518518523 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case141() {
        String[] board = { "?RRRBRRB", "RRR?RRRR", "RBRRRRRR", "B?R?RR?R", "?RR?R???", "R?RRRBRB", "??R?R???", "RGRR?R?R" };
        assertArrayEquals(new double[] { 0.3369875489471079, 0.14668190406419113 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case142() {
        String[] board = { "?????R?", "RRRRRR?", "?BRRRRR", "RR??R??", "R?R????", "?GRR???", "?R?R???" };
        assertArrayEquals(new double[] { 0.3478676496273947, 0.1476324752049143 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case143() {
        String[] board = { "RR?R", "RB??", "BB??", "R??R" };
        assertArrayEquals(new double[] { 0.40740740740740733, 0.18518518518518523 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case144() {
        String[] board = { "BR?B", "R?RR", "B?B?", "B???" };
        assertArrayEquals(new double[] { 0.33333333333333326, 0.33333333333333337 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case145() {
        String[] board = { "R?RRR?RR?RR", "?RBRRRBBB??", "??GR?RRRB?R", "RBBRRB??R??", "RRR?RRRRRR?", "RRRRRRR?RBB", "?RRRRR?RGRG", "RRRRRRBRRBR", "?R?RRRBG?G?", "RRBRRR?R?RB", "BRRR?RRRR?R" };
        assertArrayEquals(new double[] { 0.1440329218106996, 0.2171925011431185 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case146() {
        String[] board = { "RRBRBRRRBRR", "RRRGBRBR?RR", "RG?RRBRRBBB", "RBRBRBRRRRR", "?BRRB?BGBRB", "R?RRRGRRB?R", "BBRRRRRBRRR", "BBBB?BGRRRR", "RRRR?RRRRRR", "BRRBRR?RRBR", "RRBRB?RBRRR" };
        assertArrayEquals(new double[] { 0.33333333333333326, 0.33333333333333337 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case147() {
        String[] board = { "?R?R??RRR???RRR?RRGRBR????R??R??R?????????R?BRR???", "??????RR??????RR??????RR??R??RRRR???RRRRGR??R???R?", "RR?RR?R???R???RR???G??G???R?RR?R?RR?RRRR??RRR??R?R", "?RR???R???RR???RRRRRR??R?RRRRRR??R??R????RRR?R?R?R", "R?????RRR???RRR???R???R?RRR??R???BR??R?R?RRR??RRRR", "R?R??RR????R??R??R??R???RRR?RR????????R?RR?BRR????", "?R??????RRR?B?R?R??R?RR??R?RRRRR?R??R?R????R?B????", "??BRR???R??R?R????R??RRR?RRR?RR??R?RRR??R??R?RR???", "R?R??RR??R?RRB?R????R?R?R???????R?RRR??RRR?RRR??RR", "????RRR???R?????R??R??RR?R??RRR?R?????R?RRR?????GR", "BRR???R???R?G?R??G???RRR??????R?R?????R?????G???RB", "???RRR?R?RRR?RR????R?????R??RR?????R?RGRRR??R???R?", "R??BRRR????????G?R?R?RR?R????RR?R???????R??RR????R", "?RR????B???R?RR??RRRRR??RR?RR?R??R?R?R?RR?R?R?R?R?", "????RR???R?R??????RRR??RRB??R?R??RR??R?R?RRRR?R???", "R?GRRRRR???RBR?RR???R???R?????RR?R????RR??R?BR??R?", "??R???R?R??B?RR??R?R?RR?R?R?RRRR??RBRR?R????RRR???", "?RR?RRR?RR??R?RRR???RR????RR?R???G?RRRRR???R?RR?RR", "?R?R????R?RRR?R?R??GRRR??RRRR???R?RR???RR?R?RRR??R", "?RRRR?????R???R?RB?RR????RRRRG???R????R???R???????", "RRR??R??R??RG??R?RR??R?RRB?RR?RBRRRRRR?R????R??RRR", "?RRRRR????RR?R??GRGR??G????R?????R?R?RR?R?RR??R??R", "?RR?RR?????RR???R?R?G?RRR?RR???RBR?RRR??RR?RR??RRB", "?R?R???RR??R?R??R?RR????RR?R?RR???RR?????R?R?GRR?R", "???R?RR?RRR?RR??R?????R??R??RRR?RR?????RGR?R???RRR", "??R????RR???RB?R?R???RBG????R??GRRR????RBRRRR?RR??", "R????R?RR?B?R??RRRR????????R?RR????R???R????R??R??", "R?R?R???????R?RRR?R??????RRR?RRR?RRRRR?R?R?R??????", "RR??R????R??RR???RRR???R?RR????R??R???RRR?R?R?RB??", "RRR?RRR?RRR???BR?R????BB?R???RRR?RRR?R???????????G", "R?R??R?????RRRR??RRRR???RR???GB??RRR??R??R?G?R???R", "RRR?R??R??RR????R?R????RR???RRRR???R?R?R?R?R???RRR", "RRRR?RR?RRRR???R?RRRB?RR??B?R???RRR?RR???????????R", "?R?R?????B?R?R??R??R?RR?RRRRR?RR?????B??RRRR?BGRRR", "????GR?RRRRRR???RRRRBR?R?RR?R?RR???RR?R????R????RR", "RRR?R??R?RRRRRRRR?R?RR??R???R?RR?RRR?R?R?RR?BRR???", "??R????R???RR??RR??R???RR??R??R?R?????R?????RR???R", "????BRRR??R?RR???????R?R?R??R???RR???R??R?RR???RR?", "GR?R????R??BRR????RRGR?R?B????????R?RRR???R??RR??R", "?R??RR?R?RR?R???R?BR?R?R?R?G?RBR?R?RR?RRR??R??RR??", "??RRRG??????RR??RRRGR??R?R?GRR??R???RR??R?R?R?RR??", "R???R??RR??G?R?R????R?RRR?R??R????????R?RRRR??RRRR", "RR????R??RRR???R?RR?RR???R??R?R???R??RR????R????R?", "RRRR?RRR?R????GR??R??R?R?B?B??BR??R?R?R??GRR?R????", "R????R??RRRBR?RRR???RRR??RRR???R?RR??R??RR?RR????R", "???RRR????R?RRR?R??RRR?RR??R????R?R?R?RR??R?RR?R??", "?R?RR??RRR?R?RRR??RR?R?R?R?R?RRR?B??GR?RBRRR?RR?B?", "?R??R???RRRR???RRRR????B?RR?R?R???R??R??R?RR?R?R?R", "????RRGR???RR?RR???RRR?BR??RR?R??R???R?????R?R???R", "R?RRRRRRB??R?RR?R??RRR?R?R?B??R???R??R???RRR?R????" };
        assertArrayEquals(new double[] { 3.848477092560643e-12, 0.9996012666395959 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case148() {
        String[] board = { "RRRRBRRR?R?BRB??RBRRR??R?RB??RR?BRRRR?RRRRR?RRR?R?", "?R??R??RRRRRR?B??R?R?B??RR?RBR?????R??R??B?R?R?R?R", "R?R??RRRRRRR?B?R?RRRR??R?R??R?RRRRR?RB??R??BRBRRRB", "????RR??RR?R???R??RRR?RRR?R????RBRRR?R?R?RRRR?R?R?", "RRR?R??R??RRRR?R??R?RRR?G?BRRRRRRR?R?R?RRRRRR?B?R?", "RR?RRRBRB?R?BBRR??BR??BR??RBRR???RRR??B??????RRRRR", "??R?RRG?RRRRRR??R?BRRR?RB?R?RRR??RR?R?RR?R?R??R??R", "RBR?RR????R??RRRRR???R??R???R??R??RRR??RR??R?R??R?", "R?RRR?B?R?RRRR?RR?R??R?RR?R???R?R?R?RB?RR?R?RRR??R", "R?RG?RRRBRRR??RR??RRR?R?R??RR?RB?RR?R?RR?RR??R?R??", "????R????R?RRRRRRR??R?RRRR??RR??R??R?R?RRGRRR?R?RB", "RR??RRRR?RRRR???R?RG??R?RB???RRRRR???R?R?R?R?RB?R?", "?BRR?RR?RR?R?RRRR?R??R????R?R?RRRBBR?BRR????R?RRR?", "??RR?RRR?RRRRR?RRRR????R?R????RRRR???RRR??RRRRRRRR", "??R?R????????GR?B???R?BG?RRR??R??RRRRR??RRRR?RRBBR", "B?R??RRGR???RRRR?RRRR?RRRR?RR?RRRRG??B????RR?B?RRR", "?G???R?RR?RRR?B?RR?RR?RB?????RR?RRRR?RRRR???RRR?RR", "RRRR?R?RRRR??R?BRRR?RRRR?RRG?RR?RRRRR???BBRR?RR?BR", "RRR??RRRR?BRR?RRRR??R?R??RG?R???RRBG?????RR?R?R???", "?RR?RR?RR?????RB?R?RRRG??RR?RRRRBBBGR?RRR?R??RRR?R", "?RR??R???RRRB?R?RRRRR?RR?RBB??R??RRR???RRBB?B???R?", "?R?RRRRRR?RRRRRRRBRRRR?RRR??RR?R??R?RRRRRG?BRR??RR", "?RRRRRRR?RRRRBRR?RRG?BRB????RR??B??R?B?RR?GRR?RB??", "???GR??RR?BR?RRRRRRRRBR??RBR?R?RRR???RRR???RRR??R?", "?R?R??R??RRRRRR????RRRGRR?RR???R?RR?RR?RR???RRBR?R", "R??R?RRRBRRRRG?R???R?RR??RRR?RRR?????R?BRRR?RR???B", "R?RRR?R??RBB??RRRBBRBRRRR?RR??RR?RR??RBR?RR?RR?RRR", "?RR?RRRBRB??RRR?RRR??RR???BRBRRRR?R?BR??R??RRB?R?R", "B?R?RRRR??RRR?GRRRR?R??R?RRR?R??RRRR??BRRRRRRRRR?R", "RRRR?R??RR??RRR?RR?RRRB?RRRB???RR?RR?R??RR?R?R?R??", "???RRRRR????R?R?RRR??RBR??RR??RRRR?R?R??R???RB?RRR", "R?RRRRRB?R??R???RRB??RR??RRR??R?RRRRB?R?R?R?RR???R", "RRRR?RRR?R?R???R????RR?R?R?R?RR?R??R?????RRBRRRR?R", "RR?RRRR???RBB?RR?R?R?R?R?R?RR?????RR?RRRGB?R??R?R?", "R?RR?BR?RRRR?BRG??B?RR?R??RR?RRR????R?RB?R?RR?RRRR", "RRRRR?RR?R??RRB?RR?R?RRR??RRRR????R??R??RR??RRRRR?", "RBR?R?RRRR???RB??RRRRRRR?RBRR??BR?R?RR?RRRRRBB??RR", "RRRRRB??RR??RR?????RGRR?R??RRRR?RRRRRR??RR???BR??R", "?B?R???R?R?R?RR?R??RRRRR??GRRRR?BR?RRRB?R???RR?RRR", "???BRRB??RGRR?RRR?R?RR?RRRR?RRRB?RRRBR??RR??R??B??", "B?RR?R?RR?RR??R?RRRRRRRR????R?R?R?RR?RB?R?R???R?R?", "R?RBR??RRBR??RRR?B?R?BRRR????RBRRRB?RRRR?RRRR?RG??", "?BR?RB?R?RRBR??RB?RR??RRRR?????RRB???RRRRR?RRRRRR?", "R???RR??RR?RRR?RRR?R?B????RRR?BR?RR??R???RR??RRR?R", "???R?RRRR?RRRRB??RR?G??RGRR?RBR?B??R??RR?R?R?R??R?", "RRRR??RR?R?GRR??R?RRRR??RRRRR?RR???R?RR?BRR????R?R", "R??RRRRRBRR?BR?RRRRR????RR?RRRRRBRR?RRB??BB?RR????", "RR?R??R??RR??RRRRRRRRR???RRRRR??RRRR?RRB?R?R?RR???", "R??RR?RR?????B???RRRRRBRRB?BRRR??RRRRR?RRR?R??R?RG", "B??R?R?R?RB?R?R??R??RRR?BR??RRRRR?RGR?RRRBR?RR?R??" };
        assertArrayEquals(new double[] { 8.603916468175044e-10, 0.9995489070102674 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case149() {
        String[] board = { "?R?RRRRRR???RRR?RR??RRR?RRRR???R???RR?RRR?RR?R?RRR", "?RRRRR?RR?R?R?RRRRR?RR?RR???BRRRR?RRR?R?RRR??R???R", "R??R?RRRRRRRRR??RRR?R?RRR??R??R??RR???RRRR?R?R??RR", "RRRR???R?RR?R????RRRRR?RR?R?RRRRR?RR?R?RRR?R?R?RRR", "RRR??R??R?R?R?R?R?RRR????R?R???R????R????RRRRRRRRR", "?R?RRRR?R?RRR?R?RBRR??RRRRRRRRRRRRR?RR??R?RRR??R?R", "RRG???RR???RRBR?RR??RR?R??RRRR?RRRRRRRR?RBRRR?R?R?", "RR?R?R????R??RRRR??R?BRRR?RRR?R?RRR?R?RR???RR????B", "????RRR??R?R????????????RR???R???R??R???R?R???RRRR", "RRR??RR???R???R???BR?R??RRR?RR?RR?RRRR??RB?RR???RR", "?R?BR??RR??R?RR?RRR??RR?RR??RR?RR?RRRR?R??RRRRR??R", "RRRRR??RRRR?R?R?RR??R?RRR?R????BR?R??R?R????RRR???", "?RRRRR?R??RR??R?R?R??R?RRRR???R?RRRRR??R??RRR?R??R", "RRRR??R?R???RRRRRRR??R??R??R??RR?R????RR?R?RR?RR?R", "?R???R??R???RRRR?R??R?RRRR?RRRR?RRR??RR??RR???RR??", "??RRRR??RR?RR?RRRR?RR??RR??RR?R?R??????RRRRR??RR?R", "R??R?RRR?R?RRR??RRR?R??RR?RR??R?R?RRRR?RRRRR??R?R?", "???RR??RR???RRR??RR??RR?RRRRRR??RRRR??RR?RRRRRRRR?", "??R?RRRR?RRR?R?RR?RR????RRRR?R?????R??R??R?RR?BRRR", "???RR?????R??R??RRRRBRRRRRRRRRR?RRRRR??R?RRRRR?RRR", "R?RRR?R????RRR???RR?RRRRRR?R?RR?R?R???R?????RR?R??", "RR?RRRR?RRR?R????R?RR??RR???RBRR??R??RRRRRR?RR?RR?", "R???R?R??RR?RRRR?RRR?R?RRR?R?R???R?????RR??RR?R??R", "RRRR?RRRRRRR?R????RRBR??RRRRRRR?R??R?RRRR?R?RR?R?R", "RRRR???RRRR??RR?R??R?R?R?RR?R??R??RRRR?RR?RR?RR?R?", "R?RRRR?RR?RRR?R?RRRR?RRRRRRRRR?R?R?RR?BR?R?RRR??RR", "?RR?RRR?RRR?RR?R?R?RR?R?RRR?R?R???????RRB???RRRR??", "R?RR?RR?RRR?R??RR?RRR?R?RR?RRRR?????RR?RRR??RR????", "?RRR??RRRRRR????R???R?R??BRRRR?RRR?R??RR?R?????RBR", "?RR?RRR?R??RR?R?RBR?R??RR?RB???R??B?R?RRR??R??RRR?", "GRRRR????RR?RRRRR??R???RRRR??RRRR?RRRRR???R?RRR???", "RR?R?RR?RR???????RRR?R??R?RRRRRR?R??????R??R?RRR??", "RRRR??RRRR?RRR?RRR?RRRRR???RRRR????R??RRRRR?R?R??R", "?RR?BR???R??????RR?R?R??RR?R??RRRR????R?R??R?R???R", "???GRRRR?RR?RRR??R????R?RR??RRRR??RR?RRR??RRRR??RR", "??RR??RRRR?R???R?RRRRRRRR?R?RR?????RRR???RR?R?RR??", "RRRRRR??RRRRRR?R?R??RR?R?R??R???RR???R???RR?RR?RR?", "RRRR?R?RR???????RR?RRRR?R??R?RR?R?R?RRRR?R?RR?RRR?", "RRR?B??R?RR?RRR?R???RBR?RRR??R?RR?R?R??RRRR??RRRRR", "R?????RRR??RR???RRRR?RRR?R?RR?RRRRRR?RR?R????R????", "????R??R??RRRR?RRRRR?RR?RRRRRR??RR???RRR?RRRRR?R?R", "R??RRR?RR?R???RRRR?RRR??R?R??R???R?R????R?R????RR?", "?R?R?RR?R?RRR?R?RRR?RR?RR??R??RRRR?R?R??R???RRRR?R", "??RR?R?RR??RRR?R?RRR?R?RR?R???R??RRR?R?RRRRR???RRR", "??R?RR??RRRRRRRRR??R????RR??R?R?RR????????RRRRRRR?", "R??R??RR?RRRR?RR?RRR???RR?R??R?R?RRR?GRRR?R??R??R?", "R??R?R??R?RRR?RR??RRRR?R?RRRR??RR???R??R???RRRRR??", "R?R?R???R?RR?R?R???RR?RRRR???RR???RR?R?R???RR?R??R", "R???RR?R?RRRR?RRRR??R?RR??RR?R?R???RRRR?RR???R?RRR", "RR?R?R????RRR??RR?R?RR?????RR??B?RRRRRRR??R??RRR??" };
        assertArrayEquals(new double[] { 8.969527787172638e-09, 0.9939018760544436 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case150() {
        String[] board = { "RGRRRRRRRRRRRRRRRRRGRRRRRRRRRRRRRR?RRRRR?GR??RRRRB", "RRBRRRBRRRRRRRRRRG?RGRRRRRRRRRRRRRRR???BRGRGRRR?GR", "RRRRRRRRRRRRRRRRRRRRRRRRRRRRRR?RRRRRRRRRRRR??RRRRR", "RR?BR?RRRRRRRBRRRRRRRBBRRRRRGRRRRRRBRRRRRRRRRR??R?", "RRRGR?RRRRRRRRRRRGRRGR?RRR?RRRBRRRR?RRRRRRRRRRRRRR", "RRRRRRRR?RRR?RRRB?BRRRBRRRRG??RRRRGGBR?RGRRRRRRRRR", "RRRRRRRRRRRRRRRRRRRRRGRRR?RRB??RRRRRR?RRRRRRRRRGRR", "RRGRRRRRG?RRRRRRRRRRRRRRRRRRRRRRR?RRRRRRRRRRRRRRRR", "RRRRRR?RRRRGRRR?RRRRRR?RRR?RR?RRGRRRRRRRRRRR??RRRR", "RGRRRRRRRRRB?R?RRR?RRGRRRRRRG?RRR?RRGRRRRRRRRRRRRR", "GRRRR?RRRRRRR?R?RRBRRRGRRRRRRRRRRRRRRRBRRRRRRR?RR?", "RRRRGRRRRRRRRRRRRRRRG?RRR?RR?RRRRR?RR?RRRRRRRRRRR?", "RRRRR?RRRRRRRRB??RRRRRRRRRRRRRRRRRRR?RRRRRRRGRRRRR", "RRRRRRRRRRRRRRRRRB?GRRR?RGRRRRRGRRRRRRRRRRRRRRRRRR", "R?BRRRRR?RRRRRRR?RRRRRRRRRRRRRRRGRRRRRRRBRRRRRRR?R", "RR?RR?RRRRRRRRRRRR?RRRRRRRRRRRRRR?RRRBR?RGRR?R?RBR", "RRRRRRRRRR?RRRRRRRRRRRRRRRR?RRRR?RRRRR?RRRR?RRRRRR", "RRRRRRR?R?RRRRRRRRRRRRRRRRRRRRGGRRRRRRR??RRRRRRRRR", "RRRRGGBRG?RRRRRRRRB?RRRRRBRRRR?R?RRRRRRRRRRRBRRRR?", "RRR?RRR?RRRRRRRRR?RRR?RRRR??RRRGRRRRRRRRRRRRBRRRRR", "RRBRRRRRRRRGRRRRRRRRRRRRRRRR?RRRRRRRRRRRRRBRRRRRRR", "RRRRRRRRGRRRRRRRRRR?RRRRRBRRRRRR?RRRRRRRRRRRR???RR", "RRRRR?BRRRRRRRRRRRRRRRRRR?RRRRR?RRRGRRGRRRRRRRRRRR", "RRRB?RRRRRRRGRRRRRRRRRRRRRRRRRRBRRRR?RRR?RRGG?RRRR", "RRRRRRRRRRR?RRRRRRRRGRRRGR?RRRRRRRRRR??RRRRRRRRRRR", "RRRRRRRRRRRRRR??RRRRRRRRBRRRRRRRRRRRRRRRGRRR?RRRRR", "RRRRRRRRRBRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR", "RRRRGRRRRRRRRGRRRRRR?RR?RRRRRR???RRGRRRRRRRR?RRBRR", "RRRRRRRRRRRRRRRRRRRRRRRRR?RRRRRRR??RRRRRRRRRRBRRRR", "RRRRRRRRRRRRRRRRR?RRRRRRRRRRRRRRRRRRR?RRRRRG?RRGRR", "RRBRR?RRRRRRRRRRRGRRRRRRRRRR?GR?RRR?RRRRRRRRRR?RGR", "RRRRRRRRRR?RBRRRRR?RRRRRRRRRR??RRRRRRRRRRGRRRRRRRR", "RRRRGRRRRRRRGRRRRRGGRGRR?RRRRRRRRRRRRR?RRR?RR?RRRR", "RRRG?RBRRRRRRRRRRRRRRRRRRRR?RRRRRRRRRRRGRRR?RRRRRR", "RR?RRR?RRR??RRRRRRRRRRRRRR?GRRRRRRRRRR?RRRRRRRRRRR", "RRRRR???RRRRRRRRRRRRRRRRRRRRRRR?RRRRR?RRRRRRRRRRRR", "RRRBRR?RRRRRRRRR?RRRRBRRGRRRRRRRRRRRRGGRRRRRRRRRRR", "RRRRR?RRRRRRRRR?RRRRRR?RRRRRRRRBR?RGR?RRRRBRRRRGGG", "RGRRRRRRRRRRRRRRRRRRRRRR?RRRRRRRRR?RRRRRRRRRRRRRRR", "RG?RRRRGRRRRG?BRRRR?RRRRRRRRRRRRRRRRRRRRRRRRRRRGGB", "R?GRRRRRRRRRRRRRRRRRRRRRGRRRRRRRRRRRRRRRRRRGR?RRGR", "RRRRRRRRRRRRRRRRRRRRRRRRR?RRRRRRRRRRRRRRRRRRRRRGRR", "RRRRRRR?RRRRRBRRR?RRRRB?RRRRRRRRRRRRRR?RRRRRRRRR?R", "GRRRRRRRRRR?RRRRRRRRRRR?RRRRRRGRRRRRRRRRRRRRRRRRRR", "RRRBRRRRRRBRRRRRRRR?RRRRBRRRRRRRRRRRRRR?R?RRRRRRRR", "RRRB?GRRRRBBRRRRRRRGRRRRRRRRRR?RRRGRRRRRRRRRRRRRRR", "RR?RRRRRRRRRR?R?RRRRRGRRRRRRR?RRGRGRRRR?R?RRRRRR?R", "RGRRRR?RRRRRRGRRRRRR?RRRRRRRGRRRR?RR?R?R?RRRR?RRRR", "?RRRRR??RRRRGRRRRRBRRR?RRRRRR?RRRR?RRRGRRGRR?R?RRR", "BRRR?RRRRRRRRR?RR?R?RRR?RRRRGRRRRRBRRRRRRRRRRRRRRR" };
        assertArrayEquals(new double[] { 0.04494635026904825, 0.004254188211927801 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case151() {
        String[] board = { "RR?RRRRRRR?RRRRRRRRRRRRRR?RRRRRRRR??R?RRR?RRR??RGR", "RRR?R?RR??RRRR?R?R?RRRRRRRRRRR?RRRR?RR?RRRRRRRRRRR", "RRRRRRRRRRRRRR?RR?RRRRRGRRRRRRRRRRRRRRRR??RRRRRRRR", "RRR??RRRRRR?RRRR?R?RRR?RR?RR?RRRR?RRR?RRRRR?R?R?RR", "RRRRRRRRRR?RR?R?R?RRRRR?RR?R?RRRRRRRR?RRRRR???RRRR", "R?RRRRRR?RRRRRRRRRRRRR?RRRRRRRRRRRRR?RRRRRRRR?RRRR", "??RRRRRRR?RRRR?RRRRRRRRR?RRR?RRRRRRRRRRR?RRRRRRRRR", "RRBRRRRRRRRRRRRRR??RRRRRRRRRRRRRRRR?RRRRRRRRRRRRRR", "RRRRRRRRRR?R?RR?RRRR??RR?RRR????RR?RRRRRR?RRRRRR?R", "?RRR?RRRR?R??RRRRR?RR?RRRRRRRRRR?RRRRRRR??RRR?RRR?", "RRRRR?RRRRRRR?RRRR??RRRRRRRRR?RRRRRRRRRRRRR?RR?RRR", "?R?RRR?RRRR??RRRRRRR?RRR?RRR?RRRRRRRRR?R?RRRRRRR?R", "R??R?R?RRRRRRRR??RRRRRRR?RR?R?R?RRR?RRRRRRRR?RR?RR", "R?RR?RRRRRRRRRRRGR?RRRRRRRRRRRR?RR?RRRRRRRRRR?RRRR", "RRRRRRRRRRRRR??RRR?RR?RR?RRRRRRR?RRR?R?RRR?RR?R?RR", "RRRRRRRRRRRR?R?RRR??RRRRRRR?RRR?RRRRRRRRRRRR?RRGRR", "RRR?RRR?RRRRRRR?RRRRR?R?RRRR???RRRRRR?RRRRRRRRRRRR", "RRRRRR?RRRR??RRRRRRRRRRRRRR??RRRRRRR?RRR?RRRRRBRR?", "RRRBRRRRRRRRR??R?BR??RR?RRR?BRRR?RR??RRRRRR?RR?RRR", "?RRRR?RR?RRRR?RRRR?R?R?RRR?RRRRRRRRRRRRRRRRRR?RRRR", "R?R??RRRRRR?RR?R?RRRRRRRRRRRRRRRRRR?RRRRRRRRRRRRRR", "?RRRRRR?R??RRRRRRRRR?RRRRRRRRRRRRRRR?RRRRRRR?RRRRR", "?RRRRRR?R?RRRRR?RRRR?RRRRRRR???RRRRR?RRRRRRR?RRRRR", "?RRRRRRR?RR?RRRRRRRRRRR?RRRRRRRRRRR?R?RRRRRRRRRR??", "RRR?RR?RRR?RRRR?RRRRRRRRRRR?R?R??RR?R?RR?RRRR?RRR?", "??RRR?RRRRR?R?RRR?RRRRRRR?R?RR?RRRRR?RRRRRRRRRRRRR", "RRRR?RRR?RRRRRRRR?RRRRRRR???R?RRRR?R?RRRRR?RR???RR", "RRRRRR?RRRRRRRRRRRR??RRRRRRR?RRRRR?RRRRR?RRRRRRBR?", "?RRRRRRRRR?RRRRRRRRRRRRRRR?RRRRRR?RR?RRRRRRRRRRRRR", "RRRR?RRRR?RRR?R??RR???RR?RRRRRRRR?RR?R?R???RRRRRRR", "RRRRRRRR??RRRRR?RRRRRRR??RRR??RRRRBR?RRR?RRRRR?RRR", "R?RRRRRRR??RRRR?RB?RRRRR?RRR?RR?RRRRRRRR?RRRRRR?RR", "R??RRRRR??R?RGRRRRRRRR?RRRRRR?R?RRRRRR?RRR?RBRR?RR", "?RRRRRRRGRR?RRRRR?R?RR?RRRRRRRRRRRRRR?RRRRRR??RRRR", "RRRRRRRRRR?RRGRRR??RRR?R?R?RR?RR?RRR?R?RRRRRRRRRRR", "RRR?GRRR?R?RRRRR?R??RRRRRRRRRRR??R?RRRRRRR?RRRG???", "RRR?RRRRR?R?RRRRRRRRBRRRRR??RR?RRRBRRRR?RRR?RRRRR?", "RR?RRR?R?RRRRRRRR?RRR?RRRRRGRRRRRRRRRRR?R?RRR?R?RR", "RRR??R?RR??RRRRRR?R?R?RRRRR?RR?RRRRRRRRR??R??RRRRR", "RRRRRR?RRR?RRRRR?RR?RRR?R?RRR??RRRRRRRRRRRRRRRR??R", "RR??RR?RR?RRRRRRR?RRR?RR?R?RR??R?RBRRR?R?RRRR?RR?R", "?RRRRRRRR?RRRRGGRRRRRRRRRRRRR?R?RRRRRRRRR?R?RRRRRR", "RR?R??RRRRRRRRR?RRRRRRR??RRRR??R?RR?R??RRRRRRRRRR?", "RRRRR?RRRRRRR?RRRR?R?RRRRRRRRRR?R??RRRR?RRRR?RRRRR", "RRRR?RRRRRRRRRR?RR?RRRRRRRRRRRRRRR?RRRR???RRRRRRRR", "RRRRR?RRRRR?RRRR?RRRRR?RRRRR?R??RRRRRRRRRBRRRRRR?R", "R?RRR?RRRR?RRRR?R??RRRRRRRRRRRRRRRR?RRGRRRRRR?RRRR", "RRRRRRR?R?R?RGRRRR?R?RRRRRRR?R?RRRR?RRR??R?RRRR?R?", "R?RRRR?RRR??RRRRRRR?RR?RRRR?R?RRR??RRRRRGRRRRRR?RR", "RRRRRR?RR?RRRRRRRRRRRRRRRRRRRR?RRRRRRRRRRRRRRRRRR?" };
        assertArrayEquals(new double[] { 0.02308160936488779, 0.18122838706013933 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case152() {
        String[] board = { "RRRRRRRR?RRRB?RRRRRRRRRRRRRRRRRRRRRR?RRR?RRRRRRRRR", "RRR?RRRRRRRRRRRRR?RRRRR?RRGBRRRRRRRRRRRRRRRR?RR?RR", "R?RRR?RRRRRRRRRRRRRRRRR?RRRRRR?R?RRRRRRRRRRRRRRRRR", "RRRRRR?RRRRR?RRRRRRRRRRRRRRRRRR?RRR?RRRRRRRRRRRRRR", "?RRRR??RRRRRRRRRRRRRRRRR?RR??RRRRRRRRRRRRR?RRRR?RR", "RRRRRRB?RRRRRRRRRRRRRRRRRRGRRRRRRRRRRRRGRRRRRRBRRR", "RRRRRRRRRRR?RRRRR?RR?RRRRRR?RRRRRRRRRRR??RRRR?RR?R", "RRRRRR?RRRR?BRRRRRGRRRR?RRRRRRRR?RRRRR??RR??RRRRRR", "RRRRRRRRRRRRR?RRRRR?RR?RRRRRRRRRRRRRRRRRRR?RRRRRRR", "RRRR??RRRRRRRRRRRRR?R??BRRRR?RRRRRRRRRRRRR?BR?RR?R", "RR?RRRRRRRRRRRR?RRRRRRRRRRRRRRRRRRRR?RRRRRRRRRRRRR", "BRRRRRR?RRRRRRRR?BRRRRRRRRRBR?RRRRRBRR?RRRRRRRBR?R", "R?RRRR?RRRRRGRRRRRRRRRRRRRRRRRRRRRR?RRRRRRRRR?RRRR", "RRRR?RRRRRRRRRRRRRRRRRRR?BBRRRRRRRR?RRRRRRR?RRRRRR", "RR?R?RRR?RRBR?RGRRRRRRRRRRRRR?R?RRRRRRR?RRRRRR??RR", "RR?RRRRRRRRRRRR???RRRRRRRRRRRRRR?RRRRRBRRRRRRRRRRR", "RRRBRRRRRRRRRRRRRRRRRRR?R?RRRRRBRRRRRRR?RRRRRRRB?R", "RRRRRRRRRR??RRRRRRRRRR??RRRRRRRRRRRR?RRRRRRRR?RRRR", "?RRRR?RRRR?RRR?RRRRRRRRRRRRRRRRRRRRRRRRR??R?RRRRRR", "RRR???RG??R?R??RRRRRRRRRRRBRRRRRRRRRRRRRR?RRRRRRRR", "R?RRRR?RR?RRRRRRRRRRRRRRR?RRR?R?RRRRRR?RRRRRRRRRRR", "RR?BRRRRRRRRRRRRRRRRRRR??RRBR?RRRRRRRR?RRRRRRRRRRR", "RBRR?RRR?RR???R?RBRRRRRRRRRRRRRRRRRRRRRRBR?RRRRRRR", "R?R??RRRBRRRRRRRR?RR??RRRRRRRRRRRRRRRRRRRRRRRRRRRR", "RRRRRR?RRRRRRR?RRRRRRRRRRRRRRR?RBRR?R?RRRRRRR?RRR?", "RRRRRRRRR?RRRRRRRRBRRRRRRRRRRRRRRR??RRRR?BRGRRRRR?", "?RRRR?RRRRR?RRBRRRRRRRRRRRR?RRRRRRRRRRRRR?RRRRRRR?", "RR?R?RRRRRRR?RRRRB?RRRRRRRRRRRRRRRRRRRRRRRRR?RRRRR", "RRRRRRRRBRRRRRRRRRRRR??RRRRRRRRRRRRRRRRRRRRRRRRRRR", "RR?RRRRRRRR?R?RRRRR??R?RR?RRRRRRRR?RRRRRRRRRRR?BRR", "RBRRRRRRRRRRRR?RR?RRRRR?R?RRRRRRRRRRR?R?RRRRRRRRRR", "R?RRRRRRRR?R?RRRRRRRRRRBR?R??RRR?RRRRRRRRRRRRRRRRR", "RRRRRRRRRRRRRR?RR?RRRRRRR?R?RRRRRRRRRRRRB?RRRRR?RR", "RRR?GRRBRRRRRRRRR?RRRRRBRRBRRRRRRR?RRR?RRRR?RRRRRR", "RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR?RRRRRRRRRBR", "RR?RBRRBRRRRRRRRRR?RRRRRRRRRRRRRRRRRRRR?RRRRBRRRRR", "RRRRRRRRRR?RRRRBR?RR?RRBRRRRR?RR?RRR?R??RRRRRRRRRR", "RRRRRR?RRRRRRRRRRRRRRRRRRRRRRBRRRRR?BRRRRR?RRRRRRR", "RRRBRRRRRR?RRRRRRRRRRRR?RRRRR?RRRRR?RRRRRRRRRRRRRR", "RRBRRRRR?RRRRRRRRRRRRBRRRRRRRR?RRRR??RRRRR?RR?RRRR", "RRRRRRRRR?RR?RRRRRRRRRRRRRRR?RRRRRRRRRRRRRRRRRRRRR", "RRRRRRRR?RRGBRRRRRRRRGRBBRRR?RRRRR?RRRRRRRRRRRRRRR", "RRRRRRRRRRRRRRRRRRRGRR?RRRRRRRRRRR?RRR?RRRRRRRRRBR", "R?RRRRRR?RRRRRRRRRR?RRRRR?RRR?RRRR?RRRRRRRRRRRR?RR", "??RR?RRRRRRBRRR?RRRRRRRRRRRRRRRR?RRR?RRR?RR?RRRR?R", "RRRRRRRRRRR?RRRRRRR?RRRRRRRRRR??RRRRRRRRRRRRRRRRRR", "RRR?RRRRRRRRRR??RRRRRRRRR?R?RRRRRBRRRRRRRRRRRRRRRR", "RR?RRRRRR?RR?RRRR??RRR?RRRRR?RRRR?BRRRRRRRRR??RRRR", "RRRR?RRRRR?RRRRRRRRRRRR?RRRRRRRRRRRRR?RRRRR?RRRRRR", "RRRRRRRRRRRRRRRRRRRRRRRRRR?RRBRRRRRRRRRRR?RRR?RRRR" };
        assertArrayEquals(new double[] { 0.11666012653557689, 0.1088409445572025 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case153() {
        String[] board = { "RRRRRRRRRRRRRRRRRRRRRRR?RRRRRRRRR?RR??RRRRRBRRRRRR", "RRRRRRRRRRRRRRR?RRBR?RRRRRRRRRRBRRRRRRRRRRRRRB?R?R", "RRBRBRRRRRRRRRBRRRRRRRRRRRRRRRRRRRRRBRRRRRBRRRRRRR", "BRBRRRBRRRRRRRRBRRRR??RRRRRRRRR?RRBRRRRRRRRRRRBRRR", "?RRRRRRRRRRRRRRRRRRRR??BRR?RRRRRRRRRRRRRRBRRRRRRRR", "RRRRBRRR?RRRBRRR?RRRRRRRRRBRRB?RRRRRRRBRRRRRRRRBRR", "RRRRRRRRRRRRRRRRRBBRBR?RRRRRR?BRRRBRR?RRBRR?RRRRRR", "RBRRB?RRRRBRRRRRBR?R?BRRRRRRBRRRRB?RRRBBRRRRRRRRRR", "RRRBRRRRRRRRRRRRRRGRRRRB?RRR?R?RRRRRRRRRRRRRRRRBRR", "RBRRRRRRBRRRRRRRRRRRRRRRBBRRRRBRR?RRRBBRRBRRRRRRRR", "R?RBBRRRRRBRRRRRRRBRR?BRRRRRBBRR?RRRRRRRRRRRBRRRBR", "RR?RRRRRRBRRRRRRRRRRRRRRRBRRBRRRRRRRRRRRRRRRRRRR?R", "RRRR?RRR?RRRRRRRR?RRRRRRRRRRRRRRRRRRRRRRRB?RRRR?RR", "RBRRRRRRRRRRRRRRRRRRRRRRBRRRB?RRBRRRRRRRBRRRRRR?RR", "BRRRR?R?RRRRRRRRR?BRRRRRBRRRRRRRRRRRRRRRRRRRRRRRR?", "RRRRRBRR?RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR?BR?B", "RRRRRRBRRRRRRBRR?RRRB?RRB?R??RRRBRRBRRRR??RRRBRRRR", "RRRRRRRRRR?BRRRRBRRBRRRRRRRRRRRRRRRR?RRRRRRRRRRRRR", "RRRRRRGBRR?BRRRRRRRR?R?RRRRRRRRRRRRRRRR?RRRRRRRRBR", "B?RRRRRBRRRBR?RRRRRRRRRRRRR?RRRRRR?RRRRRRRRRB?RRR?", "RRRRRRRRBR?RRRRRRRRRRBRBRRR?RRR?RRRRRRRRRBRRRRRRRR", "?RRRBRRRRBBRRRRBRRRBRBRRRRRRRRRRRRRRBRRRRRRRRRRRRR", "RRRRRRRRRRRRRRRRRRRBRRRRRRRRRRRRRRRRRRR?RRRRRRRRRR", "RRRRRRRR?RBRRRRRRRRRRRRRBRRRRRRRRRRRBBBRRRRRRRRRBR", "RRR?RRRR?RRRRRBRRRRRRRRRRBRB?RRRRRRRRRRRRRRRRRRR?R", "RRBRR??RR?RR?R?RRRRRRBBRRRRRRRR?RRRRRRRRRRRRBRRRRR", "RRRRRBRRRRBRRRRRRR?RRBBBRRBRRRRRRRRRRRRRRRRBBRRRRR", "RBRRRR?BRRRRRRRRRRRRRRR?RBRRRBR?RBRRRBRRRRRRRRRRRR", "RRRRRRRBBRRB?RRBRRRRRRRRRRBR?RRRRB?BRRRRRRRRBRRRRR", "RR?RRBRRRR?RBRRRRBRRRRRBRRRRRRRRRRRRRRRRRR?RBRRRRR", "RRRRRRRRRRRRRRRRRR?RRRRRRBRRRRRRRRRRRRBR?R?RRRRRRR", "RRBRRRRR?RBRRRRRRRRRR?RRRRBRRRRR??RR?BRRRBRRBRBRRR", "RRRRRRRRRRR?RRRRRRRRRRRBRRBRB?RBRRBRRRRRRRRB?RRRRR", "BRRBRRRB?BRRRRRRRRRRRR?RRRRRBRRRRRRRRRRRRRBR?RRRRR", "RRRRRRRR?RRRRRRRRRRRRRR?RRRRRRRRRRRRRRRRRRRRRRRRRR", "RR?RRRRRRRRRRRRRRRRRRRRRBRRBRRRRRRR?RRRBRRBR?RRRRR", "RBBRRRRRRRRRRRRBRRRRRRRRRRRRBRRRRRRRRR?RRRRBBGRBRB", "RRRRRRRR?RRR?R?RRRRRR?BRRRRRRBBBRRRRRBRRRRRRRRRRRR", "RRRRRRRRBRBRRRRBRR?RRBRRBRRRRRRRRRRRRRRR?RRRBR?RBR", "RRBRRRRRB???RRRBRRRRBRRRRBRRRRRR?RRBR?R?RRRRRRRRRR", "RRRRRRRRRRRRRRBRRRB?RRRRRRRRRRRRRRRRRBRBBRRRBRRRB?", "?RRBR?RRRRRRRBR?RRRBBRRRRRRBRR?RRRRRRRBRRRRR?RRRRR", "RRRRRRR?RRRBRRRRRBRRRRR?RRRRRRRRRBRRR?BBRRRRRRBBRR", "RRBRBBRRRRRRRRBRBRRRRRRB??RRBBRRRBRRRRRRRRRRRRRRRR", "RRBBRRR?RRRRRRRRRRRRRR??RRRRRRRBRRRRRRRRRRBRR?RRRR", "?BBRB?R?RB?RBRRB?RRRBRRRRRRRRBRRRRRRRRRRRRBRRRRRBR", "RRRRRRB?RRRRRRR?RRRR?RRRRRBRRRRRRBRRBRRRBRB?RRBRRR", "BRRBR?RBRRRRRRRRRRRRRRRRRRRBRRBR?RRRRRRRRRBRRRRRB?", "RBRRRRRRRRR??RRBRR?RRRRRRRRRBRRRRRRR?RRRRBRRBRRR?B", "RBRRRRRRB?RRRRBRRRRRBRRRRRRRRRRRRRBRRRRRRRRRRRRRRB" };
        assertArrayEquals(new double[] { 0.11111111111111116, 0.5555555555555556 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case154() {
        String[] board = { "RRR?RRRRBRRR?RRRRRBRRRR??RRRRR?RRRBRRRRRRRRRRB?RRR", "RRR???RRRRRRRRRRRRGRRRR?RRRRRRBRRRRGR?RRRRGRRRRRGR", "?RBG?GRR?RRRRRRRRGRRRRR?RRRRR?RRBRRRRRRRRRGRRRR?BR", "??RR?R?RGRRRRRBRRRRRRRRR?RRRRRRRR?RRR??RRRRRRRRBRR", "RRRRRRR??RRR?RRRRRRRR??RR?RGRGGRR?RR?RRRRRRRRRR?RR", "RRRRRRRB???R?RR?RRBR?R?RRRRRRGRRRRRRRRRRBRGRRRRRRR", "???RRRRRR?RGRRRR?RRRRRR?RRR?R?RRRRRGRRRRRRRRRRRRGR", "?RR???RRRRRRRRR?RRRRRRBRRRGRRRRRGRRRRRRRRRR?RRR?RR", "BRRR?RR?RRRRR?RRRRRRRRRRRRRRRRRRRRRR?RRRRRRRRRRRRB", "RRRR?RGRRRRRRR???RRRR?R?R?RRRRRRRRRRRR?RRGRRRR?RRR", "RRRRRRR?BRRRG?RRRR?RRRRRRRRRGRRGRRR?RRRRRRRRRRRR?R", "RRRR?RR?RR??R?R?RRRRRR?RRR?RRRRG?GRRRRRRRRR?RR??R?", "R??RRRRRRGRR?RRRRRGRRRRRG?RRR??RRBRRRRRRRRRRRRRRRR", "RRBRRR??RRG?RBRRRGRRRB?RR?RRRRRR?BRRRRRRRRRR?RRBR?", "BR?B??RRBRRRRBRRRRRRR?RRRRRR??R?RRR?RRGRRGR?RRRR?R", "RR?R?RRRR?GRRRBRR?RR??RRR?GR?RG?BRRR???RRRRRRRRRRR", "RRRRRRRRRRRR?RRRR?RRRR?RRRRRRRRRR?RRRRGRRRRRRRRRRR", "R?RRRR?RRRR????RRRRRRRRRRRRRR?GR?RGR?RRR?B?R?RR?RR", "RRR?RRR?RRR?RRRG?R??RBRR?R?RR?R?RR?RRB??RRR?RRRRGR", "R?RR?RBRR?RRRRRRR?RBR?RR?RR?RRRRRRRR??R?RRRRRGRRR?", "RRRGRRRRRRRRRRRRRRRRRRRRRRRRR?RRRR??R?RRRBRGRR?RBR", "RRRRRRRRR?R??RRRRRBRRRRRRRRRRRRR?RRRR?RRRRRB?RRRRR", "RRRRR?RRRRRRRRBRR?RRRRRRRRRRRR?R?RRRR?R?RRRRRGRR?R", "?RRRRR?R??RRRRRRRRRRRBRR?RRRBRRRRR?R?RRRRRRRRR?GR?", "R?R?RRRRR?RRRRRRRR?R?RRR?RRR?RR?RRRRRRRRR?RRR?RRRR", "RR?RRRRRRRRRRRRRRR?RRRRRRRRR?RRRRRR?RRR??RRRR?BRRR", "RRRR?RRRRRRRRR?RRRRRRR??R?R?RR?RRRRGRRRGRRRRRRRRR?", "RRRGRRRRRRRRRR?RRRRRR?RRRRR??RRRRRRRRR?RR?BRR?RGRR", "?RRRRG?RRRRRRRRRRRRRRRRRG??R?R?RRRR?RRRRRRGRRRRRRR", "RRRRRRRR?RRRRRRR??RRRRRRRRR?RRRRRRRGR?BRR???RRRRR?", "RRRRRRRRRRRRRRRRRRRRRRRR?RRR?RRRRRRRRRRRRRRRRRRRRR", "RRRRRR?RRRRRRRR?RRRRRRRRR?RR?RRR?RRR?RRRRRRR??RRRR", "RRR?RRR?RGRRRRR?RRRRRR?RRRRRR?GRRRRRRRRRRRBRRRRRBR", "RRRRRR?RRRRRRRRRRRRRG?RGRR??RRRRR??RRR??RRRR?RRRRR", "?RRRRRRR??RRRRRRRRRRRRRRRRRG?RRRRRRRRRR?RRRRRRRR?R", "?RRRRRRRRR??RRRRRRRRRBRRRRRGRRGR???RRRR?RRRRRRRRR?", "?RRR?RR?RRRRRRR?R?RR?BRRRRRRRRR?R??R?RRRRRB?R?RRRR", "RGRR?RRR???RRRRRBBGRRRRRR?RR??RRRRRBRRRRRR?GRRRRRR", "RRRRBRRRRR?R?RRRRR??R??RRRRRRRRRRRRRRR?RRRGRRGR?R?", "G??RR?RRRRRRRRRRBRRRRRRRRRRBR?RRGR?R?RR?RR?RRRRRRR", "RRRRG?RRR?RRRRRRR?BRRRRRRRRRRRRRRRRRRRRRRRR?R??R?R", "RRRR???RRR?RR?R?R?GR?RGRRR?R?R?RRRRRRRRRR?RGRRRR?R", "?RRRRBRRRRRRRRRRRRRRR?BRRRBR?RR?RRRGRRRR??RRRRRRRR", "RRRRRRBRRRRRRRRRRRRRRRRRR?RRRRRRRRRRRRRRRRRR?RGRRR", "RRRR?RGRRRRRRRRRRR?RRGRRRRRRRRRRRRR?RR?RRRRRRRRRRR", "RRRRRG?R?RRRRRBRRR?R?RRRRRRRRR?RRRRRR?RGRRRRRRRRRR", "??BR?RR?R?RRRRRRGR?RRRR?RRR?RGRR?RRRGRRRRR?RRRRRRR", "RRR??RR?RRRRRRRR??RR?BR?RR?RRRRRRRRRGRRRRRR?RGRR?R", "RRRRB?RRRRGRR?RRB?RRRRRRR?RRRRRR?R?GBRRRR?RRRRRRRG", "RRRRRR?RRRRBR?RRRRR??RRRRR??RR?RRRRR?RRBRRRR??G?RR" };
        assertArrayEquals(new double[] { 0.11126164293058638, 0.24503014683745916 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case155() {
        String[] board = { "RBRRRRR?RRRBRRRRRRRRRRRRR?RRRRRRRRRR?RRRRR?RBRRRRG", "RBRBRRRRRRRRRRBRRRRRRRRRRRBRR?RRRRRRRRRRRRBRRRRRRB", "?RR?RR?RRRRRRRRRRRBGGBR??RRRRRRBRRRRRBRR?RRR?RRBRR", "RRRG?RBRRRRRRRBRRRRR?RRRRRRRRRG?RRRBRRRRRRBRRRR?RB", "RRRRRRRRRRRRRRRRRRRRRRRR?RRRRRRRRRRRRRRRRRR?RRRBRR", "RRRRRRRRRRRRRRRRRRRRRRRRRRRRRBRRRRBRRRRRRRRBRRRRRR", "RRRRRRRRRRRRR?RRRRRGRGRRRB?RRRRRRRRRRRR?RRRRB?RR?R", "RRRRRRRRRRRRRRRRRRBRRRRRRRRRRRGRRRRRRRRRRRRRRRRRRR", "RRRRRRR?RGRRRBRRGRRRRRRRRRRRBRRRRRRR?R?RRGRRRR?RRR", "RR?RRRRRGRRRRRGBRRRRRRRBR?RRRBRRRRRRRRRR?RRRRRRRRR", "RRRR??RRRRRRRRRRRRRBBRRR?BRB?RRRRRRRGRBGRRBRRRGRRR", "RRRRRRRRRRRRR?RRRRBRRRRRRRRR?RBRR?RBRRBRRRRBRRRRRR", "RRRRRRRRRRRRRRRRR?RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR", "RRRRRR?RRRRRBRRRRR?RRRRRRRRRBRRRRRBR?GR?RRRRRR?RRR", "GR?RRRRRBRRRRBRRRRRRRRRRRRRBRRBRRRRRRRRRRRRRRRR?BR", "RBRRRRRRRRRRRRR?RRRBRRRRGRRRRRRGGRRRRRRRRRRRRRRRRR", "R??RR?RRRBRRBBRRRRRR?RRRRRRRRGGR?RRRRRRRRBRBRRRRR?", "RRBBRBRRRRRR?RRRRRRRBRRRRRRRRRBRRRRRRRRRRRRRRRRRBB", "RRRRRRRRRRRRRRRR?RRRR?RRGRRRRRRRRRRRRRRR???RBBRRRG", "RRRRRRRRRGRRRR???RRRRRRRRRRRRRRRG?RRRRRRRRR?RRRRRR", "BRRRRRRRRRRRR?RRRRR?RRRRRRRRGRRRRRR?RRRBRRRRRRRRRR", "RRRRRRR?RRRRBR??RRRRRRRRRRRRRRRRRRRRGRRRBRRRRRRRRR", "RBRRRRRR?R?BRR?R?RRRRRRR??RGR?RRRRRRRRG?RRRRRR?RRB", "RRRRRRRRG?RRRRRRRRBRB?RRBRRR?RRRRRRR?RRB?RRRRRRRRR", "RRRRRRRRRRRRRRRRRBRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR", "RRRBRRRRRR?RRBRRRRRRRR?RRRRRRRRRRRRRRRRRRRR?RRRRRR", "RRR?RRRRRRRRRBRRRRRRRRRRRBRBRRRRRRRRRRRRRRGRRRRRGR", "?RRRGRRR?RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRBRRRR?RRR", "RBRRRRRRRRRR?RRRRRRRRRBRBRR?RRRRRRRRRRRRRRR?R?RRRR", "RRBRRRR?RRRRRRRGRRRRRRRRRRRR???RRRGRRRRB?RRRRR??RR", "RRRRRRRRRRRRBRBRRRRRRRRRRRBRRBRRRR?RRRRRRRR???RRRR", "RRBRRRR?RR?RRR?RRRRRRRR?RRRRRRRRRRR?RRR?RBRRRRRRRB", "?RRRRRR?RRRRRRRRR?RRRRRRRRBRRRRRRRR?RRRRRRRRRR?RRR", "RRRBRRRRRRR?RRR?RRRRRRRRRRRBR?RRRRRRRRRRRRRRRRRRRR", "RRBRRRRRRRRRRRRRRRR?RRRRRBRRRRRRRRRRRRRGRBBBRRRBRR", "BRRRRRRRRRRRRRRRRRRRRRRR?RRRRRRRRRRRRRRRRRR?BRRG??", "RRBRRRRR?RBRRRRRRRRRRRRRRRRRRRBRRRRRR?RGRRRRGRR?RR", "RRRRRRRRBR?BRRRRRRRRRRRRRRRRRRRGRRRGRRRRRRRRBRRRRR", "RRRRRRRRRBRRRBRRRGRRRR?RRRRRRBRRRR?GR?RRRRRRRRRRRR", "RRRRRRRRRRRRRRRRRRRRRBRRRRRRRRRRRRRRBRRRRRRGRR?RRR", "RR?RRRRRRRBRRRRRRGRRR?RRBRRRRRRRRRRRRRRRRRRRRRRRRB", "?GBRRBRRRRRRB?RRRRRBRRRR?RRRBRRRRRRRRRRBR?BRRRRBRR", "RRRRRRRRRRGRG?RRRRBRRRBRRRRRRRRRRBR?RRRRRRRRR?RRRR", "RRRR?RRRRRRRRRBRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR", "RRRRBRGRRRRRRRRRRRRRRGRRRRRRRRGRRRRRRRRRR?RRRRRRRR", "RRRRRRGBRRRRRRRRRRRGRRRR?RRRRRRRRRRRRRRRR?RRRRBRRR", "RRR?RRRRRRR?RRRRR?RRRRRRRRRRRRRR?RRRRR?RRRRR?RRRRR", "RRRRRRRRRRRRBRRRBGRRRRRRRRRRRRRRRRRRRRRRRRRRRRR??R", "RRBRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR??RR", "RRRRRRBRBRRRRRRRRRRRRRRRRR??RRRRRRRRRRRRRRRRRRRRRR" };
        assertArrayEquals(new double[] { 0.33424782807498843, 0.26402742731554407 }, rgbgame.probabilities(board), DELTA);
    }

    @Test
    public void case156() {
        String[] board = { "RRRRRRRRRRRRBRRRRRRRRRR?RRRRRRRR?RRRRRR?RRRRRBRRRR", "RRRRRBRRRRRRRR?RRRRRRRRRRRRRRRBRRRBRRRRRRRRBRBRRGR", "RRB?RRRRRRRRRR?RRRRRRRRRRRBRRRRRRRRRR?RRRRRRRRBRRR", "RRRRRBRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR", "RRRRRRR?RRGRR?RRRRRRRBR?RRRRRRRRRRRBRRRRRRRRR?RRRR", "RRRRRRRRRBRBRRRRRRRRRRRRRRBRRRRRRRBRGBBRRRRRRRRRR?", "BGRRRRRRRR?BRRRRRB?B?RRRBRRGRRRRRR?RRR?RRRRRRRRRRR", "RRRRBRRBRRRBRRRRRRRRRRRRRRRBRRRRRRRRRRBRRRRRR?RRRR", "GRRRRRBRRRGRRBGRRR?BRRRRRRRRRRRRRRRRRRRRRBRRRRRRRR", "RRRRRRBRRBRBRRRRRRRRRR?GRRR?RRRRRRR?RRRRRRRRRRRRRR", "RRRRRRRRRRRRRRRG?RRRRRR?RRRRRBRR?RRRRRRRRRRRBRRRRR", "RRRBRRRR?RRRRRRRRR?RRRRRRR?RRR?RRRRRRRRBRRRRRRRRRR", "RRRRRRRGRRRRRRRRRRRRRRRRRRRRBRRRR?RRRRRRBRRRRRRRBR", "RRBBRRRR?RRRRRRRRRRRGRRRRRRRR?RBBRRRRRRRRRRRR?RRRB", "RRRRRRRGRRRRBRRRRRRBRRRRRRRRRRRRRR?RRRRRRRRRR?RRRR", "RRRGRRBRRRRRRBBGRRRRRRRRRRR?RRRRRRRRRRR?RRRR?RRRRR", "RRRRBRRRRRRRRRRR?RRRRGBRRRRRRRBRRRRRRRRRRRRRRRRRRR", "RRRRRRRRRRRRRRGGRRRRRBBRRR?RRBRRRRRRRRRRRBRRRRR?RR", "RRRRBRRBBRR?RRRRRRRRRBRRRRRRBBRRRRRRRRRRGRBRR?RRRR", "RRRRRGRRRBRRRRRRRRRRRRBBRRRRRRRRRRRRRRRRBBBBRRRRRR", "RRB?RR?RRRRRRRRRRRRRRRRRRR?RRRRRRRRRBRRRRRRRRRRRRR", "?RRR?BRRRRRRRRRRRRRRRRBRRBRRRRRRRRR?B?RRRRRRRRRRRR", "RRRRRRRRRRRBRRRRRRRRRBBR?BRB?RRRRRRBRRRRRRR?RRRRRR", "RRRRRRRRBRRRRRRRRRRRRRRRRRRRRRRRBRRRRRRRRRRRRRRBRR", "RRRRRRRRRRRBRRRRRRRRRRRRRRRRRRRRRRRRRRRRGRRRRRRRBR", "RRRRRRRRRRRRRRR?RRRRRRRRRRRRRR?RRRRRBRRRRRBRRRRRRR", "RBRRRRR?BRRRRRRRRRRRRRRRRRRRRRR?RRRRRRRRRRRRRRRRRR", "BRGRRRRRRRRRRRRBRBRRRRRRRRRRRRRRRBRRRRRBRRRRRBRRRR", "RRRRR?RRRRRR?RRRRRRRRRRRRR?RRRRRRRRRRRRRBRRRRRRRRR", "RR?RRRRRRRRBRGRRRRRRRRRBRBRRRRRRRRRRRRRRRRRRRRRRRR", "RRRRRRRRRRRRRRRRRRRRRBRRRRRRRRRRRRRRRRGRRRRRRRRBRR", "RRRRRRRRRRR?BRBRRRRRRRRRR?RRRR?RRRRRRR?RRRRRRRRRRR", "RRRRRRRRRRRRRRR?RRBRRRRRRRRRBRRBRRRRRRRRRRRRRRR?RR", "RRRRRRRGRGRRRRRRRRRR?RRRRRRBRRRR??RBRRRRRRRRRRBBRR", "RRRRRRRBGRRRRRRRRRR?RRRRRRRRRRRRRRRRR?RRRRRRR?RRRR", "RRG?RRRGRBR?BRGRRRRRRBBRRRGRRRRRRRRRRRRRRRRRRRRRRR", "RRRRRR?BRRRR?RRRRRRRRRRRRRRRRRRRRRRRBRRRRRRGRRRBRR", "BRRRBRRRRRRGRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR", "RRGRRBRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRGGB", "RR?RRRRBRRR?RRRRRRRRRR?RRRRRRRRRRRRRRR??RRRRRRRRRG", "RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR?RRRRR", "RRRRRBRRRRRRRRBBRRRBRRBRRRBRRRRRRRRRRRRR?RRRRRRRRR", "RRBRRRRRRRRRRRRGRR?BRRRRRRRRRRRRRR?RRRRRGRRRRBRBRR", "RRRBR?RRRR?RRRRRRRRRRRRRRR?RRRRRRRRRRRRRRRRRRRRRBR", "RRRRRRRRRRRRRRRRBRRRRRRRR?RRRRRRRB?RRRRRRR?RR?RRRB", "RRGRRRGBRRRRRRRRRRRRRRRGRRRBRRRRRRRRRRR?R?RRRRRRRR", "RRRRRRRRGRRRRRBRRRRRRRRRRRRRRRRRRRRBRRRRRRRBRRRRRR", "RBRRRRRRBRRRRRRRRRBRRRRRRB?RRRRRRRBRRBRRRRRRRRRRRB", "?RRRRRRRRRRRRRRBRRRRRRBRBRRRRRRRRRRRRRRRRRRRRRRRRR", "?RRRR?R?RRBRR?RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRGRRRR" };
        assertArrayEquals(new double[] { 0.33333333333333326, 0.33333333333333337 }, rgbgame.probabilities(board), DELTA);
    }

}
