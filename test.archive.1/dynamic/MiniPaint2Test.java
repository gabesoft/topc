package topc.test.dynamic;

import junit.framework.*;
import org.junit.Test;
import static org.junit.Assert.*;
import topc.dynamic.*;

public class MiniPaint2Test {
  MiniPaint2 minipaint = new MiniPaint2();

  @Test
  public void case1() {
    String[] picture = { "BBBBBBBBBBBBBBB", "WWWWWWWWWWWWWWW", "WWWWWWWWWWWWWWW", "WWWWWBBBBBWWWWW" };
    int maxStrokes = 6;
    assertEquals(0, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case1a() {
    String[] picture = { 
      "BBBBBBBBBBBBBBB", 
      "WWWWWWWWWWWWWWW", 
      "WWWWWWWWWWWWWWW", 
      "WWWWWBBBBBWWWWW", 
      "BWBWBWBWBWBWBWB", 
      "BWBBBWBWBWBBWWB", 
      "WWWWWBBBBBBWWWW" };
    int maxStrokes = 6;
    assertEquals(32, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case1b() {
    String[] picture = { "BWBBW", "WWWWB", "BWBWW" };
    int maxStrokes = 3;
    assertEquals(5, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case1c() {
    String[] picture = { "BBWWWBBWBBBWWBWBBBWWWWWWWWWWBWBWBWWBBWBBBBBWWWWWBW" };
    int maxStrokes = 1;
    assertEquals(22, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case1d() {
    String[] picture = { "BBBBBBWBBBWWWWBBWWWWW" };
    int maxStrokes = 1;
    assertEquals(10, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case1e() {
    String[] picture = { "BBBBBBWBBBWWWWBBWWWWW" };
    int maxStrokes = 2;
    assertEquals(3, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case1f() {
    String[] picture = { "WBWWBWWBBWBBWWWWWBWWBBWBWWBBBWBBBWBB" };
    int maxStrokes = 1;
    assertEquals(18, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case2() {
    String[] picture = { "BBBBBBBBBBBBBBB", "WWWWWWWWWWWWWWW", "WWWWWWWWWWWWWWW", "WWWWWBBBBBWWWWW" };
    int maxStrokes = 4;
    assertEquals(5, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case3() {
    String[] picture = { "BBBBBBBBBBBBBBB", "WWWWWWWWWWWWWWW", "WWWWWWWWWWWWWWW", "WWWWWBBBBBWWWWW" };
    int maxStrokes = 0;
    assertEquals(60, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case4() {
    String[] picture = { "BWBWBWBWBWBWBWBWBWBWBWBWBWBWBW", "BWBWBWBWBWBWBWBWBWBWBWBWBWBWBW", "BWBWBWBWBWBWBWBWBWBWBWBWBWBWBW", "BWBWBWBWBWBWBWBWBWBWBWBWBWBWBW", "BWBWBWBWBWBWBWBWBWBWBWBWBWBWBW", "BWBWBWBWBWBWBWBWBWBWBWBWBWBWBW" };
    int maxStrokes = 100;
    assertEquals(40, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case4a() {
    String[] picture = { "BWBWBWBWBWBWBWBWBWBWBWBWBWBWBW", "BWBWBWBWBWBWBWBWBWBWBWBWBWBWBW", "BWBWBWBWBWBWBWBWBWBWBWBWBWBWBW", "BWBWBWBWBWBWBWBWBWBWBWBWBWBWBW", "BWBWBWBWBWBWBWBWBWBWBWBWBWBWBW", "BWBWBWBWBWBWBWBWBWBWBWBWBWBWBW" };
    int maxStrokes = 60;
    assertEquals(60, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case5() {
    String[] picture = { "B" };
    int maxStrokes = 1;
    assertEquals(0, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case6() {
    String[] picture = {};
    int maxStrokes = 3000;
    assertEquals(0, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case7() {
    String[] picture = { "BBBBBBBBBBBBBBB", "WWWWWWWWWWWWWWW", "WWWWWWWWWWWWWWW", "WWWWWBBBBBWWWWW" };
    int maxStrokes = 5;
    assertEquals(5, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case8() {
    String[] picture = { "BBBWWWWBWWWWBBWWWBWWWBWBWBBBWWWWBWWBWBWBWWBBBWBBWW", "BWBWBWBWWWBWWBWBWWBWWBBWBBWWWWWBWWBBWBWWBBBWBBBWBB", "BWWBBWBBBBBWWWBWWBWWBWBWBBBBBWWBBBWBWWBWWBBBBBBWWW", "BWWWBWWBBBWBBWWWBWBWBBBWWBBBWBBWBBWBWBBBWBBBWWBBBB", "WWBWBWWBBWWBBBWWWBWWWBWBWBBBBWBBWWBBBWBWWBBWBWBWWB", "BWWWWBWWBWWWWWBBBWWBWWBWWBBWBBWWBWWWWWWBBWWWWWWBWW", "WBWWBWBWWBWBBBWWBWBBWWBWWWWWBBBWWWWWWWWBWWBWBBWBWW", "BWBBWBWWWWWBWBBBBWBBBBBBWBWBBBWBWBWWBBWBBWBBWWBBWB", "BBBBBWWBWWWWWBWWWBBBBWBWWBBWBWBWBBWBBBWBBWWBBWWWWB", "BWBWBBWWBWBBWWBWWWBBBBBBBWBBWWWBWBWWBBBWWBBWWBWBBB", "BBBWWBWBBWWBBWBBBWBBWBBWWBBWWWWWWWWBBBWWWBBBWWBWWW", "WBBBBBWWWBWWWWBWBBWBWBWWWBWWBBWBBWBWWBBBBBWWBWWBBW", "BWWBBWBWBWWWWWBBWBWWBBWWBWWBBBWWBBBWBBWWBWBBBBBWWB", "WWWWBWBWWBBBWWBBWBWBWWBBBBBBWBBBBBBBBBWBWBBBWBWWWB", "WWBBBWBWWBWWBWBBWWWBWWWBWWWBBBBBBBWWBWBBBWWWWBWBWB", "WWWBBBWBBBWBWWWBBWBWBWBWWWBBBBBWBWBWWWWWBBBWWBWBWW", "BWBBBWBWWBWWWBWBWWWBBWWBBWBWWBBWWBWBBBWBWBWWBWWBBB", "WWWBBWBWWBBBBWBBBBWBWBWBBWWWWWBBBWWWBBWWBBBBBBBWWW", "WWBWBWWWBBBBWWBBWBWWWWWBBWBWBBWBWBWBWBBWBWWBWBWBWW", "BBWBWWBBWBBWBWWWWWBBWBWBBWBWWWWWBWBBWBBBBBWWWBBWWW", "BBBWWWBWWBBWBBWBBWWWBWWBBBWWWWWBBBBBWWWBWWBWBBWBBW", "WBWWBBWWBBWBWWBBWBWBWBBBBBBWBWBWWWWWBBWBBBWBBBWWWB", "WBBBWBBWBWWWBBWBBBBWBWWWBWWWWBBWWWBWBWBWBBWWBWBBBB", "BWWWWBWBBBBWBWBBWBBBWBWBWBWBBWWWBWWBWBWBBBBWWBBWBW", "BBWBWBWBBBWBBWWBWWWWBBWWBWBWWWBBWBBBBWBWBWWBWBBWBW", "WWWBWWWWBBBBBBBWBWWBWBWBBWBWWBWBWWWBBBWBBBWWBWWBBB", "WWWWWWBBWWWBWBWWBBBWWWWBWBWBBBWWBWBBBBBBWWWBWBWBWW", "WBBBBBBWWBWBBWWWWWBBWWWWBBBWBWBBBBWBWWBBBWBWBBWWWW", "BBWWBWWBWWBWBBWWBBBWWBWBWBWBBWBWBWBBBWBBBBWWBBBBBB", "BBWBWBBWBBWWBBBWBWBBBBWWBBBWWBBBWWBWBBWBBBWBBBBBBB", "WWWWWBWBBWWWBBWWWWWWBBWBWBBWBBBWWBWBWWWWWBWWWBBWWW", "WWWBBWWBWBBBBWWWBWBWWWBBBBBBBWWBWBWWWBWWWWWWBBWBWB", "BBWBWWWBWWWWWBBBBBBWBWBBWWWWBBWBBWBBBBWBWBBBWWBBWB", "BWBWWWWBBWBBBBWWWBBWWWWBBBWWWBBBBWWWWWWWBBWWWBWWBW", "WWWBWBBBWBWWBWWWWWWBWWWBWBWWBBWBWWBWWWBWBWBWBBBBBW", "WBWWBBWWWBWWWWWWWBBWWBBBBBWWWWWWWBWWWBBWBWWBWBBWBW", "BBWBWWWWBBWWBWWWBBWBWBBWBBBWBWWBWBWBBWWWWWBBWBWWWB", "BBBWBBWWBWWBWWBBWBWBBBWWWWBWBWBBBBBBBWWBBWWBBBWBWB", "WBBWWWBBBWBWWWWWBWWWWWWBBBWWWBBBWBWBWWBBBWWBBBWBWB", "BBBBWBWWWBWBWWWWBWWWBBBWWBWBWWWBBWBBWBWBBWBWWWBWBW", "BBBWWBWWWWBWWWBWBWBBBWWWBWBWBBBBWBBBBBWWBBBBWWBBBW", "BWBWBWBBBBBWBBBWWWWBBWWBWBBBWBBWWBWBWWWBWBBBBWBWWB", "WWBWBWWBBBWWBBWBBBWBBBWBBBBWWBWWWBWWWWWBWWBBWBWWBW", "WWWBBBWWWBBWBWBBWBWWWWBBWBWWWWBWBWBWBWWBBWBBWBWBWW", "WWWBWWWBWWWBBBWWBBBBBBBBWWBBBBBWWBBBWBBBBBBWWBWWWB", "BWBWWBBBWBBWBWWBBWBWWWWBBWBWBBBWWWWBBWBBBWWBBBWBBB", "BBWWWBWBWWBBWWBWBWBWBBWWWWBWBBBBBWBWBBWBWWWBBWBBBW", "BWWWBBWBWBBWBWBWBWWWBWBWBBBBWWBBWBBBBWBBBBWWBBWWBB", "WBBWBWWBBWWBWWBWWWWWWWWBBBBBWWWBBBBWBBWBWWBWBBWWWW", "BBBBBWWBWBBWBWWWWBBWWBBBBWBWWBBBBBBBBBWWWBBWWBBWBW" };
    int maxStrokes = 139;
    assertEquals(825, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case9() {
    String[] picture = { "BBWWWWWWWBBBBWWWBWWWWWWWWWBWWWBWBWBBBWBWBWWWBBWWWW", "WWBWBBBBWBWBBBBBWBWWWBWWBWBBBWWBBBWBBBWBBWBWWBBBBB", "BBWWBBBBWBWBBWWWBBWWWBWBWWBWBBWWBBWWBWWWWBBBBWBBBW", "WBBWWBBWBBBBWWBWBBWBBBBBBBWBBBBWWWWWWBBWWBWWWBBBBB", "WBBBBBWBWWBWWBBWBWBWWWBBBBWBBBBWBBBWBWBBWBBBWBBBBB", "WBBWWBWWBBWWWWBBBBBWWBBBBWBWBWBWWWWBWWBWBBBWWWBWWB", "WBWWBWBWBBBBWWWBWBBBWBBBWWWWBWWBBWBWWBWWWWWBBWWBWW", "WWBWBWBWBBBBWBBBBBBWWWBBBWWWWBWWBWWWBBBWBBBWBWWBBW", "WWBBBBBWBWBWWWBBWWWWBBWWWBBWWBBBBWBWWBWBBBBWWBWBWB", "BWWWWWWBBWBBWBWWWBWBBBWBBBBWBWBWBWWWWWBBWWWBWWWBWB", "WWWWBWBWBWBBWWBBWWBWBWWWBWWWBWBWWBBBWWWBWWBBWWWBBW", "BBWBWBBWBBBWBBWWWWWBBBBWBWBBBBBWBBWWWWBBBBWWWWBBWB", "BWBBBBBBWWBBBBBBBWBBBWWWBBBBWBWBBBBBBWBWBBBBWWBWWW", "BWBWBBBBWBWWWBWWBBWWBBWBWBWBWBBWWWWBWWWBWBBWBBWWWB", "BBWBBWWBBWBBWWBBWWBWWWBWBBWWWWWBWWBWBBWBBWWWWBBWBB", "BBBWBWBWBWWWWWBWBBWBWWWBWBWBBBWWBBWBBBBWWWBWWBWWBB", "BWWBWBWWWBBBBWWBBWBWWBBBBWWWBWWWWBWBWWWBBWBBWBBBBW", "WWWBWWWWBBWWBBBBBWBBBWWBBWWWWBWWBWWWWBBWBWWBBBBWWW", "BBWBBWWWBBWBBBBBWBWWWBWBBBBWBWBBWBBWWWBWWBWBBWBBBB", "WWWBWWWWWBBBBBWWBWWWBBWWWWWBBBWBBBWWWWWBBWWBBBBWBB", "WBBWWWBBBBBBBWWWBWBWBBWBBWBBBBBBBBBBWWWWBBBWBWWWBW", "WBBWBBWBWWBBWWWWBBBWWWBWBBBWWBWBWWWBWWBBWBWWWBBBWB", "BWWBWWWWBBWBBBWWBWWBBBBWBBBWWWBBBWBWBBWWWBBBWWWBWW", "WWWWWWWBWWBWBWBBBWBBBWWWBWWBWWWWBBBWWBBBWBWWWBWWBB", "WWWWBBWWWBWBWWBWWWWBBBBWWWWWBWBWBBBBWBBBBBWBWBWBWW", "WWBBWWBWWWWBWBBBWBWBWWWBBWBBWWWBWBBBWBBWWBBWWBBWWW", "BBBBWBWBWWWWWWBBBWBBWBWBWBWWBWWBWWBBWWBBBBBBBBBBBB", "BWWBWWBBBBBWWWWBBWBBBWBWWWBWBBWBBBWWBWWBBBWBBBBWBW", "WWWBWWBBWBWWWWBWBBBBBBWBBWWWWWBBBBWBBBBBWWBWWWBWWB", "BBWWWWBWBWWWWBWWWBWWWBBBWWBBBWBBWWBWWBWBBWWBWBBBWW", "BWWWBBWWWBBWWBBBBBWBWWBWWBWWWBWWWBBWBWBBWBBWWBBWWW", "WBWBWBWWBWBBWWBBBWBWBWWWWWBWWWBBWWWWWBWBWWBBWWWBWB", "BWWBWWWWWWBBBBWWWBWBBWBWBBBWWWBBBBWWBBWBBWWBWBBBWB", "WBBBBBWWWBBBBBBWWWWBWWBWWBBWBWBBWWWWBBWBWBWBWBBBWB", "BBWBWWBBWWBBWWBWWWWWWWWBBWWBBWBBWBBBBWBBWWWBWWWBWB", "BBWBWBWWBWBBWWBBWWBBWWBBBWBBWBWBBWBWBBBWBWBBWBWWWB", "WWBWWWWWBWWBWWBBWWBBBWWBBBBBWBBBBBBBBBWWWBBBBBBWBB", "BBBBWBWBWBWBWWBWBBBBWBWWWBWWWWBWWBWBBBBWWWWWBWWBBB", "WWWWWWBWWBBWWWBWWBWWWBBWBWWBWBWWWBWWWWBWBWBBBWWWWB", "BWWBWBWWBBBBWBBBWBWWBWWWBWBWWBBWWBBBWWWBWBWBWBBWWB", "WWBBWWWBBBBWBBBWWWBBWBWBWWBWWBWWWWBBWWWBWWWBBWBBWW", "WBWWBWWBWBBBBBBBWBWBWBBBBWBBBWWBWBWWWWWBWWBWBWBWWW", "BWBBWBWBWBWBWBBWBBBWWWBWBBBWWWWWBWBBWWBBBBBBWWWBWB", "WWWBWBBBBBBWBBBBWWBBWWWBWWWWBBBBWBWBBBWWBBBWBWWWWW", "BBBBBBBWBWBWBBBBWBBBWBWBBWWWWBBBWWWWWWWWWWBBWBBBWW", "BBBBBWWWWBWWBBWWBBWBBBBWBWWBBWWBBBBBBBBBWWWWWBBWBW", "WBWWBWBBWBWWWWBBBWBWWWBWBWBWBWWWWWWBBBBBBBBWWWWWWB", "WWBWBWWWWBWBBWBWWWWBWBWBWWBWWWBBBBBWWBBWBBBBWBBBBB", "BBWWBWBBWWBWWBWWBWWBWBWBBWBWBWBBWWBBBBBBBBBBBBBWWB", "WWBWWBWBWWBBWWBBWWBBBWBBBWWWBWBBWBBWBWBWBWWWBBWWWB" };
    int maxStrokes = 599;
    assertEquals(333, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case10() {
    String[] picture = { "BWBBWWWBBBBBBWWWBBWWBBWBWBBBWBBBWBWWBBBBBBWWWBBBWB", "BBBWBBBBBWWBWBBWBBWWWBWWWWWWWBWWWWBWWWBBBBBBBWBBWW", "WBWBWBWBBWWWWWBBBBBBBWBWBBBWWBWBWBBWWWWWWBBBBWWBBB", "WBBBWWBWWWWWBWWBWBBBBBBWWBWBWWBWWBWWBWBBBWWBWWWWWW", "BWBBBWBBWWBBBWWWWWBBBWWBWWWWWBBBBBBWBWBWBBWBBBWWWW", "WBBBBWWWBBBBWBBBWBBWWBBWWWWWBBWBBWBBWWBWBWBWWWBBWW", "WBBWWWBBWWWWWWWBBWWBWBBBBBBWWBWBWWWWWBWWBBWWWBWBBB", "WWBWBWBWWWBWWWWWWWBWWWBWBWWWBBBBWBBBWWBBBBWWWBWBBB", "BBBWBWWBBBWBWBBBBWWBWBWWBWWBWBBBBWBWBBBWBWWBBWBBWW", "BWWWWWBBWWBBWBWWWBBBBWBBWBBWBWWWBBWBBWBBBBBBWBBBBW", "WBBBBBBWBBWWBWBBWBBBBBWWBWBWWWBWWWBBBWWWBWBBWBBWWW", "BBWWBWWWWBBBBWBWWWBWBWBBBBWWWBBWWWWWWBWBBWBBWWBWBW", "WWWBBWBWWBBBBBBWBBBWBBBWBWBWWWBBWWBWWWWBBWWBBWWWBB", "WWWBBBBWBBWWWBBBBWWWWBBWBWBBBWWWWWBBWBWWWBWWWBWWBW", "WBWWWWWBBBWWWBWBBWWWBWBWBWWBBBWBWBWBWWBWWWBWWBBWWB", "BBWBWWWWBBWBBWWBWBWBWBWWWBWBWWWBWBWWWWWBWWWBWWWBWW", "BBBWWWWWBWBBWWBBBWBWWBWWWBBWBWWBWWWBBWBBWBBWBBWBBW", "BWBBBBBBBBWWBWWWWWWBBBWWWBBBBWWBBWWWWBWBWWBBWBWWBW", "BWBWWBWBBWWBWWWBWWBWWWBWWBBBBWWWBBWBBBWBWWBWWWWWBB", "BWWBBWBWBBWBBWWWWBBWBBBBWBWBWWWBWBWWWWWWWBBWWWWWBW", "WWBBWBWWBBBBBBWBBWBWBBWWBWBBWBWWWBBWBBWWBBBBWBBBBB", "BBWBWBBBBWBBWBBBBWWWWWWWWWBBWWBWWBBWBWWWWWWBBWWBWB", "WBBWWBBBBBWWWWBBWBWWWWBBBWBWBBWWWWWWWBBBWBBWBBWWBB", "WWWBWWWBBBBBWWWBWWWWWWWWWBBBWWBBBWBWBWWWWWBWWWWWWB", "WWWWBBBWWWBBBWWWBWWBBWBBWWWBBBBBWWWBWBBBWWWBBWWBWB", "WWBWBWWWWBWWWWBWWWBWWWWWWBBBBWBBBBBWWBWWWWBWBBWBBW", "BWWWBWWWBBWBBWBBBWBBBWBWWBWBWBWBBBWWWWWWWWBBWBBWBW", "BWBBBBBBWBWBWBBWWWBWBBBBWBBBWWWBBWWBBWBBBBWBWBWBBW", "WBWBBBWBWBWWWBBWWWWWWWBWBBWWWBBWWWWWWBBWBBWBWBWBWB", "WWWWWBBBWBBWBWWBWBBWBWWWBBWBWWBWBBBBBBWBWWBWWBWWBW", "BBBWBBBBWWWBWWWBWBBWWWWBBBWWWWBWBWWBWWWWBWBWWBBWBW", "WBWWBWBWBWBWWWWBWBBBWBWWWWBWWBWWBBWWBBBBWWBBBBWWBB", "WWWWBWBWBBBWWWWBWBBWWWBWBBBBBWBWWBWBWWWWWBWWBWWBBW", "BWBWBWBBWBBBWWBWWBWBBWBBBWWBWWBWBWWBBWWWBWBWBWBWBW", "BWBBWWBWBWWWWBBBWBBBWWWBWBBWWWWWWWWWWBWWBWBWWWBBBB", "WBBWBWBWWBWWWWBWWBWBBWBWWBBWBBBBWWBBWWBWWWBWWBBWWB", "BWBBBWBWBWBBBBBBBWBBBWWBWWWBBBWWWWBWBBBBBBWWWWWWWW", "BWWBWWBBWBWBWWBBBBWWWWBBWWBWWBWWWWBBBWBBBWWWBBBBBB", "BWBWWBWBWWBWBWBBWWWWWBBWWBWWBBWWBWWWBBWWWWWWWBWWWB", "BWBWBWBBBWBWBBBBBBBBBBWBWBWWWWBWWWBWBWBBBBWBBWBWWW", "WBWWBWBWWBBBWWWBWBBWWBWWWBBBBWWBBBWWWWBBBBWBWWWWBW", "WWBBBBBBWBBBWBWBWBBWBWWWBBWBBWWBWWBBWWBBBBWWWWBBWB", "WWWBBBBWWBWBBWBBBWBWBBWWBBWBBWBWBBWBWBBBBWBBBWBWWB", "WBWWWWWBBBWWBBWWBWWBBWWWBWBWBBWWWBBWWWBBBWWWWWBWBB", "WWBBBWBWWBWWWWBWWBWBWBBBBBBBWBBBWWWWBBWBBWBWBBBWBB", "WBBBWWBBWWWWBBWBWBBWBWBWWWBWBWBWBBWBBWBBBWBBBWWBWB", "WBBBBWWBWWBBBBWWBWWWWWWBBBBBBWWBBWBBWWBWBWWBBWWBWB", "WBBWBBBWBBWWBBBBWWWWBBBBBWWWWWWWBWWBBWWWBWBWBWBWWB", "WBBWBWBBBBBWBBBWBBBBBBBWBWWBBBWWBBBWBWBBWWWBWBWWWB", "WWWWWBWWWWWWWWWWWBWBBBBWWWBBBWBWBBBBWBBBWWBBBWWBBW" };
    int maxStrokes = 176;
    assertEquals(721, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case11() {
    String[] picture = { "WWBWWBWBBBBBBBBWBWWBBWBWBWBBWWWWBBWWWBBWBWBBWBBWBB", "WBWBBBBBWBWBBWBWBWWBBBWBWBBBBBWWWBWBWBWWBWBBBBBBBB", "BWBWBWBWBBBBWWWWWWBWBWBBWBBWBWWBWWWBBBWWWWBWWBBBWB", "WBBWWWBBBBWWWBWWWWWWWWBWWWWWBBBBBWWBBWBBWBBBBWWWWB", "BWBWBBBWBBBBWBWWWWBWWWWBWBWWWBBBBWBWWWWBBWBBBWWBBW", "WWWBWBWWBWBBBBBBBWWWBBBWWBBWWWBWWBBWBWWWWBBBBBBBWW", "WBBBBWWWWBWBBWBWBWBBWBWBBBWWWBWBBBWWBBBWBBBBBBWBBB", "WBWWBWWWWWBWBWBBWWWWWWWBWWWBBWWBBBWWBBWBWBWWWWBBBB", "WBBWBWWBBWWBBWBWWBBWBWBBBWWBBWWBBBWBBWBBBWWWWBBBWB", "BWWWWBWWBWBBWBBWBBBWBBWWWWBWBWBWBBWWWBWBWBBBBWWWBW", "WBWBBBWBBWWWBBBWBBBWWWWBBWBWWWWBWWWWWBWBBBWWWBBWBW", "BBWWBBWWBWBWBBWWBBBWBWBBWWWBWBWWWBBWBBWBBWWBBBWBBW", "BWWWWWWBBWWWWBBBBBBWWWWBBBBWBWWBWWWBWWWWBWWBWWBBBB", "WBWWBWBWBBWBWBWBWWWWWBWWWBWWWBBWBBBWWBBWWBWBWWWWBB", "WWWBWBWWBWBWWBWWWWWWWBWBWWWBBWBBBWBBWBWWBWBWWBWWWB", "BWWBWBWBWBWWWWBWWWWBBWBWBWBWWWWBBWWBBWBWBBWBBWBWWW", "WWWWWWWWWBBWWBWBBWWWWWBWWBBWWBWBWWBWBBBBBBWBWWWWWB", "WBBBBWWWBBBWWWWBBWWWWWBWWWBWBBWWWBWBBWWBBWWWWBBWBB", "BWWBBWBBWBBWWBWWBWWWBWWBBBWBBWWWBBWWWBBBWBBWWWWBBB", "BBBBBWBBBBBWWWBBWBBBBWWBBWBBWWWWWWBWWWWWBWWWBWWWBW", "WBBWBWBBBWWWBBWBWBBBBBWBBWBBBBWBWWBWBBBBBWBWWWBWWB", "BWWWBWBBWWWBBBBWBWWWBWBWWBBWWBBBWBBWBBBWWBBWWWWWBB", "WBWWWBBBWWWWBWBWWBBWBWBBBWWBBBBWBWWWWWBWWWWBWBBBBW", "BBBBBWWWWBBWWWWWBBWBBBBBWBWWBBBBBWWWBBBWWWWBWBBWWB", "BWWBBWWWWWBBBWBWWBWBWBWWBBBWBWWWWWWWWWWWBWWWBWWWWB", "WBBBWBWBWBBWWBBWWWWBBBBWWBWWBWWBWWWWBBWBWWWWBWBWBB", "BWBBWWBWBBWWWWWWBBBBWWBBWBBWWBWBBBWBBWBWWWWWBWBBBW", "WBWWWWWBBWWWWBBBWWBBBBWBBWBBBBWBWBWBWBWWWWBBWBWBWW", "BWWWWWWWWWWBWBWWWBWWWBBBBWWBBWWWBBBBBBWBBWBWBBWBBW", "WWBWWBWWBWWWBBBBWWBBBWBBBBWBWWWBBBWBBBWWBBWWWBBWWB", "BBBBWWWWWWWBWWWWWBWWWBWBWBWBWWBBWBBWBWWBBWBBWWBWBB", "BWWWWWBBWBWBBWWWWBBBWBBWBBWWWBBBWWWBWBBWWBBBWBWBBW", "BBWBBBBBWWWBBBWWBWBWWBBBWBBWBBWBWWWWBWWBWBWBWWWBWB", "WBWWWWWBWWWBBBWBBWBWWBWWWBBWWBWBWBWBWBBWWWWWWWWWWB", "BBWBBBBBWWBBBBWBBWBBBBBBWBWWBBWBBWWBBWWBBWWWWWWBBB", "BWWBWWBWWWWBWBWBWWBBBBWBBWBWWBBWWWWBBWWBWWWBWBWWBB", "BWBWBWBWBWWWWWWBWWBBWWWBBBBBBBWWBBBBBWWBBBWWWBWBBW", "WWBWWWWWWWBWWBWBWBWWWBWWBWBBWBBWBBWWWWBWWWBWBBBBWW", "BBBWWBWWBBWWWBBBBBBWBWWWWBWBBWWWWWBBWWBBWBBWWBBWBW", "BBWWWBWWWWBWBWBBBWWBWWWWWBBWWWBWBBWWWWBBBBWWBBWWWW", "BBWBBBWWWWBWBWWWWWWBBWWBBBWWWBWWBWBBWBWBWBWBBBBWBB", "BBWWWBWBWWWBWBWWBBWWBWWBBBWBWBWWWWBBWWWBBBBWBWWBWW", "BBBBWBWBWBBWWBBWWBWWWBWBWBBBBWBWWBBWWBWBWWBWWBBWWW", "BWWWWWBWWWWBWBBWBBBBBWWWBWBBBWWBWWWWBBBBWWWWBWWWWB", "WBWWWWWWWWWWBWWBWWBBWWWWBWWBWBWWBBBBWBBWBBBBWBBBBW", "WWWWWWBBWBWWWWBBWBBWWWBWBBBBBWBBBBWBWBWBBWWWWBBWBB", "BBWWWBBWWWWWBBBBWBBBBBWWWBBWWWBBWWWBBBBBBBWBWWWWBW", "WBBWBWBBBWBWWBWWWBBWBBWWBWBBWWBBBWWBWWBWBWBBWWWBWB", "BBWWWWWBBBBBWWWBWWWBWWBWBWWBWWBBBBBWBBWWWBBBWWWBWB", "BBBWBWBWWWBWBBBWBBBWBBBBWWBWBWBBWWWBWWBBWBBBWWWBWB" };
    int maxStrokes = 490;
    assertEquals(390, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case12() {
    String[] picture = { "WBBWWBBBWWBWWBWWBWWWBBWBBWWBBWWWBBWWWBWWWBWBBBWBWW", "BWWWWBWBBBWWBBWWWWBBBBWBWBWWBWWBBBBWWBBBBBWBWBBBWW", "BBWWBBBWWWWBBWWWWWBWBBBBBWBWBWWWWBBWWBBBWBWBBBBWWW", "BWWWWWWWBBWWBWWBWWBWBWWBWBWBBWWWBWWBBBBBBBBBWWWBWW", "BWWBWBWWBBWBBBWWBBWWWBWBWBBWWWWWWBWWBWBWWBBBWBWWWB", "WWWWWWBBWBBBBWBBWBBWBWBWBWBBWBWBWWWBWBBBWWBWWBBBBB", "BBWWBBWBWBWWBBWBBBBWBWBWBBWBBWWWWWWWBBBWWWBBBBBWWB", "WWWWBBBBBBWWWWBBBBWBBBWWWBWBWBWWWWBBWWWBBWBBBBBWWB", "WBWWWWWWWBWWBWBWBBBBWBWBBBWBWWBWWWWBWWBWBWWBWBWBBW", "WBWBWWWBWWWBWWBBBWBWWWBBWWWWWBWBWWBBBBBBBBWWBBBWWB", "BBWWBWWWBWBBWWBBBWBWBBWBBBBWWBWBWBWBBWWBBWWBBBWWWB", "WWBBBBWWWWWBWWWBWBWBWWWWBWWWBWBWBWWWWWBBWWBWWBBWBB", "BWWWWBBBWBBWBBBBWWWWWWBBBWWWBBBWWBBBBWBBBWWBBWWWWB", "BBBBWBBWBWBWBBBBBWBBBBWBWBWWBWWBBBWBBWBWWBBBBWWBBB", "WBWWWWWWWWWWBWBWBWBWWWWBWBBWBBBBBWBBBBBBBWBWBWBWBB", "WWWBWWBWBWWBWWBWWBWBWWWBWWBWWBWWWWWBBWWWBBWBWBBBBW", "BBBWBWWBBBWBWWBBBBBWWWBBBBWWWBWBBWWBBWBWWBBWWBBBBB", "WWWWBBWBBBBWWBWWBWBBWBBBWBBWBWWBWBWWWWWWBBBBBWBWBB", "WWWBWWWWWBWBBWWBWWWWWBWWWWBWWWWBBWBBWWBWBWBWBBBWWB", "WBBBWBBWBBWBWBBBBBWBBBWBBBWWWWBWWWBBWWBBBBWBWWBBWW", "BWWWBBBBBWWBBWWBWWBWBBWBWBWBBBWBWWWBBWWBWBWWWBWBWW", "BBBBWBBWBWWBWBBBBWBWBBWBWBWBWWWBBWWWWBBBBWWBWBWBBW", "BBWBBWBBWBWBWBBWBWWBBBWBWWBBBWBBBWWWBWWBWWWBBWBBBW", "BWWBWBWBWWWBBBWBBBWBWBBBBBBWBBBWWWWWWBBBBBWBWBBWBB", "BBBWWBWWBBWBBWBBWBBWBWBWWBWWBWWBWWBWBWWWBWWBWWBWBB", "WWWWWBWWBWBBBWBBWBBWBWBBWWBBWWBWWBWWWWBBBBWBBWWWBB", "BWWWBBWWWBBWWBBWWBWWBWWWBBWWWWWBBWWBWBWWBWBWBBWWBW", "WBWBBBWWBBBBBBWWBWBWBWWWWWBBBWBBWBBBWWWBBBWBWWWBBB", "WBBWWWWWBWWBWBBWWBBWBBWWBWBWWBBWWWBWWWWBBWBWWBBBBB", "WWWWWWWBWBBBWWWBBWWWWWBBBBBWBBWBWWBBBBWWWWWWWBWBBB", "BBWBBBBBWWBBBWWBBWWWWWWWBBBBBWBBWBBBBBBWWBBWBWBBWW", "WBBWBWWBWWBBWBWWBBWWBWWBBWWBWBWWBBBBBBBBBBWWWWBWBB", "WBBWBWBWBWBBBWBBBBWWWBBWWBBWBWWWWBBWWBWBBWBWWWBWBW", "BBBBBBWBBWWBWWBBWBWBWBWBWWBBWWBWBWWWBBBBWBWWBWWWWW", "WWWBWBBWBWBBWBWBWBBWWBBBWWWBBWWBWWBBBWWWWWBBBWWWBB", "BBBWBWBWBBWWBBBBBBBBWBWBWWBBBWBBBWWWWWWWBBWWWWWWWB", "BWWWBBBWWBWBBBWBBWBBWBBWWWWWBBBBWWBBBBBBBBBBWWBBWB", "WWBBBWWBBWBWWWBBBWBBBWBBWBWWWBWBWWBBBBWWWBBWWBBBWB", "WWBWBBBBWBBBWBWBWBWWWWBBWWWWWWBWBBBBBWBBWWWWWWWBWB", "WWWBBWBBBBBBWBBWBWBWBBWWBWWWWBBWBBBBBBBBBWWWBBWBWW", "WBWBWWBWWWBBWWWBBWWWBWWBBWWWWBWBBBBWWBWWBWBBWWWBWW", "WBWWBBBWBBBBBWWWWBBBWWBWBBBWBWBWWBWWWWWBWWBWWWBWWW", "BBWWBBBWWWWWWWWBBBWWWBBWBWWWBWWBWBWWWWBBWBBWWWWBWW", "WWBWWWWBWWWWBBWBBWBWWBWWWBBBBWBWWWBWBWWWWWWBWBBWWW", "BBWBWWBBWBWWWWBBWWBWBWWWBWBBBWWWBWBWBBBWWBBWWBWBWB", "WWBBBWBWBWBBBBBBWBWBBBWBBWWBBBBWBBBBBWWBWBWBWWWWWW", "BWBWWBBWBWBWBBBWBBBWWWBWWBBWWWWWBBBWBWWBBBBWBBWWWW", "WWWBBBBWBWBBBWWBWBBBBWBBBBWBBBBBBBWBBWWWBBWWBBBWWB", "BBBBBWWBBWBBWWBWWWBBBWBBBWBBBBWWWBBBWBBWWWWWBWWWWW", "WBWBBWBBWWWBWWBWWBWBWBBBWWWBBBWWWBWBWBWBWBBBBBBWWB" };
    int maxStrokes = 145;
    assertEquals(777, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case13() {
    String[] picture = { "BWWBBBBWBWBBBBBWBWBBWBBBWBWBBBWWWWWBWBWWWWBWBBBWBB", "WBWWBBBBBWWBWWWWBBBWBBBWWWBWWBBWBWWWBBWBBWBBBWWBWB", "BWWBWWWWBWBWBWBBWWBBWBWWWWWWWWWBWWBBWWBBBWBWBBBBBB", "WBBWWBBWBWBBBBWBWBBBBWBBBWBWBWBBBBWWWBWBBWWWWWBWBB", "BBBWBWWWWBBBBBBWBBBBBWBWWWWWWBBWWWBWBBBWWWWWWBWBBW", "BWWBWWWWBWWWBWBWWWBWWWBWWBBBWWBWBBBWBWWBWBWWWBWWWW", "BBBBBBWWWBBWBBBBWBBWWWWWWBWWBBBWWBBBWBBWBBBWBWBWBW", "BBWBBWWBWBWBWWWWBBBBBBWBWWWBWWBBBBWWWBWWBBBBWWWBWB", "WBWBWBBWBBWBWBBWBBBWWWBWWBBWWWBWWWWBWWWWWBBBWBBBWB", "WBBBBBWBWWBBWBBBWWBWBBWBBWBWWWBWWBWWWBBBWBWBBWWWBW", "WWBWWBWBWBBWWWBBBBWBBWBWWBBBBBWWWWWBWWBWWBBBWBBWBW", "WBWWBWBWBWBBBBBBWBBWBWBWWWBWWWWWBBBWBWWWWBWWWBBBBW", "BWBWBBBWWWWBWBBWWWWWBBBWBBBBWWBWWBBWWWBBBWBWBBWBBW", "BBWWWBWBBBBWWBWBBWBWWWWBWBBWWWBWWBBWBWWBBBWBBWBBWB", "WBWBWBBBBBBWWWWBWBWBWBBBBWWWWBWBBWBWWBWWBBWWBBWBBW", "BWBWWBBWWWWBBBBWBWBWWWBBBBWBWBWWBBWBWWWWWBWWWWBWBB", "BWWWWWBWBWWWWWBBBBBWBWWBWWBWBBBBWBWWBWWBBBBBWBBBWB", "WWWWWBWBBWWBBWWWWWWWBWWBBBBBWBWWBWWWBWBWWWBWBBWBBB", "WWWBBBBWBWWWWBWBWWBWBWWWWWBBBBWBBWBBBBBBBWWWBWBWWB", "WWBBBWWWWWBWBWBBBWWBWBBWWBWWWWWWWBWWBWWWWWBWBWBWBW", "WWWBWWBWWBWBBWWBBBBBWWWWWWWWWBBBWBBWWBWBBWWWBWWBWW", "WBWBWBBBWWWBWBWBBWWWWBBWWWWBWWWWWBWWBWWBBWBBWWWWWW", "BBBWBBWWWBBBWBWBWBBBWWBBWWBWBBBWWWWBWBBBBBWBBWWWWB", "WBWBWBWWBWWBBBWWWBBBBBBBBBWBBWBBBBWWWBWBBBWBWWBBWB", "WBWBWBWBBBWWBWBBBWWWWBBBWBBWBBWBBBWBWWWBBBWWBWBBBB", "BBWBWWWBBBWWBBWWWBWBWBBBWWWBBBWBWBWWBWWBBWWBBWBBWW", "BBBWWBWBWWWBWBWBWWBBWBWWBBBBWWBWBWBBWBBBBWWBBBBWBB", "WWBWWWWWWBBBWWWWWWWWWBWBBBWWBBBBBWBBWWBWWWBWBWWWBW", "BWWBWWBBBBWWBWWBWBWBWWBBWWBBWBBBBBWWWWBWWWBWWBBWWW", "WBWBBWWWBWWWWWWWBBWBWBWWWBBBWWBWWBBWBBBWBBWBWWWBBW", "WWBWWBWWBBWWBBWBWWBBWBBBBBWBBWWWBWBWBWBWWWBWWWBBWW", "WWBWWBBBWWBBWBWBWWWBWWBBWWWWBBBBWWWBWWBWBBWWWWWBBB", "BWBBBBWBBWBWBWBWWWWWWBBWWWBWBBWBBWWWWBWBBBBWBBWWBW", "BBWWWBBBWWBBWBBBBWWWWWWWBWWWWWBBWBWWWBWBBWBBWWBBWB", "WWWWWWWWBBWBWWBBWWBBWWBWWWWWWBBWWBWWBBBWBWBBBBWBWB", "WBBWWBWWBWBBBWWWBBWBBBBBBBWBWBWWWBWBWWBWBBWWWWWWBB", "WWBBWBBWWWBBBBBBWBWBWWBWBWWWWBWBBBBBBBWBBBBBWBWWBW", "BWBBBBWWBWBBWWWBWBBWBWBWBWBWWBWBBWBWWWWBWBWBWBBBWW", "BWBWWWBWBWWWBWWWBBBWWWWWWWWBWBWBWBWWWWBBWWWWBWWWWW", "BWBWWWWWWBBBWWBWBBWBWWBBBWWWBWWWWBBBWBBWWWBWBBWWWB", "BBBBWBWWWWWWBWWWWBBBBWWWWBWBBWBBWBWWBBWBBWWBWWBWWW", "WWWWWBBBBBBBWBWBWBBBWWBWBWWBBBBBWWWWWBBBWBWBBWWWBW", "BWWBBWBBWWBWBBWBWWBWBBBWBWWWWWBWWBBWWBWWWBBBBBBBBW", "WWBBBBWBWWBBBWBBBWWWBWBBWWBWWWBWWWBWWBBBBBBWBBWWWB", "WWBWWWBWBWWWBWBBBBBWBBWWWBWBBWWBBWWWBWBWWWWBBBWBBW", "WBBBBWWWWWWWWWWBWBWBWWWWBWWWBBBBBBBWWBWWWWBWBWWBBB", "BWBBWBWBBBWWWBBWBWWWWBBWWWWBBWWBWWBBBWBWBWBWBBWBWW", "WWWWWWWBWBWWBBWWWWWWWBWBBBWBWWWBWBWBBWBWWBBWBBWWBW", "WBBWBBBBBWWWBWBWWBWWWBWWWWBWWBWBBWWBBWBWWWWWBBBWWW", "WWWWBWBWBBBWBBWWWBWWWWBWBBWBBBBWBBBWWBWWWBWBWBBBBB" };
    int maxStrokes = 448;
    assertEquals(425, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case14() {
    String[] picture = { "BWWBWBBBBWBWBBBWBBWBBWBWBWBWWWWWWWWBWBBBWBWBBWWWWB", "BBBWWBWWBBBWBBWWWWBWWBBBWWWWBBWWWWBWBBBBBBWBWBWBWW", "WBBWWBWWBWWWBBBBBBWWBBBWWBBBWWBBWWWWWWBWWBWWBBBWWB", "WBWWWWWWWBBBBBBBBWWWBWBWBWBWWBBBBBWWBBBWWBBWBWWBBB", "WBBBBBWBWWBBBWWWBWWBBBBBBWBWBBBBBBWWBBWWBBBBWWWWWW", "WBWBBBBWWWWBBWBWWBWWBBWBBBWWBWWBBWWWWBBBWBWWWBBBBW", "BBWBWWBBBBWBBBBWBWWBBWBBBWWBBWBBWWBWBWBBWBBWWBBWBW", "WBBWWBWWBWWWWBWBWBWWBBWWWBWBWWBBBBWWBBBWWBWWBBBBBB", "WBBBWWWWWBBBWWBBBWWBBBBBBBBBWWWBBBWBBWWWBWBWBBBWBB", "BBBBWWBWWBBBWBWWBBBBWBBBWBWWBBWBBBWWWWBBBWWWBBBBWW", "WWBWWWWBBWBBWBBWWWWBBWWBBWWBBWBWBWBWBBBBBWWBWBWWBB", "WBBWWBWBBBBWBWBWBBWBWWWBBBBWBBWBBBBBBBBBBBBBWWWBBB", "BBWWWWWWWWBWWWWBBWWBBWBWBWBWBBBBBWBBBWBBBBBWBWWBWB", "WWBWBBWWWBBBBWWBWBWBBWBBWWBWWBBWBWWWBBBBBWBBWBWBWB", "BWWWWBWBBWWBBWWWBBWBWBWWBWWWBBBBBBWWBWWBBBBWBWWBBB", "WBBWWWWBBWBWWWBBWWWWBWBBBWBBWWBBBBBBWWWBWWBWBBWBWB", "BWWBWBBBBBBBWBBWWBBWWBWWBWBWBWWWWBWWBBBBWWBBWWWWWW", "WBWWWWBBWWBWWBWBWWBBWWBBWWBBWWWBWBBWWWBBBWBBWWBWWW", "WWWWBWBBWBBWBBBWBWBBBBWWBWBBBBBBBBWBWWBWBWBWBWWWWW", "BWBBWWBWBBBBBWWWBBWWWBBWBWBWBBWBWWBWWBWBWWWWWBBBBB", "WBBWWBBWBBBBWWBBBBWWWWBBWBWWWBWBWBBBWWBWBBBWBBBWBB", "BWWBWBBBWWBBWWBWWWBBWBWBBBBBWWWBWWWWBBBWBWWBBBWWBB", "WBBWWBBWBWBWWWWWBWWBWWWBBBWWBBWWWBBWBBWWWWWWWWBBWB", "BBWWWWWWBBWWBWWBBWBWBBBBWWBWBBWBWBBBBWBWBWBBWWWWBW", "BBWWBWBWWBBBWBWBWBBBBBBBWWWWWBBWBBBWWWBBWWWBWWWWBB", "WWWWWWBWBWWWWWWBWBBBWBWBWBWWWWBWBBBBBWBWWBWWBWBWWW", "BWBWBBWWBBWBWWBBBBWBBBBBBWBWBWBBWBBBBBBBBWBWBWWWBW", "BBBWBBWBBWBWWWBBWWWBWWBWBBBBBWBBBWWWWWWWBWBBWWBBWW", "WBWWBWBBBWWWWWBBWWBBBWBBWBBBWBBWBWBWBWWWBBBWBWBWBW", "WBWBBBBWBBWWWWBBWWBWBBWBWBWBBWWWWWBBWBBBWBWWWWWWWB", "WBWBBBWBWBWBWBWBWWWBWBBWBWWWBWBWBBBBBBWWBBWBWBWWBW", "BBBWBWBBBWBBWBWBWWWBBBBWBBBWBWBWBWWBWWBBWWWBWBWWWB", "BBBBBWWWWWBWBWBBBBBWBWWBWBWWBBWBWBBBWBWBWBBWWBBBBB", "BWBBBBWWBBWBWWWBWBBBBWWWBBWWWWBWWBWWWBBBBWWBBWWBBW", "WBWWWBWWWWBBWBBWWBWBBWWWWWBBWBBWWBWWBBWWBBWWBWWBBB", "BWBWWWWBBBBWBBWBWBBBWWWBWBWWWBWBWWWBBWBWWBBBWWBBBB", "BBWBWBBWWBBWBWBWWWWBWBWWBWBBWWBBWWWWBBBBBBBWWBBBBW", "WBWBBWWWBWBBBWBBWWWWBWBWBWBWWBWWBWBWBWWBBWBBBWBBWW", "BWBBBBBWBWWWBBBBWWBBWWBWWWBBBBBBBWBWWBBBBWBWBBWWBB", "WWBWWBWWBBBBWBWBBBBBBWWBBWBWBWWBBWWBBWBBBBBWWWBBBW", "BWBWBWWBWWBWBBBWBWWWBWBWBWBBWWWBBWWWWWWWBBWBWBBWWW", "BWBBWBBWBWWWBBWWWBBWBBBBBBBBBBWWWWBBBBWBBWBWBBWBWB", "BBWWWWBBBBWWBBBWBWBBWBBWBBBBWBWWBWWBBWWWWBBWWBBBBW", "BBWWBBWBWBBBBWBBWBBWWWBBWBWBBBBWBBWWWWWWWWBWBBWBBW", "WBBBWWWWWBBWBWWWWBBWWWBBBWBBBBWWBBBBBWWBWBWBWBBBWB", "WBBBWWWBWBBWWWWWWBBBWBWBWWBBBBBBWBWWWWWWWWWWBWWWWB", "WBBBBWWBWBWBBBWBWBWWBWBWWWBBBBWWWWBWBBWWBWBBBWWWWB", "WWBBBWWWWBBBWBBBBWWBBBWBWBWBBBWWBWWBWBBWWBWWBBWBWW", "BWWBBBWBWWWWWWWBBBBBWBWBWBBBBBBWWWWWWBWBBBWWBWWBBB", "BWBBBBBWBWBBBBBBWWWWBWBBWBWBWBWWWWBWBWWWBWBBBBBWBW" };
    int maxStrokes = 123;
    assertEquals(849, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case15() {
    String[] picture = { "BBWWWBWWBWBWWWWWBWBBBBWBBWBBWWWWBWBBWWBBWBBWWBBWWW", "BBWBBBBWBWWBBBBWWBBBWWBWBWBBWWBWBBWWWBWBWBBWBWWWWW", "BWBBWWWWBBWBWBWBBWWBWWWBWBBWWWWWWWWBWBBBBWBBWBBBWW", "WBWBWWBBWWBWBWBBWWBBWWWWBBWBWBBWBWBWWWWWWBWBWBWWWW", "WBBWWWWBWBBWWWBWBBWBWBBWWWBBBBWWBWWBBBWWBBWBWWWWWB", "WWBBBWWWBWWWWWBWWWWWBBBWWBWBWWBWWBBWWBWWWBWWWWBWWB", "BBBWBBBBWWBWBWBBWBBWWWBBBBBWWBWBWWWWBWWBBBWBBWWBWB", "BWWWBWWBWBWWWBBBWWBWBBWBBWWWWWWBWBBBBWWWWWWBBWWBWB", "BBBBBWWBWWWWBBBBWWBBWBWWBWBWBWWBWWBBBBWWBBBBBBWBWW", "BBWWBBWWWWWBBWBBWBWBBWBBBWBWBWBWWWBBWBWWWBWWBBWBBB", "WWBBBWWBWBBWWBWBBBWWBWWBBBWWWBBWWBWBWWWWBWWBBWWBWW", "BBBWBWBBBWBBBBWBBWWWBBWBWWBWBBBWWWBBBBWWBWWWWWBBBW", "WBWBWWBWWBWWBBBBBBBWBBBWBWWBWWBWBBWBBWBBBBWBBBBWWB", "BBBBBBWWWBWBBWWWBWBBWBBBBBWBWWBWWWWWWWWWBWBWBBWBBW", "WWBBBBWBBWBWBWBWBBBBBBWWBBWBBBWWWBWWBWBBWBBWWBBBWB", "BWWWBWBWWBBWBBWBWBWBWWWWWBBBBWWBWWBWWWWBWWWBBWWWWB", "WBBBBWBWWWBBWBBWWWWBBBWBWBWWWBWBWWWBWWBWWWWWBBWWWW", "WWWBBBBBWWWWWWWBBWWWWWWWBWWBWWWBWBWBBWBWWBWWBWWBWW", "BWBWWWBBWWWBWWWWWBBBBWBBBBBBWBWWBWWWBWBBBWBWWWWBBW", "BWWBBWWBWBBBBBBBWBWBBWWBBBBWBBBBWWBWWWWBBBWWBWBWBB", "WBBBWBWWBBBWBWBBBWBWBBWBWWWWBBBWWWBWWWWWBBBBBWWBWB", "BBBBBBBWWWWBWWBBBWBBBWWBBBWBWWWBBWWBBWWWWBWBBBWBBB", "BWWBBWBWBWBBBWBBBWWWBWWWBBWWBBBBBBWWBBWWBWBBWBBWBB", "BBWBWBBBBBWWBBBBWWWBBBWWWWBBWWWWBBWBWWBWBBBWBWWWBW", "WWBWBBWBWWWBWWBBBBBWBWBWWBBWWWBWBWWBBWWWWWWWBWBWWB", "WWBBBBBBWBWWWWWBBBBBWBBWBWBWBBBBWBWBBWBBBWBWWBBBWB", "BWWBBBBBWBWBWWBBWBBWWWBWBBBBWBBWBBBBBWBBBBBBBWBBWB", "BWWBWBBWBWWWWBWBBWWBWWWWBBWBWBBBBWWWWBWWWWWWBWWBWB", "BBWWWBBBBBBBWWWWWWBWBWBWWWWWBBWBWWWWWWWWWBBBBWWWBW", "WWBWWBBWWBBBBBWWWWWBWBBBBWBWBBBWWWWBBBBBBBBBBWBWBW", "WWBBBBWBBWWWBWWWBBBBBWWBBWWBBBWBWBWBBWBBBBWWWBBWWB", "WBWWBBBWWBBBBBWBBWWWBWBBBWWWBWWBBBBWBBWBBWWWBBWWBW", "BBWWBBBWBWWWBBBWBBWWWBBWWWWWWWWBWBWWBWWBWBWWBWWBBW", "BBBWWWBWBWWWBWBWBBBWWWBWWBBWBWWBBWWWBBBBWWBBBBWBWW", "WBBWBWWWBWBWWBWBBBBBWWWBBBWWWBBBBBBBWWWBBWWWBWBBWW", "WBWBWBWWBWBBWWWWBBBWBBBWWBBWBWWWBBWBWBBBBWBBWBBWBW", "BWBWBBBBBBWWWWBBWWWBWWWWBBWBWBBWBWBBBBWBBWWBBBWBBW", "BWWWWWBWWBBWBWWWBWWBBWBWBWWWWWWBBWWBBWWBWWWBWWBBBW", "WBWWBBBBWWWBWWWWWWWWBWWWWBWBWBBWWBWBWWBWWBWWWWWWBB", "BWWBBBWWWBWWBWWBBWBWWWBWBWWBWBWBWBWBWWBWBWBWBWWWWB", "WWWBBBBBWWBBBBBWBBWBWBBWBWWBBBWWWBWWBBBWBWWWBWBBWB", "WWWBBWWBWWWBBBBWBBBWBWBBBWWWBWBWWWWWBBWWWWWWWBWBWB", "BBWBWWWWWWBWBBWWWBBWBWWWBBWBWWBBBWBBBWWWWWBBBBWWBB", "BWWWWBWWWWBBWBWWWBWBWWBBWWBWBWWWBBWBWWWBWBWWBBWBBB", "WWWWWWWWBBBWBWBBWWBBBWBWBBBWWBBWWWBWBBWWWBWWBWBWWB", "WWBBBWWWBBBBWBWBBWWWBBBBWBWBBWWWWWBBBWBBWBWBBBWBBB", "BBWBWBWBWWBWWBWBBWBBWBWWBWWWWWWWBBWWWBBWWBWBBBBBWW", "BWWBWBBWBBWWBWBWWWWBBBBWWWWBWWWWBBBBBWWBWWWWWBWWWW", "BBBWWWBWWBBBWWBBWWWBBBWBBWWWBWWBWBWWBBBBWBBWWWWWBB", "WWWBWBBBWWBBBBWWBBWBBWBBWWBWWWWBWWBBWWBBWBWWWWWWWW" };
    int maxStrokes = 288;
    assertEquals(592, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case16() {
    String[] picture = { "WBWWBBBBBWWWBWBBBWWBWBWBBWWWWWWBWBWBBBWWWBBBBWBBWW", "WBBWWBWBBBBWBWWBBBBWWBWBWWWWBWWBWBBWWWBBBBWBWBWWWB", "WWWBBWBWBBWBBWWWBBBBWBWBBBWWBBBWBWWBBBBBBWBWBBWWBB", "BBWBWBWWBBBBBBWBBWWWBBBWWWWBWWWBWWBBWWWBWWBBWBBWBW", "WWBWWBWWBWBWBBWWWBBWBWBBWWWWWWBBWWWBBBBBWBWWBWBBBB", "BBWBBWWWWBWWWBBBBBBBWWWBWBWWWWWBWBWWBBWWBWWBBWBWBW", "WBWWWWWBBWBWBBBBBBBBWWBWBBWWBBWWBWBBBWWWBWWWBWWBWW", "WWWWBWWWWWWWWWBBBBWWWWBWBWWWWWBWBBBBWWBBBWBWBWWBWW", "WBBBBWWWWWBBBWBWBWWWBWWWBBBWBBWBBBWBWBBWWWWWWBWWBB", "BBBBWWBWWBBBWWWBBBWBWBWWBWWBBBBWWWWBBWWWWBWWWBBWWB", "BWWWBWBBBWWWWBBBWWBBBBBWBBWBWBBBWBWBWWWWBWWWWWWWWB", "WWBBWWBWBBBWWWWWBBBWWWBBWBBWWWWWWBWWBWBWWBWBBWWWWB", "BWWBWWWWBBWBBBBBWBBWBBWBBBBBBBBWBBWBWWWBBWBBWBWBWB", "WWWBBWWWBBWWWWBBBBWWBWBWWBBWBWWWWBWBWWWWWBWBWBBWBB", "WWWBWWBBBBBWBWWWWBWWWWBBBWBBWWBBBBWBWBBWBBWWBWWWWW", "WBBWBBWBBWWWWWWWBWBBWWBBWWBWWBWBBBWWBBBBBWBBBBBBBB", "BWBWBBBBBWWWWBWBBWWWBBWWBWBBWBWWWBWWBWWWWWWBBBBBWW", "BWWWBWWWWBWWBWWBBBWBWBBWBWWBWBBBWWBBWBBWWWWWBBBBWB", "BBWBWBWWBBBWBBBWBBBBBWBBBWWBWBWWWBWBWBWWWBBBBBWBWB", "BWWBWBWBBWBWBBWWBBBWWWWWWBBBWBBWWBBBBBBWBBWBWWBBWB", "WBWBBBWWWWWBBWWWWWBWBWWBWWBBBBBBWWWWBWBWBWBWWBWWBB", "WBWBWBBWWBBBBBWBWWBBBWWWWWBWBWWWBWWBWWBWWWBWBBBBBW", "WWBWBBWBBBBBBWBBWBWWBBBWBBWBWWWWBBBBWBBBWBBWBBWWWB", "WWWBBWBWBWWWWBBBWBBBBWWWBWWWBBWBWBWBBBWBWBWWBWBBBW", "BWBBBWBWWBBWWBWBBBWWBWBWBBBBBWWBWBBWBBBBBWWBBWWWBW", "WWWBWWWBWBBWWBBWWBWBBBWBBWBBBBBWWWWWWWBWBWWWWWWWWB", "WWBWBBBWWWWBWWBWBBBBBWBWWBWBBBBWWWBWWWBWWBWWBWBWBW", "BWWWWWBWWWBWWBBBBBWWBWBBBWWWWWWWWBWBWBBWBBBWWBBBBW", "BBWBWWBBWWBWBBBWWWBWWBWBBWBBWWWBBBWWBBBBWBBWBBBWBW", "BWBBBBBWBBWWWWWBBBWBWWWBWWBBWWWBWWWBBBWWWBBBBWWBBW", "BWWBWBBWWWWWBBBBWWWWBBWWBBBWWBBBBWBWWBWWBBWWBWBWBB", "BWBBBWBBWBBBBBWBBWBBWBBWWWWWBBWBBWBBWWBBBWWWWBBBWW", "BWWWBWWBWBWBBWBWWWBBBBWBBWBWBBBBBBWWWBBWWBBWWBBWWB", "BBWBBWWBBBBBBBBBWBBWWBBBBWWBBWBBBBBWWWBWBBWWBBWBBW", "WBBWWWWWBWBBBBBWBWWBBBBWWBWWBWBWWWWWWWWWWBWBWBBBWB", "BWWWBWWWWWWBBWBWBBWBBBWBWWWWWBBBBWWWWWBWWBBWBBBWWW", "WWWBBBWWWBBBBBWBBWWWBBWWWBWWWBWBWBBBWWWBBWWWBBWWWB", "BWBWBWWWWBWWBBBWWBBWBBWBWBWBWBWBWWBBBBBBBWBBBBWWWB", "BWWBWBWBBWBBWBBBBBWBBBWWBWBWBWWBBWBWBBWWWWBBWWBWBW", "BBWBWBWWWWWBBWBBBBWWWWWBBBBWBBWWWBBBBWWBBBBBBBWWBW", "BWBWBBBBBBWBBBBWWWBWWBWBBBWWWBWBWWWWBWBBWWBBBBWWBW", "BWWBWBWBBWWWWBBBWWBWWWBBWWWBBBBBWBWBWBWBWBBWWWBBBB", "WBWWBWBBWBBBWBWBWBWWWWBBWWWBBWBWBWWWBWBBWBBBWWWWWB", "WBBWWBWWBBBBBWWWWBBWWBWWWWWBBWBWWBWWWBWBWWWBWWBBWW", "BBBWBBWWWBWWWWWWWBBBWBBWBBBWWBBBWBWWBWBWBWWWWWWBWB", "WBBBWBBBWBWWBWWBBWWWWWBWBWWBWWBBWWBWWBWWBWWWWBWWWB", "BBWWBBBWWBWWWBWWBWWBBWWBWWWBBWWWBBBWWBBWBBWBBBBWWB", "WWWBBBBBBBBWWBWBWWWBWBBWBBBBWWBBWBBBWWBWBWBWWWBBWW", "WWBWBBBBWWWWBBWBBBBWWBWBWWBWBWWBWBBBBBBBBWBWBWBWWW", "BBWBWWBBWBBWBWBBWBWWBBWWBBWBBWBWBBBWWWWBBWWBWBWBBW" };
    int maxStrokes = 158;
    assertEquals(768, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case17() {
    String[] picture = { "BBBBBWBBWWWBWWBWWBWWWBBWBWWBWBWWWBBBWBWWBWWWBBBBWW", "WBBWWBBWWWWWBBWWBWBBWWBWWWWWWBWBBWWBWBWBWWWBBWWBBB", "WWBBBBBWBBWBWWWBWBWBBWBWBWBBWBWBWWWWWBWBWWWWWBWBWB", "WBWBWBWBBBBBWBBBBWBBBBWBBWWBWWWWBBBBBBWBWWWWBWWWWW", "WBWBBWBBBWWBBBWBWBBWWWWWBWBWBWBBWWBWWWWBBWWBBBWWWW", "BBBBWWWBWWBBWWWWWBWWWWWBBBWBWWBWWBBWWWWBWWWBBWWWBW", "BBBBBBBWBWWBBBBWWBBBBBWWBBBBBBBBBWWBBBWWBBBBBBBBWW", "WBBWWWWWWBBBBWWWBBBBWBWWBWWBBWWWWBBWWBWWBWBWBWWBWW", "WWWBWBWBBBWWBBBWWWBBWBWBBWWWWWBWWWWBBWBWWBBBBWWBWW", "WBBBWBBBBBWWWWBBBWBBWBWBBWWBWWWWBWBWWBWWWWWBBWWWWW", "BWWWBWBBBWWWBWBWBWWBWBWWBWWBBWBWBWWWBBWBWWWBBWWWWW", "WWBWBBWBWWWBWWWBWBBBWWWBWBWBWBBBWBBWWWWBWWWBWBWBBW", "WWWWBBWBBWBWWWWWBBBWBBBBWWBWWWBWBBBBBWWBWBWBBBWBWW", "WBBBBWBWWBBWWBBBBWWWBWWBBBBWBWBWWBWBBWWBWBWWWWWBWB", "BWBWWWBWWWWWWBWBBBBWWWWBBWBWWWBBWBWBWBWWWWWWWWBBBB", "BWWBBBWBWBWWWWBWBWWBWBWBBWBBBBBWWWBWWWBBWWWWBWBBBW", "WBBWWBWBWWWBWWBBWWBWWWWWWWWWWBBBWBBBBBWWWBBBBWWWBW", "WBBWBWBWBBWWWBBBWWBWBBWWWBBBWBBWBWBBWWBBBWWBWBWWWW", "WBBBWBBBWBWBWBWBWBWWWWWWBWBWWWBBWWWBBBBBBBBBBWBBBW", "WBBWBBBBBBBWWBWWBBBWWWBBBWWBBWWBWWBBWBWWWWBBWWWBBW", "WWBBWBBBBWWWBWBWBWBBWWBBBBWBWWBBWBBBBWWBBBWBBBWBWW", "WWBWWBBBBWBBBWBWWBWWBBBBWWBWBWBBBWBWWBWWWWWWWBBBBW", "BBBWBWWWWBBWBWWWBBWBWWWWBBBBWBWWWBBWWBBBBBBBWWBBBW", "WBWBWWBBBBBWWBWWWWBBWWWWWWBBBBWWWBBBBWWBBBWBWBWWBB", "WWBWBWBBWBWBBWWWBBWBWWWBWBBWWWWWWWWBWBWBWWWWWWBWBB", "BWBBWWWBBBWBBWBWBWWBWBBWWBWWWWBWWWBWBWWWWWWWWBWWWB", "BBBWBBBBWBBBBBWWBWWWBBBBWWBBBBWBBWBWBWBBBWWBWWWBWB", "WBBWBWWBWWBBBWBWBWWWWWWBBWWBWWWBWBWWBBWBWWWWWWWBWW", "BWWBWBBBBWBBBWBWBBBWBWBWBWWWWWBWBWWWBWBWBBWWWBWBBB", "BBWBWWWWWWWWWWWBWWBBWBBBBWWWWWBBWBWWWWWWBBWBWBBBWW", "BWBBWWWWBBBBWBBBBWBWWWBWBBWBBBBBBBWWWWWBWBBBBWBBBB", "WBWBWBBWWBBBWBBBWBBBBBWBBWBBBWBWBWWBWWWWWWWBBBBBBB", "WBWBBBBBBBWBBBBWWWBBWBWBBBBBBBBWWBWBBBWWWBWBWBWBBW", "BWWWWBBBBWBBBWBBWBBBWWWWWBBWBWWBBWBWWWBWBWBWWBWBBB", "BBWWBWBBBWBBBWWBWBBWWWBWBBWBWBWBBWBBWBWWWWWWBBBWBW", "WWWBBWWBBBWWBBWBWBBWWBBWWBBBBBBBBBWBBBBWBWBBWWWBBW", "BWWWBBWWBBBWWWBWWWWWBWWBWWWBWWWBWWWWWWBWWBWBWWBBBW", "WWWWBBWBWWBBBBBWBBBBBWWWBWBBWWBBBBWBWBWBWBBWWWBWBB", "WWBWBBBWWWBWWWBWWWBBWBBWBBWBBWBWWBWWBBBWBBBWBBWWBW", "WBWBWBWBBBWWBBWWWBBWBWBBBWBWBWWWBBWWBBWWWWBBBBBWBB", "BWBBBBWBWWBWWBWWBWBBBBWWWWWBBWBWWBBBWBWWBWBWWBBBWW", "WWWBBBWBWBWWBBBWBWBWBBWWWBBWWBWWBWWBBWWWBWBBWBWBWW", "WWWBWBBBWWBWWWBWWWWBBBWWBWWBWWBWBBBBWWBBWBWBBWWBBB", "WWWBBWWBWWWWWBWWBBWWBWWBBBBWBWBBBWBWBBBBBWBWWWBWBB", "BWBBBWBBWBWWWWBWWBBBWWWBBWBWBBBWWBBBWBWWWBBBWBBWBW", "WWWWWBWWBWWWWBBBWBWBWWBBBWBWBBWBWBWBBWWBBBBWBBBBWB", "BBBWBBWBWWWBWWBWWWWBBWBBWBWBBWWWBWWBWBWWWBBWBBWWWW", "BBBBWWBBBBBWWWWWWWBWWWBBBBBBWWBWWBBBWWWBWBWBWBBWBB", "BWWBBBBBBBWBBBBWBBBWWWWWWWWWBBWBBWWWWBWBWBBWWWBBBW", "WBBBWBWWWBBBWBWWBWBWWWBWWBWWBBBBBWWBBBBWWBWWBWWWBW" };
    int maxStrokes = 457;
    assertEquals(417, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case18() {
    String[] picture = { "BBBWBWWWBWWWWBWWBWWBWWWWBBWWWWWWWWWBBWWBWWWWWBWWBW", "WBBBWWBBWBWWWBWBBBBBWBWBWWWBWWBWWWWWWWBBBWWBBWBWWB", "BBBBBBBBWWWBWBBWBWWWWWBWBWWBBWBBWBWBWBWWBBBBBWBBBW", "BBBWWWBWWBWWWWWBWWWBWWBBWWBWBWWWWBWBBBBBWWBBBWBWBB", "WBWWBBWBWBWBWBWWBBBBBBBWWBBWBWBBBBWBBWWWWWWWWBBWBB", "WWBBWBBBBWBBBWWWBBBWBWWBBBWWWBWBBWWWWBBWWBBBWWBWBB", "BWWBBWBBWWWBWWWWBWWWBWBBBBBBBBWWWBBWWWWWWBBWWWBWBW", "BBWBBBWWBWBWBWBBWWBBBBBWBWBBWBBBWWBWBWWBBWWBBBBWWW", "BWWBWBWBWWBBBWBWWWWBBWWBWWBBBBBBWBBWBBBBBWBWWWBBWW", "BBWBWWWBWWBBBBBBBWWBWBBWWWBWBBWBWBBWWWWBBBWWBWWWBW", "WWWWBBWWBWWWBBWWWWBBWWWBBBBWBBWWBWBWWBBBWBBWWBBWBW", "WBBBWWBWWWWBBBWWBWWBBBBBBWBWBBBBBBWBBBBBWBWWBBBWWW", "WBWBWBBWWWWWWBBWWBWWWBWWWWBBWBWWBWBBBBBWWWBWBBWBWB", "WWWBWBWWWBBBBBWBWBWWBWWBBBBBWWBWWWBBBWWBWBBBBBBBWB", "BBWWBBWWBBWWBWWWWBBWBWBBWWBWBWWWBBWBWBWBBBBWBBWWBW", "WBBWBWWWWBBBWBBBBWBWWWBWWWBWWWBWBBWWWWBWBBBWBWWWBW", "WBBBWBBBWBBBWWWBBBBBWBWWWWWWWWBBBWWBWBWWWWWWBWBWWB", "WWBBBWWBBBBWBWBBBBBBBBWBWBBBBWBWBWBWBWBWBWBBWBBWWW", "WBBBWBBWWWBWWBWBBWBWWWWBWBWBBBWBWBBBBWWBWBBWWWBWWB", "WWBBWBBBBBBWWBWBBBBBBWWWBWBBBWWWWBWWWWBWWBWBBWWBWW", "BBBBBBWWWBBWWWWWBBBWBBWBBWWBWBBBWWBWBBBBBWBBWBBBBB", "BWWBWBWBBBWBWWBWBBBWBWBWBWWWBBWBBWBBWWBBBBWWWWWBWW", "WWBBBWWBBBBBBWWWBWBBWBWBWBWWWWBWBWBWBBWBBBBWWBBBWB", "BBBWBWBWWWWBWBWWBBWWBWWWBWBWWBBWWBBWWBBWBBBBWBBWBB", "BWWWBWBWBBWWBWBWBBBBBBWBWBBBWBBWWWBWBBWBBWBBWWWBWB", "BBWBWWBBWWWBWWWWBBBWBWBBBBBBWBWWBBBWBBBBWBWWBBBBBB", "WWWBWWWWBBWWBBBWBWWBWBBBBWBBWBWBWBWWWBBWWWWBBWWWBW", "BWBWBWWBBWBWBBWBBBBWBWWWBBWWBWWWBBBWBWBWBWWBBWBBWW", "BWWWBBBBBWWBWWBBBBBBBWWWWBBWWBBWBBWBWWBWBBBBWWBWWB", "BWWWWWBBBBWWWBBBBWWWBBBBBBWBWBWBWWWBBWBBWBBBBWWWBB", "WBWBBWBBWWWBWWWWWWBBBBWBWWBBBWWWBWWBWBBBBBWBWWWBWB", "WBBBBWWBBWWWBWBWWWWBBBBBWWBWBBBBBWBBBWWBWBWWWBBBBB", "WWWBWBWWWBWWBWBWWWBBWBBBBBWWWWBWBWWBWBBBBWWWBWBWWW", "BBWBWBWBWBBWBWWBBBWWBBBWBWWBBBBBBBWBWBWBBWBWBBBWWW", "BWBBWBWWWWWBWBBWBBBWBBBBWBWWBWWBBWBBWWWBWBWBBBWWBB", "WBBWWBBBBBWWBBBBWBWBBWBBBWWWWBBBBWWWBWBBBBWBWWBWWW", "BWBBWWWWWBWWWWBWWBWBWBBBWWBWBWBBBBWWWBWWWWBWBBWWBB", "WWWWWWWBWWBBWBWBWWBWBWWWWBBWBWBBBBWBWWBWBWWBWWWBWW", "BWBWWBBBBWWWWBWWBBWBBWBWWBBWBWWBBBBWWWBWWWBWBBBWWB", "WBWWBWBBBBWWBBBWWBBBWWWBWBBBWBWBBWWWBBBBBWWBWWWWWW", "BBWBBWWBWBWBWBBBBBBBBBWBBBWWWWBBWWWBWWWWWBWBBWWWBB", "BBWBBBWWBWBBWBBBBBWWBWBBBWBBBWBWWBWWBBWWBWWWWWWWBB", "BBWBWBWWWBWBWWBBWWWWWWBBBWBBBWBBWWWBWWBBBBBWWWBBWB", "WWWBBWBWWBBBWWWWBBBWWWBWWBWWWBBWWBBWBWBWWBBBWWWWBW", "BBWBWWWWBBBWBBWBBWWBWBBBWWWBWWBBWWBWBBBWBWWBBBBBWB", "BBWWBWBBBWBWWWBBBBWBWWBBWWWBBBWBWBBBBBWBWWBWWBWWWW", "BBBBWBWWBBWBBWBBWWBWBWBWBWBWBBWWBWBWBBWWWWBBBWWBWB", "WWWBBBWBWWBWWBBBBWBWWWWBBBWBWBWWBWBWWWWBBWWWBBWBWB", "WWBBWBWBWBBWWBWBBBWBWBWBWWWWBBBBWBBWWWBWWWWBBBWWWB", "WBBWWBWWBWWBBWWBWWWWBWBWWBWBWBWWWWWWWWWBBBBWBWBBWW" };
    int maxStrokes = 196;
    assertEquals(718, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case19() {
    String[] picture = { "WWWWBBBBWWBWBBBBWBBBWBWWBWBWWWWWWBBWBBBBWBBWWWWBBW", "BBBBWWWWBBWBBBWWWBBWBWWWBBWWWBBBBBWWBBBWBBWBWWWWBB", "BBBBWWWWWBBBWBBBWBWBWWWBWBBBBBWWBWWBBBBWBWBBBBBBBW", "WBBBWWBBBWBWWBBBBBBBWWBWWBWWWWWWWBWBBBBBBWWBWBWWWW", "BBBWWWWWWWWBBBWBWBBWWWWBBBWWWBBBWBBBWBWWWWBBWBWBWB", "WWWWBBWBWWBBWBWWBBBBBWBWBWWWWWBBWBBWWWBBWWBBWWBWWB", "BWBWBBWBBWWBBWBBBWWBBBWWBBBWBWWBBWWWBBBBWBWBBWBBWW", "BBWBWBWBBWBBWWBBBWBBWWWBWBWBBBBBWBBBBWWBBBWWBBBWBB", "BWWWBBWBBWWWWWWWBBWBWBBBWWWBBBWWWBWBBWWWBWWWWBWWWB", "BBWBWWBWWBBWWWBWBWWWBWBWBWBWBBBWWWWWWWBBBBWWBBWBBB", "WWBBBBWWBBBBBBWBBBWBBBBWBWBWBBWBBBWWWWBBWBBWBBWWWW", "BWWBBBBBBWBBBBBBWWWBWWBBWWBWBBWBBBWBBBWBBWBWBBWBWB", "WBBWWWBWBWWWBBBWWBBWWWWWWBWWWBBWBBWBBBWBBWWBWWWWBB", "BWWWBWWWWBBBBBWWWBWBBBWBBBWBWWBWBBWWBBBBBWWBWWBBBW", "WBBWWBBWWBBWWBWBWBWWBWBBWBWWBBBWWWWBBBBWBBBWWWBBBW", "BWBBWBWWWWBBBBBBWWWBWBBWWWWWBWWBWWWWWBBWBBWBWWWWWW", "BBBBWBBBWWBWWBBWBWBWWBWBWWWBBWWWBBBBWWWWBBWBBBWWWB", "WWWWBBWWBBWWBBBBBBBBWWBBBWWBBBBBBBWBWBBBWWBWBWBBBW", "BWWBBBWWWWBWBBBWBBBBWBWWBWWWBBBBWWBWBWWBBWBWWBBWWW", "BBBBWBWBWBBWBWWBWBBBWWBWWWBBBWWBWWWBWBBBWBBWWBBBBW", "WBWBBBBWBWBBBBBBWWWWWWBBBBBWWBWBWWBWWWWBBWWBWWBBBB", "BWWBWWWWWWWBBWWBWWBBBWBWBWWBWWBBWWWBWWWBBWBBBBWBBB", "BWWBWWBWWBBBBWWWBBBBBBBWWBBWWBWBBWBBWBWBBBBWWWBWBW", "BBBBWBBWBBWBWBWWBBWWBWBWBBWBWWBBBBBBWWWWWWBBBBBWBW", "WBWBWWBWWWWBBWWWWBBWBBWWBBWBWBWWWWBBWBWBWBWWBBWBBB", "WWBBBWWWBBWWWBBBBBWBBBWBBBWBBWWWBBWBWWBBWBWWWWWBWW", "WWWBWWBBWWBWWBWBBWBBBBBBWBWWWBWWWWWWBBWBBWWBBBBWWB", "WWBBBBWBWWBWWWBWWBWBBBWWWBWBBBBWWWWBBWBBWWBBBBBBWB", "BBWBBWBWBBBBWWBWWBWWWWBBWBWWWBWWBWWWBBWWWWWWWBWBWB", "BBWWBBWBWWWWWBWBBWBBBWWBBBBWBWBBWWBBWBBWBBBBWWWBBB", "WBWWBWWWWBWBBWWBBWWWBBWBWWWBWBBWWWBWWBWBWBBWWWBBWB", "BBBWBBBBWBWBBBWWBWBBWBBBBWWBBBWWBBWBBBWBWBWWBBWWBB", "BBWBWBBBBWWWWWBBWWWWWWWBWWWBBWBBBWWBBBBBBWBWBWBBBW", "WWWBBWBWBBWBBBWBBBBWWBBWBWWBBBBWBWBWBWWWWWWBWBBWBW", "BBWWBWBBBWBBWBBWBBWWBWWWBWWWWBWBBWWWBWBBBBWBWWWBWB", "WWWWBBBWWBBWWWWWBWBBBWWBWWBBWWWBWWBWWBWBBWWWWBWWWB", "BBWBWBWWWBBBBWBWWBBBBBWBWWBBWBWBBWBWBBBWWBWWBWBWBB", "WBBWBBBWBBBWBBBBBBWWWWBBWBWBBWBWWWBWWBWWWWBWWBBWBW", "BWWWWBBWWBBWWBBWWWWWWBWBWWBWBWWBWBWWWBWWBBWBWBBBBB", "BWBBWWWBBBWWBWWBWWBWBWWBWWWBBBBBBBWWWWWBWBWWWBWBBW", "WWBBWBWWWBBBBBWWWBBBWWBWWWWBBWWBBWBBWWWWWBBBBWBBBB", "WBBBBBBBWWWBWWBBBBWBBBWBBBBBWWWWWWBWBWWWBWBWBWWWBW", "BWBWBBBWBBBBBWWBBBBBWBBBBBBBBWWBBWBBWWWWWWWWWWBBBW", "BWBBWWBBBBWWWBBWWBWBBWWBWBBBWWBBWBWBWBWWWWWWBBBWBW", "WBWBBWBWWWWBWBBBBBBWBWBBBBBBBWBWWWBWWBWWWBBBWBWBWW", "WWBBWWWWBBWWBBWBBBWWBWWWBBWBBBWBBBWWBBBWBBBBBWBBWB", "BWWWBBBWBWBBBBWBWBWWWWWWWBWBBWBWBWWBWWBWBBWBWWBBWW", "BWBBWWWBWWWBWWBWWBWWWBWWBWWWWBWBBBBBBBBBBWBBWWBWWW", "WWBBWWWWWWWWBBBWBWWBWBBWBBWWWWWWBWBWWWWWWWWWBWWBBB", "BWWWWBBBBBBBWWBWWWBBWWBWBWBBBWWBWWWBBBWWWBWBWWBBBB" };
    int maxStrokes = 284;
    assertEquals(584, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case20() {
    String[] picture = { "BBBWBWBWBBBWBBWBBWWWWWWBWBBBBWBWWWBBBWBBWWBBWWWBWB", "WWWBWBBBWBBWWBBBWBBBBBBWBBBWWBBBWWWBBWWBWBBWWWBBWW", "BBWBWBWWBWBBBBBBBWBWBBWWWWWWWWBBWWBWWWBBBWWBWBBBBB", "WBBBWWWBBWBBBBBBWBBWWBBBBWBBWWWWBBBBBBBWWWWBBBWWBB", "BBWWBWBBWBBWWWBWBWWWWBWBBBBBBBWBWBWBBWWWBWBBWBBWBB", "WBBBBBWBWWBBWBWWBWBBWBWBBBBBBWBWBWWBBWWBBWBWWBWWBW", "WWWBWBWBWBWWWBBBWWBWBBBWWWWBBWWBBBWWBBBBBWBWWWWBBW", "WWBBBBWWBBBWWWBWWWBBBBWBWWWBBWBWWBBBBWWBWBWWBBBWWW", "BBBWBBBWWBBBBBWWWWWWWBWWBBWBWBWWWBBBBBBWBBWBWWBBBW", "WWBBWBWBWWBWWWBBBBBBWWWWWBBWBBBBWWBWWWWWWWBWBWBBBW", "BWBBWBWBWBWWBBWWWWBBWBWWBWBWBWWWWWBWWWWBWWWBBBBWBB", "BBWBBBWBBBWWWWBBBBWWWBBWWWWWWWWBWBWBBBWWBWBWBBWWWW", "BBWWWBBWBBBWWBWBBBWWWWWWWWWWBWBWBWWBBWBBBBBWWWWWBW", "BWWBWBWWWWWBWBWBWWBWBWWBBWBWBBWWWWWBBWBBWBWBBWWBWW", "BWBBBBWBWBWBBWWWBBWWWWBWWWWWWWWWBWBBWBWWWBWBWWWBWW", "BWWWWWBWWWBWBBBBWWWWBBBWWWWBBBWBBBBBBWWBBWWBWWWWBB", "WBBWBBWWWWBWWWWBBBWBWBBWBWWBBBWWWBWBWWBBBBBBWWBWWB", "WWBWBBWBBBBBBWWWWBBBWBWWWWWBBWBBBWWBBWBWBBWBBWWBWW", "BWWBWBWBWWWBBBBBWBWWBBWBBWBWWBBWWWBBBWBBBBBWWWWBBB", "BBWWBWWWWBWWBBBWBBWBWBWBBBBBWWBWBBBWWBWWBWWWBWWBBW", "WBWBBWBWWWBWBWWBWBBWWWBBWWBWWBWWWWWWBBWWBWBWBBWBBB", "BWWWBWBWWWBBWWWBBBBBWBWBBBWWBWWWWBWBBBBBBBBWWWWWBW", "BWBBWWBWBBWBBBWWWWBWWWBBWBBWBWWWBWBBWWBWWBWWBBWBWB", "WBBBBBWBWWWBWWBBWWBBBBBBWBWBWWWWBWWWWWBBBBBBWWBBBW", "BBWWBBBWWBBWWBBWBWWBBWBWBBBWBBBWWBBBWWWWBBBWBBBWBB", "BBWWBWWWWBWWWWWBBBBBWWWBWWWBBWBWWWBBBWBBWWBWBWWBBB", "BBBBBBWWBBWBWWWBBBWBWBBBWBBBBBWBWWBBBWWWBBBBWBBBWB", "BBWBWWBBBWBWWBWBWWBWWWWBWWWBWBBBWWWWWWBBWWWWBWBBWW", "WBBBBWWBWWWWBBBBBWBBBWWBBWWBBBBWBBWWWBBBBBWBBWBBBW", "BBWWBWBWWWBWBBWBBBBWWBBBBWWWWWBWBWWWBWWWWWWWWBBBWB", "BBBWWBWBWBBBWBWBWWBBBWWWBBWBBBBBBWBBWWWBWWBBBBWBWW", "BWBWWWBBBWWBBWBBBBBWWBBWBWWBWWBWBBBBWBBWBBBWBWWBBW", "BBWBBWWBBBBWWWWBWWWWWBWBWBWWBBWBWBWWBBBBBBWBBBBBBB", "WWBWWBBWBWWWWWBBWBWBBWWWBBWWWBWWWBBBWWWWWBWWBBBWWB", "WBBBBBBWWBWBBBBWWWBBBWWWWWWWWBWBBBBWBWWBWWBWBWWBBW", "WWBWBWBWBWBWWWWBBBBBBWWWWWWWBBWWWWWBBBWWBWBWWWWWWW", "WWWBWWBBWWWBWBWWWBBBBWWWBWWWBBWBWBWBWBWBWBWBBWBWWW", "WWBBBWWBBBBBBBBWWWWBBWBWWBWBBWWBBBWBWBWWWBBBWBBWWW", "WWWWWBWWBBWBBWBWWBWWWBWWBWBWWBBBWWWWWWWBWBBBBBBWWW", "WWBBWWWBBWWBBBWBWBBBBWBWBWWWBBBBWBBWBBBBWWWBBBWBWW", "BBBWBWWWBWWWWWBBBBBBWBBBWWBWWWBWBBWBBWBWBWBBWWBWBW", "BBWBWBWWWWBBWWBWBWWWWWBWBWBBBBWWBBBWWWWBWBWBWWWWWB", "WBWBBWBBWBWWWWWBBBBWBBBBBWBWWWBWWWBBWWWWWWWWBBBBBW", "BBBBWBWWBWBWWWBWBBBBWBBBWBBBBWWWBWWBBWBWWBBWWBBBBB", "BBBBWBWBBWBWWWWWBBWBWWBWWWBBBWBBWWBBWWWBBBBWBBWBBB", "WWBWBBWBWBWWWWWWBBBBWBBWWWWWBWBWBBWWBBWWWBBWBBBBBB", "BBBWWWWBWWBWWWWWBWBBWWBBWWBWWBWBBBWBBBWBBWBWWWWBBW", "WBBWWWWWWWBBBWBWWWWWBBBWBBWWBBBWWWWWWBBWBWWBWWWWBB", "WWBBBWWWBWWWBBWWBWBBWBWBWBWBWBBWWWBBWWBBBWBWBWWWBW", "BBWWBBBBBWBWWWWBWWWWBBWWWBWWBBBWBBBWWBWBBWBWWWWWWB" };
    int maxStrokes = 101;
    assertEquals(899, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case21() {
    String[] picture = { "BBBWBBWWWBWBWWBBWWWWBBWWWWWWWBBWWWBWBWBWWBBBBBBBWB", "WBBWWWWWBBWWBWWWWBBBBWWBBBWBBWWBBWBWBWWWWWWWBBWWWW", "BBBBWWBWBBWWBBWWWWBBBBBWWWBBBBWWBWWWWWBBWWBBWWBBBB", "BBWWBWWBBWWBBWBBWBWBBWBWBWBWWBBWWBWBBWWBBBWBWBWBBB", "WWBBWBWBWWWWWBWBBBBWWWBWWWBBBBBBBBWBBWWWWBBWWBBWWB", "BWBWBBBWBBBBBWBWBWBBBBBWWBBBBWBWWWBWWBWWWBBBWWBWWB", "BBWBBBBBBBWBBBBWBBBWBBWWBBWWBBWWBBWWWWWBBBWBWBWWWB", "WWWBWBBWWWBWBWWBBWWWBWBWWWWBBBWWWWWBBWWBWBBBBBWBWB", "WBBWWBWBWWBBWWWBBBBWWWBWBBWBBWWWWWBBWBWWBBWWBBBWWB", "BBWWWBWWBBWBBWBWBBWBBBBWBWBBWBWBWWBBWBBBBWWBBBWWBW", "WWBBBBWWBWWBWBBBBBWBWWBBWBWWBWWWWWWBBBWBBWBBBBWWBB", "BWBWWBWBWWBWBBWBWBWWBBBBBWWWWWBWBWWWBWWWWBWBWWBBBB", "BWBWBBBBWBBBWBWWWBWBWWWWWWBBWBBWBWBWWWBBWBBBWWWWBB", "BWBBBBWBBWWWBBWWBWBWWBWWBBWWBBBWBWWWWWBBWBBWBBBBWB", "BBBBWWBWBBWWWWBBBWWBBBWBBBBWBWBBWWBBBBBWWBWBWBBWWW", "BBWWBBBWWBWBBBWBBBBWWWBWBWWBWWBBWBWWWWWBWBWWWWWBWB", "BWBBBWBBWWBBBWBWWBWBBBBWWBWWWBBWWWWBBWWBWBWWBWWBBW", "BBWBWWBBWBWBWWWBBWWBBWWBWWWWWWBBBBBBBBBWBWWBWBBWBW", "BBWWWBWBWWBBWWWBWWBWBWBBWWBWBWWWWBBBBBWWWBWBWWBWBW", "WBBWWWWBBWWWWBBBBBWWWWBWBBWBBBWWWWWBWBWBBBBWBWWWBB", "WBWWBWBWWBWBWBWWWWBWBWWBWWBBWWBWBBWBBBWWBWWWBWWBBB", "WBWBWBWWWBBBBBWWBWBBBWWWWBWBWBWWBWWWBBBBWWBWBBBBBW", "WBBWWBWWWBBBWWBBBWBBBWWBWBBBWBBWWBWBWWBBWBBWWWWWBB", "WWWBBWBWWWWWBWBWWWBWBWBWWWBWWWWWWBWWBWWBBWBBBWWBBB", "WBBBBBWBWBBBWWBWWWWWBWBBBWWBBBBWBBWWBWBBWBWBBBWBBW", "WBWBBWWWWBBBWBWWBWWWBWWWBWBBWWBBWBBWBBWBWWWWBWWWWW", "WWWBBWWWWBBBWBBBBBWBWWBBBBBBBBBWBWWWBBBBBWWBBBBBWW", "WBWBBWBBWBBBBBWBBBBWWBBBBWWBWBBWWBBBBWBBBBWWWBBBWW", "WBWWWWBBBBBWWWWBBWBBWWWWBBBWBWBBBBWBBWBWBBBBWBBWBB", "WWWBBWWWWBWWBBWBWWWBBWWBWWBWBBWWWBBBWBWBBBBWBBBWWB", "WBWWBBWBBBBWWWBBBBBWWWWBBBWBWBBWBWBWBBBBWWWBWWBBBB", "WWBBBWBBBBWBWBBWWBBBBBWWWWBWWBWBWWWWWBWBBBBWBWBBBW", "WWWBWBBBBWBWWBBWWBWWWBWBWWBBWBBBBBWWWBBBWBWWWBWWBB", "BBWBWBWWBBBBBBBBWBWWBBWWBWBBBWWWWBBBBBBWBWBBBWWBWW", "BBWWBBWBWBBWBWWBBWWBWWBBWBWBBBWBBBBWWWBBBWWBWBWBBW", "WWWBBBBBBBWWWBWWWWBBBBBBBBWBBWWWBBBWBWWBWWWBWBBBWW", "WWWWBBBWWBWBBBBBWWBBWBWBBWBBWBBWWWWWBWWBBWBBBBBWWB", "WBWBBWBBWWBBWBBBWWWWBWWWBBWBWBWBBBBBWWBWWWWBBWWWWB", "WWBWWWWWBWBBWWWBBBBBBBBWWWBBWWWBBWBBWBWWBWBBWBBWBB", "WWWWWBWBWWBBBWBWWWWBWWWWWWWWWWWWBWBBBWWWWWWWBBBWBB", "WBBBBBBBWWBBBBWWBWWBWWBBWWWWBBWWWBWWBBBWBBBWWBWWBB", "WWBBBWWBBBBWBBBBBWBWBWWBWWBWWBBBBWBBBWBWBWWBWBWBBW", "WWBBWWBBWBBBBWWBBWWWBWWWBWWBBBBBBBBBWBWBBBWWWWWWWW", "WWWBBWBBWWWBBBWBWBBBWBWWBBWWBWWWWBBBWWBWBBBWBBBWWB", "BBWBBWBWBBWWBWWWWBWWWWWBWBWWWWBWBBWBWWBBBBBBBBWBWW", "WWWBBBWBWWWWBBWBBBWWBBBWWBBWBBWBBWBWBWWWWBWBWWBWWW", "WBBBWWWBBWWWWBWBBBBBWWWBWWWWWBBWBBBWWBWBWWBBWWBWWB", "BBBWWBWWWBWWBBBWBBWBWWWBBBBBWBWBBWWWBWWWBBWBWBBWBB", "BWWBWWBWWWWWWWWWWWWBWWBWWWWBBWWWWBBWWWWWWWWBBWBWWB", "BWBBBBBWBWWWWWBBWWBBBBWWBWWWBBBBWBBWBBBWWWWBBWBBBW" };
    int maxStrokes = 171;
    assertEquals(735, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case22() {
    String[] picture = { "BBBBBWWWWWBWWWBBWWWBWBBWBBBWWWBBWBBBBWWWWBWBWWBWWW", "WBWWWBBBWBBWBBBBBBWBWWBBBWWBBWBBWWWBBBBWBWWBWWBWWW", "BWBBBBBWWBBBBWWBWWBWWWBBBWBWWBBWBBWWWBWBBBBBWBBWWB", "WBWBBBBBWWBWBBWWWBWBWWWWBWWWWWBWBBWBWBWBWWBWBWWBBB", "BWBBWWWBWBBWBBBWWBBWBBWWBWWBWBBBWBWBBBBBBBWBWWBBWW", "BWBWBWBBWWWWBBBBWBWWWWBBWBBBBWBBBBBBWBWWWWBBWBBBBB", "BBWBWBWBWBWBWWWWWWBBWBBWWBBBWWBWBWBWWBBBBBBWBBBWBB", "WBBWBWWWWBWBWBBBWBWBWWWWBBBBWWBBBWWBWWWWWWWWWWWWBB", "WWBBWWBWWBBWWWWBWWWBBBBBBBWBWWWWBWBWWWBWBBWBBBBBBB", "WBWBWWBWWBBWBWWBBBWBWBWWWWWWBBWWWWWWWBWWBBWBBWWWBW", "WWBBWBBBWWWWBBWBWWWBWWWBBWWWBBBBWWWWBBBBWWWBWWBBBB", "WBBWBWWWBBWWBWBWWBBWWWBWWBWBBBWWWBWBBBBBWWWBBBBBWB", "BWWWBBBBWBBWBBBWWWWWWWBBWBBBWBBWBBBBBWWWBWWBWBWWBW", "BBWBWWBWWBBBWBBWWBWBWWBBWBBBBWBBWBWBWWWWBWWWBBWWWW", "WBWWWWWBBBBWBWBWBWBBBBBWWBBWWWWBWBBBWWWWBWWWBWWBBW", "WWWBWWWWWBWWWBWBWBWBWBBBBWBWBWWBBBWWBWWBWBWWWWBWBW", "WWWWBBBBBWBBBBWWBBWBWWWWBBBBWWWWWBWWBBWBWBWBBWBBBB", "BBBBWWWBWWBWWWWWBBBWBWBBWWWBWBWWBWBWBBWBBBWBWBBWBB", "BWBWBWWWBBWWWBBBBWWBWBBWWWWBBBBBBWWBBWWBBWBBBWBBBW", "WWBBBBWBBWWBWBBBWBWBBWBWBWBBWBBWWWBBWBBWWWBBWBWWBB", "WBWBBWBBWBWBBBBWBBWWWWBWWWBWWWWBWWBBBBBBWBWWWWWBWB", "BBWWWBWBWBBWBBBWWBBBWWBBBBBBWWWBWWWWBBBWBWWWWWWBWB", "WBWWWBBBWWWWBBWWWWWWBBWBBWBWBBWBWWBWWWBWWWWBWWWWBB", "BWWBWBBWWBBWBWWWWBBWWBWBBWBWBWBWBBWWWBWBWBBWBWBWWW", "BWBWBWWWWBWWBBBBWBWWWWWBWBWWBBWBBWWBBWBWWBBWWBBBWB", "WWWWBWWWWBBWBWBBWBWBBWBBBWWBWWWWWBWWWBWWWWWWBBWBBB", "BBWBWBWWBWBWBBWBWBBWWBBWWBWWBBWBWWWWWWWBWBBBWBBWWB", "WWWBBBWBBWWWBBWBBBWBWWBBBWWBBWWWWWBWBBWWWBBBWWBBWB", "BBWBBBWBBBWWBBWWBWWWBBBWWBBWBWBBWWWBWBWBBWWWWWBBWB", "BBBBWWBWBWBWBWWWWWWWBWWWWWWWWWBBBBWWBBBWBBBBBWBBBB", "BWBWWBBBBWWBWWBWBWBBWWBWBBBBBWBWBWWBBBWWWWBBWWBWBB", "WWBBBWWWBBBWBBWWBBWBWWBBWBWBBWBWWWWBBBWWBWBWWWWBBB", "BWWWWBBBWBBWBBBBWWBBBBBBBWBWBWBBWBBWBWBWWWWWBWWWBB", "BBBBWWWBBBBBWBWWWBBWBWWWWWBBWBBWWWWBWWWWWWBWWWWBBW", "WWWBWBWWBBWWWBWBWWWBWWBBWWWBBBWBBWWBWWBBWBBWBWBBWB", "BWBBBBBBBBBWBBWBWWBBWBWWWWBWWWBBBWWWBBBWWBBWBBBBWW", "WBWBBBBWWWWWWBWWWWBBBBBWBBWBBBBBWWBWBWBBBBWBWBBWBW", "WWBBWBWBBBWWWWBBBBWBBBWBWWWWBBBWWWWBBWWBBWWWWWWWWB", "WWWBBBWBBWWBWBBBBWBBBWWWWBBWWWWBWWBBWWWWBWBWBWWBBW", "BWBBBWWBBBWWBBWWBWWWBBWWBBWWWBWBWBBBWWWBWWWBWWBWBW", "WBBWBBBWBBBWBBWBWWWWBBWWWBBBWWWBWWWBWWBBWWWWBBWBBB", "WWWWWWBBBBWBBWBBBWWWWBBWBBWBBWWBBBBBBBBBWBBBWBWWWW", "BWWWWBBWBWBWBWWBWWBBBBWWWWWBBBBWBWBWWBBWWWWBWWWWWW", "BBWWWBBWBWBBWBBBWBBWBWWBBWBWBWWWWBBWWBWWBWWWWWBBBW", "WWWWWBBBBWBBBWWBBWBBBBBBBBWBBWBBBBBWWWWWBBWWWBBWBB", "WBWWWWBBBBBBWBBWWBBBBWWBWBWWBWBWBBBWWBBWWBWWBBWWBB", "WBBBWBBWBBBWWBBBWWBBWBWBWWBWBBBWWBWWWWWWBWWBBBBBWW", "WBBBBWWWBBBBBBBWBWBWBBWWWWWBWBWWWWWWBWBWBBWBBBWWBB", "WBWBBBWBBWBWWWBBBBWBBBWBWWWBBBWBWBBWBWBBBBWWWWWBWB", "BWBBBBBWWWBWBBBBBWBBWBWWWWWBWWBWBWWBWBWWWWBBBWBBBB" };
    int maxStrokes = 111;
    assertEquals(865, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case23() {
    String[] picture = { "BBWBWWBWBBBWBWBBBWBWWWWBBWWBWBBBWBBWBWBBBWBBBWWWWB", "WWBWBBBBBBBWWWWBBBBWBWWBWWWBWBWWBBWWWWBBWBWWBBBBWB", "WWWBWBWWBBBBWWWBWWWBBBWBBWBWWBWBBWBWBBBBWWWWBWWWWB", "WBBBBBWBWBBWBWBWBBBWBBWWBBBBBWWWBWWWWBBBBBWWBBWBWB", "BBBBWBWWBWBBBBWWWWBWBBWWWWBWBBWBWBWWBWWBWWBWBWWWBW", "WWWWBWBWBBBWWWWWWWBBBBWWBBWWWBBWBWWWBWBWWBWBBWBWBB", "BWBBBBBWWWWBWWWWBWWWWWBBBWBWBWWWBWWBWWWWWWWBWWBBBB", "BWWBWBWWWBBBWBBWBWWBBWWBWWWWBWWBBWWWWWBBWBBBBWBWBW", "BBWBWWWWBWWWWBWBWWBBWBWBBBBBBWWBWWWWBBWWBBWBBBBBBW", "BBBBBWWBBBWWBWWBBWBWBWWWWWBWWBBBWBWWBBBWBWWBWBWBBW", "WWWWWWWBBBWWWBWBWBBWBBWBBBBWBBBBWWBWBBBWBWBWBWBBBB", "BBWWWBWBWWWBBBBWWBBWBBBWBBWBWBWBWBBWWBBWWWBBBWBBBW", "WBBWWBWBBBBWBBBBBWBWBBWWBBWWWWWBWWBBBBBBBBBBBBWBBB", "WBBWBBBBBBBBWWWBBBWWBBBWWWBBBBWBWWBBWBBBWBWBWWBBWW", "WWBBWBBWWWBBBBWWBWWWWWBWWBWBWBBBWWWBWBBBBWWBBWBWWB", "WWBWWBBBWWBBBWWBWWWWWWBBBBBWBWWBWBBWBWWWWWWBBBBWWW", "BBWBBWWWWBWBWWWBBWWWWWBBBWWWBBWBWWWBWBWBBBBWWWBWWW", "WBWBBWWWWWBBBBWBWBBBWWWWBBWBBWBWBWBBWBWWWBBBWWWBWW", "WWBBWBBBWWWBWWBBBWBWBWWBBWBWWBWWBBBBBBBWBBBBWBBWWB", "WBWWBBWBWBWBWBBBWWWWBWWBBWBWWBBWWWBWBBWBWWBBWBWBWW", "WBWBWWWWBWWBBWBWWBBWWBWBWBWWBWBWBWBBBBWBBBBBWBBWWB", "WWBBBBBBBBBBBBBBBBBWBWBBWBWBWBWBWBBBWBWWBWBBWBWWBW", "BBBBWBBWBBWBWWBWBBWWWWWBWBWWBBWBBBBBBBBWWBBBWBWWBW", "BWWWWWBBBBWBWWWBWWBWBWBBWBBBBBBWBWBWBBBWWBBBBBBWBW", "BBWWWBBBWWBBWWWBBWBBBBBWWWWWBBBWWWWWBWWWBWWWBWWWBW", "WWWBWWWBBBWBBWWWWWWWWWWBBBBBBBWWWBWBWBBWBBWWBWWBBW", "WWWWWWWBBBWWBBBBWWBWBBBBWBWWBBWBBWWWWWWBWWBWBBBBBW", "WWWWWBBWBBWBWBWWWBWWBBWWWWBWBBBBBBBWWBWBBBBBWWWBBB", "WBWBWWWBBWBBBWWWBBBWWBBWWBBBBWWWBWWWWWWBWWWWBWBBBW", "BBWBBBBWWBWBWWBWBWBWBWWBWBWWBBWBBWWWWBWWBWWBWBBBWB", "BWBBWWWBBWBBWBWBWWWWWWWBBBBWWWBWBWBWWWWBWWWBWWBWBW", "BWBWWWWBBWBBBBBWWBWWBWWBBBWBBBBWWWWWWBBWBWWBBBBWBB", "WBBBBBWWWBWBWBWWWWBBBBWBWBBWBWWBBBBWBWBWWWWBWWBWBW", "WBBWWWWWWWWWBWBWBWBWWBBBBWBBBWWBWWBWBWBBWWWBBWWBBB", "BBBBWBBWWBWBBBWBWWWWWWBWWWWBBBBWWWBWWBWWWBBWBBBWBW", "WBBBWBWWBBWWWWWWWBWWWWWBWBBWWBWBBWWBBWBWWBWBWBBBBB", "WBWBWBWWBBWBBBBBBBBBBBBBBWWWBBWWBWWBBWWBWBWWWWBBBB", "WWWBWBBBWBWWWBBBBWWBWBBBBWWBBBBWWBBBBWWBBBBBWWWWWW", "WBWBBWBWBWWWWWBWWBWBBBWWBBWBWWWWBBBWWBWBBBBWWWBWWW", "WBBWBBWWWBWBBWWWBBWWWWWBBWWWWBBBWWBWWBWBWWBWBBWWBW", "BBBBBBBBBWWWWBWBBWWWBWBBBWBBBBWBWWBBWBWBWBWBBBBWWB", "WBWBBWWWWBBBBWWBBWWWWWBWWBBBWWBWBBBBWWBBBBBBBBBWBW", "BBBWBBWWWWWWWWBWBBWBBBWBBBBBWWBWBWWWBBBBWWBWWWWWBW", "BWWWWBWWBBWWWBBBWBWWWBWWWWBWWBWWBWWWWWWWWBBWWBWWBW", "WWBBWBBWWBBWWWBWWBWWWWWBWWWWBWBBWBWBWBBWWBBWWBWWWW", "BWBWWWWWBBBWWWBWWWBWBWBWWBWBBWBWWBBWWWWBBBBBBWWBWW", "WWBWBWWBBWBWBWBBBWWBBWWBBBWWBBBWWBBBWWBWBBBWWBWWBW", "WWWWBWBWWBBBWBBBWBWBBBBBBWBBBWBWWWWWBWWWWWBWBWWBBB", "BWBWWBBWWBWWWWBWBWBWBBBWBBBBWWBBBBWBWWBWBBBWBBWBBB", "BBBWBWWWWWBBWBBWBWBBWWWBWBBBBBBWBWBBBBWBWWWWWWWBBB" };
    int maxStrokes = 354;
    assertEquals(509, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case24() {
    String[] picture = { "BBWWWBBBWWBBBBBBBWWWBWWWBBBWWBBBWWBBBWBWWBWWBBWBWB", "BBWWWWWWBBWWBBBBBWBWBBBBBWWBBWBBBBBWWBBWWBWBBWBBBB", "BWWBWBWWWBWBBWBBBWBBWBBWBBWWBWBWWWWWWBWBWBWWWBWBBW", "BBBBBWBWWWWBBBBWWBWBWWBWWBWWBBWBWBWBWWBBBBBWBWWWWB", "WWWWBWWBBBBBWBBWBBBWWBWBWBWWWBWBBWWBBWWBWBWBBWWBWB", "WWWBWWWBWBWBWBBBBWBWWBBBWBWBWBWBWBWWBBWBBBWBBBBBBB", "WWBWWWBWWBWBBBWBBBBBWBBBWBBBBWWWBWBWWBBWWBWBWBBWBB", "BWWWWBBBBBWBBWBWBWWBWBBWBBWWBBWWBBBBBBBWBWWWWWBWBB", "BBBBBBBWBWWWBWBBWWBWBWWWBWBBBWBBWWWBWWBWBWBWWBBBWB", "BBBBBWWWBBBBBBWWWBBWBBBWBBWBWWWBBWBWWWWBWBBBWBWBBB", "WWWBWBWBWWBWWBBBBBBBWWWBBBWBWWBBWWWWWWWWWWWBBWBWBW", "WBBWWWWWWBWBBWBWBBBBWBBBBWBWBBWWWWBWWBBBBWBWBWBWBW", "WBBWBWBBWBWBWBWWWBBWBBWBBBWWBBBWWWBBBBWWBWWWBWBWWB", "BWWWWBBWBWWBWWWWWBBWWWBWWWBWBBBBBWWBWWBBBBWBWBBWBB", "BBWWWBBWWBBWWWWBWWBBBWBBBBBWBWBBBBWWWWWBBWWBBBBWBB", "BBWWBWBBBWWWWBWWWBBWBBWBBBBWWBBBWBBBBWBBWWWWBWBWWB", "WBBBWWWWBBBBWWBWWWBWWWBWWBWWBBWWWBBBWBBBWWWWWWWWWB", "WBBBWBBBBBBBWBBBBBBWWWWWWBBBWBWWWBBBWBBBWBBWWWBBWB", "BBWBWWBWWWBWBBWBWBBWWWWWBWBWBWWWWWWBWBWWWWBBWBBBBW", "WWBBWWBBWWWWWWWWBBWBWBBWWBBBWWWBBWWWBBWWWBBWWBBBBB", "BWWWWWBWBBWBBWWWWWBWWWBWBBWBBBBBWWWWWWWBBWWBWWWWBB", "WBBBBWWWBWWBBWWBWWBWWWBBWWWWBBWBBBWWWBWWWWWWBWWBWW", "BWWBWWBBWWBBWWBBWWBWWWWBWWWWWBBBBBBWBWWWWBBBBWWWBW", "WWBWWWWWWWWWBWWWBWWBBWWWWWBBWWBBWWBWWWWBWWWWWBWBWW", "WBBWWWWBWBWWBWBWBBBBBBBWWWBWWBWBWWBWBWBBBWWBWWBBBB", "WWBBBWBBBBBWBBWWBBBBWBWBWBBBBWBBBWBBBBWWWWBBBWBBBW", "WWWWWBWBBBBWBBWBWBWBBWWWWWBWWBBWBBWBWWWWWBBWBBWWWW", "WBWBBWBWBWWBWBBBWBWBWBWWBBBBBBBBWBWWBBBBBBWWBBWWWW", "BBBWBBBBBBWWBBBWWWBBWBBWWBBBBBBWBBBWBWBBBBBWWBWWWW", "WBBWBBWBWBBWWWBBBBBWBBWWWBBWWWWBBBWBWBWBBBWBBWBWBB", "BWWBWWWWWWBWBWBWWBWWWWWWWBWWBWWBWBBWBWBWWWWBBBBBBW", "BWWBWBWWWBBBBWWWWWWBBWBBBWBWBWWBWWBWBWBWBWBBBBWBWB", "BWWBWWBWBWBBBWWBBBBWBBWBWBBWBBWBWWBWBBBBBWWWBBBWWW", "BBBWWWWBBWBWWBBBWWBBBBWBBBBBWBWWWBBWBWBBWBWBBBBWBW", "BWBWBBWBBBBWBWBBBBWWWWWWWWWWBWWWWWBBWWWWWWWBBBWWWW", "BWWWWBBBBWBWWBBWWWWWWBBBBBBBBWWBBWBBWWWWWBWWBWWBWB", "BWBWWBWBWWWBWBWWBWBWBBBBWWBBWWWBBBWWWBWWWBWBWWWWWB", "BBBBBBBBWWWWWWBBBBWWBWWWWWWBWWWBBWBBBBWBWBWWBWWWWW", "BBBWWBWWWBBBBBBBBWWWBBBWWWBBBWBBBBWBBBWWBWBWWBBWBB", "WBBWWBBWWWBBBWBBWWBBWWBBBBBWWBBWWWBBWWBBBWBBBBWWBW", "BWWWWBBBBBWBWWBBBWWBWWBWBWBBWBWBWWWWWWBBWWBBBWBWWW", "BWBWWBWWBWBWWWWBWWBBBWWBBWBBBBBBWWBBBWWWWWBBBWWWBB", "BWBWWWWWWBWWBBWWBWBWWWWWWWWWWWBBBBWBBBWBWWBWWBBWBW", "BBBBBWBBWBWWBWBBBBBWWBWWWWBWWWWBBBBBBWWBBWBBBBBBWW", "BWBBWWWWWBWBWWBWBBWWBBWWWBWBBBWWWBWWBWWBWBWBWWWWBB", "BBWBBBWBWBWBBBBWBWWBBWBWBBWBBBWBBBWWBBBWBBBWWWBBWB", "WWBWBBBWWBWWWWWBBWBBWBBWWBWBWWWBBWBBBWBBBWBWBBBBBW", "BWBBWBWBBBBBWWWBBWWBWWBWWWBBWBWWBBWBBWWWWWBWBBWWWB", "WWWWWWWBBBWBBBBBWWWWWBBWWBWBWBBBWWWWWWBBWBWWBWWWWW", "BBBBWWWWWBBBWBWWBBBBWBBWBBWWBBBBWWBWWBBWWBBBBBBBBW" };
    int maxStrokes = 132;
    assertEquals(781, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case25() {
    String[] picture = { "WBBWWBBWBBWWBBWBWWBBBBBWWWWWWWBWWWBBWWBWWWBWWWWWBB", "WBBBBWBBBWBWWWBWBWBWWBWBBBWBBBWWBWWBWBBBWBWWBBWWWB", "BWWBWBBWBBBWWBBBBBBWWWWBWWBBWBWBWWBWBWBBWBWBWBBWWB", "WWBBWWBWBBWWWWWBBWBBBBBWBBWWWBWBBBBBBBWWWBBBBBBWBW", "BWWBWWWBBWBWBWBBWWBBBBWWBBBBBBBWWWWBBBWBBWWWBWBWBB", "BBBWWWWWBWBWBBWWWWWWBBBWWBBWWWBWBWWBBWBWBBBBBWBBWB", "BWWBWBBBBBBBBBBWWBWWWWBBWBBWBWBBBBBWBBBWWBWBBWBBBB", "WWBBBBWWWBWBBWBWWBBBWBBWBWBWWWBBWWWWBBBBWWWBWWBWWW", "WWWBBBBWWWWWBWBBBWWBBWBWWBBWWBBBWWWWBWWBBWBBWBWBWB", "WWWBWWWBWWBWBBWWWBWBBWWWBBWBWWWBWBBWBBWWWBWBWWWWWW", "WWWBWWBBWBWBBBWWWBBBBBWWWBBBBBBBBWWWWWBBBBWBBWBBBB", "WBWWWBBWWBWWBWBBBBWWBWBWWBWWWWWBBBBBBBBWWWWWWWBWWW", "WBWBWBBBWBWBBBWBWWBBBWWWBWBBBWWWBWBBWBBBBBBBWBBWWW", "WBWBWBWBWBWBBWWWWBWBWWWBWWWBWBWWBWWBWWWBBWWBBWWWBB", "BWBWWWWWWWBBBWBWBWBWWBWBBWBBBBBWWWBWBBBWWWBWWBWWBW", "WBWBBWWWWBWBWBBBWBWWWBBBBWBBBBBBBBBWBWBWWWWBBWWBBB", "WBWBBBBWBBWWBBBWWBWWBWBBBBBWWWWBBWWWBBWWWBBBWBWBBB", "BBBWWBBWBBWWWBBWWWWWBBWBWWWWWWWWBWWWWBBWWBBWWBBBWB", "BWWBWBWBWWBWBWWWBWWWBWWWBWWBBWWWWBBBWBBBBBBBBBBBWW", "WBWWBWWBBWWWBBBWBBWWBWBBBBWBWBWBWWWWWBWWWBWBWBWWBB", "WBBBBBWWWWWBWWBBBBWWBWBBWWBBWWWWWWWBBBWWBBWBWBBBBW", "WBBBBWWWBBBBBWWWWBBWBBWWWWBBWWBBWBBWWBWBWBBWBWBBBB", "WBBWBWWWWBBBBBBBWWBBBBBBWBBBWWWWWWBBBWBWBBBWBBBWBW", "BBBWWWWWWBWWBWBWWBWWBBWBBBWBBBBBBWBWWBWBBWBBBWBWBW", "WBBWBBBWBBWWWWBWWBBBWBWBBWWWWBWBWBBBBWBWWWWBBBWBWW", "BBWWWWWWWBWBWWWBBBBBWWBWWBWBBWBWWWBWBBBBWWBBWWBBWW", "BBWWBBBBBBWWWWWWWWBWBWBBBBBBWBWBBBWWBWWWWBBBWBWWBB", "BWWBWWBBBWBWWWWBBBBWBWBWBWBWBWWBBWWWWBWWWWBWWBBWBW", "BBWBBBWBWBWBBBWBWBBBBBWBWWBBBBBWWWWBWWWWWBWBBBWBBW", "WWWBWBWWWBBBBWBWBWBBWWWBWWWWBWWBBBWBWWWBWBWBWWWWWW", "WWWBBWWWWWBBBWWBWBBWBBBWBBBWWBBWBBBWWBBBWBWBBWBBBB", "BBWWBBBBWWBBBBWBBBWBWWBBBWBBWWBWWWWBBBWBBWBBWWBWWW", "WBBBWBBWBBWBBBWBWBWBWWBBWWWBWBBWWWWBBWBWWWBWWBBWBB", "WBWBWWWWBWBWBWBWWBWWBBWWWBWWWWWBWWBWBWWBBWBWBWWWWW", "BWWBBBBBWWBBWWBBBWBWBWWBWBBBBBWBBWWWBBBBWBBWBBWWBB", "WBBWBBBWBBWBBBWWWWBWBBWBWWBWWWBBWWBWWWWBBWBWWBBBBW", "BWBWWWBBBBWWWBBBWBWWBBBWWWWBWWBBWBBBWBBBWBWWBWBWWW", "BWWBWWBWWBWBWWBBWWBWWWBWWWBWWBBBBBWBWWBWWWBBBBWWWB", "BBWWWBBBWBWBBWWWBBBBBBWBBBBBWWBWWWBBWBBWWBWWWWWBWW", "WWWWBWWBBWWWWBBWBWBWBWWWBWWWBBWWBBBBWWBWBWBBWWWBWB", "WWBWWBBWWWBBBBBBBWWBBBBBWWWWWBWWBWWBWBBWWBBBWBBWBB", "WBWBBBBWWBBWBWWWWWWWBBWBWWWWBBBWBBWBWWWBWBWBWWBBBB", "WWBBBWWWWWWBWWBWWWWWBBWBBBWWWWBBWWBWWWWWBBBWBBWBWW", "WBWWBBWBBBWBWWWBBBWWWBBWBBWBWBWWWWBBBWWBWWWBBBWWWW", "WBWBBWWBWBBBWBBWWWWBWBWWBBBWBBWWWBBWWBWWBWWWWWBBWB", "BBBBWBBBWBBBBBWBBWWWWBWBBBWWWBBBBWWWBBWBBWBWBWBBWB", "BBWBWWBBBWWBBBBWBBBBWWBWWWBBBBBWWWBBWBWBWBWWBBWWWW", "BWBWWBBWBWBWWBBWBWWBBWWBBBBWBWBBBWWWWBWBBWWWWWBWWB", "WWBWWBBBWBWWWWWWWWWWWBBBBBBBBBWWBBWWWWWBWWWBWBBBWW", "WBBBWBBWBWBWWBBBBBWWBBBBBBWBWBBWBWWWWBWWBBBWWWWBWW" };
    int maxStrokes = 117;
    assertEquals(844, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case26() {
    String[] picture = { "WBWBBWWBBBWBBWWBWWWBBBWBBWWBWBBBWWBBBBBBBBWWBBBWBB", "BWBBBWWBBBWWWWBWBBBWBWWWWBWBWWBBWWWBWWBWWWBWBWBWWW", "WBWWWBBWBWWWWBBBWBBWWWWBBWBWBWWWBWBWBWWBBWWWBBBBWW", "BBWBBBWWBWBWWWWBBWWBWWBBBWBWWBWBWWWBWBBBBBBWWBBBWW", "BWBWWWBBBBBBWWWBBBBBBWWBBBBBBWWWBBWBBBBBWBWBWWBBBB", "BWWBBWWWBWBBBBBWBWBWWBBBWWWBWWWWBBBBBBBWBWBWBBWWBB", "BWBWBWBWWWBBBWWWWWWBBBWWBWBWWBBBBBBBWWWBBWWBBBWWWW", "WBWBBBBWBBBBBBBBBWBBBWBBBBWBBBBBWWWBWBBBBBWBWWWBWW", "BWBBWWWBWWBWWBWBWBWBWWBWWWBWWBBBBBBBBBBBBBBWBBBBWB", "WBBWBWWWBBWWWBBBBBBBWBBWBWWWBWBWWBWWBWBWBBBBBBBWWB", "WBBBWBBWBWWWWWBBBBBWWBBWBBWWWBWBBBBWWBWBBBBBBWWWWB", "WBWWWBWBWWBWBWBWBWBWWWBWWWBWBBBBBBWBBWBBBWWWWWWWBW", "WBWWBWWBWBWWBWWBWBWBBBBWWWBWWWBBBWWBWBWBBWWWBWBWWW", "WWWWBBBBWBWWWWBBWWBWWWBBWWBBBWWBWBBBWWBBWBWBBWWBWW", "BBWBBBBWBWBBBWWBWBBBBBBWBBBWWWWWWBWBWWWWWWWBWBBBWB", "BBBBWBBWBWBWWWWWWWBBWWWBBBWBBBBWBBWBWWWBWWWBWBWWBW", "WWWBBWWWBWWWWBWBBWWBWBBWWWBBBBBWWBBBBWBBBWBBBBWBBW", "BBBWWWBWBWBWWWWWWBBBBWWBWBBBBBWBBBWWBBBBBBWBWBBWWB", "WWBWWBBBWBWWBWWBBWBBBBBBWBBWBWBWWBBWBBBBWWWWWBBBWW", "BWWWBBBBBWBWWWWWBWBBBWBBBWWBBWBBWBBWWBBWWBBBWWBBBW", "WWWBWBBWBWWWWWBBBBWWWWBWWBBWBWBBWWWWBBBBWBWBBBWWWB", "BWWWBBBBBBWBWWBWBBWWWWBBBBBWBWWWBWWWBWWWWWBWWBBBBW", "WBWBWWBWWWWWBBWBBWWBWBBBWBWBBBBWBWWWWWBBWWBWWBBBWB", "BBWBWWWBBBWBBWBWBWBBWWBWBBBWWWWWBBWBBBBBBWBWBBBBWB", "BWWBWBBBWWBWWBBWBWWBWWWBBWBBWWBWWWBWWBWWBWWWWWWBBW", "BWBWWBBBBBWBWBWWWBWWBWWBBBWBBBWBWBWBBWWBBBBWBBWWBB", "WBBWBBWBWWBBWWWBWBWWBWWWBBBBWWBBBBWBBWWWBWWWWWWWBW", "WBBWBBBBWWWBWBWBBBBBBBBWWBWWBBWWWWBWBWBWWBBWBBBBWW", "WBBBWWBWWBWWWBBWWBWWWWWBWWWWWWWBBBWBWWBWBWBWBBBBBB", "WBWBBBBWWWBBBWBWBBWWWBBBWBBWBWWBBBBBBBBWBWWWBBWBWB", "WBBBBBBWBWBBBWBBWBBBBWBBBWWWWWBBWWBWWWWBBBWWBWBWWW", "BBWBWWBWBWBBWBBBBWBWBBBWBWWWBBWWWBWBWBBBBBWWWBWWWB", "WBWWWWBBWWBWWBBWWWBWWWWBBWBBWBBBWBBWBBBBWWWWBWBWBW", "BWWWBBBBWBWWWBWWWBWBBBBWWBBBBWWWBBWWWBWBWWBWBWBWWW", "BBBWBBWWWBBWWBBBWWWWBBWWBBWWBBWBBBWWWWBWWBBBWBWWBW", "WWBWBWBBWWWWWBBWBBBWWWBBBBWBBBWWWBBWBBBWWWBWWWBBWB", "WWWBBWBWBBBBBBWWBBWBBBBWWWWBBWWWBBWBWWBBBBWWBWBBBB", "BBBBBBWWBWWWBBBBWBBBBBWBWWBBBBWWWWBBWBWBWBBWBBWWBW", "WBBWBBWBBBBWWBBBWBBBBWWWWWWBBWWBWBWWWWBBWBWBWBWWWW", "BBWWBWWWBWWWBWWBWWBWWBBBBBWWBWBWBBBBWWWWBBBWBBBWWW", "WWWWBWBBWBWBBBBBBBWBWWBBBBBWWBWBWBBBBWBBBWWWBWBBBW", "BBWBBBWBBBBBBWWWBBBWWBWWWBWBBBWWWBWWWBBBBWWWWWBWBB", "WBWWBWBWWWWWWBBBWBBBBBWBBBWWBBWWBBBBWWWWBWWWBBWBWW", "BWWBWWWBBWWWWWWWWBBWWWWWBWWWWBWBBWBBWBWWWBBBBBBWBW", "WWBBBBBWBWBBWBWWBBBWBWBWWBBBBBBWWBBBWWWWWWBBWWWBWB", "WBWBWBBBBWWWWWBBBBBBWWBBWWWWBBWBBBWWWWWBWBBBWWWWWW", "BBBBWWBWWWWBWWBBBWWBBBWBWWBBBWWWWBWBBBBWBBBWBWWBBW", "BWWBWBBWBBBBWBBBBWBWWBWBBBWWWWWBWWBBBBWWBWWWBWWWBB", "WBBWBWWBWWWBWBBWBWBBWBBWBWWBWWBWBWWBBBBWBBWWBWBBBB", "BBWWWWWWWBBBBWWBBWBBWBWWWBWBWBBWBBWBWWWWBWBBWWWBWW" };
    int maxStrokes = 192;
    assertEquals(685, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case27() {
    String[] picture = { "WBBWWBWBWWWWWBWBBBWWWBWBBWBWBBBBBBBBWWWWWBWWBWBBWB", "BBWBBBBWBWWWBWWBWBBBBBBBBWBBBBBWBBBWWWWBBBWBWBWBWW", "BBWBBWBBWWWWWBBWWBWWBBBWBWWWWWBWBBWBWWBWWBWWWWWWWW", "BWBWWWBWBWBWBBBBWBWBBBBBBWBBWWWBBBWBWBWBWWBWWWWWBB", "BBWWWWWBBBWBWWBBWWWWBWWWWWBBBBWBWWBWBBBBBWBWBWWWBB", "WWWBWWBBBBBBBWWWWBWWBWWBWBWWWWBWBBWWWBWWWBBWWBBWWW", "WBBWWBWBBBBBBBBWBWBBBBBBWBBWWWBBWBWWWBWWBWBWWWBBWW", "BBBBBBBWWBWWWBWBBBWBWWWWBWBWWWBWBBWBWWWBBWWBBBWWWW", "WWWWBWBBBBWBWWBWBBBBBWWWWBBBBWBWBWWWBWBBWBWWWBWWBW", "BWWBWWWWWBWWBWWWBWWBWBBWWBWBWWWBBWWWWBBBBWBWBWWWWB", "BWBWBBWBBWWBBWBBWWWWBWBWWBWBWWWWWBWBBBBWWBWBBBWWBB", "WBWBWWWBBBWWBWBWWWBWWWWBBBBWBBBWWBBBBBWWBWBWWBWBWB", "WBBWWWBBBWBBWWWWBWWBBWWBWBBWWWBBWBWBWBBWBBWWWBBWBB", "WBBWBWWWWBBBWBWBWBWBWBWBBWBBWWBBBBBWWWBWBBBBWWWBWB", "WWWBBWBBWWBBWWWBBBWBBWBWWBBWWBBBBBWBBBWWBBWWWWWWWB", "BWWBBWWWWWWBBBBWWBBBWBBBBWWBBWBWBBBWWWWBWWWBBBWBWB", "WBWWWBBBWWWBWWWBBBWWBWBBBBBWWBBBWBWBBWWWWWWBWWWWWB", "WWBBBWWWBBBWWBBBBWBBWWWWBWWBBWBWWBBBBBWWBBBBWBWWBB", "BWWBWBBWBBBBBBBWWBWWBBBWWWWWWBBBWWWBWBBBBBWBWWBBWW", "BBWBWWWWWBBBWWWBBWWBWWWWWBBBBWBBBBBWBBBBBBBWBBWBBB", "WBWBBWBBWBBBWBWWBBBWWBBWBBBWWBBWBWBWWBWWBBWWWWBWWB", "WBWWBBWWBWBBWWWWBWBBWBBBBBWWWBBBWWBBBWBWBWWBWWBWWB", "WBWBBBWBWWWWBBBWBWWWWBWBBBWBWBWWBBWWWWWBWBBBBWWBBB", "WBWWBWWBBBBWBWBWWWBBWBBWWBBBBBWWWBWWWWWWBWWBBWBBWW", "WWBBBBWWWWWWWWWWBWWWBWBWBBBBBWBBWWBBBBWBWBBBBBBWBW", "BBBBWBWWWWBWWBBWBBWBWWBWBBBBWBWWBBBBBWBBBBBBWWWBBB", "WBWWBWWWBBBBBWWWWWWBBBBBBWBWBWWBWWWWBWBBBBWWBBBBBW", "WWWWWBWBBBBWWBBBWBWWBWBBWBWWBBBWWBBBBBWWBWWWWWBBWB", "BBBWWWWBBBBWWBBWBWWWWBWWWBWWBBBWBBWBWWWBBBWWWBBBWB", "WBBBBBBBWWWBWWBBWBWWBWWWBWWWBBBBBBBBWBBWWBBBBBWBBW", "BWWBWWWBBBWBWWWWBBWBBWBBBBBWBWBWWWBBBBWBBBBBBWBBWW", "BWWBBWBWWBWBWBWBBBWWBWWWWWBWWWBBWBBBWWBBWBWWWBBBBB", "WBWBWWWWWWWBBWBWWBBBWBBWBBWWWWWBWBBBBWBBBWWBWBBBWW", "BBBWWWWWWWBWBBWBBBBBBWBBWBBWBWWBBWWWWWWBBBBBBWBBBB", "BBBWBWWWBWWWBBWWBWBWBWBWWBBBWWBBWWWWWWWWWBBWWWWWBB", "BBBBWWBBBWBWWBBBBWWBWBWBBWWWBWBBWWWBWBBBBBWBWBWWWB", "BWWWWWWWWWBBWBWBWBBWBBWWWWWWWWBWWWWBBWBWBBBBWBWWBW", "WWWWBWBBWWBWBBWWWWBBBBWBWBBBBBWBWWBBWWBWWBBWBWWWBB", "BWBBWWBWWWBBWWBWWWWBBWBBWBBWBBBWBWWBWBBBBBBBBWBBWW", "BBWBBWWWWWWBBWBBWWBWBBBBBWBWBWWBWWBWBWBWWWWWWBWBBB", "WWBWWWBBBBBWBBBWBWWBWBBWWWWWBWWWWBBWBBWWWBWBBBWWWB", "BWBWWBWWWWBBWWWWWWBWWWWWBWBBBWBWBWWBBWBBWBWWBWWWBW", "WBWWWBWWWBBWBWWBBWBWBWBBBBBWWBBBWWBBBWBBWWBBWWWBWW", "BWWBWWWWWWBBBBBWWBWWBWWBWBBWWBBBBWWWBBBBBBBBWBBWBW", "BBWWBWBBBBWWBBWWBWWBWBWBBBWWWWWBBWBWWWWWWBWBBBWWBB", "BBWBWWBWBWWBBWBBWBWWBWWWBBBBWWWWBWBWWBWBBWWWBBWBBW", "WWWWWWWBBWWBWWWBWWWBBBBWBWBWWWBWBBWWBWWBBBWBWWWBBW", "BWBBWWBBWWBBBBBWWBWWWBWWBWWBWWBBBBBWBWWBBBWBWBWWWW", "WWWBBBBWWWWBWWWWWWBBWWWBWBWWBWWWWBWWWWWWBWBWWBWWWW", "BWWWWBWWWBBWWBBBBWWWWWWWBBBBWBWWBBWBWBBBWWWBBWWBWW" };
    int maxStrokes = 221;
    assertEquals(655, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case28() {
    String[] picture = { "BWBWWWWBBBBWBWWBWBBWBBBWBWWWBWWBWBBWBWBWWWWBWBWBBW", "WWWWWWWBWBBBBBWWWWWWBBWWWBBBWWBBWBWWWWWBBWBWWWWWBW", "BWWBBWBBWWWWBWBBWWBWBBWBBWBWBBBWBBBBBWBBBBBBWWBWBB", "BWWBBWWBWBBWWBWBBWBWWWBBBBBBBBBWWWBWWBWWBBWBWBBWWW", "BBWBBBBBBBBWWWBBWBWWWWWBWWBWWBWBBWBBWWBWWWWWBBWBBB", "BWBBWWBBBBBWWBBBBBBBBWBWWBWBWBWBWBWWWBWBWWBBBBWWWB", "BWBWBWWBWWWBWWBWWBWBBBWWBWWWBBBWBWWWWBBWWBWBWWBBBW", "BWBWWWBBBWBBBWWWWWWBBBBBWBWBBWWBWBBBWWWWWBWBWWBWWW", "WBBBBBBBWWWWBBWWBBWBWWBBBWBBWWBBWWBBWBWWWBWWBBWWBW", "BWBWBBWWBWWWBBWWWBWBWBWBWWWWWBBWWWWWBWWBWBBBBBWWWW", "BBBBWWWBWBBBWBBWBWWWWBBBBBWBBWBBWBWBBWBBWWBBWBWWWW", "BBBBWBBBWWBWBWWWBBWBWBBBBWWWBBWBBWWWBBWBBWBBBWBWWW", "WBBBWWWBWBWBWWBWBBWWBWBBBWWBBWBWWWWBBBBWBWBWBWWWBB", "WWBBWWBBWBBWWBBBWWBWBBBWWWBBBWBWWWWWWWBBBBWWWBWBWW", "WBWBWBBBWWWBBBWWWBWBWBWWBWBBBWWWWWBBBWWBWBWWWBBWWW", "BWBBWWBWBWBBBWWWBWBBBWWWBBWBBBWBWWBBBBBBWBWBWBWBWB", "WBWWBWWBBBBWWBWBWBWWBWBWWWWBBWBWWBWWBWBWBBWWBBBWWB", "WBWWBWWWWWWWWWWWBBWBWWWBWWWBWWBWBBBWBWBBWWWWBBWBBB", "WBWBBBBBWBBWWBBBWBBWWWWWBBBBBWBBBWBWBBBBWBWBBBWBBW", "BBBWWWWBBWWWBWBWWWWBWBWWWWBWBBWWWWBWBBBWWWWBWWWBBW", "BWBWWBWWBWBWWWWWWBBWWBBWWWWWWBBBWWWWWWBBBWWBBWWBWB", "BBWWWBWBWBWWBBWBBWBWBWBBBBBBWBBBBBBWWBWBWWBWBBBWWB", "WWBWBBWWWBBWWBWWWBWBWBBWBBBBBBBWWBWWWWBBWWWBBWBBWB", "WBWBBBWWBWWWWWWBBBBBBBWWWWWBBBWBWWBWBBBWBWBWWWBBBB", "BWWWWWBWBWBWBWWWWWBWWBBWBWWWWWWWBWWWWWBWBWBBWWBBWW", "BWWWBBWBBWWBWWWBBWBWWWWBWBWBBWBWBWWWWBBBBWBBBWWWBW", "BWBWBWWWWWWWWBWWBBWBBBBWWWWWWWWWWBWWBBWWBWBBBBWBBB", "BWBWBWBWWBBWBWBWBWBBWWWWBWBBWWWBWBBBBWWBBWBWWWWWWB", "WWWBBBBWBBBBBBBBBBBBWBBWBWBWWWBWWWWWWBWBWBBBWBBBWW", "BBWBWWWBBBBWBWWBBWBBBWWWWBBWWBBWWBBWWWWWBBBBWWWWBB", "BWWBWWBBWBBWWWWWBBWWWBBBWWWWBWWWBWBWBBWWWBWBBWBWBB", "BBWBBBWBBWWWBWBBBBWBBWBBBBWBBBWBBBWBWBWWWWWBBBWBBB", "BBBWWWWBBWWWWBBWBWWWBWBBWWWBBWBWWBWBBWWBWWBBBWBWWW", "WWBWWBBBBWBWBWBWBBWWWWWBBWBBBWBWWBWWWBWWBBBWWWWBWW", "WBWBWBWWBWBWWBBBWBWBBBWWBWBWWWBWWWBWWWWWBBWWWWBBWW", "BWBWWWWWBBWWWBBBBWBBWBWWBBWWWBBBBWWWWWWBWWWWWWWWWW", "WBWBBBBBWBBWWBWWWWBWBWBWBBBBWWBBWWWBBBBBBBBWBBBBBB", "BBBBBWWWBBWBBBWWBWBWWWBBWWWBWWBBWWWBWBBBWWWBWWBBWB", "BBBWWWBBWBBBBBBWWWBWWBWWWWBWWBWWBBWBWWWWBWWWWWBBBW", "BBBWBBBBBWBBWBWBWBWWBWWWBWBBBBWBWWWBBBBBBWWWWWWBBB", "BBWWWBWWWWWBBWWWBBBWWBBBWBWBBBBBBBWWBBBWBBWWBBBBWW", "WWWBBWBBBWBWBBBWBBWBWBWBWBBBWBBBBWWBBWWWWWWBWBBWBW", "WWBBBBWWBWBBBBWBBWBWBBBBWBBBWBWBBBBWWBWBBBWWWWBBBB", "BWWWBWBWWWWBBBWWBBWWWBBBBWBBBWBWBWWWBBWWWBWWWWBBBB", "WBBBWBWWBBBBWBBBWBWWWBWBWBWBWBWWBBWWWBWWWBWWBBWWBW", "BBBWBBBWBWBBWWBWWBBBBBWWWBWWWBBWWBWWBBBBBWBWBBWWBW", "WWWBBWBWBWWWBWBBBWBWWBWBBWBBWWWBWWBWBWBBBBWBWWWBBB", "BWWBWWBWBWWBBBBBBBWBWBBBBBWWBWWWBBBBBWWBBBWWWBWWBW", "BBWWBWWWBWWBWBWWBWWWBWBBBBBWBWBBWBWWBWBBWBWBBBBBBW", "BBBWBWBBBWBWBBBBBBWBWBWWBBWBBBBBBBWWBBBBWBBWBWWBBB" };
    int maxStrokes = 147;
    assertEquals(782, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case29() {
    String[] picture = { "BWWBWWWWWBWWBBBWBWBBWBBBBWWWWBWWBBBWBWWBWBWBWWWWBW", "BBBWBBBBWBBBBBWWBWWBBBBWBBWBBWWBWWBBWBWWBWWBBWBWWW", "BWWBWWWWWBBWBWWWBWWBWWWWWWBWWBBWWBWWBWWWBBWBBWWBBW", "BWBBWBBWWWWBBBBBBBWBWBBWWWBBBBBBWWWWBWWWBWBWBBBBWB", "WBWBWWWBBBWBBBBBBWBBBWBWWWBWWBWBWWBWWBBBBWBWBWBBWB", "BWWBWWWWBWWWBWBWBWWWBBWWWBBBWWWBWWBBWBBWBWBBWBWWWB", "BWBBBBWBBWBWBBBBBWWBBBWWBBWBBWWBWBBWBWWBWWBWBBWBBB", "BWWBBWBBBWWWBBBWBBBWBBWBWWBWWBBWWWBWWWWBWWBWBBWWWB", "WBBBWBBWBWBBBWBBBBBBWBWWBBBBWWBBBBBWBBBWBBWBBWBBWB", "BBBWBWBWBBWBBBBWWWWBBBBWWBBWWWBWWWWWWWWWWBBWWBBWWB", "BWBBBWBBBBBBBBBBWBBWWWWWBBBBWBWWWWBWBWBWWBBWBWBBBB", "BWBBWBBBWWWBWBWBWBWBWWBBBBBBWBBBBWBWWWBBBWBWWBBWWB", "BWWBWWBBWWWBBWWWWWWBWBBBBWBWBWBBBWWBBBBBWWWBBWWBBB", "BWBWBWBBBBWWWBBBWWBBBBWBWBWBWBBBBWWBWBWWWBBWWBBWWW", "WBWWBBBWBBWWWBWBBWWBWBWWBWBWBWWWBBBWWBWBWWWWBBWWBW", "WBBWWWWWBWBWWBWWBWWWWWBWBBBWWWWWBWBBWBBBWWWWWBBWBB", "BWWWBBBWWBBWBWWBWWWWWBWWBWBWWWWBBWWBWBWBBWBBBBBWBB", "WBBBBWWBBWWWWBBWBBWWWBWBBBWBBBBBBBBWWWWBWWBBWBBBBW", "BWBWWWWWWWWWBBWBBWBBBBWWBBWWBBBBWBBBWBWBWWWWBBBBWB", "BWBWBWWWWWWWBWWBBBBBWWBWBBWBWBWBBBWBBWBWWBBBBWBWBB", "WBWBWWBWWWBBWWWWBWBBWBBWWWBBBBWBBWBWBWWBWBWWBBWBBW", "WBWBBWWWBWBBBWBWBWWBWWBBWWBBWWBBBBWWBWWBWBWWBBWBWB", "WWWWWWWWWBWWWBBWBBBWWWWWWBWWWBBWBWBWWBBWBWBBWBBBWB", "BWWBWWWWBWWWBBWBWWBBBWBWBWWBWWWWWWWBWBBBBBWWBWWWWW", "BBWBWWWWBWWWWWBWWWBWWBWWBWBWBBWBWBWBBBWBBWWBWWWWWW", "BWWBWBWBWBWWBWBWBBWBBBBBBBBBWWBWBBBBBBWWBBWWBBBWBB", "BWBWWWWBBWBBBBWBWWWBBWBWBBBBWBBWWWWWBBWWWWBWBWBWBB", "BBWWWBWBWBBWWWWWBBWWBWBWWBWBBWBBWBBWBBBBWBBBWWWBWW", "BWBBWBWWBWBBWBBBBWWWWWWWWWBBWBBBWBBBBWBWWWBWWWBBWB", "BWBWBWWBBBBBBBWBBWBBWWBBWBWWBBBWBBBWWBBWBBWWBWBBWW", "BBBWBBWWWBWWBBWBBBWWBWWWBBBBWWWWWBBWBWWWWWWWBBWBBB", "BBBWBWWBWBBBWBBBWWWWBWBBBWBBWWWBBWBBWWWWBWBBBBWBBB", "WWWBWBBBBWBBWBBBWWWBBWWWWBWBBWBBWWWBWWBWBBBBBBBBWB", "WBWBBBBBBBWWWWWBWBWWBWBBBBBWBBWBWBWBWWBBWWBBWBBWWB", "WWBWBBBWBBBBBBBWWBBWWBWWWBBWWWWBBBBWWWWWBBBWWBWBBB", "WBWBBBBBBWBWWBWBBWWWWWBBBWBBBWWWWWBWWBWBWWBWWWWBWW", "WWBBWBWBBBBWBWWWBBBWBBWWWBWWBBBBBWWWBBWWBBBWBBWBBB", "BBBWBWWBBBWWWWWBBBWWWWBWBBWWBWBBBWBBBBBWWWWBWBBWWW", "BBWWWBBBWBBBBBBWWBWBWBWWBBWWBBWBWWBWWWBWWWBBWWWBBW", "BWBBBWWWWWWBBBBBBWBWWWBBBBWBBWWWWBWBBBWBWWWBBBWWBB", "BWBBWWBBBBWBBWWWBWWBWWWWBWBBBWBWWBBWWBBBWBWBWWBBWB", "BWBBWWBBBWBBBWBWBWBBWWBWBWBBBBWBBWWWWWBWWWWBWBBBWB", "WWWWWBBWBBWBBBWWBWWWBWBWWWWWBBWWBBBWWWBWBBWBBWWBBB", "BBBBBWWWWWWBBBWWBBWWWBWWWWWBWBWWWBWBWBWBWWWBWBBWBB", "WBWBBBBBWWBBBBBWWWWBBBWWBBBBWBBWBWWWBBWBBBWBWBBWBW", "WBWWBBBWWWBWWBBBWBBWBBWBBBWBWWWWBWBBBWWBWBWWBBWBBB", "BWBWBWBBWWBBWBBWWBWWWBBWBWWWBWBBBBWBBWWBBWWWWWWWBB", "WBBWBBBBWBWBWWWWBBBWBBBBWWBBBBWBBBBBBBBWWWBWWWBWBW", "BBWWBBWWBBWBBWBBBWBWBWBWWBWWBBBBWBBBBWBBBBWBWBBWWW", "BBWWWBWBBBWWWBWWWBWWWWWBBBWWWWBBWWWBWWBBBBBWWWWWWB" };
    int maxStrokes = 270;
    assertEquals(598, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case30() {
    String[] picture = { "BBWBWWWBWBWWWWWBBWWBWBBBBBBWBWBWBWWBWBWWWWBWWWBWWB", "BWBWWWBBWWBBWBWWWWBBBBBWWBWBWBBBBWWWBBBBWBWWBBBBWW", "WWWBBWWBBBWBWWWWWBWWWWWWBBWWWBBBWBWBBBWBBBBBWBBBBW", "WBWWWBBWWWBBBWWBBBWWWWWWWWWWBBBBWWBBBWBWBWBBWWBBWB", "WBBBBWWWWWBBWBBBBWWWWBWWBBBBWBBBWBWBBBWWWBBBBBBWWB", "WWBBWWWBBBBBWWBBWBWWWBWBBWBBBBWWWBWBBWBBBWBWBBBWWB", "BWWBWBWBWWBWBWBWWBBBBBBBBBWBBBWBBBWWBWWBBBBWBWBWWW", "WBWWBWBWWBBBBBBBWWWBWBBWBWBWBWBWBBWWWBWWWBBWWWWWWW", "BWWWWBWWWWBBWWBBBBWBBBBBBWBWWBWBBBBBWWBBBBBWBBBWBW", "BWWBWWWWBWBWBWBWBBBBBWWWWWBWWWBWBWBBWWWBWWWBWWBWBB", "BWWWBBBWWBWWBBWWWWWBWWWBBWWWWBWWBBBWBBBWWBBWWBBWBW", "WWBWWBWWWWWWWWWWWBBBBWWWWBWBBWWWBWBWWBBWWWBWWBWBWB", "BWBWWWBBWWBWBBBBBBBBBBWWBWBBWWBBBWWWWWWWWBWBWBBBWW", "BWWWWWBBWWBBWBBWBBBBBBWWBWWBWWBBWBWBWBBBWWBWWBWBBW", "BBWBBWWWBBWWBWWBWBWBBBWWBBBBWBBWBBWWBBWWBWBBWBWBBB", "BWWBBWBBBBWBWBWBBWWWBBBWBWWBWBBBBWBWBBWWBWWWWWBBWW", "BWWBBWWBBBBBWWWBBBBBWWWBWWBBWWWWBWBWBBBBWWBWBBBWBW", "WWWBWWBBWBBWBWWWBBBWBWBWBBBWBWWWWBWWWBBWWWBBBBWWBB", "BBWBBBWWWWBBBWBBWBWWWBWBBWBWWWWBWBWWBBWWBBBBWWBWBW", "WBBBWWBBBBBWWWWWBWBWBBWBWBBWWBBBWWBBWBBWBWWBBWBBWB", "BWWWBWBBBBWBWWWBBBBBBBWWBBWBBBBBBWWWWWBWWBBWBWBBBW", "BWBBBBBWWWBBWBWWBBWBBBBBBWBBBBBWBBWBBBWWBWBWBBWBWW", "WWBWBWBBBBBWBBBBWBBWBWBWBWBBBBWWWWWBBBBWBWWBBBWWBB", "BWBWWBBWBWWWWBWWBBWWBBWBBBWWWBBWWBBBBWBWWWWBWBBWWW", "WWWBWBWBWBWWWWBBBWBWBWWBWWBBWWWWWBWWWWBWBBWWBWWBWW", "BBBWBBWWBBBWWWBWWWBWWBWBWBBWBBWWBBBBWWWBBWWWWWWBBW", "BBWBWBWBWWWWBWWWBBWWBWBBWWBWWBBBWWBBWWBBWWBWWBWBWB", "BBBBBWBWWWWWBBBWBWBBWWWBBWBWBWBBWBWBBWBWWWWBBWBBWB", "BWBBBBWWBBWBBWWWWWBWBWWBWBWWBBWWBWBWBWBBWWWWBBBBWW", "BBWWWBWWWBBBBWWWWBWWBBWBBBWBBWWWBBBBWBBBWWWBBBBBBB", "BWBWBBWWWWWBWWBBWWBBWBWWWWBWBBBBWBWWBBWBBBBWWWWBWB", "BWWWWBBWBWBWWWBWBWWBWWWWWWBWBBWWWWWBBWBBWBBBBWWBWW", "BWBWWWBBWWWBWBBWWWBBBBWWWBWWBWWWWBBBBBWWWBBBWBWWWB", "BWBWBWBBWWWWWBWBBBWWWWWWBBWWBWWBWWWWBBBBBBWWWBWWBW", "WBWBWBBBWBWWWWWWBBBBBWWBWWBBWWBWBWWBBWBWBWBBBWWWBW", "BWBBWBBWWBBWWBWWWWBBWBWBBWWBBWWWWWWWBBWBBBWBWWWWWB", "WWBBBWBWWBBWBBBBWBBBWWWWWBWWWBBWBWBWWWBWWBBBBBBBBW", "BWBWWBWBBWWWBWBWWBBWBBBBWWWWBBBWWWWWWBWWWBWWWWWBWW", "BWBBBWBBWWWWBBBWBBBBWWWWWBWBBWWBBBBBBWBWWWBWBWWWBB", "WWWBBWBBBBBWBBBWWWBBWWWWBWBBWWWWBBBWBBWWBWBBWWBWWW", "WBBWWBWBWBBBWBWBWWBBBWBWWBBBWWWBBWWBWBBWBWBBWWWBWW", "WBWBWWWWBBWWBWBWBBBBBWBBWWWBWBWBBBWBBWBBBBBBWBWWBB", "WWBWBWBWWBBWWBWWWBBBWWWWWWBWBBWWWBWWWWBBBBBWWBBBWW", "BWBBBBWWBBBBWWWWWWWWBBBBWBBBWBWBBBBBWWBBWBBWWBBWWW", "WWBBWBBWWWBBWWWBBWWBWWBWBWWWBWWWBBBWWBWBWBBBBWWBWW", "WBBWBBBWBBWBWBBBBWBBWWBBWWWWBBWWBWBBBBBWBBWBBWWBWB", "WWBWWBBBWBBBBWBWBWWBBBBBBBBWBWWBBBWBBWBWBBBWWWWWBW", "BWWBWWBWBBWWBWWBBWWBWBWBBBWBWWBWWWWWBWWWBWBWBBBBBB", "WWBBBBWBWBBBBWBWBWBBWWWBBBWBBWBWWBWBBBWBWBWWWBBWWB", "WWWBBBBBBWWWWBBBWWBBWWBWWWBWWWWBBWWBBWWBBWBWBBBBBB" };
    int maxStrokes = 134;
    assertEquals(826, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case31() {
    String[] picture = { "WWWBWWWBBBWWWWWWBBWWWBBWBBWBWBWWBBBWBBWWWBWWBBBWWW", "BBBBBBBBWBBBWWWBWBBWBWWWWWBWBWWWBBBWWBWWWBWWWWBWWB", "BBWWWBWWBWWBBWBWWWBWWWBBWBWBBWWBWBBBWBBWBWWWBWWBWW", "BWWWWBWBWBWBWWBWWWWBWBWBBBWWWWBWWWWBBBBBBBBBBBBBWB", "WWBBWBWWWBBBBWBWBWWBWWBWWBWBBBWBBBBBBWWWWWWBBWBWWB", "BWBWBWBWBBWWWWWWBBBWBWWWBWWWWBWBBBBWWWBWBBWBBWWBBW", "BBWBWWWBWBBBWWWWBWWBBWBWWWWWWBWWBWBBWBBWBBBBWBBWBB", "BBBBBBBBWBWWBWWWWWBBBBWBBWBBWBBWWBWWWWWBWWBWWBWWBW", "BWWWWWBBWBWBBBWWBWWBWWBBWWBBWBWBBWBBWBBWBWBBWBWBBW", "BWBWWWBBBWBBWWBBBWWBWWWBWWBBWWWBWBBWBWBBWWBWWWWBWB", "BBWWBBBBWBBBBWBWBBBBWBWBWWWBWWWBBWWWWBBWBBWWBWWWWW", "WWBWWBWBBWBWBBBBWBBBBWBBWBWWBBWBBBBWWWBBBBWWBBBBWW", "WWBWWWBWWBBBBWWBWBBWWBBBBWWWBBWWWWBWWBWWBWBBWBBBWW", "WBBWBWWWWBBWWWWBWBBBBWBBWWBWBBBWWWBWWWWWWWBBWBWBWW", "BBBBBWWWBWBBWBWWBBBBWWBWWWBBWBWWWBBBBWWBBWBBWBWBWW", "BBWWWBBBWBWWBBBBWBBWWWWBBBBWBBWBBWWWBWBWWBBBWBBWBB", "WWBBBBWBWBWBWWBBBBWWBWWWBBWWWWBBBWBWBBBWWBWWBBBWBB", "BWWWBBBWBWWBBWBBWWBBBBBBWWBWWBWBBWWWWWBWWWBWWWWWBW", "BBBWWBWBWWWBBBWBWBWBBWWBBWBBWWBWWWWBWBWWWBBBBWWBBB", "BWWWBBBWWWWWWWWBWWWWWWWBBWWWBBWBWWWBWWBBBBBWWWBBBW", "BWWBBBBWBWBWBBBWWBWWWWBBBBBBBWWBBWWWBWWBBWWBBWWWWW", "WBBBWBBWWBBBBWBWWBBWBWBBWBWWBBWWBBWWWWBBWWBWBWBWWW", "WBWWBBWBWWWBBWWWBBBBWBBBWBBWWBWWBBWWBWWBWBWWBBWBBB", "BBWBWWBBBBBWBWWBBWWWBWWBWBBWBBWWBWWBBWWBBBWBWWBBWB", "BWBWWBWBWBBWBBWBBBBBBWBBBWWBBWWWWWWWWBWBBWBWWWBBWW", "BBWWBWBWWBBBWWBBBBWBBBWBBBBBWBBBBWWWWBBWWBBBBWWBBB", "WWBWBWBBBBWWWWWWWWWWBBBWBWWBWBBWWWWWWWWBBBWBBWWBBW", "WWBWWBBBWBWBBBBBBWBBWWWWBBWBBBBBBWWBWBWBWBBWWBWWBW", "WWWWBWBBWWWWBBBBWBWBBWWBWWWBBWWWWBBBBBBWBBWWWWWWWB", "WWBBBWBBBBBBWWBWWBWBBWBWBBWBWWBWBBBBBWBWWWBBWWBBBW", "WWWWWBWBBBBWWWWBBBBBBBWWBWWWWWWBWBBWWBWWWWWWBBBWWW", "WWBBWWBBWWWWWWBBWWBBBBBWWWWBBBWBBWWWBBBBWBWWWBWBBW", "WBWBWWWWWWWBWBBWBWBWWBWBWBWWWWWBWBBWWWBBBBBBBWWBBB", "BWWWBWWBBBBBBWBWBWBBBWBBWBBBWBWBWBBBWBWBBBBBBWBBWB", "WBWBBWWWBWBBWBWWBBWBBWWBBWBWBBBBWWWBBWBBWWBWBWWBBB", "WWWBBBWBWWWWWWBBBWBWWBBBBWWWBWWWWBBWWWWWWBBWWBBBBW", "BWWWWBBWBWBBWWWWWWWBBWBBBWWBBWBWBWWBBBBWWWWBBWWBBW", "BWWWWWBWBWWBBWBBWWBWWBWBBWBWWWWWBBWWBBBBWBBWWWBWWW", "WWWBBWBBBBWWBBBBWWWBWBWWBWBBWWBWBWBBBWBBBBBWWWWWBW", "BWWWBWWBBBWBBWBWWWBWBBWBBWBWBBWBWWBWWWBBWBBBBWBBWW", "WBWBWWBWWBWWWWBBWBBWBBBBBBBWWBWWBWBBWWWWBBWWBBBBBW", "WBWBWWBBBWBWBWWWBBWBBWBWWBWWWBWWWBWBWWBBBBBWBBBWBW", "WWBBWWWBWWBBWBWBBWBWBWBBBWBBBBWWWBWWWWWWBWBBBWBBWW", "WBWBWWWBBWWBWBBWWBWWBWWBWBWWWBBWBWWBWBBWWBWBWWBWWB", "WBWBBWBWWBWWBBWWBBWBBWWBBWBWBBBBWWBWBWBWBWBBBBWWBW", "WWBWWWBWWBWBWWBBWWWWWWWWBWWWBBWBBBBWWWWBBBBBBWBWBW", "WBBBBBBBWWWWBBBWBBWBWBBWWWBBWWBWBBBBWWWBBWWWWBWBWW", "BWWWBWWBWBBWBBWWWBWWBWBWWBWWWBBWBWWWWWWBBBWWBWWBWW", "BWWWBBBBBBWBBBWWBBWWBWWBWWWBWBBBBWWBWWBBBWBWBBWBWW", "WBBWWBWWBWBBBBBBBBWBWWBWBBBWWWBWWWWBWWBBWBBBBWBBWB" };
    int maxStrokes = 239;
    assertEquals(643, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case32() {
    String[] picture = { "WWWBWBBWWBWWBWBBBBBWWBWBWBWWWBBWBBBWWBBWBBWBWBBBBW", "WWWWBBBBWBBBBWBBWWBWWWWWWWBBBBBWBBBWBWWBBBWWWBWWBB", "WWWWBWBBBWWWBBBWWWBBWBBBBWBWWBBBWWWBBBWBBWBWBBWWBW", "WWWBWBBBBWBBWBBBBBWBWWWWWBBBWBWWWBBWWBWWBBWBWWBBBB", "WBWWWBWBBWBBWWBWWBBBBWBWWBBBBBWBBBWBBWBBWWBBBWWBBW", "BWBBWBWBBBWWBWWBWBWWWBBWWWWBWBBWWBWBBWBWWBBWBWWBBB", "BBBWBWWWWBWBBWWWBBWBBBWWWBBBBWBBWBBWWWWBBBWWBBWBWW", "BBBWBBWWBWBBBWBBBWBWWBBWWWBBWWWBWWBBWBBBBWBWWBBBBB", "WBWBBBBWBBWBWBBBBBWBBBWWWBWWWBWBWBWBBBWWWBBWBWBWBW", "BBBWBBBWWWWWWWWBWBWWBBWWWBWWBWWBBBBWWWWBBWBBBBBWWW", "WWBWWBWBBWWWBBWWWWWBWWWBBBBBWWBBWWWBBWBBBBBBBBWWWB", "BWWBBWWBBWBWWBWWWBBBBWBBBWWBWBBWWWBBBBBWBBBBWWBBBW", "WWBWBWBWWWWWWWWWBBWWBBBBBBBBWBBWWBWWWWWBWWWBWWBBBB", "WWWBBWWWBBBBBBBBWBWWBWWBWWBBBWBBBBWBBWWWWWBBBWWBWB", "WWWBWWBWWWWBWWBWBBWWWWWBWWWBBWWWBBWBBBWBWBWWBBBBBW", "BWBWBBBBBWBBBBBWWWBBWWBBWBBWBWBWWWWWWWWWBBBBBWBWBB", "WWWWBBWBWBWWBWBBBWBWWWBWWWBBBBBBBBBWWBWBWWWWBWBBWW", "WBBBBWBWBBWBWBWWWBWBWWBWWBBBWWBWBBWBBBBBBBBBWWWWWB", "WWWBWBWBWWWBBWBBBWBWBWWBWWWBBWBBWWWWWBWWBBWWBBWBBB", "BBBBWBBBBBWWWBWBBBWWBBBWBWBWWBBBBBBWWBBBWBWWWWBBBB", "WBWWWWWWBBBWWWBWBBWBBWWBBBWBBWWBBWWBWBBWWWWWBWWWBB", "WBBBWWBBBBBWWBBWWWBWBWBWWBBWBBWWWWWWBWBBWWWWWBBBWW", "BWBWWBWBWBWBWBWWBWWWWBBBBBBWBWBBWWBWBBWBWBBBBWWWBW", "WBBBBWWBBWBWWWBWWWWWWWBWWWBWBBBBWWWBWWWWBWWWWWBWWB", "BBWBBBWBBBWBBWBBWBWWBBBWBBBBBWWBWWBWWBWBWBWBWWWBBW", "BBWWWWWWBBWBWWWBBBBWWWWWWBBWWWBBWWBBWBWBBBWBWWBWBB", "BBWBBBBWWBWBWBWBBWWWBBBWWWWBBBWWBWWWBWBWWWBWBBWBWW", "BWBWBBBWBWBWWWBBBBWWWBBBBWWBWBBBWBBBWWBWBWBBWWWBWB", "BBWWWWWBWBWBBWBWBBWWWWBBBBBBBWWBBWBBWBBWBWWWWBBBBW", "BBWBBBBWBWWBWWWBWWBWWWWWBBWBBBWWWBWWWWBWBBBWBBWBBB", "BWWWBWBBWWBBWBBWBWWWWBBBBWWWWWBBBBWBBBWBBWWWWBBBWB", "WWBBBWBWWWWWBWBWWBWBWBWBBBWWWWWWBWWWWWBWWWWWWBWBBW", "BWBWBBBBWWWBWWBBBWWBWBWBBWWWWBWBWBWBWBBWWBBBBWBWBB", "WBWWWWBWBBWBWWWWWWWBBBBWBBBWWWWBWWBBBBBWBWWWWWWWWW", "WBBBWBWBWBWWWBBWWWWBBBBBBBWBWWBBWWWBWBWBBWBBWBBBBW", "WBWWBBWBWWWWBWWWWWWBWBBWWWBWWWBWWBBBBBWBBWWBWBWBWW", "WBBWWWWWBWWWWWBWWWWWWBWBBBWBWWBBWBWBWWBBWWWWWBBBWW", "WWBBWBWWBBBBBWWWBBWBBWBWBWWWWBWWWBBBBBWWBWBWWWWWBB", "BWWBBBWBBBBBBBWBWBWBBWWWBWWBWWBWWWWBWWBWBWBBBWWBWB", "WBBWBWWBBWWBWWBWWBBWBBWWBBWBBBWBWBWBBWBWWBBWWWWBBW", "WWBBBBWWBWWWWBBWWBWBWWBBBWWWWBBBBBWWBWBBBWBBWBBWBB", "BWWBBBWBBBBBWWWBWBBBBBBWWBWWWWWWBBBWBBWBWBWBBWWWBW", "BWBBWWWBWWBBWWWWWBBBWWWBWBWBBWBWBWBBBBBWBBWWWWBBBW", "BBBBWWWBBBWWWBBBWWBBWWBWBWBBWBBBWBWBWBWBWWBWWBWBWW", "BBWBWBWBWWBBBWWBWBBWBWBWBWBBWWWBBBWBWBWWWBWBBWBWWB", "BWBBBWBBBBWBWBBBBBBBWWWBWWWWBBBWWBWBBWBWWWBBWBWWWB", "WWWBBWBBBBWBWWBBBBWBWBWBBWWWBBWBBBBBWWWWWBWBBBWBWW", "BBBWBWBWBWBWBBWWBWBWBWWWWBWBBWBWWWWBWWBBWBBWWBBWBW", "WBBBWWWWWBBWBBWBBBBWBBWBBBWWBWBBWBBBBWBWWWBWBBWWBW", "BWWWWWWBWBBBWWWWBWWWBBBWWWBBBWWBBBWBBWWWBBWBBWWWWW" };
    int maxStrokes = 172;
    assertEquals(747, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case33() {
    String[] picture = { "WWBBWBWWWBBBWWWBBBBWBWWWWWBWWWWWWBBBBBBBWWWWWWBWWB", "WBWBBBWBBWBWWBBBWWWBWWWWWWBWBBWBBWBWBBWWBBBWWBWBWW", "BWBBWWBWBBWBBWWWWWBBWBWBBWBWWBWBWWBBBWBBWWBBBBWBWB", "BBBWWBWWWWWBBWWWWBBBWBBBBBBWWWBWWWBWWBBBBWBWWWBWWW", "WBBWWWWWWWBBBBBWWBBBBBBWWBBWBBWWWBBWWBWWWWBWBBWWWB", "BBWWBWWWWWWWWBBWWWBBWBBWBWBWBWWBBWBBBBWWWWBBWBWWBW", "BWBWWBWBWBBWWBBBWWBWBBWWWWBBWWWWBBWWWWBWBBWBBBBBWB", "WWBWWBBBBBBWBWBWWBWBWWBWWBBWWBBWBWBBBWBWWBBBBWBBBW", "WBBBWWBBWWBWWBBBWBBWBBBWBBWBWBBWWBBBBBBWWWWBWWWWBB", "BBBWWWWBBBWWWWWWBBBWBWWBBWBWBWBBBBWBBWBWBBBBBWBBBW", "BWWBBBWBBWWWBWBBBBWWWBBWWWWWBWBBWWBWWBBWWBWBBBBWWW", "BWWWBWBBWBBWWBWBBBWWBBWWBBBWBWBBBWWBBWWBWWWWWWWWWB", "BBWBWWBWWBBWWWBBBWBBWBBBWWWBBWWWWBBWBWWWWBWBBBBWBW", "BWBWBWWBWWWWWWWWWWBBWBWBWBWBBBBWBBWBBWWBWWWBWBWWBW", "BBBWWBWWWBBWBBBBBWBBBWWBWBBBWWBWBBBBBWBWBBWWBWBWWW", "WWBWBWBWBBWWBWWWBBBBBBBWWWWBBWWWWWWBBWBBBWBBWWBWWW", "WBBWBBBWBWWWBBBBWWWWWBWWBBBBBWBWBWBBBWBWBBWWBWBBWB", "WBWWWWWWWWBWWBBBBBBWBWWWWWWWBBBWBBWBBBBWWWWBBWBBBW", "BBWBWBWBWWBBBWBBBWBWBWWBBWWBWBWWBWWBWBWBWWWBBBWWBB", "WWBBWWBWWBWWWBWBWBWWBBWBWWBBWBBBBWBBWWBWWWBBWBBWWB", "BBBWBWBWWWBWBWWWBWBWWWWWBBBBBWWWBBWBWWBWWBWWBWWWWW", "BWBBBWBBWWWWWBBWBWBBWWBBWBBWBBBBBWWBBBWWBWWWWBBBBB", "WWBBBWBBBBWBWBWBWBBBBWWWWBBBBWWBBBBBWWBBBWWWWWBBBW", "WWWWBBBWWBWBWBWBBWWWWWBWWBWWWBWBWWWWBBBWWWBBWBBBWB", "BWWBBWBWBWWBWWWWWWWBWWWWBBWBWWBBWWBWBBWBBWWWBBBBWW", "BBBWBBWBWWBBBBBWBWBBWBWBWWBBWBWWWBWWBBBBBWBWBWBBBW", "BWBBWBBWWWWBWWWWBBWWBBBBWWBWBWWWWBBWBBBBWWBBWBBWBW", "WBWBWBWBBWWWBWBWBBWBWWBWBWBBWWWBWWBWBWBBWWWWWBWBWB", "BBWWWWBWWWBBBBWWWBWWBBBWWWWWBWWBBBWWWWBBBBBWBWWWBW", "BWBBBWWWWBWBWBBBBWWBWWBWWBBBWWWWWWBWWBBWBBBBBBWBBW", "BBWBBWBWWWWWWBBBBBWWWBBBBBWBBWWBWWWWWWBBWWBWWBBBBW", "WBWWBWBBBBWBWWBWBWBBWBBBWBWWWWBBWBWWWBBBWWBWWWWWBB", "BWWWBWBBWWWWBWBBWWWBBWBWBWWWBBBBBWBWWWWBBBWWBWWWBB", "BBBWWBBWBBBBWBWWWWWBWBWBBBWWWWWWBBWBWWWWWWWBWWBWWW", "BBBWBBWWWBBWWBWBWBBWWBWBWBBBBBBBBWWWWBWWWWWWWWWBWW", "WBBWBBBBWWBWBWWBWBBBBWWBBWWWWWWBBBBWWBWWWBBBBBBBWW", "WWBBBBBWBBWWBBWWBBBWWWWWBWWWWBWWWBBWBWBBBBWBBWWBBB", "BWWBBWBWBWWWWWWBBWWBBWBWBBBWBBBBWBBWBBBBBWWWBBBBBB", "WWBBWBBBBBWWWWWWBWBWBWWWBWBWBBWWBBWWWBWWBWBBBWWWBB", "BWWWWWWBWBBWWBBWWBWWBWWBBBWBWBBWWWWWBBBBWBBBWBWWWW", "BWBWBBWBBWWWWWWBBBWBBWWBBBWBBBWWWBBWBBBBBWWWBWWBWW", "WWBWBWWBBBBBWWWBWBWBWWWBBWWBBBBBWWWBBWBBWBWWWWWWBW", "BWBWBWBWWBBBWBWWWWBBBWWBBWWBWBBWWBWBBWBBWBWBBBWWWW", "WWBWWWWBBWWWBBWWWBWBBBWWWBBWWWBWBWWBWBBBWBBWBBBBWB", "WWBBBBWWWWBWWBBBWWBWBBWWWBBBBWBWWBWBBWBBBBWBBBBBBB", "BBBWWBBBBBBWBWWWWBWBWWWWBBWWBWBWBBWBWWWWWWWWBBBBWW", "WBBWWBWWBBBBBWBWBWWBWWBWWWWBWBWWBBWBBWBBBBWWBWBBWB", "BBWBWBBWBWWBWWWBWWWBWWBBBBWBWBBWWWWBBBWBBBBBWWBBBB", "BWWWBWWBBBWWBBBBWBBBWWBBBBBWBBWWWBWBBBBBWBBWWWBBWB", "BBWWWWBBBBBBWBBBWBBBBBBWBBBBBBWBWWBWWWWWWBWWWWWWBW" };
    int maxStrokes = 206;
    assertEquals(675, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case34() {
    String[] picture = { "WBBBWWBBWBBWWWWWWWWWBBBBBWWWBBBBBBWBWWWBWBBBBBBBBW", "WWBBWBWWWBWBWWBWWBWWBWBBBBBBWWWBWWWBWBBBWBWBBBWWWW", "WBWWWWBBWBWBBBWBBBBBWBBBWWBBWWBBWWWWBBBWWWWWWWBWBW", "BWWBWBWBBBBBWWWBWBBWBWWBBBBWWBWBBBBBBWWWWWWWWWBWBW", "BBBBWBWBWWBBBBBBWBWBWBWWBWWWWBBBBBWWWBWBWWWWWBBWBW", "BWWBWWBWWBWWBBBBBWBBWBWWBWWBBBBBBBBBWBWBBWBWBWBWBW", "WWWWBBWBBWWBWBWWWBBWBBWBBWWWBBBWWBBWWBWBBBWBBBBWWB", "BWBBBWBWBBBBWBBWWWWWWWBBBBWWWWBBWWWBWWWWBWBBWBWBWW", "WBBWBBBWWBWWBBWBBBWBWBBBWWBBWWWWWBWBWWBWBBWBWWBBWW", "WWWBWBBBBBBWWWWWBWWWWWWWBBWBWWBBBWBWWBWWBBWBBBWWBB", "WWBWWWWWWWBWBWWWWBBBBWBWWWBBWBWBWWWWBBBBBBWWWBWWWB", "WBWWBWBBWWWBBBBBBWBWWWWBWBWWBWWBWBWBWWWWWBBBWWWWWB", "WWBBWBBWWWWBWWWWBWWWWWWBWWBBWWWWBWWWWBWWWWWWBWBBWB", "WBBWWBBWBWBBBWBBBWBBBWWWWWWBBWBWWBBBWBBWWWBWBWWWBB", "WWWWBWBBBBBBWBBWWWWWBWBBWWWWWBWWWWBWWWWWBWWBWBWWBB", "WBBWWWBBWBBWWWBBBWWWWWBWBWBBBBBWBBBWBBWBBBBWWBBWBB", "BWWBBWBBBBBBBWWWWBBWWWBWWBBWBBWWWWWBBBWBWBBBWBWWWW", "WWWBBBWBWWWBBWBBWBBWBWWBBBBBBWWBBBWWBBBBBBWWWBBWBW", "BBBBWBWWWWBBBWBWBBWWBWBBWBBWBWWBWBWBBBWWWBWBBBBWWB", "BWBWBBBWWBBWBBBBBWWBBBBBWBBWWWWWBBBBBWBWBWBWBWBWWB", "BBWBBBBWBBBBBWWWBWBBBBWWBWBBWBWWBBBWBWBBWWWWWBWWWW", "WWWBBWWWBWWWWWWBWWBBWWBBBWWBWBWWWWWWWWWWWWBWWBBBWW", "WWWWWBWWBBWBWWWWBBBBBWWBWWWWBWBBBBBWWBBWBBBBWWBBWW", "BWWBBBBBBBWBWWBWBBBBBBWBBWBWBWBWWWBWBBBBWBWWBWWBWW", "BWWWBWBBWWBWBWBWWBWWBBBWBWBWWBWWBBBBBBWWBBBBWBWBWW", "BBBWWBWWWWWBWWBBWWWWBBWBBBBWWBBBBBBBBBBBWWBWBBBBWB", "BWWBBWBWBWBBWBBWWWWBWBWBWBWBWWWBWWWWBWWBBBWBBWBWWW", "BWWBBBBBBWWBBWWBWBBBBBBWBBBWWWWWWWWWBBWBWWWWBBWBWB", "BWWWBBBWBBWWWBBBWWBWBWWWWBWBWBBWBWBWBBWWBWWWWBBWBW", "WWBBBWBBWBWWWWWBBWBBBWBBWWBBWWBWWBBBBBBWBWWBBBBBWW", "WBBBBBBWBWWBWWWWBWWBBWBBBBBBWWWWBBBWBBWBWBWBBWBWWB", "BWWWBWBBBWWWWWWBWBBBBWBBBWBBBBBWWBWBWWBBWWWBWBBBWB", "BWWBWBWWWBBWBWWWWWWWBBWWWWBBBBWWBBBBWBBWBWBBBWBWBB", "BWWWBWWBBWWWBBWWWBWWBBWBBBWWWWBBBWBWBBWBBWBBWBBBWW", "WBBBBWBBBBWWBBWWWBWBBWWWBWBWWWBWWWBBWBWWBBWBBWWWBB", "BWWWBBBBWWWBBWBWBWBBBWBWBBWBBBWBBBWWBWBWWWWWWBBWWB", "BWWWBBWBBBBBBBWWWBWWBBWBBBWWWWBBWWBBBBBBBBWWWWWBBW", "BBWWBBWBBWBBBWBBWWBBBBBWWWWWWBBWBBWBWWWWBBBBWWWBBW", "BWBWBWWBWWWWBBWWWBBWWWBWWBBBWWBWWBBBBBWBBBBWWWBWBW", "WBBWWWWBBBBWWBBWBWBWBBWBBBBWWBWBWWBWWBWBBBBWBBWWWB", "BBWBBWBBBBBBWBBWWBBBBWWBWBBBWBBWBWWWBWBWWWWBBBWWBW", "WWBBBWWBBBBBBWWWWWWWBBWWWBBWWBBBWBBWWWWWWWWBWWWWWW", "WBBBWWWWBBWWWWBWBWBWWWBBBWWWWBBWWWWBWBBWWBBWWBBBWB", "WWBWWBWBBBWBBBWBBWWWWBBWBBBWBWWWBWBWWBWWWWBBBWWBWW", "BWBBBBWBBBBWWBBWBWWWWBWWWWBWBBWBWBBWWWWWBBBBWBWWBW", "BWBWBWWWWWBBBWBWWBBWBBWWWBWBBWBWBWWBWWBBBWBWWWWWBW", "WWBBBBWBBWWWWWWBBBWBWWBWBBBBBWWBBBWBWWBBWBWWWBBBBW", "WBWBBBBBWBBWWBWBWBWWWWBBWWWBBBWBBBBBWWWBWBBWBWWBBB", "BBBBBWBWWBBWWWBWWWBWBBBWWWWWWWBBWWWWWBBBWWBWBWBBWW", "BWWBBBBBWBBBWWBWWBBBWBBWBBWBWBWWBBWWWBWWBWWWBBBWWW" };
    int maxStrokes = 183;
    assertEquals(707, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case35() {
    String[] picture = { "BBWBWWBBBBWBWWWBBWBBWWWWBWBBBBWBBWWWWWBWWWBBBWBWWW", "BBWBBBWBBBBWBWBBWWWWBWBWWWBWBWWWWBBWWWBBBBBBBWWWWW", "WWWWWBWWWWBWWBBWWWBWBWWBWBBWWWBBBBWBWWWWWBBWBWWWBB", "WWWBWBBBBWWWWBBBWWWWWWWWBBBWWBBWWBBWBBWBBBBWBBWBBB", "WWBWWWBBWWBBWBWWWWWBBBBBWBWBWWWBBWWWBBWWWWWBBBWWBB", "WBBWBWWWWBBWWWBBBBWBWBBBBWWWBWWWBBWWWWWWWBBWBBWBWW", "BWWWWBBBWWWWBWWBWBBBBWBWBWWWBBWWBWBBBWBWBBWWBWWBWW", "WBWBWWWBBWBWBBBWWWWWWWBWBWWWWWWWWWWWWWBBWWWWWBWBBB", "WWWBBBWBBWBWBBWBWBBBBWWWWBBWBWWWBBBBWBBWBWBBBBBWBW", "BWWBWBBWBWWBWBBBWBWWWWBWBWBBWBBWWWWBBBWWBBWWBBBBBW", "BWWBBBWBWBWWWWBWWWWBWWBBBWBBWBWBBBWBBWBWBBBBBBBWBW", "WBWBWWWBWWWWBBBWBBWWBWWWWWBWBWBBBWBWWWWWWBWBBWWBBW", "WWWWWWWWBBWWWWBBWBBWBWWBWBWBWWWWWBWWBBBWBWWWBWBWWB", "WBBBWWWBBBBBWBBBWBWBWBWBWBWWWBBBWBWBWBWWWBBBWBWBBB", "WBWBWWWBWBBBWBWBBWBWWWBWWWWWBWBWWWBBBBBWWBWWWWWWWW", "BWWWWWBWWBWBBWBWWBWWWWBBWBWBWWBWWBWWWBWBWBWWBWBBBW", "BBWBWBBBWWBWWBBBWWBWBBBBWWWBWBBBBBWBBWBWBWWWWWWBWW", "WBBWBBBWWWWWBWWBBWWBBWBBWWBBBWBBBBWWBWWBWWWBWWWWWB", "WBBBWBWBWWBWWWWWWWWWBWBBWWWWBWBWBWBBWWWBWBWWBBWBWW", "WBWWBBBWWWWWWWBWBWWWWWWWWBWWBWBWWWWBWBBWBWBBWBWWBB", "BBWWBBBBBWWBBBBWWWBWBBBBWBBBBWWWBWWWWWWWBWBWBBWBBB", "WBBWWBWBBBWWBBWWBWWBBBWBWBBBBWBWBBBBBBWWWWWWWBBWBW", "BBWWBBBWWBBBBWBWBBWWBWBWBBBBBBBWWWBWWBBBWBWBWBBBBW", "WWWWWWWWBBBWWWBWWBBWWBWBBWBWBWBBBWWWBBWBBBBBBWWBWB", "BWBWBWBBWWBWBWWWWWBWWBWBWBBWWBBBWWBWBWWBBBBBWWBWWW", "BBWBBBBBBBBBWWWWBWWBBBBWBWWWBBWBWBBWWWBBBWWWWWWWWB", "WBBWWWBWWWBBBWBBWWBBBWBWWWBWWWBWBBBWWBBBBWBBBBWBWB", "BBBBWBBBWBBBWBWWBBBBWWWWBWWWWBWBBWWBBWWBWBWBWWWBWW", "BBWBWWWWWWWBWBBWWWWBWBWWBBBBWBBWWBWWWWWWWBBBBBWWBB", "WBWWBBBWWBWWWBWWBWBBBBBWWWBWWWWWBWWWWBBWBBWWWWBBBB", "BBWWBBWBWBWWWWBWBWBBWWBWBWWBWWBWBBWBBBWBBWWWBWBWWB", "WWBWWWWBBBBWWBWWBWWBWBBWBWBBWBWWBBWBBBBWBWWWWBBBWW", "WBWBWBWWWBWWBWBBWBBBWBWWBWBBBWBWBWBWBBWWBBBWBBWBBW", "BWWWWBWBWBBBBWWWWBWWBWBBBWWBBBBBWWBWBBWBBBBWWWBBWW", "WWBWWWWWBBBWWWBBWBBBBBWBWWWWWWBWBBWBBBBWBWBWBBBWWW", "WBBBBBBWBWWWBBWWBBWBWBBWWWBWWBWBWBWWWWBWBBWBBBBBWB", "WWBWBBWWBBBWWBBBWWWBWWWBBBBWBBBWWBWBBBWBBWWBWBWWWW", "WBWBWWWBWWWWBWBBBWWBWBBWBWBWBWBBWBWWWBWBWWBWWWWBWB", "BBWWWWWWBBWBWWWBWBBBBWBWBBWBBBWWWBWBBBBWWWBBWWBWWB", "WWBWBWWWBBWBBWBBBWBWWWWBWWWBBWWBBWBBWBWBWWBWWBBBWB", "BWBBBBWWBWWBWWBWBBBBBBWBBBWBWWBWWBWWBWWBWBBWWBBBWW", "WWBBWBBWBBWWWBWBWWWWWWWBWBBBWWBWBBWBBWBBBBBBBWBWWW", "BBWWBWBBWBBWBBBWWBWBWWWBBBBWBWBBWWBWWBWWWBBBWBBWWB", "BBBBWBBWBBWWWWWBBWWWBBWWWBBWWBWWBBWWBBWBBWBWBBWWBW", "BWBWBBWWWBBBWBWWWBBBWWWWBWWWBBWBBWWWWBWWWWWBWWWWBW", "BWWWWBBWWBWBBWBWWWWBBBBBBWWBWWWBBBBWBWWBWWBBBWBBWB", "BWBWWBBBBWBWWBWBBBBBWWBWWBBWBWWBWBWBBBBWWBWBWWBWBB", "WBWWWBWWBWWWWWBBBBWWWBBWBBWWBBWWWWWBBWWWBBBBWWWWWB", "BWBWWWBBBBWWWBBWWWBBBWBWWWWBBBBBWBBBWWWWWBWWWBWBBB", "WBWWWWBWWWBBWWBWWBBBBWWWBBWBBWWBBBBWBBBBWBWBBBBWBB" };
    int maxStrokes = 594;
    assertEquals(347, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case36() {
    String[] picture = { "WWWBBWWWBBBWWWWWWWWWWBWBBBWBBBBBBWBBBWBBBWWBBWWBWB", "BWBBWWWWWWWBBBWWWBWWBWWWWWBBWBWBWBBWWBBWBBBBBWWBBW", "WBBBWBBWBWWBWWBBWBWBWWWBBBWBBBBBWBWBWBBBWBBWWWBWWW", "WBWBBWBBWBBBBBWWBBBBWBBWWBWWBWBBBWWWBWWBWBWBWBWWBW", "WWWBWWBBBBWBBBWWWWWBWBWWWBWBWWBWWWWWBWBBWWWWWWWBWB", "BBWWBBBBWBWBBWBWBWWBWBBWBWBWWWBBBWBBWBWWWWBBBWWBBW", "BBBBBBBBWWWWBBBBWWBWWBWWWBWBWWBBBBWBWBBWBWWWBBBBBW", "BBBBWBWBBBWBWBBBBWBBWWBBBWBWWWBBBBWBBBWWWWBBBBWWWB", "WWWBBBWBBWWBBWWBWBBWWBBWWBWBBWWBBBWWWWWBBBWBBBWBWB", "BWWWBBBWBBWBBWWBBWWBBWWBWBWBWWBWWBBWBWWBWWBWWBBBWW", "BBBBBWBWBWWWBBBBWBWWWWBWWBBWBBWWBBBWBWBBBWWWBWWWWW", "BBWWBBWWWWWWWBBBBWBBBWBBWBWWWWWWBWWWBWWWWWWBWBBBWW", "WBBWWWBWWWBBBBWWBWBWWWWBWBWBBWBWBWBBWWWBBWWWWBBBWB", "BWBBBWBBWWWBWBWWWBWBBBWWWBWBBBWWBBBBWBWWBBWBBWBWBB", "BWBWBBBWWWWBBBWWBWBBWWBWWWBWWWBBWBWWWBWBBWWBWWBBBB", "BBBBBWBBBBWWWWWWBWWBBBWBBBBBBBBWBWWBWBBBWWBBWWBWWW", "WWBWBBWBWWBBWWWBBBBBWWWWBBWWWBWWWWWBBWBWBBBBWBWBWW", "WBBWWWBWWBWWWWWBBWBBWBBBBBBBBBWBBWWWWBBBBBWBWBBWBW", "BBWBWBWBWWWWBWWWWBBWWWWWWBWWWWBBWBBWWWBWWBWWWBWWWW", "WWWWBWWWBWWWBBWWWWBWBWBBBWBBBBWBBBBWWBBBBWBWWBWWWW", "BWWWWBWBWWWBWWWBWWWWWWBBBBBWWBBBWWBWBBWWBBWBBWWBBW", "WBWBBWWWBWWBBWBWBWWWWWWWBBWBWWWWBBWWWBWBBWBBWBBBWW", "WWBBWWWWWWWBBBBWWBWWBWWWWBWWWWWWWBWWBWWBBWWWWWBBWB", "WWBBBWWBBWWBWWBBWWWWBWWWBWWWBWBWBWWWWBBBWWWBBBBBBB", "BWBBWWBWWWWBWBWWBWWBWWWBBWWBBWBWWBWBWWBWWBWWWBWBWW", "WBBBWBBWWBBBWWBBWBWBBWWBBWBBWWWBBWWBBWBBWWBWWWBWBB", "WWBWWBWBWBBWBWBWWWWWWBBWWWWBWBBBWWBBBBBWWWWBWWBBBB", "WBWBWBBBWWBWBWWWWBWWBWBWBBBBBBWBBWBWWWBWWBWBWBWWWW", "BBWWWBBWWBWBWBWBWWWBBBBWWBWBBWBWWWBWBWBBBWWWBBBBWB", "BBBWWWBWBBBBWBWBWWWWBWBWWBWWBBBBBBBBWBBWBBWWBBBBWB", "WBWBWWWBBBWWBWBBWWWWWBBWWWWBWWBWBWWBBBBWWBBWBWBBBW", "WBWWWWBBBBWWBWBBWBWBWWBBWWBBBBBBWWWWBBWWBBWWBBWBWB", "WBWWBWWBBWBWWBBWBWBBWWBBWWWBBWWBBWWBWWWBBWBWWBWWWB", "WWWWBBBWBBBBBBWWWWWWBWBBBWWWWBBWBBBWBBBBBWWWBWBWWW", "WBWBBWWBBBWBBBWWWWBBBWBWWBBWBBWBBWWBWBBBWWWWBWWBBB", "BWWWBBBBBWBWBWBBWWWWBWWWBWBWWBBWBWBBBWBWBWWWWWWBBB", "BBBBBBWWWBWWBBBWWWBBWWWWBWBBBBBWBBWWBBBBWBBWWWWBBB", "WWWWWBBWWBBWWWWWBBBBBWBBWBBBWBBBWBWWBBWBBWWWWWWBBB", "WBWWBWBWBBBBBBBBBBWWWBWBWBBBBBWWWWBBWWBBWWWWBWWBBW", "WBWBBWBWBBWBWWWBBWBBWWBBBWWBBBWBWWWBBWWBWWWBBWWBWW", "BWBWWWBBWWWWWWWBWBBBWBBWBBBBWWBBWBWBBWBBWWBWBWWWWB", "WBWWBWWBWBBWBWWWBWWBWBBWWBWWWWWBWBWWBWWWWWWWBBBBBW", "BBWBWBWBBWBWWWBWWWBWWBWWWBWBBBWWBBBBBWBWWWBWBWWWBB", "BBBWBWBWWBWBWBWBBBWWBWWWWWBWWBWBBBWWWWWBWWBWBWBBWW", "BBBBWBBWWBBWBBWBBWBBWWWWWBWBBBWWBWWWBBWWBWBBBWWWWW", "BBWBWWBBWWWWBWBBWBWWBWBWBBBWWBWWBWBWBBWWBWWBBBBBBB", "WBBBBWWBBBBWBBWWWBWWBBBBWBBBWBWWWBBBWWBWBBWWWBWBBW", "BWWWBWWBBWWWBBWWWWBBBWBWBBBWBWWWBBBWBBWWBBBBBBBBWB", "WWWBWWWWBBWBWBBWBWWBBWBBWBBWWBWBWBWWWWBBBWBWWWBBBB", "WBWBBWBWBWBWBWBWWWBBWBWWWBBWBBBWBBBBBWWWWBWBBBBWBW" };
    int maxStrokes = 477;
    assertEquals(403, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case37() {
    String[] picture = { "WBWBBWBBBWWWWBWWWWBWBWWWBWBBBWBWBWBBBWBBBWWWBBBBBW", "BBWWBBBWBBWBBWWWBBWBWWBBBBBBBWBWBBWBWWBBWWBWWWWWBW", "BBWBWWBBBBWWBWBBWBWBWWWBBWBWWWWBBBBWWBBWBBBBWWWBBB", "BWBBWWWWWBWBWWBWWBWBWBWBWBWBWBBBWBWBBWBBBWBBWBWBWW", "WWWBWBBWBBBBBWWBWBWWWBBBBBBBWBBWWBWWWWWBWBWBBWWWWB", "WWBBBWWWBBBBWBBWBWBBBBBWBWWWWBWWWBBBBWBWWBBWWBWWBB", "WWWWWWWBBWBBWWBWBWBWBBWBBBWWWBWBBBWWBWBBBWBWBBWBWB", "WWBWBWBWBBBWWWWWWBWWBWWWBWWWBBBBBBWBBBWBBBBWWWWBBB", "BBWBBBBBBWBWWBBBWWBWBWWBWWBBWWBBBBWWWWWBBWWBWWBWBW", "WWWBBWBWBBBWWBBWBBBWWWWBWBBBBWWWBWBBBWWWWWBBWWWBWW", "BBBBBBBBBWBWWBBBWBBWWBBBBBBWWBBBBWWWWBBBBWWWBWWWBB", "BBBBBBBBWWWBBWWBWBBBBWBWWWBBWBBBBBBWWWWWWBBWWWWBWB", "WWBWWWWBWBWWWBBWBWBWBWWBBBWWBWWWWWWWBWWBWBBBWWWBWW", "WBBWWWWWWBWWWBWBWWBBBBWBBWWWBBBWWBWWBWBWBWWWWWWWBB", "WBWBBBBBWBBBWBWWBWWWBWBBWBWWBWWBBWBBWBBWWWWBBWWBWB", "WWBBBBBWBWWWWBWBWBWBWBWBWBBWBBWWWBWWWBWWBWWBBWWWBB", "WBBBWWBWBBBBWWBWBBBWWWWBBWWBWBWWWWBWBBWWBWWWBWBBWB", "BBWBWWBWWWWBWBBWBBWWWBBBBWWWBBWBBBBBBBBBBBBWWWBBWB", "WBWBWWBWWWBBBWWBBWWBWWBBWBWWBBWWBBWBBWBBBWWWBWWWBW", "BBWBWBWBWWBWBBBBWWWWWBBBWWBWBWWWBBWWBWWWBBBBBBBBWB", "WBWWWWWWWWBWBBBBBBBWBBWWBWBWWBBBWBBBWBWWBWWWBBBBWW", "BWBBWBBBBWWBBWWWWWBBWBWWBWWWWBWBBWWBWWWWBBWWWBWWBW", "WWWWBWWWWWBWBWWWBBWWBWWBWWWWBBBWBWBBWBBBWWBWWWBWWB", "WWWWBWWBWBBWWBBBBBWBWBWWWBWWBWBWBBBBBWWWWBWWWBBWWW", "BWWBBWWWBBBWBWBBWBBBWBBWBBBWBBWWWWWBWWWBWWBBBBBWBB", "WWBBWWBWWBBWBWBBWBBWBWBWBWBWBWWWBWWWWWBBBBWBWWWWWW", "BWBBBWBWBBBBWBWBBWWBWBBBBWWWWBBBBWBWBBBBBBBBWBBBBB", "WWWBBBWWBBWBWBBWBWWWBBWWBBBBWWBWWWBWBWBWWWWWWBBWBB", "WBBBWBWWWBWBBBBWWWBWWBBWWBBWBWWBWWBWBWBWWBBWWBWWBB", "BWBBBWBBWBWBWBWWBWWBBWBWWWWWWBWWWWWWWBWWBBBWBBWWWW", "WWBBWBWBWBWWBBWBWBBBBBWBBWBWWBWWBBBWBBBWBWBWBBBWBB", "BWBBWWWBWBWWBWBBBWWBWBWBWBWBBBWBBBBBWWBWWWBWBBWBWB", "BWWBWBBBBBBWBBBWWBBWBBBBBWBBWWBBBBBBWWWBWWBWWBWWBW", "BBWBWBWBWWBBBBBWBBBWBWBWWWBBBWWBBBWWWWBWBBWWWWWBBB", "WWWWBBBBWBBBBBBBWWBBBWWBBBWBBBWWWWBBWWBWWBBWWWBWBW", "WWWBBBBBBWBWWBWBWWWWBWBWBWWBBWWWWWBBWBWBBWWBBWWBBW", "BBBBWWBWWBWWWBBWWWWBWBBWBBBBBBWBBWBBWBBBWBBWWBBBWW", "WWWWWWBBWWBBWBWWWBBWWBWWBBBWWWWWWBBBBWWBWBBWBBWBWW", "WBWBBBWBBWBWWWBWWWBWBBBWBBBWBBWWBWBBBWWBWWBBBWWWWW", "WBBWWBWWWBBWBBWWBWWBWWWBWWWBBBBBBBWWBWBBWWWBBWBBBB", "BWBBWWWBWBBWWWWWBWWBWWWBWWBBBBWBWBWBWBWWWBBBWWBBBW", "BBWBWBBWBBWWBWWBWWBBBWWWWBWWBBWBWWWWBWWBBBWWBWWBWB", "WBWWBWBWBBWBWWBBBBBBBBBBWWBBBBWBBWWWBWBWWBBBBBBWBB", "WBWWWWWBBWWBBBWBBWWWBBWWBBBWBBWWBWWBBWBWWWBBWWWBBB", "WBWWBBWWWBBBWWWBWBBWBBWWWWWBWWWWWWWBWWBBWWBWWWBBBW", "BBWBWBBWBBWWBWBWWBBBBBBWBBWBWBBBWBWBWBWBWBWBBBWBBB", "WWBWBWWBBBWWBBWBBWBWWWBWWBBBBWWBWWBWWBBWBBWBBWWBWB", "WBBWBWBBWBWBBBWWWWBWBWBBWBBWWWWWBWWBWBWWWWWWBWBBBB", "WBBBWBWWWWWWWBWWBBWWWWBBBBBBBWWBWWBWWBWWWWWBWWBBWW", "WWBBBBBBWWBWBWBBBWWBWBBWWWBWWBWBWBBBWBBBBBWWBBWBBW" };
    int maxStrokes = 163;
    assertEquals(754, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case38() {
    String[] picture = { "WBBWWWBBBWBBBWWWBWWWBWBWWWBBWWBBBWWWBBWBWWWBBWWBWW", "BWWBWWBBBBBBBWBWWBBBWWWBWBWBBBWBBWWWBWWWWWWBWBWBWW", "BWBWBWBBWWWBBWWWBBWBWBWWBWWBBBBBWWBBBBBWBBBWWBBBBB", "BWBWWWBBWWBWBBBWBBBBWWBWBBBWBWWBWWBBWBBBWBBBBWWWWW", "BBWWWWBWWBBWBBWWWWWWBBWWWBWWWWBBWBWWWWWBBBWBWWBBBB", "WBWWBWBBBBBWWWBBWWBBWWBBBWWBBBBBBWBWBBWWWWBWBBWWBB", "BWWBWBBBBBWBBBWWWWWWBBBBBWWBBBWBBWWBBWBWWWBWWBBWBB", "WWBWBWBBBBBBBWBBBBBBWBWWBWWWBWWWWWBBWBBBBBWWWBWWWW", "WBBBBBWBBWBWWBWBWBWWBBBWBBBBBWBBBBWWWWWBBWWBWBBBWW", "WWBBBBBWWWBBWBWWBWWBWBBWWBWWBWBBWBBBWBWWBWWWWBBWWB", "BWWBWWWWWBBWBWWBBWBWWBWWBWWWBBWBWBBBBWBBWWBWWBBBBB", "WBBWWWBBWWBWWWWBBWWBBWWWBBBWWBBWBWWBBBWBWBWWBBWWBW", "WBWWWWWBBWBWWBWBWBBWBBBWBWWBWWBBBBBBWWWWWBWWWBBWBW", "BBBWBWWWBWBBBBWBWWBBWBBBWWBBBBWBBBBWWBBBWBWWWBWBBW", "BBBBWBBWBWBWBBWWWWBWWWBWWBWWBWBBWBBWBBWWWWWBBWWBWW", "BBBWWWBBBWWBWBWWWBBBWBBBWWWWBWBBWBWWBWWBBBWWWBBBBW", "WBBBWWWBBBBWWBWBWWBWBBWBWBBBWWWBWBWBWBBWWBWWWWBWWW", "BWWBWWBWBWBWWBBBBBWBWBBBBBWBWWBWBBWBWWBWBBWBBWBWBW", "BBWWBWBBWBBWWWWWWBBWWBWBBWWWWBWBWWWBBBWWBBWBWBWWWW", "WWBWBWBWWBBWWWWBBBBBWBBWWWWWBBWWBWWWWBWWBWWBWWWBWB", "BWWWWBBWWWWWWWBBBWWWBWBWBWBWWWBBWBWBBBBWWBBWWBBWBW", "WWWWBWBWBBWWBBWWBBWBBWBWWBBWWBBWBBBWBBBBBWBWWBBWBW", "WWBWBWWWWWWBWBWBWBWBWWBWBBBBWBWWBWWBWBWWBWBWBBWWBW", "WBBBWWBBBWBBBBBWWWWWWBWWBBBWWWWWBWBBWBBBBBBWWBWWBB", "BBWBBBWWWBBWWWWWWBBWBWWWWWWBWBWWWBWBBBWWBWWBBBBWBW", "WWWBBBBBBWWWWBBBWBBWWWWBBWBWBBWWBWWWWBBWWWWBWWWWWW", "WWBBWWWBWWWBBWWBWWWWBBWBWBWBBBBWWWWBWWWBBWBWBWBWBW", "WBWBWBWBWWWWBBWBWBWWBWWBBWBWBWBWBWBWBBWBWWWBWWWWWW", "WBWBBWWWWWWWBWBBWBWBBWWBBBBBWWBBWBWWBWWBBBWWWWWWWW", "BWBBWBBBWWBBWBBBBWWWWBWWWWBWBBWWBWWWWWWWBWWBBBWWBB", "BBBBBWWWWBBBWBBBWBWWBBWBBBBWWBWBWWWWBWBWWBBWWBWWWW", "WWBWWBBBWBWBWWBBBWBBWWWBBWWWBBWWWBBBBBBWBBWWBBBBWB", "BBWWBWWBBWWBWWBBWWBWBBBWBBBWBBBBBWWWBBWWWBWBBBBWBW", "WWWBBBWBBWBBBBBBBBBWBWWBWBBWWBWBBBWWBBWWWWWBBWBWWB", "BBWBWWWBWBWWBWWWWBBBWWWWWBWWBWWBBWBWBWBWBBBBBWWWWW", "BBWWWBBBWWWWBWBBWBBBWBWBWBBWBWWBBWWWWWWBWWWWWBBWWB", "BBWWWWBBWBBBBBBWWBBWBWBWWBWWBBWBWWWBBWWWWBWBWBWBBB", "BBBBBWWBBWWWWBWWBBWBWBBBWWWWBBWWWWBWWBBWBWBBWBBBWW", "BWBWBBBWWWWBBWWWBWBWBBBWBWBBBBWBBWWWBBBWBBWBBBWWWB", "BWBBBWBBBBBWBWWBWBWBWWWBBBWWWWBWBBBBBBBWWWWWWBWBWW", "WBWWBWBBWWWWWWBWWBWBWBWWBWWBWBWBWWWBBBWWBBWWBWBWWW", "WWBWWBWBWWWWWBWWWBBWWBWWWBWBWWWBBWBBWWWWWWWWWWWWBB", "WWBWBWWBWBWWBBBWBWBBWBBWBBWBWWBBWWWWWBWWBWBWWWBBBB", "BBWWWBWBWBBBBBBWBBWWBBWBBBBWBWWWWBWWBBWBWWWWWBWWBW", "BWWWWWWBBWBBWBWWWWWWWBBWBWWWWWBWWBBWBWBWWWWWWWWBWW", "WWWWWWBWWBWWWBWWWBBBWBBBWWBWWWBBBBWBBWWBWWBBBWWBBW", "BWBBBBBWBBWWWWBWBBBBBWWBBWWBWBBWBWWBBBBBWBWWBBBWBB", "BWBWWBWBWWBBWBBWWBBBBWBWBBWBWWBBWWBBWBBBWWBBWWWBBW", "WBBWWWWWWWBWWBBWBWBWWWBWBBBWBBWWWBBWWBWBWBBBBBBWWB", "WBWWBWWWWBWWBBBWBBWBWBBBBWBBWWWWWBBWBWWBWWBBBWBWWW" };
    int maxStrokes = 150;
    assertEquals(782, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case39() {
    String[] picture = { "BBWWWBWWWBBWWBWWWWBWBBWB", "BBWBBBBWWWBWWWBBBWBWWBWW", "WWBWBBBBBBBBBWWWBBWBBBWW", "WBBWBBBBWWBWWWWBWBWBWWWW", "BBBWWWBBWWBWBWWBBWWBWWBB", "WWBWWBBWWBWWWBWBWBWBBBBB", "WBBWBWBWWBWWBWBBWBWWBWBB", "WBWBBWWBBBBBWWWBWWBWBWWW", "WWWWBWWWBWWBWWWWBWBWBWBW", "BBBWWWBWWBBBWBBWBWBBBBBB", "WBBWBWWBBBBWBBWBWWBBWWBW", "BWWBWWBBBWWBWWBBWWBBBBBW", "WBBWBWBBBBWBWWWBWBBBBWBW", "WWBBWBWBBBBBWWWBBWBBBBBB", "WWWBBBBWWBBBWWBBBWWBWBBB", "BBBBBBWWBBWBBWWBBBWWBBBW", "WBWBBWWWWWWBWWWBWWBBBBWW", "BWBWBBBBBWWWBBWWBBBBBWBB", "WBWWBWBWWWBWBWWBWBBBBWBW", "BBWWWBWWWBBWWWBWWBWBBWBW", "WWBBBWWWBBWBBBBWWBWWBBWW", "WBWBWBWWWWWBBWBBWBBWBBBW", "WWWBWWWBWBWBBBWBWWBBWBWB", "BWBBWBWWWBWWBWWBBBBWWBBW", "WBWBBBBWWBBWWBBBWWBWWWWW", "BBWBBWWBWWWWWWBBBWWWWWWB", "WWWBBWBWWWBBWWBWWWWWWWWW", "BWWBBBWWWBWBBWWWWWBWBWWB", "WWBWBBWBBWBBBWBBWBBWWBWW", "WWWWWWWBWWWBBBBWBBBWWWBB", "BWWBWBWWWBBBWWWBBBWBWWWW", "WWBBWBWWWWWWBWWBBBWWWWBB", "BBBWWBWBBWWWWBBBBBBWBBBB", "BBWBBWBWWBWWBWWWBWBBBBWB", "WWBBWBWBWBWWBWWBWWBWWBWW", "WWWBBWBBBWWWBWBBWWBWBBBB", "BBWWWWWWWBWWBBBBBBWWBWBW", "WWBBWBWWBBBBWWBBWBWWWWBB", "BWWWWWWBBBBBWWBWWWBWWBWW", "BBWWWWBBWBBWBBBBWBWBWWWB", "WBBBBWBBWBWBBBWWWBWWWBBW", "WWBBBBWWBWWWBWBWBWWWWWWB", "BWWBBWBBWWBWBBBBBBBBWWBW", "BWWWWBBBWWWBWWBBBWBWBWWW", "BBBBBWWWBBWBBWBWWWWBWBWB", "WBWBWWBWWWWBBBWWWWWWBWBB", "BBBBBBWWWBWBWWWBBBWWBBBW", "WBBWBBWBWWBBWWBWWBWWBBBB", "BBBWBBWBBBWWWBBWBWBWWWBW", "WBBBWBWWWBBWWWBWBWBWBWWW" };
    int maxStrokes = 191;
    assertEquals(248, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case40() {
    String[] picture = { "WWBWW", "WWWBW", "BBWBB", "BWBBW", "BBWBB", "WBWWW", "WWWWB", "BWBBB", "BWBWW", "BBBBB", "WBBWW", "WBWWB", "BBWWB", "WWBWW", "BWWBB", "WBBBB", "WBWWW", "BBBBB", "BWBWW", "WWWWB", "BWBBW", "WBWBB", "BWWBW", "BBWWW", "WBBBW", "WBWWB", "BWBWW", "WBBWW", "BBWWB", "WWWWW", "BWWBB", "BBBBB", "WBWBW", "WBWWW", "WBWBW", "WWWWB", "WWWBW", "WBBWB", "BWBWW", "WBBBW", "BBBWB", "WWWBW", "WWWWB", "WWBWW", "BBWBW", "WWBBW", "BWWWW", "WWBBW", "WWBWB", "BBBWW" };
    int maxStrokes = 187;
    assertEquals(0, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case41() {
    String[] picture = { "WBWWBBWWWBWBBWWBWBBBWWW", "WWBBWWBWBBBWWBWBBBWWBWW", "BWBBBWWWBBWWWWWWWWWWBBB", "WBBWWWWBWWBBWBWWWBBBWBB", "WWWWBWWBWWWWBWWBWBBWWWW", "WBBWWWBWBBWWBWWWBBWWWWB", "BWWBBWBBWBWBWBWWWBBWWBB", "WBWWBWWBBBBBWBBBWBWBBBW", "BBWWWBBBWBBWBBWBWWWBWWB", "WBBWBBWWWWBWWBWWWWBBBWB", "BWBWBWWWWWWBWBBBBBBWBWW", "WBWBWWWWBWBBWBWWWBBWWWW", "WBBWWWWWBBBBWBWWWWWBBWW", "BWWWBBBBWWBBWWBWBWBWWBB", "WWBWWWWWBWBWWWWWBBBWBBW", "WBWBWWBWWBWBWWBWWBBWBWB", "WWWWWWBBBBWBBWWWBBBWBWW", "WWBBBWBBWBBBWBWBBWWBWBW", "WBBWWBWBBBWWWWBBBWBWWBB", "BWWBWWBBBBBBWWBWWWWBBWW", "BBBWBWWWWWBBWWWWWBWBBWB", "WWBWWBBWBWBBBWWWWWBWWWW", "WWBBWWBBWWBBBBBWWBWWWBB", "BWBWWBBBWBWBWWBBWBBBWWB", "WWBWBWWBBWWBBBBWWBWWBWB", "WBBBBBBBWWWBBBWWWBWWWWB", "BWBBBWBWWBBBBWBBBWBBWWB", "WWBWWWWWWBBWWWBBBWWBWBW", "BWBWWWBBWBWBBBBBWWBBWWW", "WBBBBBWWBWBWWWBWWBBWWBB", "WWWBWWBWBWBBBBBBWBBWWBW", "WBWWBWBBBBWBBWWWWWWWWWW", "BBWBBWWBBBBBWWWWBWWWWWB", "WBWBWBWWWWWBBWBBWBBWWBW", "BBWBBWWWWBBBBWWBWBBBWBW", "WWBBWWWBWWBBBWBBBWWBWWB", "BBBBBBBBWWWBBWWWWWWBBWB", "WWWWWWBBBWBWWWBBBWWBBBB", "WBBWBBWBBBBBBBWWWBBBBWW", "BBBWWBWBWBBWBWBBWWBBWBW", "WWBBWWBBBBWBBWBBWWBBBBW", "BWBWWBBBBBBBWBBBWWBWWWW", "WWBBWBWWWWBBWWWBWBBWBWB", "BWWBBBWBWBBWWWBWBBBWBWB", "BBBBWBBBWWWWWBBBBWBWWBW", "WBWBWBWBBWWWBWBBWBWBWBB", "BWBWWBBBBWBBWBBBBBWBWWW", "BWBBBWBWWBBWBWWWWWWBWWW", "WWWWWBBWBBBBWWBWWBBBBBW", "WBBBBBBBBWWWBBBWBWWWBWB" };
    int maxStrokes = 140;
    assertEquals(285, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case42() {
    String[] picture = { "BBWBWB", "BWWBBW", "BBWWWW", "WBBWWB", "WBBBBB", "WWWBWB", "WBBWWB", "BBBBBW", "WWBBWB", "BWBWWB", "BWBBWB", "BBBWWB", "WWWBWB", "WBBWBW", "WBWBBW", "WWBBWB", "WWWBBB", "BBWWBW", "WWWBWW", "WWWBWW", "BBWBBB", "BBBBWW", "WWWWWW", "WBWWBW", "WBWWBW", "BWBWWB", "BBBBWB", "BBWWWW", "WBWBWB", "WBBBBW", "WWWWBW", "BWBWBB", "BWWWWW", "BWWWWB", "WBWBBB", "WWBBBW", "WBWBWW", "BBBWBB", "BWWWWB", "BWBBWB", "WWWWWW", "BWWBBW", "BWWBWW", "BBWBWW", "BBWBWB", "WBBWWW", "BBWBBW", "BWBBWW", "BBWBBW", "WBBWWB" };
    int maxStrokes = 106;
    assertEquals(38, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case43() {
    String[] picture = { "WBBBBW", "WBWWBB", "BWBWBB", "WBBWWB", "WBWBWW", "BWBBWB", "WWBBBB", "BWBBBB", "WBWBWB", "WWBWBB", "BBWWBW", "WBWWBW", "WBWWWB", "WBBWBB", "BBBBWW", "BWWWWB", "WBBWBB", "WWBWBW", "WWBWBB", "BWBBWB", "BBWWBW", "BBWWBW", "WBBBWW", "BWWWBB", "WWWWWW", "WBWBWW", "WWWWWB", "BBWWWW", "WBBBBW", "WWBWWW", "WWBBBW", "WBWBWB", "BWWBWB", "BBWBBW", "WWBWBW", "BBWWBW", "BWWWBW", "BBWWBB", "WWWBBW", "BWWBWB", "WBWWBW", "BBWBBW", "BBBWBB", "WBWWWB", "WWWBWB", "WWBWBW", "BBBBWW", "BBWBWB", "BBBWBB", "WBBBBB" };
    int maxStrokes = 193;
    assertEquals(0, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case44() {
    String[] picture = { "WBBWBWWBBW", "BWWBWWWBWB", "BBBBWBBWWW", "BBBBWBWWBB", "BWBBBWBBWB", "BBBBWWBBWB", "WWWWWWBWBB", "WBBBWBBWWB", "WWWWWBWBWW", "WWBWWWBWBW", "BWBWBWWBWB", "WWBWBBWWWB", "WBBWBBBBWB", "WWWWWBBBBB", "WWBBWBWBBW", "WWBBBWBBBW", "BBWWBBBWWB", "WBWWWWBWBB", "WWWBBBBBBW", "BBWWWBBBBB", "WWBBWBBBBW", "WWWBBWBBBW", "WWBBWWBWBB", "BWBBWWWBBW", "BWWWWWWBWW", "WWBBWWWWBW", "WBBBWWBWWB", "WWBBWWBWWW", "WWWWWBWBBW", "BWBWBWBWWW", "WBWBBWWWBW", "BBWBWBBWWW", "WWWWBWBWWB", "WBBBWWBBWW", "BWBWBWBBBW", "WWBWBBBWWB", "WBWWBBBWBW", "WWWBBBWWBW", "WWBWBWBBWW", "WBBBWBBBWB", "BWWBWBWBBB", "WWWWWWWWWB", "WWWBBWWWBB", "BBBBWWWBWW", "BWBBBBBWWB", "BWBBWWWWBW", "BBWBBBWWBW", "WBBWWBBBBB", "WWBWBWWWBW", "WWWWWWWBWB" };
    int maxStrokes = 219;
    assertEquals(29, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case45() {
    String[] picture = { "WBBBBBB", "BWBWWBB", "BWBBWWB", "WWBBBWB", "WBBBBBW", "WWWWWBW", "BBWBWBB", "WBBWWBB", "BBBBWBB", "BBBWWWW", "WBBWWWB", "BWBBBWW", "WWWBBWB", "WBBBBWB", "WBWWWBW", "BBWWBWB", "WBBWWBB", "WWWBWBB", "BBWWWBW", "BBBBWWB", "BWWWBBB", "BBBBBBB", "WBBBBBW", "WWWBBBB", "WWWBBWW", "BWWWWBW", "WBBBBWW", "WBWWBBW", "BBWWWBB", "BBWWWWW", "WBWBBBB", "BBWBBWW", "WBBWWBW", "BBBBWWB", "WWWBBWW", "WBBWWWB", "BWWBBBB", "BWBWBWB", "BBWWWBB", "BBBWWWW", "WWBBBWB", "BWWBWWW", "WWBBBBB", "WBBWWWW", "BBBWBWB", "WWBWBBB", "BWWBWBB", "WWBWWWW", "BBWBBWB", "WWBWWWW" };
    int maxStrokes = 107;
    assertEquals(42, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case46() {
    String[] picture = { "WBWWBBWWBB", "WBWBBWBBBB", "BWBWBWWBWW", "WWWBBBBBBW", "WBWBWBBWWB", "BWBWWWBBBB", "BBBBBWWWBB", "BBBBWBWWBW", "BBBBBBBWWW", "BBBWBWWWWB", "BBWBWWWWWW", "BWBBBBBWBW", "BBWWBBWBWB", "BBWBWWBWBW", "WWWWWBWWWB", "WWWBWWBWBW", "WWBBBWBWBB", "WBBWBBWWWB", "BBWBWBWWWB", "WWBBWWBWBB", "BWBWWBWBBW", "WBBWWWWBWW", "BWBBWWBWBW", "BBBBBWBWWW", "WWWWBWBWWW", "WBWBBWBBWB", "WBWBWBWWBB", "WBBWWWWWBW", "BBWBBBBBBW", "BBWBBWBBBB", "WBBBWWBWBB", "BBWWWBBBWB", "WBBWWBWBBW", "WWBBWBWWBW", "BWWBBBWWWW", "BWBWBWWWWB", "WBWWWWBBBW", "BBWWWBBWWB", "BBWBBWBWBB", "WBWWWWBBWW", "WBWWWWWWWW", "WBWBBWBWWB", "WWWWWWWBBB", "WWWBBBWWBW", "BWWBBBWWBW", "WWBWBBWBBW", "WBBWWWWBWB", "WBBBWBWBWB", "WWWWBWWWBB", "WWBWBWBWBW" };
    int maxStrokes = 239;
    assertEquals(25, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case47() {
    String[] picture = { "W", "W", "W", "W", "B", "W", "W", "B", "W", "W", "W", "W", "W", "B", "W", "W", "W", "B", "B", "B", "W", "B", "B", "B", "W", "B", "B", "B", "B", "B", "B", "W", "W", "W", "B", "W", "W", "B", "B", "W", "W", "B", "B", "W", "B", "B", "W", "B", "W", "B" };
    int maxStrokes = 185;
    assertEquals(0, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case48() {
    String[] picture = { "WBB", "BWB", "BWW", "BBW", "BBW", "WWW", "WWB", "BBW", "BWB", "WBW", "WBW", "WWB", "WWW", "WBW", "BBB", "WWB", "WWB", "BBW", "BWB", "WWW", "BWB", "WBW", "BBW", "WBW", "BBW", "WWW", "BBW", "BBW", "BBW", "WBB", "WBB", "BBW", "WWW", "WBB", "WBB", "BWW", "WWW", "WBB", "BWW", "WBB", "WBW", "BWW", "BWW", "BWW", "BBB", "WBB", "BBW", "WBB", "BWB", "WBW" };
    int maxStrokes = 279;
    assertEquals(0, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case49() {
    String[] picture = { "WWWWWWWBBWBBWWBBBWBBBBB", "BBWBWWBWBBWBWWWBBBBWBWW", "WBWBBWBWBWWBWBBWBBWWWWW", "BBWWBWWBWBWWBWWWBWBWBBB", "WWWBWBWWBBBWWBWWWBWWWBB", "BWBBWWWBWBWWBWBBBWBBBWB", "WWBBBBBBWBBBBBBWBBWBBWW", "WWWWBBWBBWWWWBWBWWBWBWW", "WWBWBBWWBBBWWWBBBWWBBWB", "BBWWWWBBWBBBWBBBBBBWBWB", "WBBBBBBBBWWBBWWBWWWWBBW", "WWWBBBBWBBBWBBBWBWWBBBW", "BWBWBBBBWWWWWBWWWWBBBWW", "WWWBBBWWBWBWWBWWBBBWWWW", "BBWBWWBBWWWBWWWBBBBWBBB", "BWWWBWWBBBBBBWBWBBWBBWW", "BBWWBWWWBBBWWBWBBWWWBWW", "BWWWWBBBBBWBWWWWBBWBWWW", "WWWBWWBWWBBWWBBWBBBBWWW", "BWBWBBWWBBWBBBBWBBBWBBB", "WWWWWWBWWBWWWBWBBWWWWBB", "WWWWBWWBWBWBWWWWWBWWWBB", "WWBWBBBBWWWBBBWWBBBWBBW", "WWBWBWWBBBBBBBWWBWBWBBW", "BWBBWBBWWWBWBBWBBBBWBBW", "BWWWBWWWWWBBWWBBWBBBWBB", "BBBWBBBBWBBBWBWBBWWBWBW", "BWBBBBWBBBBBBWBWBBBWBWW", "BWBWWWBBWWWWBWBBWBBBWWB", "WBBBBWBBBWWWWWWWWBBWWBB", "BBWWBBWBWBWWWWBBBBWBBBB", "WWBBBWBBBBWBBWWBWBWWWBB", "WBBBWWBBWBWBBWWBBWBBBBB", "BBBBBWBWWBBBBBBBBBBBWBW", "BWBWBBBBWBWWWWBWWWBBWWW", "WBBBWWBBWWBBWBBBBBWBWBB", "BBWWBBBBWBBBWBWBBWBWBBB", "BBWWWBBWBWBBWBBWWWWBBBB", "WBBBWBBWBWBBBBWBBBWBBBW", "WBWBWBWWWBWBWBWWWBBBWWW", "WBWBBWBBBWWBBWBWBBWBBWW", "WWWWWBBBBBBBBWBBWWBBBBW", "BWWBWBBBWWBBBWBWBWWWBBB", "BWWBBWWBWBBWWWWBBBWBWWW", "WBBWBWBBWWBWWWBBBWBWWBW", "BWWWWBWWWWBBBWWWBWWWBBW", "BBWWBBWBWBWWBBBBWBBBBWW", "WWBBBWBWBBWBBBBWBBWWWWB", "WWWBBWWBWWWWWWBWWBBWWWW", "WBBWBWWWBWBBBBWBWBWBBWB" };
    int maxStrokes = 165;
    assertEquals(248, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case50() {
    String[] picture = { "WBBBBBWBWBWWBBWBWWB", "WBWBBWWWWBWBBWBBBWB", "BBWWBWBWBWWWBWWWBBB", "BWBWWBBWBWWBBWBBBWB", "BWBBWWBWWWWBWBBBWBW", "WBBWBWWBBBBWBBBBWBW", "WBWBWBWBBBBWBBBBWWW", "WWWBBWBBWBWBWBWWWWB", "BWBBWBWBBWBWBBWBBBW", "WBBBBWBWBBBWBBBBWBB", "BBBWWWBWWWWBBBBWBWW", "BWWWBWBBWBWWBWBWBBB", "BWWWBBWWWBWBWBWWWBW", "WBBBWWWWWWBWWWBWBBW", "BWBWBBWBBWBWBWWBWWB", "WWWWWBBWWWWBWBWBBBB", "BBWBWWWBWWBBBBWBWWW", "BBBBWBWBBBWBBBBBBWW", "WWBBWWWWBWBWWBBWWBB", "WBWBBWWBWWWWBBBWBWW", "BBBWBBBBBBBWBWWBWWB", "BWWBWWBBWBWBBBBBWWB", "BBWBWBWWBBWBWBBBBBW", "BBWBWWBBWBWBBBBWWWB", "BBWWWBBWBWBWWBBBBBW", "BWWBBWWWBBBWWWWWWWW", "BWWBBWBBBBWBWWBBWBW", "WBWWWBWBBWWBWBBBWBB", "WWWBWBWWBBBWBBWWBBW", "BBWBBWWWBBBBWBWBWWB", "WWWWWBWWBWBWBWBBBBB", "WBWWBWWWWBWBBBWBWBB", "WWBWWWWWBBWWBBBWWWW", "WBBBBWWWWBBBWBWBBBB", "WBWWWWWWWWWWBWBWBBW", "BWBWBWWBWBWWWBBWBBB", "BWBWWWWWWWBBWWWWWBB", "BWWWBWWWBBBBWWBWBBW", "WBBWBWWWWBWWBWBWWBW", "BBBWBBWWWBWBWWBBBWW", "WWWBBBBBWWWWWWBWBBB", "BWBWWWBWWWWBBWWWWWB", "BBWBBWWWBWBWWBWWBBB", "BBBWWBBWWBWWBBWBBBW", "BBBWWWBBBBWBBWBBBWB", "WWBBWWWWBBBBBBWBWBW", "WBBWBWWWWBWWBWWWWWW", "WBWWWWWWWWWBBBBBWWB", "WBWBBWBWBWBWBBBBWWW", "WBWBWWWWWBWWBWBBWWB" };
    int maxStrokes = 248;
    assertEquals(136, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case51() {
    String[] picture = { "BBWBBBBBBWWB", "BWBWWWWWWWWB", "BBBBBWWBWWWW", "WWWWWBWWWWBB", "BBWWWWBWBBWB", "WWBBBBWBBWBW", "BBBBBWWBWBWW", "WWWBWWWWWWWB", "WBWWWBBWBBWB", "WBBBWWWWWBWW", "BWWBWWWBBBWW", "BBWBWWBWBWBW", "BWWWWBWWBWBB", "BBWBWBWWBWBW", "BWWWBBBWBWBB", "BWBBBBBBWWBW", "BBWBBBWBWBWB", "WBWBWWBBWBBB", "BBWWWWBWWBBB", "BWBBWBBWBWWW", "BBWWWWBBBBBB", "BBWBBWWBWWBB", "BWWBWWBWBWWW", "BBWWWBWWBWWW", "WBBBBWBWWBWW", "BWWWWBBWBWBB", "BBBWWBBWBBBW", "BBBBBWBWWWBB", "BWWBWBWWWBWW", "BWBWBWWBBWBW", "WWBBBBWWBBBW", "BWWBWBBBBWBB", "WWWWWWWBWWWB", "BWBBBBBBWWBB", "BWWBWBBBBBBB", "WWWWWBWWWBBB", "BWBBBBWBWWWW", "WBWBBWBBBBBW", "BWBWBWBWBWWB", "BBBBBWBWBBWW", "WBBBBBBWBBWB", "BWBBWBBBBWBB", "BBBBWBBBWWBB", "WBBBWBBBWBWB", "WWBWBBWWBBWB", "BBBBWBWWWWWW", "WBWBWBWWBBBW", "WWBWBWBWBWBW", "BWWBBBWBBBBW", "BBBWWWWWWWWB" };
    int maxStrokes = 152;
    assertEquals(87, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case52() {
    String[] picture = { "WWBWWBBBWBWBWWWBW", "WWWBWBWBBBBWWWWWW", "WBBBWBWBBWBWBBBWW", "WBBBBBWBBBBWWWWBW", "WWBBBWWWWBBBWWWWB", "BWWWWBBBBWBWBBWWB", "BBWWWWWWBWWWBWBBW", "WWWWBWWBBBWWBBBBW", "BBBBWBBWWBWWBWWWW", "WWWBBWWWWWWWBBWWB", "BWWBBBWWWBBWBBBBB", "WBWBWWWBWWBBWWBBW", "BBBWWWBWBBWWBWBBB", "BWBBWWBBWWWWBBBWB", "BWWBWBBBWWBWBBBWW", "BBBWBWBWWBWBWWWWW", "WWBBWWBBWBWWBWBBB", "BWWBWWBWWBWBBWBWW", "WWBWWBWWBBWWBWBBW", "BWWBBBBWBBWBWWWBW", "BWBBWWBBBWWBWBWBW", "WBWBWBWBBWWWWBWBW", "WWBWWWWWBWWBWWBBB", "BWWBWBWWBWBWWWBWB", "BBWWBWBBWBWWBWWWW", "BWBBBWWWBBWBWBWWW", "BBWWBWBBWBBWBBWBW", "WWWBWBWBWBWBWBBWB", "BBWBBBBWWWBBBBWBW", "BBWWWWBWWBWBBWWBB", "WBWBBBWWWWBBBBWWW", "BWWBWBBBBBWWBWWBB", "BWWBWWWBWWBWWWBBW", "BWWBWBWBWWWBWBBBB", "BBBBBBWWWBBBWBWBW", "WWBBBWWWWBBBBWWBB", "WWWBWWBBBBWWBWBBW", "BWWBWWWBBWWBBWBWW", "BBBWBBBWBWBBWBBBW", "WBBWBWBBBWBBBBBWW", "WBWBBBWWWWBBBBWBB", "WWBWWBBWWBBBBBWBW", "WWWWWBWWWWWWBBWBB", "BBWWWWBWBWBWBWBWW", "BBBBBBWWWBBBBWWWW", "BWWWBWWBWBBBBWBBB", "BWBWBWBBBBBBWWBWW", "BWBBWBBBWBBWBBBBB", "BBBBWBBBBBBBWWWBW", "WBBBWWWBWWWWWWWBW" };
    int maxStrokes = 197;
    assertEquals(130, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case53() {
    String[] picture = { "BBWWWWWBBBBWWBWWWB", "WBWWWBBWBBWBBBBWBW", "BWWWWBBWBWBWBBWWWB", "BBWBWWWBWWWWWBWWWW", "WWBBWBBBWWBWWWWBBB", "BBBBWBWBWBWBWBWBWB", "WWWWWBWBBBWWBWBWBW", "WBWBBBWWWBBBWWBBBB", "WWWWBWBWBWBBBBWWBW", "BBWWBBBBWWBBBBWWWW", "BWWBWBWBBWBBWBBBWW", "WBBBBWWWWBBWWBWWBB", "BWBBBWBBBBWBBBBBWB", "BBBWWWBBWWBWBBBWWW", "WWWBWWBBBBWBBBWWBW", "BBBBWBWWWWWWWBBBBW", "BBBWBBBBWBBBWBBWWW", "WWWWWBBWWWBBWWBWWW", "BWBWWBBWBBWBWBBWBB", "BWWBWBWBBWBWWWWBWW", "BWBBBWWBWBWWWBBBWW", "BBBWWBBWWBBWBBBWBB", "BBWWWWBWWWWBBBWWWB", "WBBWBBBWWBWWWBWBBW", "WBWWBWWBBBBWWBBBWW", "WBBWWWBBWBBWBWWWBW", "WBBBBWWBWBWWBWBWWB", "BWWWWWBBWBWBWWBWBB", "BBBWWBWWWBBWBBBWWW", "BWWBWWWBWBBBBWWBWB", "WWBBBWWWWWBBBBBWWW", "BBBWWBBWWWWWBBWWBW", "WWBWBWWBWWBWWBWBBW", "WWWWWWBWWWWBWWBBWW", "BBBBWBWWWBBBWWWBWB", "WWBBWWBBWBBBWWBWBB", "WBBBBWWWWWBBWWBBWW", "WWWWWBBBBBWBWBWBWB", "BWBBBWBWBWBWWBBBWW", "BWWWBWBBWBBBWWWWBB", "WBBBBBWBWWWWWBWWBW", "WWWBBBWBBWWWBBBBBB", "BBWBWBBBWWWWBWBWWW", "BBWBWWBBWBWWWWBBBW", "WWWWWWWWWBBWBBWWBW", "WWBBBBWBWWBBBWBBWB", "WBBBWBWWBBWWWWWWWW", "BBBWBBBBBWWWBBBWWW", "BWBWWBBBBWBWWWBWWW", "BWWBWBWWWBWBBWWBBB" };
    int maxStrokes = 156;
    assertEquals(180, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case54() {
    String[] picture = { "WBWWBWBWWWWWWWBBWWBWB", "WBWBBBBWWWBBBWWBWWBBB", "BBBWBWBWBWBWWBWBBBWWB", "BWBWBBWBBWBBBBWWBBWWW", "BWWWBWWBBBWBWBWWWBBWW", "BBWWWWWBBWWWBWBBWBWBW", "BWWBBWBBBBWWBWBBWWBBW", "BWWBBWWWWBWWBWBBBWWBB", "WBBWBWWBWWBBWWBWBBWWW", "WBBWBBWWBBBWBWBBWBBBB", "BBWBBBBWWBBWWWBBBBWBW", "WWBBBBWBBBWBBBBBBWWBW", "WBBBBWBWWBBBWBBWWBWWW", "WBWBWWWBBWWWBWBWBWBBW", "WWBBWBBBBBWBWWWBWBWBW", "BWWBWBWBWWBWWWBBBBWWW", "WBWWWWWWWBWWBBBWWBBWB", "BWBWBWWBBWBBBWBBWBWWW", "BWWBBBBBWWWWBWWBWBWWB", "BWWBWWWBBBBWWWBBWBWBB", "WWWBWWBBWBWWBBBWBBWBW", "WWWWBBBWWBBBBBBWBWWBB", "WBWBBBBBBBBWBWBBBBBBB", "WWBWWBBBWBBBBBBWWBBWB", "BWWWWBWBWWWWBBBBWBBBB", "BBBWBBWBBWWBBWBWWWBWW", "WBWWWWBWBWBBWBWBBWWWB", "BBWBWBBWBBBWBBWWBWWWB", "BWBBBBWBWBWWBBWBWBWBW", "BWWBWWBWBBBWBBBBWBWBB", "BWBWWWBWBWBWBWWWBWWWW", "BBWWWWBWWWWBBWWBWBWWW", "BWBWWWBBBWWWWWWWWWWWW", "BBWWBBWWBBWBBBBWWWWBB", "WBWBBWBWBBBBBWBWBBBBB", "WWBWWWWWWWBBBBWWBBBBW", "BBWBWWWBWBWWBWBWWWBWW", "BWWBBBBBBBWBBWBBWWBBW", "WBBWWWBBBBBWBBBWBWWWB", "WBWBBWWBWBBBBBWWBWWBW", "BWBBBWWWWBBWBBBBBWBWB", "WBBBBWWWWBWBBBWBBBBBW", "WBBWWBBBWWBWBBWWWBWWB", "BWBWBWWWWWWWWWWBBWBBB", "WWWBBBBBBWWWBWWWWBWBB", "WBWWBBWBBWBWBBBWWBWWB", "BWBWBWBWWWBBBWBWWWWBW", "BWWWWBWBWWBBWBWWWBBWB", "WWBBWBBWWBBBWWBBWBWBB", "BBBWWWBBWBWBWWBWWBBBW" };
    int maxStrokes = 182;
    assertEquals(219, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case55() {
    String[] picture = { "B", "W", "B", "B", "W", "B", "W", "B", "W", "W", "B", "B", "W", "B", "W", "W", "W", "W", "B", "W", "W", "W", "W", "B", "B", "B", "B", "W", "W", "B", "W", "W", "W", "W", "W", "B", "B", "B", "B", "B", "W", "B", "W", "B", "W", "B", "W", "W", "W", "B" };
    int maxStrokes = 177;
    assertEquals(0, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case56() {
    String[] picture = { "WBBWBBWWBWWBW", "BBBBBBBBWWWWB", "BWWBBBBWBBBBW", "BWWBWBBBWWWBW", "BBWWBWWWWWWBW", "BBBBWWWWWWBBB", "BWWBBWWBBBBWW", "WBBBWBWWBBBBB", "WWWBBBWWWWWWB", "WWBBWBBBBWWBB", "BWBBBWBBWWBBB", "BBWWBWBBBBBBB", "WBWWBBBBWBBBB", "WWBWWBWBWWBBW", "WBWWWWBWBBBBB", "WBBBBBWBWWBWB", "BWWBBWWBWWWBB", "WWBBBBWWBBWWB", "WWWWBBBWWBBWB", "WBWWBBBBBBWBB", "BWBWWWWBWBBBW", "WBWBBBWBBWWBW", "WBBWBWBWWBBBW", "BBBWBWWWWBWBB", "BWBBWWWBWWWBB", "BWWBWBBWWWWWB", "BWWBBBBWBWWWW", "BWBWBWWBWBBBB", "BBBBWWBBBBWWB", "WWWWBWWWWWWBB", "BBWBBWBWBBBWB", "BBWWBBWBBBBWB", "WWWWBBBWWBBBB", "BWWWBWBWWBBBB", "BBBBBBBWWBBWB", "WBWWBBBBWBWBB", "WBBBWWBBBWWBB", "WWWWBBBBWBWWW", "WWBBWWBBBWBBW", "BBBBBBWWWBBWB", "WBBWWWBWBBBWW", "WWBWBWWWBBWWW", "BWBWBWBWBBWWW", "WWWBWWWWWWBBB", "WBBWBWBWWWWBB", "WBBWBBBWBBWWW", "WWWWBWBBWBWWB", "WWBWBWWWBWBBB", "WWWWBBWWBWBBB", "WBWBBBBBWWBBW" };
    int maxStrokes = 141;
    assertEquals(111, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case57() {
    String[] picture = { "WBBWBBWWWB", "BWBWWWWBWB", "WBBWWWBWWB", "WBWBBBBBWW", "BBBWWWBWWB", "WBWBBBWBBB", "BWBBWWBWBW", "WWBBBWWBWB", "WBWBWWBBBB", "BBWWBBWBWW", "WBBWBBWBBB", "BBBBBBWBWW", "BBBWBWWWWW", "BWWWWWWBBB", "BBBWBWWWWW", "BWBWWBBBBB", "BWBBBWWWBW", "WWWBBBWBWB", "BWWWWWWWWW", "WWWBBBWWWW", "BWWWBBBBBB", "BWBBWBBBWB", "WBWWBBBBWB", "WWWBWBBBBW", "WBBWBBBWBW", "WBBBWWBWWB", "WWBWBWBBWW", "WBWWBWBBBB", "WWBWWWWWBB", "BBBBBWBWBW", "WWBWWBWBBW", "BWBWWBBBWW", "BWWWBWWBWB", "BBBWWBWWWW", "WBWWWBWBBB", "BWWWWWWWWB", "WWBBBBWBWW", "WBWBWWWBWW", "BWBBBBBBWW", "WWWWWWBWWW", "BWWBBWBBWB", "BWWWBWWWBB", "WBWWBWBBWW", "WWWBBBBBWB", "WBWWBBWBBW", "WWBWWWBBBW", "BBWWWBWBWW", "WWBBWBBBBW", "WWBWBBWBWB", "WBBWBWWWWW" };
    int maxStrokes = 206;
    assertEquals(33, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case58() {
    String[] picture = { "B", "B", "W", "W", "W", "B", "B", "B", "B", "W", "B", "W", "B", "W", "B", "B", "B", "B", "B", "B", "W", "B", "W", "B", "B", "W", "W", "B", "W", "B", "W", "W", "B", "B", "W", "B", "B", "B", "B", "B", "B", "W", "W", "W", "B", "B", "W", "W", "W", "B" };
    int maxStrokes = 136;
    assertEquals(0, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case59() {
    String[] picture = { "BWWWB", "WWBWB", "WWBWW", "BWWBW", "BBBWB", "BWWWW", "WWWBW", "BBWWB", "BBWWW", "WBBBW", "WWBWB", "BWWWB", "WWWWW", "BWBBW", "BBBWB", "BWBWB", "BWWBB", "BBBBB", "BBBBW", "WWBBW", "BWBBB", "BWWWB", "BBWBB", "BWWWB", "WBBBW", "WBBWB", "WBBBB", "WBWBB", "WBBBB", "BWBBB", "BBWWB", "WWWBW", "WBWBW", "WWWBB", "WBWBB", "BBBBB", "WBWWW", "WWBBW", "BWWBW", "BBBBW", "WBBWW", "WBWBB", "WBWWW", "BBWBB", "WWWWB", "BBBBB", "BWBBW", "BWWWW", "BWBBW", "WWBWW" };
    int maxStrokes = 153;
    assertEquals(0, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case60() {
    String[] picture = { "BBWBWWBBWBWWWBBBWWWWWBB", "BWWBWBBBBBWWBWWWWBBBWBW", "BBBBBWBWWWWBWBWWBBBWWWB", "BWBWWBBWWWWBBWWWBWWBWWB", "WWBBBBWBWWWWWWWBWBWWBWW", "WWWBWBBWBWWBBWWBWWBWBWW", "BWBWBBBBBBBBBWWBWBWBBWW", "WBBBWBBBBWBWBBWBWBBBWWB", "WBWWWWWWBWBBBBBBWWWBBBB", "BWBBWBBWWWWWWBBBBBBWBWW", "WBBBWWBWBBBWWBWWWBWBBBB", "BBWBBBBWWBBBBWWWBWBBWBW", "WWWBWBBWBBBBWWBBWWWWWBW", "BBWWWWBBWWWBWWWWBWBBWWW", "BWWBBWWBBBWWBWBWBBWBWBB", "WWWWBBBBWWBBBWBBWWBWWWB", "WWBWWWBWWBWBBBBWBWWWBBW", "BWWBBBBBBWWBWWWWBBWBWBW", "BBWBWWBBWWWBBBWWBBWBBBB", "BBBWBWWBBWBBBBWBWWBBWBW", "BBWWWBWBWWBWWWBWBWBBWWW", "WBBBWBBWWWWWBWBBWWBWWBW", "BBWBBBBWBBBBBBWBBBBBWWW", "BWBWWBWBBBBBWBWWBBWWBBW", "WWBBWWBBBWWWWBWBWBWBWBW", "WWWBWWBBWBWBWBWWWWBWBBB", "WBWWBWWBBBWBBBWBWBBWWWW", "BWWBBBBWWBWBBBWBBWWBBBW", "WBBBWWWBBBBBWWWWWWWBWBW", "BWBWWWWWWWBWWWWWWBWWWBW", "WBBBWBWWWWWWBBWBBWWBBWB", "BBBBWWBWBWWBBWWWBBBWWWB", "WBWWBWWBWBBWWWBBBWWWWBW", "BBBBBWWBBBBBWWWWBWWBBBB", "BWWBBWBWWWBWBBBWBWWBBBB", "WWWBWBWWBWBBBBWWWWBWWWW", "BBBBBBWBWBWBBWBBBBWBBBW", "BWBBBBWBBBBWWWWWWWWBBWW", "BBWWWBBBWWWWWBWBBBBWBBB", "BWWBBWBBWWWBBBWBBBBWBWB", "BWWBBBWWWBBBWWBBBWBWBWW", "WBWBBWBBBBBBBBBWWBWWWBB", "WBBWWBBWWWBWBBBWBWBWWWW", "WBWBWBWBBWWBWBWWWWWBBWB", "WBBWWBBBWWBBBWWWWWBBBWB", "WBWWBBWWWBBWWBWWWWBBBWB", "WBBBBWWBWBWBWBWBWWWBWWB", "BBWBBBWWWWWWWBBBWWBWBWB", "WBWWWBWBBWWBWBWWBBWWBWB", "BBBBWWBWWBWWWWWWWWWBBWB" };
    int maxStrokes = 185;
    assertEquals(241, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case61() {
    String[] picture = { "WWWWWBBWWBWWWBBBBWBBB", "BBBBBWBBWWWWWBWWBBBBW", "WWBWWWBBWWBWWBBWBWWBB", "BWWWBBWBWWBWWWWBBWWWW", "BBWBWWWWWWWBWBBWWWBBW", "BWBBWWWWWWWWWWWBBWWBB", "WWWWBBWWBWBBBWWWBWBWB", "WWWWWBWWBBBWBWBBBWWBW", "WBWWBWBBBBBBWBWBBWWWB", "BBBWWBBWWWBWWBWBWBBWB", "BBBWWWBBWWWWBWWWBBWBW", "BBWBWWWWWBWWWWWWBWWBB", "BBWWWWWBWWBWBBWBBBBBB", "BWBBBWWWBBBWBBWBBWWBW", "WWWWBWWBWWWWWBBWBBWBW", "BBBBBWWWWWBBBBWWBBBBW", "BBBBBWBWWBBBWWWWBWBWW", "BBWBWBWBBWWWWBWBBWWWW", "BWWWBWBBWWWBBBBWBBWBB", "BWWBBBWBWBBWBWBWWBWWW", "BWWWWWWWWWWWBBBBBWWBW", "WBWWWBWWBWBBBBWBBWBWB", "BBWBBWWWWWBWWBBWWWBBB", "WBWBWBBBBBBWBWBBBWBWW", "BBWBBBBBWBWWBWBWBBWBW", "BWWWWBWWWBBBWWBBBBBBW", "BBWWWWBWBWWWWBWBBBWBW", "BBWBWBBWBBWWWWBBBWBBB", "BWBWWBBWWWWWWWWWBWBWW", "BWBBBBBWBBWBBBBWWBWBW", "BWWBWBBBWWWBBWWBWWBBW", "WBBBWBBWWWWWWWBBBWWBB", "WWWWBWWBWBWBBWWWBWWWB", "BWWWWBWBBWWWBBBBWBWBB", "WBBWBBWWWBWWWWBWBBBWW", "WWBWWBBWWBBBWWBBBWWBB", "WWWWWWWBBBBWWWBBWWBWW", "BWWWBWBWBBWWWWWBBWBBB", "WBBWWWWWBWWWWBWWWBWBB", "BWWWBWBWWWWBBBWBWBWWW", "BWBBBWWWWBBBWBWWWWWWB", "WWBBBBWWWBBWBBBWWWBBW", "BWWWBWBWBWWWWWBWWWWWB", "WBBWWWBWWBBBBBBWBWBWB", "BWWWWWBBBBWWWBBWWBWWB", "WWBBBWWWWBWWWBWBWWWBB", "WBBWBBBWWWWWBWWBBWWBB", "BBWWBWWBWBWBWBBBWBWBB", "WBBBBWWWBBBBBBBBBWWWB", "WBBBBWWBWBBWBBWBBBBWW" };
    int maxStrokes = 154;
    assertEquals(223, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case62() {
    String[] picture = { "WWBWWB", "WBBWWB", "BBBBWW", "WWBBWB", "WWWBBW", "BWBBBB", "BBWWBB", "BWWBBW", "BBBWBB", "WBWBWW", "BWWWBB", "BBBBBB", "WBBWWW", "WBBWWW", "BBWBWW", "WWWWBW", "BWWBBB", "BBWBBW", "BBWBBW", "BWWBWB", "WBWWBW", "BBWWWB", "BWWBWW", "BBBWWW", "BBWBBW", "WWBBWB", "BBWBWB", "BWWBWW", "BBWBWB", "BWBBWB", "BWBBBW", "WWBBWB", "WBBBBW", "WWWWBW", "WBWBBB", "BWBWWB", "BWWBWB", "BBBBWB", "WBWBBB", "BBBWWB", "WBWBBW", "BBWWBW", "WBWWWW", "BWBWWB", "BWBBBW", "BBWBWW", "WWWBBB", "BBWWBB", "BWWWWW", "WBWBWB" };
    int maxStrokes = 173;
    assertEquals(6, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case63() {
    String[] picture = { "WW", "BW", "WB", "WB", "BB", "WW", "BW", "BB", "BB", "BW", "BB", "WW", "BB", "WB", "WB", "BW", "BB", "BW", "BW", "WW", "BB", "WB", "WB", "BB", "BW", "WW", "BB", "BB", "WW", "BW", "WW", "WW", "BB", "BB", "WW", "WB", "WB", "WW", "BB", "WB", "BB", "BW", "WW", "WB", "WB", "WW", "BW", "BB", "BW", "WB" };
    int maxStrokes = 244;
    assertEquals(0, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case64() {
    String[] picture = { "BBWBBWBWWBWBWWW", "WWBBBWWBWWBBWBB", "WBWWWBBBWBWBBBB", "WBBBWWBWWBWWWBB", "BBWBBBWBWWWBBBW", "BBWBBWBBBWBBBBW", "WWBWBBWWWWWBBBB", "BBBBBBWWBBBBWBB", "BWWWWBWWWBWBWWB", "BWWBWBWWWWWWBWW", "BWBBWBBWBBWBWBB", "WBWBWWWBWBWWWBB", "WBWBWWBWBWBWWBB", "BWWBBWWWBBWBWBW", "BWWBWWWBWWWBWWB", "BWWBBWWBWWWBWBB", "BWWWWBBWBWWWWBB", "BWBWWWBBWBBBBBB", "BBWBBWBBWWBWWWB", "BBBWBWWBBWWBBBB", "WWWWBWBBWBBBBWB", "BBWBBWBWBBWBWBW", "WWBWBWBBBWWBBWW", "WBBBBWWWBBBBBWW", "BBWWWBBWWWWWBWW", "BBWWWBBWWBWWBBW", "BWWBBBWBBBBBWWB", "WBWBBWWWWBBWBBB", "WBWBWWBWBWBWBWW", "BBBBWBWBBBWBWBB", "BBWWBWWBWWWBWBB", "WBWBBWBWWBBWWWB", "WBBBWWWBWWWBWWW", "WBBWWBWWWBBWWWW", "WWBBWBWBBBWBBWW", "WWBWBWWBBWWWBWB", "WWBWWBWWWBWBWWW", "BBWWBBWWBBBBBWW", "WWBWBBWWBWBBBWB", "BWWWWWBBBWBBBWB", "WBBWBWWBBBBWBWB", "BWWWBWWBBBWWBWB", "WWBBWBBWWWWBWWB", "WBBBWBWWWBBWWBW", "WBWBBWBWBWWWWWW", "BWBBWWBBBBBWWBB", "BBBWWWWBWBWWWBW", "WBWWWWBWBBBBBBW", "BWWBBBWWWWWWWBW", "WBBWWWWBWWBWWWB" };
    int maxStrokes = 148;
    assertEquals(150, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case65() {
    String[] picture = { "BWBBBBBW", "BWWBBWBW", "BWWWBWWW", "BBBWBWBB", "WWWBWBBW", "WWBWWWWB", "BBBBBBWB", "WBBBBWWB", "WBWWBWBW", "BWBWBBWW", "WBWWBBWW", "BWWBBBWW", "WWWWWBWB", "BWBBWWWW", "WBBWBBBW", "WBWBBWBW", "BBBBWBBW", "BWWBWBWB", "BWBWBWWW", "BWBBWWBB", "BBWBBWBW", "BWBBBWWB", "BWWWBBBB", "BBBBWBWB", "WBBWBWBW", "WBBWBBWB", "BBBBWWBB", "WBBBBBWW", "WBBBBBWW", "BWWWWBBB", "WWBWWBWW", "BWWBBWBW", "BBBWBWBB", "WWBWWBBW", "BBBWBWWB", "BWWBWWBB", "WWWBBBWB", "BBWBBWBB", "WWWWWWBB", "WBBBBWBW", "WWWBWBWW", "WWWBWBWW", "WBWWWWWB", "WWBWBBBB", "WBWBBWBB", "BWBBBWWB", "BWWBWWBB", "BWWWBWBW", "WBBWBBBB", "BBWBWWBW" };
    int maxStrokes = 191;
    assertEquals(25, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case66() {
    String[] picture = { "WBWWBWBBWBWWWBWWBBWBBWB", "WBWWWBBBWBBBBBBBWWBWWWB", "BBWBWBWWBBBBWWBWWBWWBWB", "WBBWWBWBWBWBWWBBWBBBBBB", "BBBBWBBBBBBBWWWWWBWBWWW", "WBWBWWWWWWBBWWWBWBWBBWB", "WWWBBWBBBWBWWWBBWBBBBWW", "BBWWBWBBBWWBWWBWWWWWBBB", "WBBWBWWWWBWBWWWWWWBWWBW", "BWWBWBWWBBWBBWBBWWBWBBW", "BBWBWWBWBWWWWWBBBBWWBBW", "WWBBWWWBBWBWWBBWWWWBBWB", "WBBBWWBBWWWBWWWBWWBWBWW", "WWBWWWBBWWBWWBBWWBBBBWW", "WWWWWWBWWBBBBWWBWBWBWWW", "WBBWBWWWBWWWWBWBBWWBBWB", "BBWWWWBBWBBWBWWWBBBWWWW", "WWBBWBWBBBWWBWWBBWBWWBB", "WBBWWBBBBBBWBWBBBBWBWWW", "BBBBWWBWBBWWBWWWBBWBBBW", "WBBBWBBBWWBWBBBWWWWBWBW", "BWWBWWBBBBBWWBBWBBBBWWB", "BBBBBBWWBBWWBWWWBBWWWWB", "WWWBWBBBWWBWBBWBWBWWBWW", "BBWBWWBBBWWBWWBWBWWBWWW", "BBBWBWBWBBBWWBWWWBWBWWB", "WBWBWBBWWWBWWBBWWBWWBWB", "BBBWBWWWWWBBWBWWWBWWBBW", "WWBBBWBBBWBWWBWWBBWBBWB", "WWBBWBBBWBBBWBWWWWWWBBW", "WBWWBBWWWBBWWWWWWBBWWBB", "BBWBWWWBWBWBWBBWBBWBBBW", "WBBWWWBWWBWWWWWBBBBBBWB", "BWWBWWBBBBWWBBWBBWWWWWW", "BWWWBWWBBBWBBWBBWBWBBWB", "BWWWBBBBWWBBWWWBWBBBBBW", "WBBBWBWBWBBWBBWWWWBBBBW", "WWWBWBBWWWBWBBWWBWBWWBB", "WWBWWWBWWWBBWWWBBWBWWWW", "WWWWWWWWWBBWWBWWWBBBBWW", "BBBBBWWBWWBBBBWBWWWBBBW", "BWBBWWWBWBWBBBBWWBBBBWW", "BWBWWBWBBBWWBWBBWBBBBWW", "BBBBBWBBBWWBWBBBWBWWBBW", "WWBBWBBBBWWWBBBWBBBBWBB", "WBBWWBBBWBBWWWBWWBBBBBB", "BBBWBWBBWBBBBWWBWWWBWBB", "BBWWWBBBBBBBWBBWWWBWWWW", "WWBWWBWBWBBWBBWBWBWWBBB", "BBBWBWWBBWBBWBBWBBWWBWW" };
    int maxStrokes = 192;
    assertEquals(242, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case67() {
    String[] picture = { "WBBWWBWBWWWWWWBBWBWBW", "BWWBWBWBWWWBBWWBBBWBB", "BBWBBWBWBBBBBWWBWBBBW", "WWBBBWBWWWWWWWWBWBWWW", "WWWBWBBBWWBBWWWBWWWBB", "BWWBBBWWBWWWBBBBBWWWW", "BBBWBWBWBBWWWWWBBBBBW", "WBWBWWWWWBWBBBWBBWWBB", "BWWBWWBBWBWWBWBWWBWBB", "BBBBBBBWBWWWBWBWBWWWW", "BBBBWWBWBBWWWBBBBWWBW", "BWWWBBBWWWBWWBBWBWWWW", "BWWWBWWWWWBWWWWWBWWWB", "BBWBBWWWBWWWBWWWWWWWB", "WWBBWBWBWBBWBWBWBBWBB", "WBBWBWBBBBWBBWWWBWWWW", "BBWBWBWWBWWWWWWWBBWWB", "BBBWBBWWWBWBBWWWBBWWB", "BWWWBBBBWWBBWBBWWWWBB", "WWWWBBBBWWBWBWWBBBBWB", "WBBBWWBBBBBBBWBWBWWWB", "BWWWBWWBWBWWBWBWBWWWW", "WBBBWBBWBWWWWBBWWBBWW", "WWWWWBWBBWWBBBWWWWBBB", "BWBWWBBBWWWBBBBBWWBWW", "WBWWWBWBBWBWWBWBBBBBW", "BBWWWBBWWBWBBBWWWWWBW", "BBWBWBWBBWBWBWWWWBWBB", "BWWWBWWBBWBWBBWBWWBWB", "WWWBBWWBBBBWBBBBWWBBW", "WBBBBBWBWBWBBBBWBBBWW", "WBWBBBWBBBBBWWWBWBBBW", "BWWWWWBWBBBBBWBWBBBBW", "BWWBWWWWBBBWBBWBBBWWW", "BBBWWWWBBBBWWWWWBBBBB", "WBBBWBBWWWBWBWBWBWWWW", "BWWBWBBBWBBBBWWBWBBWB", "BBBBBWBBBBWWBBWWBWBWW", "WWWBWWBBWWBWBBWWWBBWW", "WWBBBWWWWWWBBWWBWBWWW", "BBBBWBBWWBWBBBBBWWBBB", "BWBBBBWWBBBWWWBBBBWBB", "BWWBWWBWWWWBBWBBWBBBW", "WWBWBWBWBBBBBWBWBBWBB", "WBWBBBWWWBWBBWWBWBWWW", "WWBBWBBWWBWWWWWBWWBBW", "WWBWWBBWBBWWBWWBBWWBW", "BWBWWBWWWBWWBWBBWBBWW", "BWWWWBWWBWWBWBWWWWWBW", "BBBBWWWWBWWBBBWWBBWBB" };
    int maxStrokes = 249;
    assertEquals(152, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case68() {
    String[] picture = { "BWWBBWWBBBB", "BBWBWBBWWWW", "WWBBBBWWBWB", "BBBBWWBWWBB", "BBBWBWWWBBB", "WBBBBBWWWBW", "BWWBBWBWBBW", "WWWBWWWBBWB", "BWBWWWWBBWW", "WWWWBBWBBBB", "BWWBWBWWWBB", "WWWBWWWBBBW", "BBBBBWBBWWW", "WBWBBBBBBWB", "BBBWBBWBBBB", "BWWBWBBWBWW", "WBWWWWWBBWB", "WWWWBWBBBBW", "BBBBBBBWWBB", "BBWWBBWWBBW", "WWBWWBWBBBB", "WBBWWBWWWWB", "BBWWBWWWWBB", "WWBWBBWWWWB", "BBBBWWBBBBB", "WBBBWWBBBWB", "WBWBBBWWBBW", "WWWBWWWWBBB", "BBWWBWBWWBB", "BBWWBBWWBBB", "BBBWBBBBWBB", "WBWWBBWBWWB", "BWBWBBWWBBW", "BBWWBBBBBWB", "WWBWWWWWBWB", "WWWBWWBBWBB", "WBWWWWWWBWB", "BWWWBWBBWBB", "WWBWWWWBWBB", "BBBBWWWWBBB", "BWBWBWBWBWB", "BBBBBWBWBBW", "BBWWWBWWBBW", "WWWBBWBBWWB", "WWWBWWBWBWB", "BWWWWBWBBWW", "BWBWWBWBBWB", "BWBBBBWBWBB", "BWBWBBWBWBB", "WWBWWWWBWWB" };
    int maxStrokes = 198;
    assertEquals(51, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case69() {
    String[] picture = { "WWWB", "WWBW", "BWWW", "WBBW", "BBWW", "BWBB", "WWBB", "WBWB", "BBWW", "BBWW", "BWBB", "WWWB", "WBWW", "BWWB", "BWBB", "WWBW", "WBBW", "BWBB", "BBWW", "WBBB", "BWBB", "BWWB", "WWWW", "BWBW", "WBBB", "WWWW", "WWWB", "BBWW", "BWWB", "WBBW", "BWWB", "BWWW", "BWWB", "WBBW", "BWWB", "WWBB", "BWWW", "BWWW", "BBWB", "BBWB", "BBBB", "BBWW", "WBBW", "BWBW", "WBBW", "BWBB", "BWBW", "BBWB", "BBWB", "WBBW" };
    int maxStrokes = 223;
    assertEquals(0, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case70() {
    String[] picture = { "WBWBWWWWBWWWBWWWWWWWBBWWWWWWWBWWWBWWWBBWWBBWWWBBBW", "WBWBBWWBBBWWWWBBWBWWBWWWWWWWWBWBBWWWWBBBWWWBWBBBWB", "BBWWWBWBWWBWBBWBWBWBBWWWWWBWWBBWBWWWBWBWWWBWWBWWBW", "BWBWBBWWWBWBWBWBWWWWWBWBWBWBBBWWWWBBWWWBWWBWBWBWWB", "BBWWBWWWWBWWBBWWBWBBBWBWBWWWWWBBWWBBBWBWBWWBBWWWBW", "BWWWBBWWBWWWWWWBWBBWWBBBBWWWWWWWWBWWWWWWWBWWBWBWBW", "BBWBBWWBWWBWWWBBWWWWWBWWBWWWBBWBWWBWWBBBBWWBBBBBWB", "BWBBWBBBWBWWBWWWBBBBBBBBWBBBWBBWWBWBWWWBBWWWWWWBBW", "BBBBWBBWBWWWWBBBBWWWBBWWBBWBWWBBBWWWBBWWBBBWBWWBWW", "BBWBBWBWWWBBWBBBWWWBBBBBWBBWBWWBBWBBWWBBBWWBBWWWBW", "WBBWBBBBWWWWWBWWBWWBWBBWBBWWWBBBWWBBBBWBBWWWWWWWBB", "WBWWBBBBWBBBWBWWBBWWBBBBWBWBBWWBWWBWBBBWBBWBWBWBWW" };
    int maxStrokes = 193;
    assertEquals(60, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case71() {
    String[] picture = { "BWWWWWWWBWBWBWBWWBWWWWWBWWBWBBBBBBBBWWBWBBWBWWBBBB", "BWBWWBWWBWBBBBWBBWBBWBWWBBBBBBBWWWWWWBWBWWBWBBWBWW", "BWWWWWBBBBWBBBBWBWWBBBBWWWBWBBBWWBWBWWBWBWBBBBWBWB", "WWBWWWWWBBWWWBWBBBBBWBBWBBBBWWBBBBBBBWBBWWWBBWBBBB", "WBBWBBWWWWBBBBWWWWBWBBWWWBBBBBWWWWWWWBBBWWWBWBBWWW", "WBBBWWBBWBBBWWBWWBWWBWBWBWBBWBBWBWBBBWBBWBWWBWBWBB", "BWBWBWWBWBBBWBWWBBBBWBWBBWWWWWWBWWBWBWWWBWBWBWBBBB", "BWWWBWWBBBWBBWBBBBBBBBBBBBBWBWBWWWWWBWWBBBWWBWWBWW", "WBBBWBWBWWBBBBBWWBWBBBWWBBBWWWBWBWWWBWBWBBBWWBWWWW", "WBBWBWBWBBWWBWBBBBWWBWBBBWBBBBBBWBWBBWWBBWBBBBWWBW", "WWBWWBBWWBBWBBWWBBWBWBBBBBBBWWWWBBWBBWBWBWBWBBBWBB", "WBWWBBWWWWBWBWWBBBBBWWBWBWBBWBBBWBBBBWBWWBWBWBWBBW", "BWBWWWBBBWBWWBBWBWBBWBWWBWWWBBWBWBBBWWWWBBWWBBBWWW", "BBWBWBBWWWBBWWBBBWWWBWWWBWWWWWBBWWBWWBBBWWWBWBBWWB", "WWWBWWWWWBBWWBWWBBWBWWWWBBWBWWWWWBWBBBWWWBBBBBBBBW", "WWWWWWWBBWWBBWWBBBWWWWWBBBBWWWWBWWWWBBBWBWWBWBBBBB", "BWBBWBBWBBBBBWWBWWWBWWBBBWBBWWWBBBWWWBWWBBWWWBWWWW", "BWWBWBWBBBBWBBWBBBWWBBBWBBBBBBBBBBWBWBWWWBWBWWWBWB", "WBWWBWBWWWBBBWWWBBBWWBWBBBWBWWWBBWWBWWWBBBWBBBWBBB", "WWBBWWWBWWBWWBWBWBBBWBBBBWBWBBBWBWWWWWWWWWWBBBWWWW", "BWBBBBWWWWWWWWBWWBBWWWWWWWWWBWBBWWWBBWWBWBWBBWBBWW", "BBWBBWBBWBBBWWWWWWBBWBBWWWBWWWBBWBBWBBBBBBBWBWWWWB", "BBWWWWBBWBWWWBBWWBBBBBWWBBWBBWBBWWBWBBBWWBWBWBBBWW", "BBWBWWWBWBBWBWBBBWBBWBBBWWBWBBWBWWWWWWBWWWWWBWWWWW" };
    int maxStrokes = 167;
    assertEquals(248, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case72() {
    String[] picture = { "BBBWWBWWWWWBWWBWWBBBBWWWWBBBWBBWWBWBBBBBWBBBWBBBBW", "WWBWBBBWBWBBBWBBBWWWBBWWBBBBBWBBBBBBBBBWWBWWWWWBWW", "WBBWBWWBBWBWBBWBBWBBBBWBWWWWBBWWBBBBBWBWBBBWBBBBWW", "BBWWBBWWWBBBWBBBWWWWWBBWBBBBBWBBWBWBWWWBBWBBBWBWWB", "WWBBWWBBBBBBWBBBBWBWBWBWWWWBWBBWWBBBBWWWBBWWBWWWBW", "WBWBWWWWBBWWBBBBWBWWBWWWWBWWBBBBBBBBWBWWBBWBBWBWWB", "WBWWBBBBBWBWBBBBBWWBBWWWWBWWBWBBBWBBBWWBWWBBBWWBWB", "WWBWBBBBBBWWBWWBWBWWBWWWWBWWWBBWBBBWWBWBBWBWBBWBBW" };
    int maxStrokes = 190;
    assertEquals(6, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case73() {
    String[] picture = { "BWWBBWBWWWBWBWWWWWWBBWBBWWWWWWBBBBBBWWWBWWBWWBWBBB", "WWBBBWBBWWWWBWWBBBWWBBBBBBWBWBBWWBWWBBBBWBBWBBWBBW", "BBWWWWBBBBWWWWBWBWWBWBBBBWWBWBBBBWBWWBBWWBBBBBBWWB", "WWBBBBBBBBWBBBWWBWBWBBWBWWBBWBBBWWWBWBBWBWBBWBWBBB", "WWWBWWWBBBWWWWBBWWWBWBBBWBBWBWBBBBBWBBBWBWWBBBWBBB", "WBBWWBWBWWWWWBBBBWBBWWWBBBBBWBBWBWBWWBWWWBWWWWBWWW", "BBBWWWWBWWWWBWWWWWBBWBBBBBWWBBBBBBBWBBBWWWWWBBBBWB", "BBWWWWBWBBWWWBWBBBWWBBWBWWWWWWWWWBWWWWWBWWWBWWBWBB", "WWWBWBWBBWWBBBWBBWBBBWBBWWWWBWBBWBWBWBWWBWBBBWBBBB", "BBBWBWBWWBWBWWBBWWBBBBWWWBBWWWWBWBWWWWWBWWWWBBWBWB", "BWBWBBBBWWWWWWWWWWBBWBBBBWBWWWBWBWBBWBWWBBWWBBWBWB", "BWBWBBWBBWBBBWBBBWBWWWBBWWWBWWWBWBWBWBBBBBBWWWWWWW", "WBBBBWBBBWBBWBBWBWWBWBBBBBBBWWBBBWBBWWBWWWBWWWWBWB", "WBBWWBBBBBWBWBBWBWBBWBBWWWWWBBBWWBWWWWWBBWBWBWWWBW", "BBWBBWBBWBWBBWBWWWWWBWWWBWBBBWBBBWWBWBBBWWWBWWWWWB", "BWWWBWWWWBBWBBBWWBWBBWBWWBBWBBBWWBBWWBBWWWWWWWWWBB", "WWWWWBWBWWWBWBWBWWWBWBWWWWBBBWWBBBBBWBBWBBWWWWBBWW", "BWBBBWBWBBWWBBBBBBWBBBWBBBBWWWBWWBBBWWWBBWBWBBBBBW" };
    int maxStrokes = 214;
    assertEquals(118, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case74() {
    String[] picture = { "BBBBBWWWWBBWBWWWWBBBWWBWBBWBWBBBBWWWWBBBBBBBBBWBWB", "WBWBWWWWBWBWWWBBWWWBWWBWWBBWBWWWWWWBWWBWBBBWWWWBBB", "BBBBBBBBWBBBBWBWWWBWWWBWWBBWBWWBBWBWBBWBBWBBWWBBWW", "BBWWBBBWWWWWBBBWBBWBBBBWWWWWBWWBWBWWWBWBBBWBWBWWBB", "BBBBBWWBBBBWWBBWBBWWBWWBBBBBBBWWWBWWWWBBBWBBWWBBWW", "WBWBBWWBBWBBWWBBWWBWBBWWBWBWBBBWBWBBBWBBBBBBWBBWBW", "WBBWBWWBWWWWWBWBWBWBBBBBWWBBWBBBBBBBWBBWWBBWWBBBBB", "WWBWBBBWBWBWBWWBWBBBBBBBBWBWWBBBBWWBWBBWWWWWWBWBBW", "BBBBWWWBBWWBWBWWWWWBWWWWWBBBWWWWBBBBBWBBBWWBWWBWBW", "BBBBWWBBWWBBBBBBBBWWBWBWWWBBWBWWWBWWBBWWWBBBWWWBWB", "WWBBWWWWWBBWBBWWBBBBWBWWWBBWBWBWWBWWBWBBBBBBWBWWWB", "WBBBWWBBWWWBBBBWWWWBWBBWBBBBBBWWWBBBWWBBBWBBWWWBBW", "BBWBBWBWBBWWWWWWWWWBWBBWBBWBBBWBWWWBBBWWWBWBBWBWBW", "WBBBBWWBBWBWWBBWBBWBBBWWWBBBWBWBBBBBBWWWBWWBBWWWWB", "BBBWBBWBBBWBBBWWWBBBWBWWBWBBBWWBBWBWWBWWWWBWBBBWWB", "BBWBWBBBBBWWWWBBBWWWBBBBBBWWWWBBWBWWWWBBBBWWBWWBWW", "WBWBBBBWWWBBBWBWWWWBWWBBWWWWBWWWBWBBWWBBWWBBWWWBWW", "BWBBWBBWBBWBBBWWWBWBWWWWWBBWWBBWBBWBWWBWWBWBBBWBBW", "BWBBWBBBWBBBBBBWBBBBWWBBWWWWBBWBBBWBBBWWWBWBBBWWWW", "WWWWBBWWWWBBWWBBBWBWBWWBWBWWWBBWBWBWWBBBWWBBWBWBWB", "BBWWWWWWWBWWWWBWWWBBBWBWBWWBWBBBWWWBBWWWWWWWWBWBWB", "WWWBWWWWWWWWBWBWBBWBBBWBWBWBWBBWBWBBWWWWBBWBBBWWBW", "WBWWWBWBBWWBWBBBBWWBWWWBWBBWWBWBBWBBBWBBBBWWWBBWBW", "WWWBBBBWWBWBBBBWWWWWWBWWWWBBWWWWWBBWBBBBWBWBWBBWBB", "WBWWBWBBWWWBBWWBWBWWWBWWWBBBWWWWWWWWWBWWBBWWBBBWBW" };
    int maxStrokes = 141;
    assertEquals(298, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case75() {
    String[] picture = { "WBWBWBBWBWBBWBBBWWWWBBWWBBBWBBWBBBBWBWBBBBWBBBWBWB" };
    int maxStrokes = 173;
    assertEquals(0, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case76() {
    String[] picture = { "BWBWBBBWBWBWBBBWWBBWWWBWWWBWWBWWBWWWBWBWWWWWWBWWWB", "WBWBWWBWBWWWWWWBBBWBBWBBWBBWBBBWWBBWWBBWWBBWWBBBWW", "WWBWBBBWWBWBBWBWWBBBWBBBWBBWWWBBBBBBWWWBBWWBWBWBWB", "WWWBBBWWBBBWWBBBWBBBBWBBWWWWBWBBWBBBWWWBWBWWWBBBWW", "WWWWBWBBBBWBBBBWBWBWBWBBWWBBWBBBWBBWBBWWWWBWWBWWBB", "BWWBWWWBBBWBBWWWBWBBBWBWWBBWBBWBBBWWBWWWWBBWBWWWWB", "BWWBWBWWBWWWBBBBBBBBBWWBWBBWBBWWBBWBBBWWWBWBBWBBBB", "WWWBBBWBBBWWWWBWWBBWWBWBWWBWBBWWWBWBBBWBBWBBBWWBBB", "BWWBBWBBBBWWWBBWBWWWBBWBWWWBBBWWWBBWBWWBWWBBBBWWWW", "BBWWWBBWBWWBWBBWWWWWBBBBBBBWWWBBBWWBBWWBBBBBWWBWWB", "BWWWWBBWWBWWWBWWWBBWBBBBWWWWBWBWWBBWWWWWBBBWBBWBBW", "BWWBWWWWWBBBWWWWWBBWWWWWWWWBBBBWBWWBBBWWBWWWWBWBWW", "WWWBWBBWBWBBWBWBBBWWBBWWWBWWWBBWBWWBWWBWBWBWWWWWBW", "BBBWWWWWBBWWWWBBWWBWWWBWWWWBBWWWWBBBBBBWWBWWWWWWWW" };
    int maxStrokes = 118;
    assertEquals(127, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case77() {
    String[] picture = { "BWBBWBBBWBWWBWBBBWWBBBBWBWWBBBWWBBBBWWBWBBBWWBBBBB", "BBBBBBWWBWWWWBBBWWBWWWWBBWWBWBWWBWBWWBBBWBBBWBWBWB", "WBBBWBWBBBWBWBWBWBWWBWBBBWBBBWBBWBWWWBBWBWBWBWBWBW", "WBBWWBBBBBWBBBWBBBWWWBBBWWBWWBWWWBBWBWWWWBWBBWWBBB", "BBBWWBWWWWBWBWBBBBWBWWWBWWWBWBBBBBWBBBWWWWBWBBWWBB", "BBBWBWBBBBWWBBBBWWWBWBBWBBBBWWBBBBBWBWWBWWBWBWWWBB", "BWBBWWWWBWWBWBBWBWBWBBWWWBWBWWBBWWWBWWBBBBBBWWWWBW", "BBBBBBWWBBWWWBWWBBBWWWBWWBBWBWBBBBBWBWWBWBWWBBBBBB", "WBBWBWBWBWWBWBBBBWBWBBWWBWWWWWWBWBBBWWBWBBWBWBBWBW", "WWBBWBWWBWBWBBWBWBBBBWWWBWWBBWWWBWBWBWBBWBBBBWWBWW", "WWWBWBWBWBBBWBWWBBBBBWBWBWBBWBBBBWWWBWWBWWWWBWBBWB", "BWWWWBWBBBBWBBBBBWWWWWBBBWWBWWWBWBWBWBBWBBBWBWBWBB", "BWBBWWWBWWBBWWBBWWBBBWWWBBBWWBWWWBBBWBBBWWWBBWWBBB", "BBBWWWBWWBBBBBWWWBBBWBBWBBBBBWBWBBBWBBWBWWBBBWWBBW", "WBWBWWBWBWBWWBWWBWWBBBBWWBWBWBWWWWWWBWWWBWWBBWWBBB", "BWWBWWWWWBWWBBBBWBBBBWWBBWWWBBWWBBWWBBBBWWBBWBBWBW", "WBBWBWWBWBBBBBWBWWBBBBBBBBBWWBBBWBBBBBBWWBBBBBWBBW", "BBWBBWBWWBBWBBWWWWWWWWBBWBWBWBWBBBWWWWBWBWBBBWBBWB", "WBWWWWBBBWBWWWBWBWWBBWWWWWWBBBWWBBBWBWWWBWWWWBBWBW", "BBWWBWWWWBWBBWWWWBWBWBWBBBBBWBWBWBBBBBWWWWWWWWBWWW", "BWBWWWWWBBWWWWBWWWBBBWBBWWWBBBBBWWWWWWBBBBBBBWBBBB", "WWBWBBBBWBBWWWWWWWWBBWBBBWWBBWWWWWBBBBBBWBBBBBBBWB", "WWBWBBWWWBWWWWWWWWWWBBWWBWWBWWWWWBWWBWBBBWBWBBBWWB", "WWBBBWWBWWBBBBWWBWWBBBBBBWBWBWBWBWWWWBBBBBWWBBBWBB" };
    int maxStrokes = 245;
    assertEquals(187, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case78() {
    String[] picture = { "BBWBBBBBBBBBWWWWBBBWWWBWBWWWWBBWBWWBBBWWBBBBBBWWWW" };
    int maxStrokes = 165;
    assertEquals(0, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case79() {
    String[] picture = { "WBBWWBWBWBBBWBWWWBWWWBWBWWBWWBWWWWWWBWWWWWBBBWBWWB", "WBBBWWWBWBWBBWBWBWWWBBBBWWWBBWBWBBWWBWWBWBWBBBBBWW", "BWBWBBWWWBWWBWWBWWWBBBWWWBBWWBBBWBWWWWWBBWWBWWBWWB", "BWBBBBBBWWBWBWWBBWWWWWBBWBWWWWBWBBBBBBBBBWBWWBWBWB", "BBWBWWBBWWWWWBBBWBWBBWWWWBWBWBBBBWBBBWBWBWBBBBBBBB", "BBBBWWBBBWBWWBWWBWWBWWWBBBBWBWBBWWWWWWWWWBWWBBWWBW", "BBWWWWBWBWBBWWBBWWBWBWBBWWBBWWBBWBWWWWBWWWBBWWWBBW", "BBBWBWWBWBWWWWBWWWWBWBBBWBWBBWBBBWBWBBWBBWBWBWBWBB", "BWWWWWWBWBBBBBBBBWWWWBBWWBBWBBBBBWWWWWBWBWWBBBWWBB", "WWWWWBBBWWBBBBWWWBBWBBWWWWWBBBWWBBBWBBBWBBWWWWWBBW" };
    int maxStrokes = 124;
    assertEquals(67, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case80() {
    String[] picture = { "WBBWBBWBWBBBBBWBWWBBBBWWBWWBBBWWWWWWBBWBBWBBWBWWBB", "BBWBBWBWBWBBBWBBBBWBWWBBBBWWBWBBBWWBWWWBWBBBWBBBBW", "BWBWWWBWBWBBBWBWWWBWWBWWBBWWBWWWBWWBWBBWBBWWBWWBWB", "WBBBWWWBBWBWWWBBBWBWWWBWBBWBWWWBBBWWBBWWBBWBBWBBBB", "WBWBWWBBBWWBWBWBWWWWWBBBWBWWWWWWWWWBBBBWWWWWWBWBBW", "WBBWWWBWWBWBWBBBBWBBWWBWWBWBWWBBWWWWBBWBWBBWWBWBWW", "BWWBBWWBBWBBBBWBBBWBBWWWWWBWBBWWWBBBBWWBWWWWWWWWBW" };
    int maxStrokes = 147;
    assertEquals(21, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case81() {
    String[] picture = { "WBWBBWBBWBBWWWBWBBBBBWWWWBBWWBWBWWWWWBWBWWWBBBBBBB", "WWWBWWWWBWBWWBWWBBWBBWBWBWBWBBBBBBBWWBBBWWWBBWBBBB", "BWWWWBWBBBWBWBWWBWBBWBBBWBBBBBBBWBBBWWWBWBBBWBBWBB", "BBWWBBBBBWWWWWBWBBBWBWWWWWBBWBWWWBWWWWBBBWBBBWBBBW", "BWWWBWWWWWWBWBBBBBWWBBBBWWWBWBWBBBWWBBBWWBWBWWWBBB", "WBWBWWBBWWBWWBWWWWBWWWBBWWBBWBWWWWWBWBBBWBWBBBBWWB", "WBBBWBBWWBWBWBBWWWWBWBWWWWWWBWBWWBWWWWWWBBWWWWBBWW", "BBWBWWBBBBWWWWWBBBWBWWWBBBBBBBBWBWWBBBBBBBBWBBWBBW", "WWBBWBWWBBWBWWWBBBBBWWWBBBBWWBBBBWBWBWBBWWWWBBWWWW", "WBBBWBBBBWWBBWWWWWBWBBBBWWWBBBWBWBBWWBBBBBWBBWBWWB", "BBWWBWBBWBBWWWWBWWBWBBBWWBWBWWWWWWBWBWWWBWWWBBBBWW", "WBWBWWBWWBWWWBWWBWWWBWBBBWWWBBBBWWWBBWBBWBWWWWWBWB", "WBBWBBBBBBWWBWWBWBBWBBBWWBBWWBBBBWBBBBBBBBWBBWWBWB", "WWBBWBBBBWBBBBWWBWWBBBWWWWBWWBBWWWWBBWBWBWBBWBBBWB", "BWWBWBWBWWWWWWBWWBWBBWWBBBBBBWBWWBBBBBBBBBWWWWWWBW", "BWBWBBBBWWWBWWWWBWBWWBBWWWBBBWBBWWBWBWWBBBWWBWBWWW", "BWBBWBWBBBWBWBBBBBBBBBWWWBBWWBWWWBBBWBBWWBBBWBWWBW", "WBWWBWWBBWBBBWBBWBBWBBWWBWBWBBWBWBBWWBBWBBWWWBBWWB", "WBWWWWWBBBBBBWBBBBBWWBBWBWBBWWWBWWBWBBBBWWWWWWBBBW", "BWWBWBWWWWWBBBWBBWBWBBBBWBWBWBWBBWBBWWWWBBWWBWWWBW", "WBBBBWBWWWWBBBBWWWWWBWBWWWBBWBBWWBBBBWBWWBBWWWBWWW" };
    int maxStrokes = 293;
    assertEquals(118, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case82() {
    String[] picture = { "BWBWWWBWWWBWWWBWBWWWWWWBBWBBBBBBBBWBBWBBWWWBWBBWWW", "WBWWWWWBWWBBWBWWWBWBBBWWWBBWWBWBWWBWBWBWWWBWWWWBWB", "BWBWWBWBWWWWBWBBWWWWWWWWWWWBBBBWWBWBWBBWBWBWWBBWBW", "WWWBWBBWBBWWBWWBWBBBWBWBWBBBBWBWBWWWBBWWBWWWBBWBBW", "BWWWWBWWBWWBWBWBBWWBWBBBWWWBWWWBWWBWBBBBWBWWBBWWBB", "WWWBWBBBBWWBBBWWWBWWBBBBBBWBWWWBBBBBBWBBWWBBBWBBWW", "BBBBBWBBBBWBBBBWWBBWBWWWBWWWWWWWWWBBBWWBBBBWBWWBWW", "WWBBBBBBWBWBBBWWBWBBWWWBWBBWWWBBWBWBWWBWWWWWWBWBBW", "BWBBWBWBWBBBBBWBWWWBBWWWBBWBWBBWWBWBWWBBWBWBBBWWWB", "WWWBWWWBBWWBBBWBBBBBWWBWBBBWBWBBBWWBWWWBWBWWWWBWWW", "BBWBBWWWWBWWBWWWBWWBBBBWWBBBBWBWWWBWWWWWWBWBWWWWBB", "WBBWWWBBBWWBBBBBBWWWBBBBBWBBWBBWBBWWWWBWWWBWBBBBBW", "BBBWBBWWBBWBWWBWWWBWWWWWBBBBWWWBBBWBWWBBWWWWBBBBWW", "BBWBWBBBBBBBWBWWWBWWBWWBBBBBWBBBWWWWBBBBBWWBBBBWBW", "WWBBBBBBBBBBBBBBWWBWWWBWWBBBBBWWWWBWWWBWBBWBBBWWBB" };
    int maxStrokes = 114;
    assertEquals(140, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case83() {
    String[] picture = { "BWWWBBBBWWBBWWWBWBWWWBWWWWBBWBBWBWWWWWWWWWBWWBBBBB", "BWBBBWBBBWWBWBBWBBBWBBBBWWBBBBWBWWBBWWBWWWWBWBBWBW", "WBWWBBWWWWWBWBWWBBWBBBBWBBBWWBBWWWBBWBBBBWWBWWWWBW", "WBBWBBWWWWWWBBBBWWWBBBBWWWBBBBBBWWBWBWWWBWBBWBBBWB", "WBBBBWWBBBBWBBWWBWWBWBWBWBWBWWWWBBWBBWWWBBBWWWBBWW", "WWBWWWWBWBWWBBBWWWWBWWWBBWWBBBBBBWWWWBBWWWBWBWBWWW", "BBWBWBBBBWBBWBWBBWBWBBBBWWBBWWBBBWWWWBBBBBWBWWWBWB", "BBBBWWWBWWWWBBBBBWWWWBWWBWBWWBWWWBWWWBWBWWBWWWWBWB", "WWBBWBBWBWBBBWBWBBWWWWBWBBBBBWWBWWBBBBBBWWWBWBBWWB", "BWBWBWBWBBBWWBWBBWBBWBWWWBBBWWBWBWWBBWWBBWWWWBBBWB", "WBBWWWBWWWBWWBBWWBBWWWBBBWWBWWBBBWBBBBWWBWBBWBBBBB", "BWWBBBWWWWBBWWWBWBBBBBBWWWBBWBWBBWWWWWWBBBBBBWBWWW", "BBBWBBBBBWBWBBWWBWBBBWWWBWBWWWWBWWBWWBWBBWBWWWWBBB", "BBWWBBBWBWBWBBWBWWBWWWBWWBWBBWWBBWWBWBWBBWWBBWWWWW", "BWWBBWWWBWBBBWBBBBBWWWWWWBWBBBWBWBBBWBBWWWWWBBWWBB", "BBBWBWBBBBBWWWWBBWBWWWWWBWBBBWWWWWBWBBBWBWWWWBWBWW", "BBBWWBBBBWWWWWBWWWWBBBWBWWBBBBWBBWWBWBWBBWBBWWBBBB", "WBWWBBBBWWWWBWWBBWWBWBWWWBBWWBWWWBWBWWWWWWWBBWBWBB", "WWBBBBWWBBBBWWBBBBBWBBBWWBBBBBWWWBWWWBBWWBWBWBBBBW", "BBWBBWBBBBWBWWWBWBBWBWWWBBWWBWWBWBBWBWWWWBWBBBWWBB" };
    int maxStrokes = 254;
    assertEquals(124, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case84() {
    String[] picture = { "WWBBBBBBBBWWWWBBWBBWBWBWWWBBBBWWWBWBWWBBBWWBWWBWBW", "WWWBBWWWBWBWBBWWWWBBBBBBWBWWBBBWBWBBBWWWBWWWWWWWBW", "BWWBBBBBWBWBBWWBBWBWWWWWWWWWWBWBBWBBBWBBWWWBBWBBBB", "BWWWBBWWWWBBWWWWWBWBBBBBWWBWWBBBWBBBBWBWBWWWBBWBBW", "BBBWBWWWBBBWWWWBBBWBBBBWWBBWWWWWBWWWBBBWBWWBWBWWWB", "BBBWWBWBBBWBBWBBWBBBWBWWWWBWBWBBBBBWBWBBWWWWBBBBWB", "BBWWBWWBWBWWWWWWBBBBBBWWBBWBWWWBBBBWWWBWWBBWBWWWBB", "WWWWWWWWBWBBBWWWBWWBWWWBBWWBBBBWBBWBBBBWWWWWBWWBWB", "BBBBWBWWWWBWWWWBBWWWBWBWBWWWWBWBWWWWWWWBWWWBBBBWWB", "BWWWWWWWWBBWBBBWBWWBBWWBBWWWWWBBWBWBWWWBWBWBWBWBBB" };
    int maxStrokes = 183;
    assertEquals(29, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case85() {
    String[] picture = { "B" };
    int maxStrokes = 1;
    assertEquals(0, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case86() {
    String[] picture = { "W" };
    int maxStrokes = 3000;
    assertEquals(0, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case87() {
    String[] picture = {};
    int maxStrokes = 23;
    assertEquals(1350, minipaint.leastBad(picture, maxStrokes));
  }

  @Test
  public void case88() {
    String[] picture = {};
    int maxStrokes = 1000;
    assertEquals(750, minipaint.leastBad(picture, maxStrokes));
  }

}
