!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
A	src/graph/PathFinding.java	/^  static public final int A = 1;$/;"	f	class:PathFinding
A	src/math/Hangman42.java	/^  static public final int A = 97;$/;"	f	class:Hangman42
ADJ	src/graph/RevolvingDoors.java	/^  static public final int[] ADJ = { -1, 0, 0, -1, 0, 1, 1, 0 };$/;"	f	class:RevolvingDoors
AdjacentSwaps	src/dynamic/AdjacentSwaps.java	/^public class AdjacentSwaps {$/;"	c
AllTests	test/AllTests.java	/^public class AllTests { }$/;"	c
AntiChess	src/recursion/AntiChess.java	/^public class AntiChess {$/;"	c
AntiMatter	src/dynamic/AntiMatter.java	/^public class AntiMatter {$/;"	c
AvoidRoads	src/dp/AvoidRoads.java	/^public class AvoidRoads {$/;"	c
AvoidRoadsTest	test/dp/AvoidRoadsTest.java	/^public class AvoidRoadsTest {$/;"	c
B	src/dynamic/ChessKnight.java	/^  static public final int B = 8;$/;"	f	class:ChessKnight
B	src/graph/PathFinding.java	/^  static public final int B = 2;$/;"	f	class:PathFinding
BadNeighbors	src/dp/BadNeighbors.java	/^public class BadNeighbors {$/;"	c
BadNeighborsTest	test/dp/BadNeighborsTest.java	/^public class BadNeighborsTest {$/;"	c
BagOfDevouringTest	test/easy/BagOfDevouringTest.java	/^public class BagOfDevouringTest {$/;"	c
BaseballLineup	src/math/BaseballLineup.java	/^public class BaseballLineup {$/;"	c
BenfordsLaw	src/math/BenfordsLaw.java	/^public class BenfordsLaw {$/;"	c
BridgeCrossing	src/bkt/BridgeCrossing.java	/^public class BridgeCrossing {$/;"	c
BridgeCrossingTest	test/bkt/BridgeCrossingTest.java	/^public class BridgeCrossingTest {$/;"	c
BusinessTasks	src/easy/BusinessTasks.java	/^public class BusinessTasks {$/;"	c
BusinessTasksTest	test/easy/BusinessTasksTest.java	/^  public BusinessTasksTest(String name) {$/;"	m	class:BusinessTasksTest
BusinessTasksTest	test/easy/BusinessTasksTest.java	/^public class BusinessTasksTest extends TestCase {$/;"	c
C	src/dynamic/Flags.java	/^  int C;          \/\/ number of colors that can be followed by others$/;"	f	class:Flags
C	src/geometry/RemoteRover.java	/^  static public final double C = 1.0 - R;$/;"	f	class:RemoteRover
C	src/graph/Parking.java	/^  int C;      \/\/ number of cars$/;"	f	class:Parking
ChessKnight	src/dynamic/ChessKnight.java	/^public class ChessKnight {$/;"	c
Circuits	src/graph/Circuits.java	/^public class Circuits {$/;"	c
CircuitsTest	test/graph/CircuitsTest.java	/^public class CircuitsTest {$/;"	c
ColorfulMaze	src/dynamic/ColorfulMaze.java	/^public class ColorfulMaze {$/;"	c
ColorfulMazeTest	test/dynamic/ColorfulMazeTest.java	/^public class ColorfulMazeTest {$/;"	c
ColorfulMazeTwo	src/dynamic/ColorfulMazeTwo.java	/^public class ColorfulMazeTwo {$/;"	c
Country	src/easy/MedalTable.java	/^    public Country(String name) {$/;"	m	class:MedalTable.Country
Country	src/easy/MedalTable.java	/^  private class Country implements Comparable<Country>{$/;"	c	class:MedalTable
CssRules	src/dynamic/CssRules.java	/^public class CssRules {$/;"	c
D	src/dynamic/NumbersAndMatches.java	/^    int[][] D = new int[][] {$/;"	f	class:NumbersAndMatches
DAMatrix	src/graph/DrivingAround.java	/^class DAMatrix {$/;"	c
DELTA	src/math/BenfordsLaw.java	/^  static public final double DELTA = 0.000001;$/;"	f	class:BenfordsLaw
DELTA	test/dynamic/ColorfulMazeTest.java	/^  double DELTA = 1.0e-09;$/;"	f	class:ColorfulMazeTest
DELTA	test/easy/BagOfDevouringTest.java	/^  double DELTA = 1.0e-09;$/;"	f	class:BagOfDevouringTest
DELTA	test/easy/TableSeatingTest.java	/^  final static double DELTA = 1e-9;$/;"	f	class:TableSeatingTest
DOOR	src/graph/RevolvingDoors.java	/^  static public final int DOOR = 0;$/;"	f	class:RevolvingDoors
DOOR_DOWN	src/graph/RevolvingDoors.java	/^  static public final int DOOR_DOWN = -6;$/;"	f	class:RevolvingDoors
DOOR_H	src/graph/RevolvingDoors.java	/^  static public final int DOOR_H = -100;$/;"	f	class:RevolvingDoors
DOOR_LEFT	src/graph/RevolvingDoors.java	/^  static public final int DOOR_LEFT = -7;$/;"	f	class:RevolvingDoors
DOOR_RIGHT	src/graph/RevolvingDoors.java	/^  static public final int DOOR_RIGHT = -8;$/;"	f	class:RevolvingDoors
DOOR_UP	src/graph/RevolvingDoors.java	/^  static public final int DOOR_UP = -5;$/;"	f	class:RevolvingDoors
DOOR_V	src/graph/RevolvingDoors.java	/^  static public final int DOOR_V = -200;$/;"	f	class:RevolvingDoors
DOWN_LEFT	src/graph/RevolvingDoors.java	/^  static public final int DOWN_LEFT = 1 << 2;$/;"	f	class:RevolvingDoors
DOWN_RIGHT	src/graph/RevolvingDoors.java	/^  static public final int DOWN_RIGHT = 1 << 1;$/;"	f	class:RevolvingDoors
DirectoryTree	src/stringm/DirectoryTree.java	/^public class DirectoryTree {$/;"	c
Disaster	src/math/Disaster.java	/^public class Disaster {$/;"	c
DivisorInc	src/graph/DivisorInc.java	/^public class DivisorInc {$/;"	c
DrivingAround	src/graph/DrivingAround.java	/^public class DrivingAround {$/;"	c
DungeonEscape	src/graph/DungeonEscape.java	/^public class DungeonEscape {$/;"	c
DungeonEscapeTest	test/graph/DungeonEscapeTest.java	/^public class DungeonEscapeTest {$/;"	c
EMPTY	src/dynamic/ColorfulMaze.java	/^    final int EMPTY = 7;$/;"	f	class:ColorfulMaze
EMPTY	src/graph/RevolvingDoors.java	/^  static public final int EMPTY = -1;$/;"	f	class:RevolvingDoors
END	src/graph/RevolvingDoors.java	/^  static public final int END = -10;$/;"	f	class:RevolvingDoors
Escape	src/graph/Escape.java	/^public class Escape {$/;"	c
EscapeTest	test/graph/EscapeTest.java	/^public class EscapeTest {$/;"	c
F	src/graph/IslandFerries.java	/^  int F = 0;$/;"	f	class:IslandFerries
FairWorkload	src/easy/FairWorkload.java	/^public class FairWorkload {$/;"	c
Fib	src/easy/Fib.java	/^public class Fib {$/;"	c
FibTest	test/easy/FibTest.java	/^public class FibTest {$/;"	c
Flags	src/dynamic/Flags.java	/^public class Flags {$/;"	c
FloatingMedian	src/sorting/FloatingMedian.java	/^public class FloatingMedian {$/;"	c
FlowerGarden	src/dp/FlowerGarden.java	/^public class FlowerGarden {$/;"	c
FlowerGardenTest	test/dp/FlowerGardenTest.java	/^public class FlowerGardenTest {$/;"	c
FoxAverageSequence	src/dynamic/FoxAverageSequence.java	/^public class FoxAverageSequence {$/;"	c
GameOfLifeDivOne	src/dp/GameOfLifeDivOne.java	/^public class GameOfLifeDivOne {$/;"	c
GameOfLifeDivOneTest	test/dp/GameOfLifeDivOneTest.java	/^public class GameOfLifeDivOneTest {$/;"	c
GetKey	src/dp/KiloManX.java	/^  String GetKey(int[] xs) {$/;"	m	class:KiloManX
Gifts	src/dynamic/Gifts.java	/^public class Gifts {$/;"	c
Graduation	src/graph/Graduation.java	/^public class Graduation {$/;"	c
GrafixMask	src/graph/GrafixMask.java	/^public class GrafixMask {$/;"	c
GrafixMaskTest	test/graph/GrafixMaskTest.java	/^public class GrafixMaskTest {$/;"	c
H	src/dynamic/WeirdTimes.java	/^    int H = 24;$/;"	f	class:WeirdTimes
Hangman42	src/math/Hangman42.java	/^public class Hangman42 {$/;"	c
Hungarian	src/dynamic/RadarGuns.java	/^  public Hungarian(int[][] cost) {$/;"	m	class:Hungarian
Hungarian	src/dynamic/RadarGuns.java	/^class Hungarian {$/;"	c
I	src/graph/IslandFerries.java	/^  int I = 0;$/;"	f	class:IslandFerries
INV2	src/dynamic/Nim.java	/^  long INV2;$/;"	f	class:Nim
IntegerList	src/graph/Parking.java	/^  class IntegerList extends LinkedList<Integer> { }$/;"	c	class:Parking
Interval	src/dp/WeightedIntervalScheduling.java	/^    public Interval(String[] values) {$/;"	m	class:WeightedIntervalScheduling.Interval
Interval	src/dp/WeightedIntervalScheduling.java	/^    public Interval(int start, int end, int weight) {$/;"	m	class:WeightedIntervalScheduling.Interval
Interval	src/dp/WeightedIntervalScheduling.java	/^  class Interval implements Comparable<Interval> {$/;"	c	class:WeightedIntervalScheduling
IslandFerries	src/graph/IslandFerries.java	/^public class IslandFerries {$/;"	c
IslandFerriesTest	test/graph/IslandFerriesTest.java	/^public class IslandFerriesTest {$/;"	c
Jewelry	src/dp/Jewelry.java	/^public class Jewelry {$/;"	c
JewelryTest	test/dp/JewelryTest.java	/^public class JewelryTest {$/;"	c
K	src/dp/GameOfLifeDivOne.java	/^  int K;$/;"	f	class:GameOfLifeDivOne
K	src/dynamic/NumbersAndMatches.java	/^    int K;$/;"	f	class:NumbersAndMatches
K	src/dynamic/TheCowDivTwo.java	/^  int K;$/;"	f	class:TheCowDivTwo
K	src/dynamic/WeirdTimes.java	/^    int K;$/;"	f	class:WeirdTimes
KiloManX	src/dp/KiloManX.java	/^public class KiloManX {$/;"	c
KiloManX2	src/dp/KiloManX2.java	/^public class KiloManX2 {$/;"	c
KiloManX2Test	test/dp/KiloManX2Test.java	/^public class KiloManX2Test {$/;"	c
KiloManX3	src/graph/KiloManX3.java	/^public class KiloManX3 {$/;"	c
KiloManX3Test	test/graph/KiloManX3Test.java	/^public class KiloManX3Test {$/;"	c
KiloManXTest	test/dp/KiloManXTest.java	/^public class KiloManXTest {$/;"	c
KingOfTheCourt	src/math/KingOfTheCourt.java	/^public class KingOfTheCourt {$/;"	c
L	src/dynamic/Nim.java	/^  int L;$/;"	f	class:Nim
LDIR	src/graph/RoboCourier.java	/^  static public final int[] LDIR = { -1, -1, -1, -1, -1, 9, 20, -1, -1, 24, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, 10 };$/;"	f	class:RoboCourier
LEFT_BTM	src/graph/RevolvingDoors.java	/^  static public final int LEFT_BTM = 1 << 6;$/;"	f	class:RevolvingDoors
LEFT_TOP	src/graph/RevolvingDoors.java	/^  static public final int LEFT_TOP = 1 << 8;$/;"	f	class:RevolvingDoors
LIM	src/math/KingOfTheCourt.java	/^  static public final int LIM = 100;$/;"	f	class:KingOfTheCourt
LargestGap	src/easy/LargestGap.java	/^public class LargestGap {$/;"	c
M	src/dynamic/Flags.java	/^  double[][] M;   \/\/ colors matrix$/;"	f	class:Flags
M	src/dynamic/MiniPaint.java	/^  int M;    \/\/ col count$/;"	f	class:MiniPaint
M	src/dynamic/StarAdventure.java	/^  int M;$/;"	f	class:StarAdventure
M	src/graph/Parking.java	/^  int M;$/;"	f	class:Parking
M	src/math/Hangman42.java	/^  int M;    \/\/ number of letters per word$/;"	f	class:Hangman42
M	src/sorting/FloatingMedian.java	/^  int M = 65536;$/;"	f	class:FloatingMedian
MAXG	src/dynamic/Gifts.java	/^    int MAXG = 16;$/;"	f	class:Gifts
MLBRecord	src/greedy/MLBRecord.java	/^public class MLBRecord {$/;"	c
MOD	src/dynamic/FoxAverageSequence.java	/^  static public final long MOD = 1000000007;$/;"	f	class:FoxAverageSequence
MOD	src/dynamic/Nim.java	/^  static final long MOD = 1000000007L;$/;"	f	class:Nim
MOD	src/dynamic/NumberPyramids.java	/^    final int MOD = 1000000009;$/;"	f	class:NumberPyramids
MOD	src/dynamic/P8XCoinChange.java	/^  static public final long MOD = 1000003;$/;"	f	class:P8XCoinChange
MOD	src/dynamic/TheCowDivTwo.java	/^  final long MOD = 1000000007L;$/;"	f	class:TheCowDivTwo
MakeSquare	src/dynamic/MakeSquare.java	/^public class MakeSquare {$/;"	c
Marketing	src/graph/Marketing.java	/^public class Marketing {$/;"	c
MarketingTest	test/graph/MarketingTest.java	/^public class MarketingTest {$/;"	c
Matrix	src/dynamic/P8XCoinChange.java	/^class Matrix {$/;"	c
Maze	src/graph/RevolvingDoors.java	/^    public Maze(int[][] maze, int level, int start, int end) {$/;"	m	class:RevolvingDoors.Maze
Maze	src/graph/RevolvingDoors.java	/^  class Maze {$/;"	c	class:RevolvingDoors
MedalTable	src/easy/MedalTable.java	/^public class MedalTable {$/;"	c
MedalTableTest	test/easy/MedalTableTest.java	/^public class MedalTableTest {$/;"	c
MiniPaint	src/dynamic/MiniPaint.java	/^public class MiniPaint {$/;"	c
MiniPaintTest	test/dynamic/MiniPaint2Test.java	/^public class MiniPaintTest {$/;"	c
MiniPaintTest	test/dynamic/MiniPaintTest.java	/^public class MiniPaintTest {$/;"	c
N	src/dp/GameOfLifeDivOne.java	/^  int N;$/;"	f	class:GameOfLifeDivOne
N	src/dynamic/Flags.java	/^  int N;          \/\/ number of colors$/;"	f	class:Flags
N	src/dynamic/MiniPaint.java	/^  int N;    \/\/ row count$/;"	f	class:MiniPaint
N	src/dynamic/Nim.java	/^  int N;$/;"	f	class:Nim
N	src/dynamic/StarAdventure.java	/^  int N;$/;"	f	class:StarAdventure
N	src/dynamic/TheCowDivTwo.java	/^  int N;$/;"	f	class:TheCowDivTwo
N	src/dynamic/WeirdTimes.java	/^    int N;$/;"	f	class:WeirdTimes
N	src/dynamic/YetAnotherORProblem.java	/^  int N;$/;"	f	class:YetAnotherORProblem
N	src/graph/Circuits.java	/^  static public final int N = 64;$/;"	f	class:Circuits
N	src/graph/Escape.java	/^  static public final int N = 501;$/;"	f	class:Escape
N	src/graph/IslandFerries.java	/^  int N = 0;$/;"	f	class:IslandFerries
N	src/graph/Marketing.java	/^  static public final int N = 64;$/;"	f	class:Marketing
N	src/graph/Parking.java	/^  int N;$/;"	f	class:Parking
N	src/math/Disaster.java	/^  int N;$/;"	f	class:Disaster
N	src/math/Hangman42.java	/^  int N;    \/\/ number of words$/;"	f	class:Hangman42
N	src/math/KingOfTheCourt.java	/^  int N;$/;"	f	class:KingOfTheCourt
Nim	src/dynamic/Nim.java	/^public class Nim {$/;"	c
Node	src/dp/KiloManX.java	/^    public Node(int[] values, int[] weight, int cost) {$/;"	m	class:KiloManX.Node
Node	src/dp/KiloManX.java	/^  class Node {$/;"	c	class:KiloManX
Node	src/dynamic/Gifts.java	/^        public Node(int x, int y, int px, int py, int gifts, int time) {$/;"	m	class:Gifts.Node
Node	src/dynamic/Gifts.java	/^    class Node implements Comparable<Node> {$/;"	c	class:Gifts
Node	src/dynamic/MiniPaint.java	/^    public Node(int totPainted, int row, int curStrokes, int totStrokes) {$/;"	m	class:MiniPaint.Node
Node	src/dynamic/MiniPaint.java	/^  class Node implements Comparable<Node> {$/;"	c	class:MiniPaint
Node	src/graph/DivisorInc.java	/^    public Node(int m, int c) {$/;"	m	class:DivisorInc.Node
Node	src/graph/DivisorInc.java	/^  class Node {$/;"	c	class:DivisorInc
Node	src/graph/DungeonEscape.java	/^    public Node(int x, int y, int time) {$/;"	m	class:DungeonEscape.Node
Node	src/graph/DungeonEscape.java	/^  class Node {$/;"	c	class:DungeonEscape
Node	src/graph/Escape.java	/^    public Node(int x, int y, int cost) {$/;"	m	class:Escape.Node
Node	src/graph/Escape.java	/^  class Node {$/;"	c	class:Escape
Node	src/graph/GrafixMask.java	/^    public Node(int x, int y) {$/;"	m	class:GrafixMask.Node
Node	src/graph/GrafixMask.java	/^  class Node {$/;"	c	class:GrafixMask
Node	src/graph/IslandFerries.java	/^    public Node(int island, int cost) {$/;"	m	class:IslandFerries.Node
Node	src/graph/IslandFerries.java	/^    public Node(int island, int cost, int f1, int c1) {$/;"	m	class:IslandFerries.Node
Node	src/graph/IslandFerries.java	/^    public Node(int island, int cost, int f1, int c1, int f2, int c2) {$/;"	m	class:IslandFerries.Node
Node	src/graph/IslandFerries.java	/^  class Node implements Comparable<Node> {$/;"	c	class:IslandFerries
Node	src/graph/KiloManX3.java	/^    public Node(int weight, int cost) {$/;"	m	class:KiloManX3.Node
Node	src/graph/KiloManX3.java	/^  class Node implements Comparable<Node>{$/;"	c	class:KiloManX3
Node	src/graph/Parking.java	/^    public Node(int x, int y, int time) {$/;"	m	class:Parking.Node
Node	src/graph/Parking.java	/^  class Node {$/;"	c	class:Parking
Node	src/graph/PathFinding.java	/^    public Node(int xa, int ya, int xb, int yb, int count) {$/;"	m	class:PathFinding.Node
Node	src/graph/PathFinding.java	/^  class Node {$/;"	c	class:PathFinding
Node	src/graph/RoadReconstruction.java	/^    public Node(String name, int cost) {$/;"	m	class:RoadReconstruction.Node
Node	src/graph/RoadReconstruction.java	/^  class Node implements Comparable<Node> {$/;"	c	class:RoadReconstruction
Node	src/graph/RoboCourier.java	/^    public Node(int x, int y) {$/;"	m	class:RoboCourier.Node
Node	src/graph/RoboCourier.java	/^    public Node(int x, int y, int dir) {$/;"	m	class:RoboCourier.Node
Node	src/graph/RoboCourier.java	/^  class Node implements Comparable<Node> {$/;"	c	class:RoboCourier
Node	src/math/Disaster.java	/^  class Node {$/;"	c	class:Disaster
Node	src/recursion/PermissionTree.java	/^    public Node(int index, int parent) {$/;"	m	class:PermissionTree.Node
Node	src/recursion/PermissionTree.java	/^  class Node {$/;"	c	class:PermissionTree
Node	src/recursion/RedBlack.java	/^  class Node {$/;"	c	class:RedBlack
Node	src/stringm/DirectoryTree.java	/^    public Node(String name, int index) {$/;"	m	class:DirectoryTree.Node
Node	src/stringm/DirectoryTree.java	/^  class Node {$/;"	c	class:DirectoryTree
NumberPyramids	src/dynamic/NumberPyramids.java	/^public class NumberPyramids {$/;"	c
NumbersAndMatches	src/dynamic/NumbersAndMatches.java	/^public class NumbersAndMatches {$/;"	c
P	src/recursion/AntiChess.java	/^  int P;$/;"	f	class:AntiChess
P1	src/dynamic/StarAdventure.java	/^  int[][] P1;$/;"	f	class:StarAdventure
P2	src/dynamic/StarAdventure.java	/^  int[][] P2;$/;"	f	class:StarAdventure
P3	src/dynamic/StarAdventure.java	/^  int[][] P3;$/;"	f	class:StarAdventure
P8XCoinChange	src/dynamic/P8XCoinChange.java	/^public class P8XCoinChange {$/;"	c
PackingShapes	src/geometry/PackingShapes.java	/^public class PackingShapes {$/;"	c
Parking	src/graph/Parking.java	/^public class Parking {$/;"	c
PathFinding	src/graph/PathFinding.java	/^public class PathFinding {$/;"	c
PathFindingTest	test/graph/PathFindingTest.java	/^public class PathFindingTest {$/;"	c
PermissionTree	src/recursion/PermissionTree.java	/^public class PermissionTree {$/;"	c
Piece	src/easy/LargestGap.java	/^        public Piece(int index, int length, boolean block) {$/;"	m	class:LargestGap.Piece
Piece	src/easy/LargestGap.java	/^    class Piece {$/;"	c	class:LargestGap
PrimePalindromic	src/easy/PrimePalindromic.java	/^public class PrimePalindromic {$/;"	c
Pt	src/dynamic/ColorfulMaze.java	/^        public Pt(int r, int c) {$/;"	m	class:ColorfulMaze.Pt
Pt	src/dynamic/ColorfulMaze.java	/^    class Pt {$/;"	c	class:ColorfulMaze
QuickSums	src/dp/QuickSums.java	/^public class QuickSums {$/;"	c
QuickSumsTest	test/dp/QuickSumsTest.java	/^public class QuickSumsTest {$/;"	c
R	src/dynamic/YetAnotherORProblem.java	/^  long[] R;$/;"	f	class:YetAnotherORProblem
R	src/geometry/RemoteRover.java	/^  static public final double R = 0.61803399;$/;"	f	class:RemoteRover
R	src/sorting/FloatingMedian.java	/^  int R = 17;$/;"	f	class:FloatingMedian
RDIR	src/graph/RoboCourier.java	/^  static public final int[] RDIR = { -1, -1, -1, -1, -1, 20, 10, -1, -1, 5, 24, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6, -1, -1, -1, 9 };$/;"	f	class:RoboCourier
RIGHT_BTM	src/graph/RevolvingDoors.java	/^  static public final int RIGHT_BTM = 1 << 5;$/;"	f	class:RevolvingDoors
RIGHT_TOP	src/graph/RevolvingDoors.java	/^  static public final int RIGHT_TOP = 1 << 7;$/;"	f	class:RevolvingDoors
RadarGuns	src/dynamic/RadarGuns.java	/^public class RadarGuns {$/;"	c
RandomSort	src/dynamic/RandomSort.java	/^public class RandomSort {$/;"	c
Rationalization	src/easy/Rationalization.java	/^public class Rationalization {$/;"	c
RedBlack	src/recursion/RedBlack.java	/^public class RedBlack {$/;"	c
RemoteRover	src/geometry/RemoteRover.java	/^public class RemoteRover {$/;"	c
Result	src/dynamic/CssRules.java	/^    public Result(Tag tag, String rest) {$/;"	m	class:CssRules.Result
Result	src/dynamic/CssRules.java	/^  class Result {$/;"	c	class:CssRules
RevolvingDoors	src/graph/RevolvingDoors.java	/^public class RevolvingDoors {$/;"	c
RevolvingDoorsTest	test/graph/RevolvingDoorsTest.java	/^public class RevolvingDoorsTest {$/;"	c
RoadReconstruction	src/graph/RoadReconstruction.java	/^public class RoadReconstruction {$/;"	c
RoboCourier	src/graph/RoboCourier.java	/^public class RoboCourier {$/;"	c
RoboCourierTest	test/graph/RoboCourierTest.java	/^public class RoboCourierTest {$/;"	c
RotatingTriangles	src/dynamic/RotatingTriangles.java	/^public class RotatingTriangles {$/;"	c
Runner	test/Runner.java	/^public class Runner {$/;"	c
S	src/dynamic/MiniPaint.java	/^  int S;    \/\/ max strokes$/;"	f	class:MiniPaint
S	src/dynamic/RadarGuns.java	/^  boolean[] S;$/;"	f	class:Hungarian
S	src/graph/Parking.java	/^  int S;      \/\/ number of parking spots$/;"	f	class:Parking
SEEN	src/graph/RevolvingDoors.java	/^  static public final int SEEN = -4;$/;"	f	class:RevolvingDoors
START	src/graph/RevolvingDoors.java	/^  static public final int START = -3;$/;"	f	class:RevolvingDoors
ShortPalindromes	src/dp/ShortPalindromes.java	/^public class ShortPalindromes {$/;"	c
ShortPalindromesTest	test/dp/ShortPalindromesTest.java	/^public class ShortPalindromesTest {$/;"	c
SmartWordToy	src/graph/SmartWordToy.java	/^public class SmartWordToy {$/;"	c
SmartWordToyTest	test/graph/SmartWordToyTest.java	/^public class SmartWordToyTest {$/;"	c
StarAdventure	src/dynamic/StarAdventure.java	/^public class StarAdventure {$/;"	c
State	src/bkt/BridgeCrossing.java	/^    public State(int[] times) {$/;"	m	class:BridgeCrossing.State
State	src/bkt/BridgeCrossing.java	/^  class State {$/;"	c	class:BridgeCrossing
StringComparator	src/dp/ShortPalindromes.java	/^  class StringComparator implements Comparator<String> {$/;"	c	class:ShortPalindromes
StripePainter	src/dp/StripePainter.java	/^public class StripePainter {$/;"	c
StripePainterTest	test/dp/StripePainterTest.java	/^public class StripePainterTest {$/;"	c
T	src/dp/GameOfLifeDivOne.java	/^  int T;$/;"	f	class:GameOfLifeDivOne
T	src/dynamic/RadarGuns.java	/^  boolean[] T;$/;"	f	class:Hungarian
TableSeating	src/easy/TableSeating.java	/^public class TableSeating  {$/;"	c
TableSeatingTest	test/easy/TableSeatingTest.java	/^public class TableSeatingTest  {$/;"	c
Tag	src/dynamic/CssRules.java	/^    public Tag(String name, String id, String color) {$/;"	m	class:CssRules.Tag
Tag	src/dynamic/CssRules.java	/^  class Tag {$/;"	c	class:CssRules
TallPeople	src/easy/TallPeople.java	/^public class TallPeople  {$/;"	c
TallPeopleTest	test/easy/TallPeopleTest.java	/^public class TallPeopleTest {$/;"	c
Team	src/greedy/MLBRecord.java	/^    public Team(int index, int lo) {$/;"	m	class:MLBRecord.Team
Team	src/greedy/MLBRecord.java	/^  class Team implements Comparable<Team> {$/;"	c	class:MLBRecord
TeamBuilder	src/graph/TeamBuilder.java	/^public class TeamBuilder {$/;"	c
TestScores	src/math/TestScores.java	/^public class TestScores {$/;"	c
TheCowDivTwo	src/dynamic/TheCowDivTwo.java	/^public class TheCowDivTwo {$/;"	c
TheEasyChase	src/dynamic/TheEasyChase.java	/^public class TheEasyChase {$/;"	c
TheProgrammingContestDivOneTest	test/dynamic/TheProgrammingContestDivOneTest.java	/^public class TheProgrammingContestDivOneTest {$/;"	c
TheSumOfLuckyNumbers	src/dynamic/TheSumOfLuckyNumbers.java	/^public class TheSumOfLuckyNumbers {$/;"	c
Ticket	src/graph/IslandFerries.java	/^    public Ticket(int ferry, int cost) {$/;"	m	class:IslandFerries.Ticket
Ticket	src/graph/IslandFerries.java	/^  class Ticket {$/;"	c	class:IslandFerries
UNK	src/dynamic/TheEasyChase.java	/^    int UNK  = 987654321;$/;"	f	class:TheEasyChase
UP_LEFT	src/graph/RevolvingDoors.java	/^  static public final int UP_LEFT = 1 << 4;$/;"	f	class:RevolvingDoors
UP_RIGHT	src/graph/RevolvingDoors.java	/^  static public final int UP_RIGHT = 1 << 3;$/;"	f	class:RevolvingDoors
Vertex	src/graph/Parking.java	/^    public Vertex(int id, Vertex parent) {$/;"	m	class:Parking.Vertex
Vertex	src/graph/Parking.java	/^  class Vertex {$/;"	c	class:Parking
WALL	src/graph/RevolvingDoors.java	/^  static public final int WALL = -2;$/;"	f	class:RevolvingDoors
WeightedIntervalScheduling	src/dp/WeightedIntervalScheduling.java	/^public class WeightedIntervalScheduling {$/;"	c
WeightedIntervalSchedulingTest	test/dp/WeightedIntervalSchedulingTest.java	/^public class WeightedIntervalSchedulingTest {$/;"	c
WeirdTimes	src/dynamic/WeirdTimes.java	/^public class WeirdTimes {$/;"	c
Word	src/graph/SmartWordToy.java	/^    public Word(String word, int level) {$/;"	m	class:SmartWordToy.Word
Word	src/graph/SmartWordToy.java	/^  class Word {$/;"	c	class:SmartWordToy
X	src/graph/PathFinding.java	/^  static public final int X = 3;$/;"	f	class:PathFinding
YetAnotherORProblem	src/dynamic/YetAnotherORProblem.java	/^public class YetAnotherORProblem {$/;"	c
Z	src/math/Hangman42.java	/^  static public final int Z = 122 - A + 1;$/;"	f	class:Hangman42
ZigZag	src/dp/ZigZag.java	/^public class ZigZag {$/;"	c
ZigZagTest	test/dp/ZigZagTest.java	/^public class ZigZagTest {$/;"	c
_b	src/easy/MedalTable.java	/^    int _b;$/;"	f	class:MedalTable.Country
_calc	test/bkt/BridgeCrossingTest.java	/^  BridgeCrossing _calc = new BridgeCrossing();$/;"	f	class:BridgeCrossingTest
_calc	test/dp/AvoidRoadsTest.java	/^  AvoidRoads _calc = new AvoidRoads();$/;"	f	class:AvoidRoadsTest
_calc	test/dp/BadNeighborsTest.java	/^  BadNeighbors _calc = new BadNeighbors();$/;"	f	class:BadNeighborsTest
_calc	test/dp/FlowerGardenTest.java	/^  FlowerGarden _calc = new FlowerGarden();$/;"	f	class:FlowerGardenTest
_calc	test/dp/GameOfLifeDivOneTest.java	/^  GameOfLifeDivOne _calc = new GameOfLifeDivOne();$/;"	f	class:GameOfLifeDivOneTest
_calc	test/dp/JewelryTest.java	/^  Jewelry _calc = new Jewelry();$/;"	f	class:JewelryTest
_calc	test/dp/KiloManX2Test.java	/^  KiloManX2 _calc = new KiloManX2();$/;"	f	class:KiloManX2Test
_calc	test/dp/KiloManXTest.java	/^  KiloManX _calc = new KiloManX();$/;"	f	class:KiloManXTest
_calc	test/dp/QuickSumsTest.java	/^  QuickSums _calc = new QuickSums();$/;"	f	class:QuickSumsTest
_calc	test/dp/ShortPalindromesTest.java	/^  ShortPalindromes _calc = new ShortPalindromes();$/;"	f	class:ShortPalindromesTest
_calc	test/dp/StripePainterTest.java	/^  StripePainter _calc = new StripePainter();$/;"	f	class:StripePainterTest
_calc	test/dp/WeightedIntervalSchedulingTest.java	/^  WeightedIntervalScheduling _calc = new WeightedIntervalScheduling();$/;"	f	class:WeightedIntervalSchedulingTest
_calc	test/dp/ZigZagTest.java	/^  ZigZag _calc = new ZigZag();$/;"	f	class:ZigZagTest
_calc	test/easy/FibTest.java	/^  Fib _calc = new Fib();$/;"	f	class:FibTest
_calc	test/easy/MedalTableTest.java	/^  MedalTable _calc = new MedalTable();$/;"	f	class:MedalTableTest
_calc	test/easy/TableSeatingTest.java	/^  private TableSeating _calc = new TableSeating();$/;"	f	class:TableSeatingTest	file:
_calc	test/graph/CircuitsTest.java	/^  Circuits _calc = new Circuits();$/;"	f	class:CircuitsTest
_calc	test/graph/EscapeTest.java	/^  Escape _calc = new Escape();$/;"	f	class:EscapeTest
_calc	test/graph/GrafixMaskTest.java	/^  GrafixMask _calc = new GrafixMask();$/;"	f	class:GrafixMaskTest
_calc	test/graph/IslandFerriesTest.java	/^  IslandFerries _calc = new IslandFerries();$/;"	f	class:IslandFerriesTest
_calc	test/graph/KiloManX3Test.java	/^  KiloManX3 _calc = new KiloManX3();$/;"	f	class:KiloManX3Test
_calc	test/graph/MarketingTest.java	/^  Marketing _calc = new Marketing();$/;"	f	class:MarketingTest
_calc	test/graph/PathFindingTest.java	/^  PathFinding _calc = new PathFinding();$/;"	f	class:PathFindingTest
_calc	test/graph/RevolvingDoorsTest.java	/^  RevolvingDoors _calc = new RevolvingDoors();$/;"	f	class:RevolvingDoorsTest
_calc	test/graph/RoboCourierTest.java	/^  RoboCourier _calc = new RoboCourier();$/;"	f	class:RoboCourierTest
_calc	test/graph/SmartWordToyTest.java	/^  SmartWordToy _calc = new SmartWordToy();$/;"	f	class:SmartWordToyTest
_cost	src/dp/KiloManX.java	/^  int[] _cost;$/;"	f	class:KiloManX
_end	src/dp/WeightedIntervalScheduling.java	/^    int _end;$/;"	f	class:WeightedIntervalScheduling.Interval
_end	src/graph/RevolvingDoors.java	/^    int _end;$/;"	f	class:RevolvingDoors.Maze
_g	src/easy/MedalTable.java	/^    int _g;$/;"	f	class:MedalTable.Country
_left	src/bkt/BridgeCrossing.java	/^    Queue<Integer> _left;$/;"	f	class:BridgeCrossing.State
_level	src/graph/RevolvingDoors.java	/^    int _level;$/;"	f	class:RevolvingDoors.Maze
_level	src/graph/SmartWordToy.java	/^    int _level;$/;"	f	class:SmartWordToy.Word
_maze	src/graph/RevolvingDoors.java	/^    int[][] _maze;$/;"	f	class:RevolvingDoors.Maze
_n	src/dp/KiloManX.java	/^  int _n;$/;"	f	class:KiloManX
_name	src/easy/MedalTable.java	/^    String _name;$/;"	f	class:MedalTable.Country
_pval	src/dp/WeightedIntervalScheduling.java	/^    int _pval = -1;$/;"	f	class:WeightedIntervalScheduling.Interval
_right	src/bkt/BridgeCrossing.java	/^    int[] _right;$/;"	f	class:BridgeCrossing.State
_s	src/easy/MedalTable.java	/^    int _s;$/;"	f	class:MedalTable.Country
_start	src/dp/WeightedIntervalScheduling.java	/^    int _start;$/;"	f	class:WeightedIntervalScheduling.Interval
_start	src/graph/RevolvingDoors.java	/^    int _start;$/;"	f	class:RevolvingDoors.Maze
_time	src/bkt/BridgeCrossing.java	/^    int _time;$/;"	f	class:BridgeCrossing.State
_weight	src/dp/KiloManX.java	/^  int[][] _weight;$/;"	f	class:KiloManX
_weight	src/dp/WeightedIntervalScheduling.java	/^    int _weight;$/;"	f	class:WeightedIntervalScheduling.Interval
_word	src/graph/SmartWordToy.java	/^    String _word;$/;"	f	class:SmartWordToy.Word
add	src/dp/ShortPalindromes.java	/^  void add(int i, int j, int k, String str) {$/;"	m	class:ShortPalindromes
addToTree	src/dynamic/RadarGuns.java	/^  void addToTree(int x, int parentx) {$/;"	m	class:Hungarian
addWeights	src/dp/KiloManX.java	/^  int[] addWeights(int[] weight, int boss) {$/;"	m	class:KiloManX
addb	src/easy/MedalTable.java	/^    public void addb() { _b++; }$/;"	m	class:MedalTable.Country
addg	src/easy/MedalTable.java	/^    public void addg() { _g++; }$/;"	m	class:MedalTable.Country
adds	src/easy/MedalTable.java	/^    public void adds() { _s++; }$/;"	m	class:MedalTable.Country
advance	src/graph/RevolvingDoors.java	/^  boolean advance(int position, Maze maze, HashSet<Integer> seen) {$/;"	m	class:RevolvingDoors
allSpaces	src/dynamic/MiniPaint.java	/^  int allSpaces() {$/;"	m	class:MiniPaint
allStrokes	src/dynamic/MiniPaint.java	/^  int allStrokes() {$/;"	m	class:MiniPaint
arrayCopy	src/graph/SmartWordToy.java	/^    char[] arrayCopy(char[] source) {$/;"	m	class:SmartWordToy.Word
arrayMax	src/easy/TallPeople.java	/^  int arrayMax(int[] array) {$/;"	m	class:TallPeople
arrayMin	src/easy/TallPeople.java	/^  int arrayMin(int[] array) {$/;"	m	class:TallPeople
arrsum	src/dp/QuickSums.java	/^  int arrsum(int[] nums) {$/;"	m	class:QuickSums
assign	src/dynamic/WeirdTimes.java	/^    void assign(int v, int i) {$/;"	m	class:WeirdTimes
augment	src/dynamic/RadarGuns.java	/^  void augment() {$/;"	m	class:Hungarian
avoid	src/dp/AvoidRoads.java	/^  HashSet<Integer> avoid;$/;"	f	class:AvoidRoads
b	src/dp/FlowerGarden.java	/^  int[] b;$/;"	f	class:FlowerGarden
bagofdevouring	test/easy/BagOfDevouringTest.java	/^  BagOfDevouring bagofdevouring = new BagOfDevouring();$/;"	f	class:BagOfDevouringTest
block	src/easy/LargestGap.java	/^        boolean block;$/;"	f	class:LargestGap.Piece
blocks	src/dp/FlowerGarden.java	/^  boolean blocks(int i, int j) {$/;"	m	class:FlowerGarden
buildGraph	src/graph/RoboCourier.java	/^  void buildGraph(String[] path) {$/;"	m	class:RoboCourier
buildTeams	src/greedy/MLBRecord.java	/^  void buildTeams(int[] wins) {$/;"	m	class:MLBRecord
buildTree	src/recursion/PermissionTree.java	/^  void buildTree(String[] folders) {$/;"	m	class:PermissionTree
c	src/dynamic/ColorfulMaze.java	/^        public final int c;$/;"	f	class:ColorfulMaze.Pt
c	src/graph/DivisorInc.java	/^    public final int c;$/;"	f	class:DivisorInc.Node
cache	src/dp/GameOfLifeDivOne.java	/^  long[][][] cache;$/;"	f	class:GameOfLifeDivOne
cache	src/math/KingOfTheCourt.java	/^  HashMap<String, Double> cache;$/;"	f	class:KingOfTheCourt
calc	src/easy/Fib.java	/^  public long calc(int n) {$/;"	m	class:Fib
calc	src/geometry/RemoteRover.java	/^  double calc(int index, double offset) {$/;"	m	class:RemoteRover
canTakeQueen	src/recursion/AntiChess.java	/^  boolean canTakeQueen(int[][] game) {$/;"	m	class:AntiChess
cap	src/dynamic/RadarGuns.java	/^  int cap;$/;"	f	class:RadarGuns
cars	src/graph/Parking.java	/^  int[][] cars;$/;"	f	class:Parking
case0	test/dp/BadNeighborsTest.java	/^  public void case0() {$/;"	m	class:BadNeighborsTest
case0	test/dp/KiloManX2Test.java	/^  public void case0() {	$/;"	m	class:KiloManX2Test
case0	test/dp/KiloManXTest.java	/^  public void case0() {	$/;"	m	class:KiloManXTest
case0	test/dp/WeightedIntervalSchedulingTest.java	/^  public void case0() {$/;"	m	class:WeightedIntervalSchedulingTest
case0	test/graph/IslandFerriesTest.java	/^  public void case0() {$/;"	m	class:IslandFerriesTest
case0	test/graph/KiloManX3Test.java	/^  public void case0() {	$/;"	m	class:KiloManX3Test
case0	test/graph/RoboCourierTest.java	/^  public void case0() {$/;"	m	class:RoboCourierTest
case1	test/dp/AvoidRoadsTest.java	/^  public void case1() {$/;"	m	class:AvoidRoadsTest
case1	test/dp/BadNeighborsTest.java	/^  public void case1() {$/;"	m	class:BadNeighborsTest
case1	test/dp/FlowerGardenTest.java	/^  public void case1() {$/;"	m	class:FlowerGardenTest
case1	test/dp/GameOfLifeDivOneTest.java	/^  public void case1() {$/;"	m	class:GameOfLifeDivOneTest
case1	test/dp/JewelryTest.java	/^  public void case1() {$/;"	m	class:JewelryTest
case1	test/dp/KiloManX2Test.java	/^  public void case1() {	$/;"	m	class:KiloManX2Test
case1	test/dp/KiloManXTest.java	/^  public void case1() {	$/;"	m	class:KiloManXTest
case1	test/dp/QuickSumsTest.java	/^  public void case1() {$/;"	m	class:QuickSumsTest
case1	test/dp/ShortPalindromesTest.java	/^  public void case1() {$/;"	m	class:ShortPalindromesTest
case1	test/dp/StripePainterTest.java	/^  public void case1() {$/;"	m	class:StripePainterTest
case1	test/dp/WeightedIntervalSchedulingTest.java	/^  public void case1() {$/;"	m	class:WeightedIntervalSchedulingTest
case1	test/dp/ZigZagTest.java	/^  public void case1() {$/;"	m	class:ZigZagTest
case1	test/dynamic/ColorfulMazeTest.java	/^  public void case1() {$/;"	m	class:ColorfulMazeTest
case1	test/dynamic/MiniPaint2Test.java	/^  public void case1() {$/;"	m	class:MiniPaintTest
case1	test/dynamic/MiniPaintTest.java	/^  public void case1() {$/;"	m	class:MiniPaintTest
case1	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case1() {$/;"	m	class:TheProgrammingContestDivOneTest
case1	test/easy/BagOfDevouringTest.java	/^  public void case1() {$/;"	m	class:BagOfDevouringTest
case1	test/easy/FibTest.java	/^  public void case1() {$/;"	m	class:FibTest
case1	test/graph/CircuitsTest.java	/^  public void case1() {$/;"	m	class:CircuitsTest
case1	test/graph/DungeonEscapeTest.java	/^  public void case1() {$/;"	m	class:DungeonEscapeTest
case1	test/graph/EscapeTest.java	/^  public void case1() {$/;"	m	class:EscapeTest
case1	test/graph/GrafixMaskTest.java	/^  public void case1() {$/;"	m	class:GrafixMaskTest
case1	test/graph/IslandFerriesTest.java	/^  public void case1() {$/;"	m	class:IslandFerriesTest
case1	test/graph/KiloManX3Test.java	/^  public void case1() {	$/;"	m	class:KiloManX3Test
case1	test/graph/MarketingTest.java	/^  public void case1() {$/;"	m	class:MarketingTest
case1	test/graph/PathFindingTest.java	/^  public void case1() {$/;"	m	class:PathFindingTest
case1	test/graph/RoboCourierTest.java	/^  public void case1() {$/;"	m	class:RoboCourierTest
case10	test/dp/QuickSumsTest.java	/^  public void case10() {$/;"	m	class:QuickSumsTest
case10	test/dp/ShortPalindromesTest.java	/^  public void case10() {$/;"	m	class:ShortPalindromesTest
case10	test/dp/StripePainterTest.java	/^  public void case10() {$/;"	m	class:StripePainterTest
case10	test/dynamic/ColorfulMazeTest.java	/^  public void case10() {$/;"	m	class:ColorfulMazeTest
case10	test/dynamic/MiniPaint2Test.java	/^  public void case10() {$/;"	m	class:MiniPaintTest
case10	test/dynamic/MiniPaintTest.java	/^  public void case10() {$/;"	m	class:MiniPaintTest
case10	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case10() {$/;"	m	class:TheProgrammingContestDivOneTest
case10	test/easy/BagOfDevouringTest.java	/^  public void case10() {$/;"	m	class:BagOfDevouringTest
case10	test/graph/DungeonEscapeTest.java	/^  public void case10() {$/;"	m	class:DungeonEscapeTest
case10	test/graph/EscapeTest.java	/^  public void case10() {$/;"	m	class:EscapeTest
case10	test/graph/MarketingTest.java	/^  public void case10() {$/;"	m	class:MarketingTest
case100	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case100() {$/;"	m	class:TheProgrammingContestDivOneTest
case101	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case101() {$/;"	m	class:TheProgrammingContestDivOneTest
case102	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case102() {$/;"	m	class:TheProgrammingContestDivOneTest
case103	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case103() {$/;"	m	class:TheProgrammingContestDivOneTest
case104	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case104() {$/;"	m	class:TheProgrammingContestDivOneTest
case105	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case105() {$/;"	m	class:TheProgrammingContestDivOneTest
case106	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case106() {$/;"	m	class:TheProgrammingContestDivOneTest
case107	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case107() {$/;"	m	class:TheProgrammingContestDivOneTest
case108	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case108() {$/;"	m	class:TheProgrammingContestDivOneTest
case109	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case109() {$/;"	m	class:TheProgrammingContestDivOneTest
case11	test/dp/KiloManX2Test.java	/^  public void case11() {$/;"	m	class:KiloManX2Test
case11	test/dp/KiloManXTest.java	/^  public void case11() {$/;"	m	class:KiloManXTest
case11	test/dp/QuickSumsTest.java	/^  public void case11() {$/;"	m	class:QuickSumsTest
case11	test/dp/ShortPalindromesTest.java	/^  public void case11() {$/;"	m	class:ShortPalindromesTest
case11	test/dp/StripePainterTest.java	/^  public void case11() {$/;"	m	class:StripePainterTest
case11	test/dynamic/ColorfulMazeTest.java	/^  public void case11() {$/;"	m	class:ColorfulMazeTest
case11	test/dynamic/MiniPaint2Test.java	/^  public void case11() {$/;"	m	class:MiniPaintTest
case11	test/dynamic/MiniPaintTest.java	/^  public void case11() {$/;"	m	class:MiniPaintTest
case11	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case11() {$/;"	m	class:TheProgrammingContestDivOneTest
case11	test/easy/BagOfDevouringTest.java	/^  public void case11() {$/;"	m	class:BagOfDevouringTest
case11	test/graph/DungeonEscapeTest.java	/^  public void case11() {$/;"	m	class:DungeonEscapeTest
case11	test/graph/EscapeTest.java	/^  public void case11() {$/;"	m	class:EscapeTest
case11	test/graph/IslandFerriesTest.java	/^  public void case11() {$/;"	m	class:IslandFerriesTest
case11	test/graph/KiloManX3Test.java	/^  public void case11() {$/;"	m	class:KiloManX3Test
case11	test/graph/MarketingTest.java	/^  public void case11() {$/;"	m	class:MarketingTest
case11	test/graph/RoboCourierTest.java	/^  public void case11() {$/;"	m	class:RoboCourierTest
case110	test/dp/KiloManX2Test.java	/^  public void case110() {$/;"	m	class:KiloManX2Test
case110	test/dp/KiloManXTest.java	/^  public void case110() {$/;"	m	class:KiloManXTest
case110	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case110() {$/;"	m	class:TheProgrammingContestDivOneTest
case110	test/graph/IslandFerriesTest.java	/^  public void case110() {$/;"	m	class:IslandFerriesTest
case110	test/graph/KiloManX3Test.java	/^  public void case110() {$/;"	m	class:KiloManX3Test
case110	test/graph/RoboCourierTest.java	/^  public void case110() {$/;"	m	class:RoboCourierTest
case111	test/dp/KiloManX2Test.java	/^  public void case111() {$/;"	m	class:KiloManX2Test
case111	test/dp/KiloManXTest.java	/^  public void case111() {$/;"	m	class:KiloManXTest
case111	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case111() {$/;"	m	class:TheProgrammingContestDivOneTest
case111	test/graph/IslandFerriesTest.java	/^  public void case111() {$/;"	m	class:IslandFerriesTest
case111	test/graph/KiloManX3Test.java	/^  public void case111() {$/;"	m	class:KiloManX3Test
case111	test/graph/RoboCourierTest.java	/^  public void case111() {$/;"	m	class:RoboCourierTest
case112	test/dp/KiloManX2Test.java	/^  public void case112() {$/;"	m	class:KiloManX2Test
case112	test/dp/KiloManXTest.java	/^  public void case112() {$/;"	m	class:KiloManXTest
case112	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case112() {$/;"	m	class:TheProgrammingContestDivOneTest
case112	test/graph/IslandFerriesTest.java	/^  public void case112() {$/;"	m	class:IslandFerriesTest
case112	test/graph/KiloManX3Test.java	/^  public void case112() {$/;"	m	class:KiloManX3Test
case112	test/graph/RoboCourierTest.java	/^  public void case112() {$/;"	m	class:RoboCourierTest
case113	test/dp/KiloManX2Test.java	/^  public void case113() {$/;"	m	class:KiloManX2Test
case113	test/dp/KiloManXTest.java	/^  public void case113() {$/;"	m	class:KiloManXTest
case113	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case113() {$/;"	m	class:TheProgrammingContestDivOneTest
case113	test/graph/IslandFerriesTest.java	/^  public void case113() {$/;"	m	class:IslandFerriesTest
case113	test/graph/KiloManX3Test.java	/^  public void case113() {$/;"	m	class:KiloManX3Test
case113	test/graph/RoboCourierTest.java	/^  public void case113() {$/;"	m	class:RoboCourierTest
case114	test/dp/KiloManX2Test.java	/^  public void case114() {$/;"	m	class:KiloManX2Test
case114	test/dp/KiloManXTest.java	/^  public void case114() {$/;"	m	class:KiloManXTest
case114	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case114() {$/;"	m	class:TheProgrammingContestDivOneTest
case114	test/graph/IslandFerriesTest.java	/^  public void case114() {$/;"	m	class:IslandFerriesTest
case114	test/graph/KiloManX3Test.java	/^  public void case114() {$/;"	m	class:KiloManX3Test
case114	test/graph/RoboCourierTest.java	/^  public void case114() {$/;"	m	class:RoboCourierTest
case115	test/dp/KiloManX2Test.java	/^  public void case115() {$/;"	m	class:KiloManX2Test
case115	test/dp/KiloManXTest.java	/^  public void case115() {$/;"	m	class:KiloManXTest
case115	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case115() {$/;"	m	class:TheProgrammingContestDivOneTest
case115	test/graph/IslandFerriesTest.java	/^  public void case115() {$/;"	m	class:IslandFerriesTest
case115	test/graph/KiloManX3Test.java	/^  public void case115() {$/;"	m	class:KiloManX3Test
case115	test/graph/RoboCourierTest.java	/^  public void case115() {$/;"	m	class:RoboCourierTest
case116	test/dp/KiloManX2Test.java	/^  public void case116() {$/;"	m	class:KiloManX2Test
case116	test/dp/KiloManXTest.java	/^  public void case116() {$/;"	m	class:KiloManXTest
case116	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case116() {$/;"	m	class:TheProgrammingContestDivOneTest
case116	test/graph/IslandFerriesTest.java	/^  public void case116() {$/;"	m	class:IslandFerriesTest
case116	test/graph/KiloManX3Test.java	/^  public void case116() {$/;"	m	class:KiloManX3Test
case116	test/graph/RoboCourierTest.java	/^  public void case116() {$/;"	m	class:RoboCourierTest
case117	test/dp/KiloManX2Test.java	/^  public void case117() {$/;"	m	class:KiloManX2Test
case117	test/dp/KiloManXTest.java	/^  public void case117() {$/;"	m	class:KiloManXTest
case117	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case117() {$/;"	m	class:TheProgrammingContestDivOneTest
case117	test/graph/IslandFerriesTest.java	/^  public void case117() {$/;"	m	class:IslandFerriesTest
case117	test/graph/KiloManX3Test.java	/^  public void case117() {$/;"	m	class:KiloManX3Test
case117	test/graph/RoboCourierTest.java	/^  public void case117() {$/;"	m	class:RoboCourierTest
case118	test/dp/KiloManX2Test.java	/^  public void case118() {$/;"	m	class:KiloManX2Test
case118	test/dp/KiloManXTest.java	/^  public void case118() {$/;"	m	class:KiloManXTest
case118	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case118() {$/;"	m	class:TheProgrammingContestDivOneTest
case118	test/graph/IslandFerriesTest.java	/^  public void case118() {$/;"	m	class:IslandFerriesTest
case118	test/graph/KiloManX3Test.java	/^  public void case118() {$/;"	m	class:KiloManX3Test
case118	test/graph/RoboCourierTest.java	/^  public void case118() {$/;"	m	class:RoboCourierTest
case119	test/dp/KiloManX2Test.java	/^  public void case119() {$/;"	m	class:KiloManX2Test
case119	test/dp/KiloManXTest.java	/^  public void case119() {$/;"	m	class:KiloManXTest
case119	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case119() {$/;"	m	class:TheProgrammingContestDivOneTest
case119	test/graph/IslandFerriesTest.java	/^  public void case119() {$/;"	m	class:IslandFerriesTest
case119	test/graph/KiloManX3Test.java	/^  public void case119() {$/;"	m	class:KiloManX3Test
case119	test/graph/RoboCourierTest.java	/^  public void case119() {$/;"	m	class:RoboCourierTest
case12	test/dp/KiloManX2Test.java	/^  public void case12() {$/;"	m	class:KiloManX2Test
case12	test/dp/KiloManXTest.java	/^  public void case12() {$/;"	m	class:KiloManXTest
case12	test/dp/QuickSumsTest.java	/^  public void case12() {$/;"	m	class:QuickSumsTest
case12	test/dp/ShortPalindromesTest.java	/^  public void case12() {$/;"	m	class:ShortPalindromesTest
case12	test/dp/StripePainterTest.java	/^  public void case12() {$/;"	m	class:StripePainterTest
case12	test/dynamic/ColorfulMazeTest.java	/^  public void case12() {$/;"	m	class:ColorfulMazeTest
case12	test/dynamic/MiniPaint2Test.java	/^  public void case12() {$/;"	m	class:MiniPaintTest
case12	test/dynamic/MiniPaintTest.java	/^  public void case12() {$/;"	m	class:MiniPaintTest
case12	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case12() {$/;"	m	class:TheProgrammingContestDivOneTest
case12	test/easy/BagOfDevouringTest.java	/^  public void case12() {$/;"	m	class:BagOfDevouringTest
case12	test/graph/DungeonEscapeTest.java	/^  public void case12() {$/;"	m	class:DungeonEscapeTest
case12	test/graph/EscapeTest.java	/^  public void case12() {$/;"	m	class:EscapeTest
case12	test/graph/IslandFerriesTest.java	/^  public void case12() {$/;"	m	class:IslandFerriesTest
case12	test/graph/KiloManX3Test.java	/^  public void case12() {$/;"	m	class:KiloManX3Test
case12	test/graph/MarketingTest.java	/^  public void case12() {$/;"	m	class:MarketingTest
case12	test/graph/RoboCourierTest.java	/^  public void case12() {$/;"	m	class:RoboCourierTest
case120	test/dp/KiloManX2Test.java	/^  public void case120() {$/;"	m	class:KiloManX2Test
case120	test/dp/KiloManXTest.java	/^  public void case120() {$/;"	m	class:KiloManXTest
case120	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case120() {$/;"	m	class:TheProgrammingContestDivOneTest
case120	test/graph/IslandFerriesTest.java	/^  public void case120() {$/;"	m	class:IslandFerriesTest
case120	test/graph/KiloManX3Test.java	/^  public void case120() {$/;"	m	class:KiloManX3Test
case120	test/graph/RoboCourierTest.java	/^  public void case120() {$/;"	m	class:RoboCourierTest
case121	test/dp/KiloManX2Test.java	/^  public void case121() {$/;"	m	class:KiloManX2Test
case121	test/dp/KiloManXTest.java	/^  public void case121() {$/;"	m	class:KiloManXTest
case121	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case121() {$/;"	m	class:TheProgrammingContestDivOneTest
case121	test/graph/IslandFerriesTest.java	/^  public void case121() {$/;"	m	class:IslandFerriesTest
case121	test/graph/KiloManX3Test.java	/^  public void case121() {$/;"	m	class:KiloManX3Test
case121	test/graph/RoboCourierTest.java	/^  public void case121() {$/;"	m	class:RoboCourierTest
case122	test/dp/KiloManX2Test.java	/^  public void case122() {$/;"	m	class:KiloManX2Test
case122	test/dp/KiloManXTest.java	/^  public void case122() {$/;"	m	class:KiloManXTest
case122	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case122() {$/;"	m	class:TheProgrammingContestDivOneTest
case122	test/graph/IslandFerriesTest.java	/^  public void case122() {$/;"	m	class:IslandFerriesTest
case122	test/graph/KiloManX3Test.java	/^  public void case122() {$/;"	m	class:KiloManX3Test
case122	test/graph/RoboCourierTest.java	/^  public void case122() {$/;"	m	class:RoboCourierTest
case123	test/dp/KiloManX2Test.java	/^  public void case123() {$/;"	m	class:KiloManX2Test
case123	test/dp/KiloManXTest.java	/^  public void case123() {$/;"	m	class:KiloManXTest
case123	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case123() {$/;"	m	class:TheProgrammingContestDivOneTest
case123	test/graph/IslandFerriesTest.java	/^  public void case123() {$/;"	m	class:IslandFerriesTest
case123	test/graph/KiloManX3Test.java	/^  public void case123() {$/;"	m	class:KiloManX3Test
case123	test/graph/RoboCourierTest.java	/^  public void case123() {$/;"	m	class:RoboCourierTest
case124	test/dp/KiloManX2Test.java	/^  public void case124() {$/;"	m	class:KiloManX2Test
case124	test/dp/KiloManXTest.java	/^  public void case124() {$/;"	m	class:KiloManXTest
case124	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case124() {$/;"	m	class:TheProgrammingContestDivOneTest
case124	test/graph/IslandFerriesTest.java	/^  public void case124() {$/;"	m	class:IslandFerriesTest
case124	test/graph/KiloManX3Test.java	/^  public void case124() {$/;"	m	class:KiloManX3Test
case124	test/graph/RoboCourierTest.java	/^  public void case124() {$/;"	m	class:RoboCourierTest
case125	test/dp/KiloManX2Test.java	/^  public void case125() {$/;"	m	class:KiloManX2Test
case125	test/dp/KiloManXTest.java	/^  public void case125() {$/;"	m	class:KiloManXTest
case125	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case125() {$/;"	m	class:TheProgrammingContestDivOneTest
case125	test/graph/IslandFerriesTest.java	/^  public void case125() {$/;"	m	class:IslandFerriesTest
case125	test/graph/KiloManX3Test.java	/^  public void case125() {$/;"	m	class:KiloManX3Test
case125	test/graph/RoboCourierTest.java	/^  public void case125() {$/;"	m	class:RoboCourierTest
case126	test/dp/KiloManX2Test.java	/^  public void case126() {$/;"	m	class:KiloManX2Test
case126	test/dp/KiloManXTest.java	/^  public void case126() {$/;"	m	class:KiloManXTest
case126	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case126() {$/;"	m	class:TheProgrammingContestDivOneTest
case126	test/graph/IslandFerriesTest.java	/^  public void case126() {$/;"	m	class:IslandFerriesTest
case126	test/graph/KiloManX3Test.java	/^  public void case126() {$/;"	m	class:KiloManX3Test
case126	test/graph/RoboCourierTest.java	/^  public void case126() {$/;"	m	class:RoboCourierTest
case127	test/dp/KiloManX2Test.java	/^  public void case127() {$/;"	m	class:KiloManX2Test
case127	test/dp/KiloManXTest.java	/^  public void case127() {$/;"	m	class:KiloManXTest
case127	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case127() {$/;"	m	class:TheProgrammingContestDivOneTest
case127	test/graph/IslandFerriesTest.java	/^  public void case127() {$/;"	m	class:IslandFerriesTest
case127	test/graph/KiloManX3Test.java	/^  public void case127() {$/;"	m	class:KiloManX3Test
case127	test/graph/RoboCourierTest.java	/^  public void case127() {$/;"	m	class:RoboCourierTest
case128	test/dp/KiloManX2Test.java	/^  public void case128() {$/;"	m	class:KiloManX2Test
case128	test/dp/KiloManXTest.java	/^  public void case128() {$/;"	m	class:KiloManXTest
case128	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case128() {$/;"	m	class:TheProgrammingContestDivOneTest
case128	test/graph/IslandFerriesTest.java	/^  public void case128() {$/;"	m	class:IslandFerriesTest
case128	test/graph/KiloManX3Test.java	/^  public void case128() {$/;"	m	class:KiloManX3Test
case128	test/graph/RoboCourierTest.java	/^  public void case128() {$/;"	m	class:RoboCourierTest
case129	test/dp/KiloManX2Test.java	/^  public void case129() {$/;"	m	class:KiloManX2Test
case129	test/dp/KiloManXTest.java	/^  public void case129() {$/;"	m	class:KiloManXTest
case129	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case129() {$/;"	m	class:TheProgrammingContestDivOneTest
case129	test/graph/IslandFerriesTest.java	/^  public void case129() {$/;"	m	class:IslandFerriesTest
case129	test/graph/KiloManX3Test.java	/^  public void case129() {$/;"	m	class:KiloManX3Test
case129	test/graph/RoboCourierTest.java	/^  public void case129() {$/;"	m	class:RoboCourierTest
case13	test/dp/KiloManX2Test.java	/^  public void case13() {$/;"	m	class:KiloManX2Test
case13	test/dp/KiloManXTest.java	/^  public void case13() {$/;"	m	class:KiloManXTest
case13	test/dp/QuickSumsTest.java	/^  public void case13() {$/;"	m	class:QuickSumsTest
case13	test/dp/ShortPalindromesTest.java	/^  public void case13() {$/;"	m	class:ShortPalindromesTest
case13	test/dp/StripePainterTest.java	/^  public void case13() {$/;"	m	class:StripePainterTest
case13	test/dynamic/ColorfulMazeTest.java	/^  public void case13() {$/;"	m	class:ColorfulMazeTest
case13	test/dynamic/MiniPaint2Test.java	/^  public void case13() {$/;"	m	class:MiniPaintTest
case13	test/dynamic/MiniPaintTest.java	/^  public void case13() {$/;"	m	class:MiniPaintTest
case13	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case13() {$/;"	m	class:TheProgrammingContestDivOneTest
case13	test/easy/BagOfDevouringTest.java	/^  public void case13() {$/;"	m	class:BagOfDevouringTest
case13	test/graph/DungeonEscapeTest.java	/^  public void case13() {$/;"	m	class:DungeonEscapeTest
case13	test/graph/EscapeTest.java	/^  public void case13() {$/;"	m	class:EscapeTest
case13	test/graph/IslandFerriesTest.java	/^  public void case13() {$/;"	m	class:IslandFerriesTest
case13	test/graph/KiloManX3Test.java	/^  public void case13() {$/;"	m	class:KiloManX3Test
case13	test/graph/MarketingTest.java	/^  public void case13() {$/;"	m	class:MarketingTest
case13	test/graph/RoboCourierTest.java	/^  public void case13() {$/;"	m	class:RoboCourierTest
case130	test/dp/KiloManX2Test.java	/^  public void case130() {$/;"	m	class:KiloManX2Test
case130	test/dp/KiloManXTest.java	/^  public void case130() {$/;"	m	class:KiloManXTest
case130	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case130() {$/;"	m	class:TheProgrammingContestDivOneTest
case130	test/graph/IslandFerriesTest.java	/^  public void case130() {$/;"	m	class:IslandFerriesTest
case130	test/graph/KiloManX3Test.java	/^  public void case130() {$/;"	m	class:KiloManX3Test
case130	test/graph/RoboCourierTest.java	/^  public void case130() {$/;"	m	class:RoboCourierTest
case131	test/dp/KiloManX2Test.java	/^  public void case131() {$/;"	m	class:KiloManX2Test
case131	test/dp/KiloManXTest.java	/^  public void case131() {$/;"	m	class:KiloManXTest
case131	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case131() {$/;"	m	class:TheProgrammingContestDivOneTest
case131	test/graph/IslandFerriesTest.java	/^  public void case131() {$/;"	m	class:IslandFerriesTest
case131	test/graph/KiloManX3Test.java	/^  public void case131() {$/;"	m	class:KiloManX3Test
case131	test/graph/RoboCourierTest.java	/^  public void case131() {$/;"	m	class:RoboCourierTest
case132	test/dp/KiloManX2Test.java	/^  public void case132() {$/;"	m	class:KiloManX2Test
case132	test/dp/KiloManXTest.java	/^  public void case132() {$/;"	m	class:KiloManXTest
case132	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case132() {$/;"	m	class:TheProgrammingContestDivOneTest
case132	test/graph/IslandFerriesTest.java	/^  public void case132() {$/;"	m	class:IslandFerriesTest
case132	test/graph/KiloManX3Test.java	/^  public void case132() {$/;"	m	class:KiloManX3Test
case133	test/dp/KiloManX2Test.java	/^  public void case133() {$/;"	m	class:KiloManX2Test
case133	test/dp/KiloManXTest.java	/^  public void case133() {$/;"	m	class:KiloManXTest
case133	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case133() {$/;"	m	class:TheProgrammingContestDivOneTest
case133	test/graph/IslandFerriesTest.java	/^  public void case133() {$/;"	m	class:IslandFerriesTest
case133	test/graph/KiloManX3Test.java	/^  public void case133() {$/;"	m	class:KiloManX3Test
case134	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case134() {$/;"	m	class:TheProgrammingContestDivOneTest
case134	test/graph/IslandFerriesTest.java	/^  public void case134() {$/;"	m	class:IslandFerriesTest
case135	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case135() {$/;"	m	class:TheProgrammingContestDivOneTest
case136	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case136() {$/;"	m	class:TheProgrammingContestDivOneTest
case137	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case137() {$/;"	m	class:TheProgrammingContestDivOneTest
case138	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case138() {$/;"	m	class:TheProgrammingContestDivOneTest
case139	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case139() {$/;"	m	class:TheProgrammingContestDivOneTest
case14	test/dp/KiloManX2Test.java	/^  public void case14() {$/;"	m	class:KiloManX2Test
case14	test/dp/KiloManXTest.java	/^  public void case14() {$/;"	m	class:KiloManXTest
case14	test/dp/QuickSumsTest.java	/^  public void case14() {$/;"	m	class:QuickSumsTest
case14	test/dp/ShortPalindromesTest.java	/^  public void case14() {$/;"	m	class:ShortPalindromesTest
case14	test/dp/StripePainterTest.java	/^  public void case14() {$/;"	m	class:StripePainterTest
case14	test/dynamic/ColorfulMazeTest.java	/^  public void case14() {$/;"	m	class:ColorfulMazeTest
case14	test/dynamic/MiniPaint2Test.java	/^  public void case14() {$/;"	m	class:MiniPaintTest
case14	test/dynamic/MiniPaintTest.java	/^  public void case14() {$/;"	m	class:MiniPaintTest
case14	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case14() {$/;"	m	class:TheProgrammingContestDivOneTest
case14	test/easy/BagOfDevouringTest.java	/^  public void case14() {$/;"	m	class:BagOfDevouringTest
case14	test/graph/DungeonEscapeTest.java	/^  public void case14() {$/;"	m	class:DungeonEscapeTest
case14	test/graph/EscapeTest.java	/^  public void case14() {$/;"	m	class:EscapeTest
case14	test/graph/IslandFerriesTest.java	/^  public void case14() {$/;"	m	class:IslandFerriesTest
case14	test/graph/KiloManX3Test.java	/^  public void case14() {$/;"	m	class:KiloManX3Test
case14	test/graph/MarketingTest.java	/^  public void case14() {$/;"	m	class:MarketingTest
case14	test/graph/RoboCourierTest.java	/^  public void case14() {$/;"	m	class:RoboCourierTest
case140	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case140() {$/;"	m	class:TheProgrammingContestDivOneTest
case141	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case141() {$/;"	m	class:TheProgrammingContestDivOneTest
case142	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case142() {$/;"	m	class:TheProgrammingContestDivOneTest
case143	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case143() {$/;"	m	class:TheProgrammingContestDivOneTest
case144	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case144() {$/;"	m	class:TheProgrammingContestDivOneTest
case145	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case145() {$/;"	m	class:TheProgrammingContestDivOneTest
case146	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case146() {$/;"	m	class:TheProgrammingContestDivOneTest
case147	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case147() {$/;"	m	class:TheProgrammingContestDivOneTest
case148	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case148() {$/;"	m	class:TheProgrammingContestDivOneTest
case149	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case149() {$/;"	m	class:TheProgrammingContestDivOneTest
case15	test/dp/KiloManX2Test.java	/^  public void case15() {$/;"	m	class:KiloManX2Test
case15	test/dp/KiloManXTest.java	/^  public void case15() {$/;"	m	class:KiloManXTest
case15	test/dp/QuickSumsTest.java	/^  public void case15() {$/;"	m	class:QuickSumsTest
case15	test/dp/ShortPalindromesTest.java	/^  public void case15() {$/;"	m	class:ShortPalindromesTest
case15	test/dp/StripePainterTest.java	/^  public void case15() {$/;"	m	class:StripePainterTest
case15	test/dynamic/ColorfulMazeTest.java	/^  public void case15() {$/;"	m	class:ColorfulMazeTest
case15	test/dynamic/MiniPaint2Test.java	/^  public void case15() {$/;"	m	class:MiniPaintTest
case15	test/dynamic/MiniPaintTest.java	/^  public void case15() {$/;"	m	class:MiniPaintTest
case15	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case15() {$/;"	m	class:TheProgrammingContestDivOneTest
case15	test/easy/BagOfDevouringTest.java	/^  public void case15() {$/;"	m	class:BagOfDevouringTest
case15	test/graph/DungeonEscapeTest.java	/^  public void case15() {$/;"	m	class:DungeonEscapeTest
case15	test/graph/EscapeTest.java	/^  public void case15() {$/;"	m	class:EscapeTest
case15	test/graph/IslandFerriesTest.java	/^  public void case15() {$/;"	m	class:IslandFerriesTest
case15	test/graph/KiloManX3Test.java	/^  public void case15() {$/;"	m	class:KiloManX3Test
case15	test/graph/MarketingTest.java	/^  public void case15() {$/;"	m	class:MarketingTest
case15	test/graph/RoboCourierTest.java	/^  public void case15() {$/;"	m	class:RoboCourierTest
case150	test/dp/QuickSumsTest.java	/^  public void case150() {$/;"	m	class:QuickSumsTest
case150	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case150() {$/;"	m	class:TheProgrammingContestDivOneTest
case151	test/dp/QuickSumsTest.java	/^  public void case151() {$/;"	m	class:QuickSumsTest
case151	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case151() {$/;"	m	class:TheProgrammingContestDivOneTest
case152	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case152() {$/;"	m	class:TheProgrammingContestDivOneTest
case153	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case153() {$/;"	m	class:TheProgrammingContestDivOneTest
case154	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case154() {$/;"	m	class:TheProgrammingContestDivOneTest
case155	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case155() {$/;"	m	class:TheProgrammingContestDivOneTest
case156	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case156() {$/;"	m	class:TheProgrammingContestDivOneTest
case157	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case157() {$/;"	m	class:TheProgrammingContestDivOneTest
case158	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case158() {$/;"	m	class:TheProgrammingContestDivOneTest
case16	test/dp/KiloManX2Test.java	/^  public void case16() {$/;"	m	class:KiloManX2Test
case16	test/dp/KiloManXTest.java	/^  public void case16() {$/;"	m	class:KiloManXTest
case16	test/dp/QuickSumsTest.java	/^  public void case16() {$/;"	m	class:QuickSumsTest
case16	test/dp/ShortPalindromesTest.java	/^  public void case16() {$/;"	m	class:ShortPalindromesTest
case16	test/dp/StripePainterTest.java	/^  public void case16() {$/;"	m	class:StripePainterTest
case16	test/dynamic/ColorfulMazeTest.java	/^  public void case16() {$/;"	m	class:ColorfulMazeTest
case16	test/dynamic/MiniPaint2Test.java	/^  public void case16() {$/;"	m	class:MiniPaintTest
case16	test/dynamic/MiniPaintTest.java	/^  public void case16() {$/;"	m	class:MiniPaintTest
case16	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case16() {$/;"	m	class:TheProgrammingContestDivOneTest
case16	test/easy/BagOfDevouringTest.java	/^  public void case16() {$/;"	m	class:BagOfDevouringTest
case16	test/graph/DungeonEscapeTest.java	/^  public void case16() {$/;"	m	class:DungeonEscapeTest
case16	test/graph/EscapeTest.java	/^  public void case16() {$/;"	m	class:EscapeTest
case16	test/graph/IslandFerriesTest.java	/^  public void case16() {$/;"	m	class:IslandFerriesTest
case16	test/graph/KiloManX3Test.java	/^  public void case16() {$/;"	m	class:KiloManX3Test
case16	test/graph/MarketingTest.java	/^  public void case16() {$/;"	m	class:MarketingTest
case16	test/graph/RoboCourierTest.java	/^  public void case16() {$/;"	m	class:RoboCourierTest
case17	test/dp/KiloManX2Test.java	/^  public void case17() {$/;"	m	class:KiloManX2Test
case17	test/dp/KiloManXTest.java	/^  public void case17() {$/;"	m	class:KiloManXTest
case17	test/dp/QuickSumsTest.java	/^  public void case17() {$/;"	m	class:QuickSumsTest
case17	test/dp/ShortPalindromesTest.java	/^  public void case17() {$/;"	m	class:ShortPalindromesTest
case17	test/dp/StripePainterTest.java	/^  public void case17() {$/;"	m	class:StripePainterTest
case17	test/dynamic/ColorfulMazeTest.java	/^  public void case17() {$/;"	m	class:ColorfulMazeTest
case17	test/dynamic/MiniPaint2Test.java	/^  public void case17() {$/;"	m	class:MiniPaintTest
case17	test/dynamic/MiniPaintTest.java	/^  public void case17() {$/;"	m	class:MiniPaintTest
case17	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case17() {$/;"	m	class:TheProgrammingContestDivOneTest
case17	test/easy/BagOfDevouringTest.java	/^  public void case17() {$/;"	m	class:BagOfDevouringTest
case17	test/graph/DungeonEscapeTest.java	/^  public void case17() {$/;"	m	class:DungeonEscapeTest
case17	test/graph/EscapeTest.java	/^  public void case17() {$/;"	m	class:EscapeTest
case17	test/graph/IslandFerriesTest.java	/^  public void case17() {$/;"	m	class:IslandFerriesTest
case17	test/graph/KiloManX3Test.java	/^  public void case17() {$/;"	m	class:KiloManX3Test
case17	test/graph/MarketingTest.java	/^  public void case17() {$/;"	m	class:MarketingTest
case17	test/graph/RoboCourierTest.java	/^  public void case17() {$/;"	m	class:RoboCourierTest
case18	test/dp/KiloManX2Test.java	/^  public void case18() {$/;"	m	class:KiloManX2Test
case18	test/dp/KiloManXTest.java	/^  public void case18() {$/;"	m	class:KiloManXTest
case18	test/dp/QuickSumsTest.java	/^  public void case18() {$/;"	m	class:QuickSumsTest
case18	test/dp/ShortPalindromesTest.java	/^  public void case18() {$/;"	m	class:ShortPalindromesTest
case18	test/dp/StripePainterTest.java	/^  public void case18() {$/;"	m	class:StripePainterTest
case18	test/dynamic/ColorfulMazeTest.java	/^  public void case18() {$/;"	m	class:ColorfulMazeTest
case18	test/dynamic/MiniPaint2Test.java	/^  public void case18() {$/;"	m	class:MiniPaintTest
case18	test/dynamic/MiniPaintTest.java	/^  public void case18() {$/;"	m	class:MiniPaintTest
case18	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case18() {$/;"	m	class:TheProgrammingContestDivOneTest
case18	test/easy/BagOfDevouringTest.java	/^  public void case18() {$/;"	m	class:BagOfDevouringTest
case18	test/graph/DungeonEscapeTest.java	/^  public void case18() {$/;"	m	class:DungeonEscapeTest
case18	test/graph/EscapeTest.java	/^  public void case18() {$/;"	m	class:EscapeTest
case18	test/graph/IslandFerriesTest.java	/^  public void case18() {$/;"	m	class:IslandFerriesTest
case18	test/graph/KiloManX3Test.java	/^  public void case18() {$/;"	m	class:KiloManX3Test
case18	test/graph/MarketingTest.java	/^  public void case18() {$/;"	m	class:MarketingTest
case18	test/graph/RoboCourierTest.java	/^  public void case18() {$/;"	m	class:RoboCourierTest
case19	test/dp/KiloManX2Test.java	/^  public void case19() {$/;"	m	class:KiloManX2Test
case19	test/dp/KiloManXTest.java	/^  public void case19() {$/;"	m	class:KiloManXTest
case19	test/dp/QuickSumsTest.java	/^  public void case19() {$/;"	m	class:QuickSumsTest
case19	test/dp/ShortPalindromesTest.java	/^  public void case19() {$/;"	m	class:ShortPalindromesTest
case19	test/dp/StripePainterTest.java	/^  public void case19() {$/;"	m	class:StripePainterTest
case19	test/dynamic/ColorfulMazeTest.java	/^  public void case19() {$/;"	m	class:ColorfulMazeTest
case19	test/dynamic/MiniPaint2Test.java	/^  public void case19() {$/;"	m	class:MiniPaintTest
case19	test/dynamic/MiniPaintTest.java	/^  public void case19() {$/;"	m	class:MiniPaintTest
case19	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case19() {$/;"	m	class:TheProgrammingContestDivOneTest
case19	test/easy/BagOfDevouringTest.java	/^  public void case19() {$/;"	m	class:BagOfDevouringTest
case19	test/graph/DungeonEscapeTest.java	/^  public void case19() {$/;"	m	class:DungeonEscapeTest
case19	test/graph/EscapeTest.java	/^  public void case19() {$/;"	m	class:EscapeTest
case19	test/graph/IslandFerriesTest.java	/^  public void case19() {$/;"	m	class:IslandFerriesTest
case19	test/graph/KiloManX3Test.java	/^  public void case19() {$/;"	m	class:KiloManX3Test
case19	test/graph/MarketingTest.java	/^  public void case19() {$/;"	m	class:MarketingTest
case19	test/graph/RoboCourierTest.java	/^  public void case19() {$/;"	m	class:RoboCourierTest
case1a	test/dynamic/MiniPaint2Test.java	/^  public void case1a() {$/;"	m	class:MiniPaintTest
case1a	test/dynamic/MiniPaintTest.java	/^  public void case1a() {$/;"	m	class:MiniPaintTest
case1b	test/dynamic/MiniPaint2Test.java	/^  public void case1b() {$/;"	m	class:MiniPaintTest
case1b	test/dynamic/MiniPaintTest.java	/^  public void case1b() {$/;"	m	class:MiniPaintTest
case1c	test/dynamic/MiniPaint2Test.java	/^  public void case1c() {$/;"	m	class:MiniPaintTest
case1c	test/dynamic/MiniPaintTest.java	/^  public void case1c() {$/;"	m	class:MiniPaintTest
case1d	test/dynamic/MiniPaint2Test.java	/^  public void case1d() {$/;"	m	class:MiniPaintTest
case1e	test/dynamic/MiniPaint2Test.java	/^  public void case1e() {$/;"	m	class:MiniPaintTest
case1f	test/dynamic/MiniPaint2Test.java	/^  public void case1f() {$/;"	m	class:MiniPaintTest
case2	test/dp/AvoidRoadsTest.java	/^  public void case2() {$/;"	m	class:AvoidRoadsTest
case2	test/dp/BadNeighborsTest.java	/^  public void case2() {$/;"	m	class:BadNeighborsTest
case2	test/dp/FlowerGardenTest.java	/^  public void case2() {$/;"	m	class:FlowerGardenTest
case2	test/dp/GameOfLifeDivOneTest.java	/^  public void case2() {$/;"	m	class:GameOfLifeDivOneTest
case2	test/dp/JewelryTest.java	/^  public void case2() {$/;"	m	class:JewelryTest
case2	test/dp/KiloManX2Test.java	/^  public void case2() {	$/;"	m	class:KiloManX2Test
case2	test/dp/KiloManXTest.java	/^  public void case2() {	$/;"	m	class:KiloManXTest
case2	test/dp/QuickSumsTest.java	/^  public void case2() {$/;"	m	class:QuickSumsTest
case2	test/dp/ShortPalindromesTest.java	/^  public void case2() {$/;"	m	class:ShortPalindromesTest
case2	test/dp/StripePainterTest.java	/^  public void case2() {$/;"	m	class:StripePainterTest
case2	test/dp/WeightedIntervalSchedulingTest.java	/^  public void case2() {$/;"	m	class:WeightedIntervalSchedulingTest
case2	test/dp/ZigZagTest.java	/^  public void case2() {$/;"	m	class:ZigZagTest
case2	test/dynamic/ColorfulMazeTest.java	/^  public void case2() {$/;"	m	class:ColorfulMazeTest
case2	test/dynamic/MiniPaint2Test.java	/^  public void case2() {$/;"	m	class:MiniPaintTest
case2	test/dynamic/MiniPaintTest.java	/^  public void case2() {$/;"	m	class:MiniPaintTest
case2	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case2() {$/;"	m	class:TheProgrammingContestDivOneTest
case2	test/easy/BagOfDevouringTest.java	/^  public void case2() {$/;"	m	class:BagOfDevouringTest
case2	test/easy/FibTest.java	/^  public void case2() {$/;"	m	class:FibTest
case2	test/graph/CircuitsTest.java	/^  public void case2() {$/;"	m	class:CircuitsTest
case2	test/graph/DungeonEscapeTest.java	/^  public void case2() {$/;"	m	class:DungeonEscapeTest
case2	test/graph/EscapeTest.java	/^  public void case2() {$/;"	m	class:EscapeTest
case2	test/graph/GrafixMaskTest.java	/^  public void case2() {$/;"	m	class:GrafixMaskTest
case2	test/graph/IslandFerriesTest.java	/^  public void case2() {$/;"	m	class:IslandFerriesTest
case2	test/graph/KiloManX3Test.java	/^  public void case2() {	$/;"	m	class:KiloManX3Test
case2	test/graph/MarketingTest.java	/^  public void case2() {$/;"	m	class:MarketingTest
case2	test/graph/PathFindingTest.java	/^  public void case2() {$/;"	m	class:PathFindingTest
case2	test/graph/RoboCourierTest.java	/^  public void case2() {$/;"	m	class:RoboCourierTest
case20	test/dp/QuickSumsTest.java	/^  public void case20() {$/;"	m	class:QuickSumsTest
case20	test/dp/ShortPalindromesTest.java	/^  public void case20() {$/;"	m	class:ShortPalindromesTest
case20	test/dp/StripePainterTest.java	/^  public void case20() {$/;"	m	class:StripePainterTest
case20	test/dynamic/ColorfulMazeTest.java	/^  public void case20() {$/;"	m	class:ColorfulMazeTest
case20	test/dynamic/MiniPaint2Test.java	/^  public void case20() {$/;"	m	class:MiniPaintTest
case20	test/dynamic/MiniPaintTest.java	/^  public void case20() {$/;"	m	class:MiniPaintTest
case20	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case20() {$/;"	m	class:TheProgrammingContestDivOneTest
case20	test/easy/BagOfDevouringTest.java	/^  public void case20() {$/;"	m	class:BagOfDevouringTest
case20	test/graph/DungeonEscapeTest.java	/^  public void case20() {$/;"	m	class:DungeonEscapeTest
case20	test/graph/EscapeTest.java	/^  public void case20() {$/;"	m	class:EscapeTest
case20	test/graph/MarketingTest.java	/^  public void case20() {$/;"	m	class:MarketingTest
case21	test/dp/QuickSumsTest.java	/^  public void case21() {$/;"	m	class:QuickSumsTest
case21	test/dp/ShortPalindromesTest.java	/^  public void case21() {$/;"	m	class:ShortPalindromesTest
case21	test/dp/StripePainterTest.java	/^  public void case21() {$/;"	m	class:StripePainterTest
case21	test/dynamic/ColorfulMazeTest.java	/^  public void case21() {$/;"	m	class:ColorfulMazeTest
case21	test/dynamic/MiniPaint2Test.java	/^  public void case21() {$/;"	m	class:MiniPaintTest
case21	test/dynamic/MiniPaintTest.java	/^  public void case21() {$/;"	m	class:MiniPaintTest
case21	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case21() {$/;"	m	class:TheProgrammingContestDivOneTest
case21	test/easy/BagOfDevouringTest.java	/^  public void case21() {$/;"	m	class:BagOfDevouringTest
case21	test/graph/DungeonEscapeTest.java	/^  public void case21() {$/;"	m	class:DungeonEscapeTest
case21	test/graph/EscapeTest.java	/^  public void case21() {$/;"	m	class:EscapeTest
case21	test/graph/MarketingTest.java	/^  public void case21() {$/;"	m	class:MarketingTest
case22	test/dp/QuickSumsTest.java	/^  public void case22() {$/;"	m	class:QuickSumsTest
case22	test/dp/ShortPalindromesTest.java	/^  public void case22() {$/;"	m	class:ShortPalindromesTest
case22	test/dp/StripePainterTest.java	/^  public void case22() {$/;"	m	class:StripePainterTest
case22	test/dynamic/ColorfulMazeTest.java	/^  public void case22() {$/;"	m	class:ColorfulMazeTest
case22	test/dynamic/MiniPaint2Test.java	/^  public void case22() {$/;"	m	class:MiniPaintTest
case22	test/dynamic/MiniPaintTest.java	/^  public void case22() {$/;"	m	class:MiniPaintTest
case22	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case22() {$/;"	m	class:TheProgrammingContestDivOneTest
case22	test/easy/BagOfDevouringTest.java	/^  public void case22() {$/;"	m	class:BagOfDevouringTest
case22	test/graph/DungeonEscapeTest.java	/^  public void case22() {$/;"	m	class:DungeonEscapeTest
case22	test/graph/EscapeTest.java	/^  public void case22() {$/;"	m	class:EscapeTest
case22	test/graph/MarketingTest.java	/^  public void case22() {$/;"	m	class:MarketingTest
case23	test/dp/QuickSumsTest.java	/^  public void case23() {$/;"	m	class:QuickSumsTest
case23	test/dp/ShortPalindromesTest.java	/^  public void case23() {$/;"	m	class:ShortPalindromesTest
case23	test/dp/StripePainterTest.java	/^  public void case23() {$/;"	m	class:StripePainterTest
case23	test/dynamic/ColorfulMazeTest.java	/^  public void case23() {$/;"	m	class:ColorfulMazeTest
case23	test/dynamic/MiniPaint2Test.java	/^  public void case23() {$/;"	m	class:MiniPaintTest
case23	test/dynamic/MiniPaintTest.java	/^  public void case23() {$/;"	m	class:MiniPaintTest
case23	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case23() {$/;"	m	class:TheProgrammingContestDivOneTest
case23	test/easy/BagOfDevouringTest.java	/^  public void case23() {$/;"	m	class:BagOfDevouringTest
case23	test/graph/DungeonEscapeTest.java	/^  public void case23() {$/;"	m	class:DungeonEscapeTest
case23	test/graph/EscapeTest.java	/^  public void case23() {$/;"	m	class:EscapeTest
case23	test/graph/MarketingTest.java	/^  public void case23() {$/;"	m	class:MarketingTest
case230	test/dp/ShortPalindromesTest.java	/^  public void case230() {$/;"	m	class:ShortPalindromesTest
case24	test/dp/QuickSumsTest.java	/^  public void case24() {$/;"	m	class:QuickSumsTest
case24	test/dp/ShortPalindromesTest.java	/^  public void case24() {$/;"	m	class:ShortPalindromesTest
case24	test/dp/StripePainterTest.java	/^  public void case24() {$/;"	m	class:StripePainterTest
case24	test/dynamic/ColorfulMazeTest.java	/^  public void case24() {$/;"	m	class:ColorfulMazeTest
case24	test/dynamic/MiniPaint2Test.java	/^  public void case24() {$/;"	m	class:MiniPaintTest
case24	test/dynamic/MiniPaintTest.java	/^  public void case24() {$/;"	m	class:MiniPaintTest
case24	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case24() {$/;"	m	class:TheProgrammingContestDivOneTest
case24	test/easy/BagOfDevouringTest.java	/^  public void case24() {$/;"	m	class:BagOfDevouringTest
case24	test/graph/DungeonEscapeTest.java	/^  public void case24() {$/;"	m	class:DungeonEscapeTest
case24	test/graph/EscapeTest.java	/^  public void case24() {$/;"	m	class:EscapeTest
case24	test/graph/MarketingTest.java	/^  public void case24() {$/;"	m	class:MarketingTest
case25	test/dp/QuickSumsTest.java	/^  public void case25() {$/;"	m	class:QuickSumsTest
case25	test/dp/ShortPalindromesTest.java	/^  public void case25() {$/;"	m	class:ShortPalindromesTest
case25	test/dp/StripePainterTest.java	/^  public void case25() {$/;"	m	class:StripePainterTest
case25	test/dynamic/ColorfulMazeTest.java	/^  public void case25() {$/;"	m	class:ColorfulMazeTest
case25	test/dynamic/MiniPaint2Test.java	/^  public void case25() {$/;"	m	class:MiniPaintTest
case25	test/dynamic/MiniPaintTest.java	/^  public void case25() {$/;"	m	class:MiniPaintTest
case25	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case25() {$/;"	m	class:TheProgrammingContestDivOneTest
case25	test/easy/BagOfDevouringTest.java	/^  public void case25() {$/;"	m	class:BagOfDevouringTest
case25	test/graph/DungeonEscapeTest.java	/^  public void case25() {$/;"	m	class:DungeonEscapeTest
case25	test/graph/EscapeTest.java	/^  public void case25() {$/;"	m	class:EscapeTest
case25	test/graph/MarketingTest.java	/^  public void case25() {$/;"	m	class:MarketingTest
case26	test/dp/QuickSumsTest.java	/^  public void case26() {$/;"	m	class:QuickSumsTest
case26	test/dp/ShortPalindromesTest.java	/^  public void case26() {$/;"	m	class:ShortPalindromesTest
case26	test/dp/StripePainterTest.java	/^  public void case26() {$/;"	m	class:StripePainterTest
case26	test/dynamic/ColorfulMazeTest.java	/^  public void case26() {$/;"	m	class:ColorfulMazeTest
case26	test/dynamic/MiniPaint2Test.java	/^  public void case26() {$/;"	m	class:MiniPaintTest
case26	test/dynamic/MiniPaintTest.java	/^  public void case26() {$/;"	m	class:MiniPaintTest
case26	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case26() {$/;"	m	class:TheProgrammingContestDivOneTest
case26	test/easy/BagOfDevouringTest.java	/^  public void case26() {$/;"	m	class:BagOfDevouringTest
case26	test/graph/DungeonEscapeTest.java	/^  public void case26() {$/;"	m	class:DungeonEscapeTest
case26	test/graph/EscapeTest.java	/^  public void case26() {$/;"	m	class:EscapeTest
case26	test/graph/MarketingTest.java	/^  public void case26() {$/;"	m	class:MarketingTest
case27	test/dp/QuickSumsTest.java	/^  public void case27() {$/;"	m	class:QuickSumsTest
case27	test/dp/ShortPalindromesTest.java	/^  public void case27() {$/;"	m	class:ShortPalindromesTest
case27	test/dp/StripePainterTest.java	/^  public void case27() {$/;"	m	class:StripePainterTest
case27	test/dynamic/ColorfulMazeTest.java	/^  public void case27() {$/;"	m	class:ColorfulMazeTest
case27	test/dynamic/MiniPaint2Test.java	/^  public void case27() {$/;"	m	class:MiniPaintTest
case27	test/dynamic/MiniPaintTest.java	/^  public void case27() {$/;"	m	class:MiniPaintTest
case27	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case27() {$/;"	m	class:TheProgrammingContestDivOneTest
case27	test/easy/BagOfDevouringTest.java	/^  public void case27() {$/;"	m	class:BagOfDevouringTest
case27	test/graph/DungeonEscapeTest.java	/^  public void case27() {$/;"	m	class:DungeonEscapeTest
case27	test/graph/EscapeTest.java	/^  public void case27() {$/;"	m	class:EscapeTest
case27	test/graph/MarketingTest.java	/^  public void case27() {$/;"	m	class:MarketingTest
case28	test/dp/QuickSumsTest.java	/^  public void case28() {$/;"	m	class:QuickSumsTest
case28	test/dp/ShortPalindromesTest.java	/^  public void case28() {$/;"	m	class:ShortPalindromesTest
case28	test/dp/StripePainterTest.java	/^  public void case28() {$/;"	m	class:StripePainterTest
case28	test/dynamic/ColorfulMazeTest.java	/^  public void case28() {$/;"	m	class:ColorfulMazeTest
case28	test/dynamic/MiniPaint2Test.java	/^  public void case28() {$/;"	m	class:MiniPaintTest
case28	test/dynamic/MiniPaintTest.java	/^  public void case28() {$/;"	m	class:MiniPaintTest
case28	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case28() {$/;"	m	class:TheProgrammingContestDivOneTest
case28	test/easy/BagOfDevouringTest.java	/^  public void case28() {$/;"	m	class:BagOfDevouringTest
case28	test/graph/DungeonEscapeTest.java	/^  public void case28() {$/;"	m	class:DungeonEscapeTest
case28	test/graph/EscapeTest.java	/^  public void case28() {$/;"	m	class:EscapeTest
case28	test/graph/MarketingTest.java	/^  public void case28() {$/;"	m	class:MarketingTest
case29	test/dp/ShortPalindromesTest.java	/^  public void case29() {$/;"	m	class:ShortPalindromesTest
case29	test/dp/StripePainterTest.java	/^  public void case29() {$/;"	m	class:StripePainterTest
case29	test/dynamic/ColorfulMazeTest.java	/^  public void case29() {$/;"	m	class:ColorfulMazeTest
case29	test/dynamic/MiniPaint2Test.java	/^  public void case29() {$/;"	m	class:MiniPaintTest
case29	test/dynamic/MiniPaintTest.java	/^  public void case29() {$/;"	m	class:MiniPaintTest
case29	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case29() {$/;"	m	class:TheProgrammingContestDivOneTest
case29	test/easy/BagOfDevouringTest.java	/^  public void case29() {$/;"	m	class:BagOfDevouringTest
case29	test/graph/DungeonEscapeTest.java	/^  public void case29() {$/;"	m	class:DungeonEscapeTest
case29	test/graph/EscapeTest.java	/^  public void case29() {$/;"	m	class:EscapeTest
case29	test/graph/MarketingTest.java	/^  public void case29() {$/;"	m	class:MarketingTest
case3	test/dp/AvoidRoadsTest.java	/^  public void case3() {$/;"	m	class:AvoidRoadsTest
case3	test/dp/BadNeighborsTest.java	/^  public void case3() {$/;"	m	class:BadNeighborsTest
case3	test/dp/FlowerGardenTest.java	/^  public void case3() {$/;"	m	class:FlowerGardenTest
case3	test/dp/GameOfLifeDivOneTest.java	/^  public void case3() {$/;"	m	class:GameOfLifeDivOneTest
case3	test/dp/JewelryTest.java	/^  public void case3() {$/;"	m	class:JewelryTest
case3	test/dp/KiloManX2Test.java	/^  public void case3() {	$/;"	m	class:KiloManX2Test
case3	test/dp/KiloManXTest.java	/^  public void case3() {	$/;"	m	class:KiloManXTest
case3	test/dp/QuickSumsTest.java	/^  public void case3() {$/;"	m	class:QuickSumsTest
case3	test/dp/ShortPalindromesTest.java	/^  public void case3() {$/;"	m	class:ShortPalindromesTest
case3	test/dp/StripePainterTest.java	/^  public void case3() {$/;"	m	class:StripePainterTest
case3	test/dp/ZigZagTest.java	/^  public void case3() {$/;"	m	class:ZigZagTest
case3	test/dynamic/ColorfulMazeTest.java	/^  public void case3() {$/;"	m	class:ColorfulMazeTest
case3	test/dynamic/MiniPaint2Test.java	/^  public void case3() {$/;"	m	class:MiniPaintTest
case3	test/dynamic/MiniPaintTest.java	/^  public void case3() {$/;"	m	class:MiniPaintTest
case3	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case3() {$/;"	m	class:TheProgrammingContestDivOneTest
case3	test/easy/BagOfDevouringTest.java	/^  public void case3() {$/;"	m	class:BagOfDevouringTest
case3	test/graph/CircuitsTest.java	/^  public void case3() {$/;"	m	class:CircuitsTest
case3	test/graph/DungeonEscapeTest.java	/^  public void case3() {$/;"	m	class:DungeonEscapeTest
case3	test/graph/EscapeTest.java	/^  public void case3() {$/;"	m	class:EscapeTest
case3	test/graph/GrafixMaskTest.java	/^  public void case3() {$/;"	m	class:GrafixMaskTest
case3	test/graph/IslandFerriesTest.java	/^  public void case3() {$/;"	m	class:IslandFerriesTest
case3	test/graph/KiloManX3Test.java	/^  public void case3() {	$/;"	m	class:KiloManX3Test
case3	test/graph/MarketingTest.java	/^  public void case3() {$/;"	m	class:MarketingTest
case3	test/graph/PathFindingTest.java	/^  public void case3() {$/;"	m	class:PathFindingTest
case3	test/graph/RoboCourierTest.java	/^  public void case3()	{$/;"	m	class:RoboCourierTest
case30	test/dp/ShortPalindromesTest.java	/^  public void case30() {$/;"	m	class:ShortPalindromesTest
case30	test/dp/StripePainterTest.java	/^  public void case30() {$/;"	m	class:StripePainterTest
case30	test/dynamic/ColorfulMazeTest.java	/^  public void case30() {$/;"	m	class:ColorfulMazeTest
case30	test/dynamic/MiniPaint2Test.java	/^  public void case30() {$/;"	m	class:MiniPaintTest
case30	test/dynamic/MiniPaintTest.java	/^  public void case30() {$/;"	m	class:MiniPaintTest
case30	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case30() {$/;"	m	class:TheProgrammingContestDivOneTest
case30	test/easy/BagOfDevouringTest.java	/^  public void case30() {$/;"	m	class:BagOfDevouringTest
case30	test/graph/DungeonEscapeTest.java	/^  public void case30() {$/;"	m	class:DungeonEscapeTest
case30	test/graph/EscapeTest.java	/^  public void case30() {$/;"	m	class:EscapeTest
case30	test/graph/MarketingTest.java	/^  public void case30() {$/;"	m	class:MarketingTest
case31	test/dp/ShortPalindromesTest.java	/^  public void case31() {$/;"	m	class:ShortPalindromesTest
case31	test/dp/StripePainterTest.java	/^  public void case31() {$/;"	m	class:StripePainterTest
case31	test/dynamic/ColorfulMazeTest.java	/^  public void case31() {$/;"	m	class:ColorfulMazeTest
case31	test/dynamic/MiniPaint2Test.java	/^  public void case31() {$/;"	m	class:MiniPaintTest
case31	test/dynamic/MiniPaintTest.java	/^  public void case31() {$/;"	m	class:MiniPaintTest
case31	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case31() {$/;"	m	class:TheProgrammingContestDivOneTest
case31	test/easy/BagOfDevouringTest.java	/^  public void case31() {$/;"	m	class:BagOfDevouringTest
case31	test/graph/DungeonEscapeTest.java	/^  public void case31() {$/;"	m	class:DungeonEscapeTest
case31	test/graph/EscapeTest.java	/^  public void case31() {$/;"	m	class:EscapeTest
case32	test/dp/ShortPalindromesTest.java	/^  public void case32() {$/;"	m	class:ShortPalindromesTest
case32	test/dp/StripePainterTest.java	/^  public void case32() {$/;"	m	class:StripePainterTest
case32	test/dynamic/ColorfulMazeTest.java	/^  public void case32() {$/;"	m	class:ColorfulMazeTest
case32	test/dynamic/MiniPaint2Test.java	/^  public void case32() {$/;"	m	class:MiniPaintTest
case32	test/dynamic/MiniPaintTest.java	/^  public void case32() {$/;"	m	class:MiniPaintTest
case32	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case32() {$/;"	m	class:TheProgrammingContestDivOneTest
case32	test/easy/BagOfDevouringTest.java	/^  public void case32() {$/;"	m	class:BagOfDevouringTest
case32	test/graph/DungeonEscapeTest.java	/^  public void case32() {$/;"	m	class:DungeonEscapeTest
case32	test/graph/EscapeTest.java	/^  public void case32() {$/;"	m	class:EscapeTest
case33	test/dp/ShortPalindromesTest.java	/^  public void case33() {$/;"	m	class:ShortPalindromesTest
case33	test/dp/StripePainterTest.java	/^  public void case33() {$/;"	m	class:StripePainterTest
case33	test/dynamic/ColorfulMazeTest.java	/^  public void case33() {$/;"	m	class:ColorfulMazeTest
case33	test/dynamic/MiniPaint2Test.java	/^  public void case33() {$/;"	m	class:MiniPaintTest
case33	test/dynamic/MiniPaintTest.java	/^  public void case33() {$/;"	m	class:MiniPaintTest
case33	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case33() {$/;"	m	class:TheProgrammingContestDivOneTest
case33	test/easy/BagOfDevouringTest.java	/^  public void case33() {$/;"	m	class:BagOfDevouringTest
case33	test/graph/DungeonEscapeTest.java	/^  public void case33() {$/;"	m	class:DungeonEscapeTest
case33	test/graph/EscapeTest.java	/^  public void case33() {$/;"	m	class:EscapeTest
case34	test/dp/ShortPalindromesTest.java	/^  public void case34() {$/;"	m	class:ShortPalindromesTest
case34	test/dp/StripePainterTest.java	/^  public void case34() {$/;"	m	class:StripePainterTest
case34	test/dynamic/ColorfulMazeTest.java	/^  public void case34() {$/;"	m	class:ColorfulMazeTest
case34	test/dynamic/MiniPaint2Test.java	/^  public void case34() {$/;"	m	class:MiniPaintTest
case34	test/dynamic/MiniPaintTest.java	/^  public void case34() {$/;"	m	class:MiniPaintTest
case34	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case34() {$/;"	m	class:TheProgrammingContestDivOneTest
case34	test/easy/BagOfDevouringTest.java	/^  public void case34() {$/;"	m	class:BagOfDevouringTest
case34	test/graph/DungeonEscapeTest.java	/^  public void case34() {$/;"	m	class:DungeonEscapeTest
case34	test/graph/EscapeTest.java	/^  public void case34() {$/;"	m	class:EscapeTest
case35	test/dp/ShortPalindromesTest.java	/^  public void case35() {$/;"	m	class:ShortPalindromesTest
case35	test/dp/StripePainterTest.java	/^  public void case35() {$/;"	m	class:StripePainterTest
case35	test/dynamic/ColorfulMazeTest.java	/^  public void case35() {$/;"	m	class:ColorfulMazeTest
case35	test/dynamic/MiniPaint2Test.java	/^  public void case35() {$/;"	m	class:MiniPaintTest
case35	test/dynamic/MiniPaintTest.java	/^  public void case35() {$/;"	m	class:MiniPaintTest
case35	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case35() {$/;"	m	class:TheProgrammingContestDivOneTest
case35	test/easy/BagOfDevouringTest.java	/^  public void case35() {$/;"	m	class:BagOfDevouringTest
case35	test/graph/DungeonEscapeTest.java	/^  public void case35() {$/;"	m	class:DungeonEscapeTest
case35	test/graph/EscapeTest.java	/^  public void case35() {$/;"	m	class:EscapeTest
case36	test/dp/ShortPalindromesTest.java	/^  public void case36() {$/;"	m	class:ShortPalindromesTest
case36	test/dp/StripePainterTest.java	/^  public void case36() {$/;"	m	class:StripePainterTest
case36	test/dynamic/ColorfulMazeTest.java	/^  public void case36() {$/;"	m	class:ColorfulMazeTest
case36	test/dynamic/MiniPaint2Test.java	/^  public void case36() {$/;"	m	class:MiniPaintTest
case36	test/dynamic/MiniPaintTest.java	/^  public void case36() {$/;"	m	class:MiniPaintTest
case36	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case36() {$/;"	m	class:TheProgrammingContestDivOneTest
case36	test/easy/BagOfDevouringTest.java	/^  public void case36() {$/;"	m	class:BagOfDevouringTest
case36	test/graph/DungeonEscapeTest.java	/^  public void case36() {$/;"	m	class:DungeonEscapeTest
case36	test/graph/EscapeTest.java	/^  public void case36() {$/;"	m	class:EscapeTest
case37	test/dp/ShortPalindromesTest.java	/^  public void case37() {$/;"	m	class:ShortPalindromesTest
case37	test/dp/StripePainterTest.java	/^  public void case37() {$/;"	m	class:StripePainterTest
case37	test/dynamic/ColorfulMazeTest.java	/^  public void case37() {$/;"	m	class:ColorfulMazeTest
case37	test/dynamic/MiniPaint2Test.java	/^  public void case37() {$/;"	m	class:MiniPaintTest
case37	test/dynamic/MiniPaintTest.java	/^  public void case37() {$/;"	m	class:MiniPaintTest
case37	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case37() {$/;"	m	class:TheProgrammingContestDivOneTest
case37	test/easy/BagOfDevouringTest.java	/^  public void case37() {$/;"	m	class:BagOfDevouringTest
case37	test/graph/DungeonEscapeTest.java	/^  public void case37() {$/;"	m	class:DungeonEscapeTest
case37	test/graph/EscapeTest.java	/^  public void case37() {$/;"	m	class:EscapeTest
case38	test/dp/ShortPalindromesTest.java	/^  public void case38() {$/;"	m	class:ShortPalindromesTest
case38	test/dynamic/ColorfulMazeTest.java	/^  public void case38() {$/;"	m	class:ColorfulMazeTest
case38	test/dynamic/MiniPaint2Test.java	/^  public void case38() {$/;"	m	class:MiniPaintTest
case38	test/dynamic/MiniPaintTest.java	/^  public void case38() {$/;"	m	class:MiniPaintTest
case38	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case38() {$/;"	m	class:TheProgrammingContestDivOneTest
case38	test/easy/BagOfDevouringTest.java	/^  public void case38() {$/;"	m	class:BagOfDevouringTest
case38	test/graph/DungeonEscapeTest.java	/^  public void case38() {$/;"	m	class:DungeonEscapeTest
case38	test/graph/EscapeTest.java	/^  public void case38() {$/;"	m	class:EscapeTest
case39	test/dp/ShortPalindromesTest.java	/^  public void case39() {$/;"	m	class:ShortPalindromesTest
case39	test/dynamic/ColorfulMazeTest.java	/^  public void case39() {$/;"	m	class:ColorfulMazeTest
case39	test/dynamic/MiniPaint2Test.java	/^  public void case39() {$/;"	m	class:MiniPaintTest
case39	test/dynamic/MiniPaintTest.java	/^  public void case39() {$/;"	m	class:MiniPaintTest
case39	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case39() {$/;"	m	class:TheProgrammingContestDivOneTest
case39	test/easy/BagOfDevouringTest.java	/^  public void case39() {$/;"	m	class:BagOfDevouringTest
case39	test/graph/DungeonEscapeTest.java	/^  public void case39() {$/;"	m	class:DungeonEscapeTest
case39	test/graph/EscapeTest.java	/^  public void case39() {$/;"	m	class:EscapeTest
case4	test/dp/AvoidRoadsTest.java	/^  public void case4() {$/;"	m	class:AvoidRoadsTest
case4	test/dp/BadNeighborsTest.java	/^  public void case4() {$/;"	m	class:BadNeighborsTest
case4	test/dp/FlowerGardenTest.java	/^  public void case4() {$/;"	m	class:FlowerGardenTest
case4	test/dp/GameOfLifeDivOneTest.java	/^  public void case4() {$/;"	m	class:GameOfLifeDivOneTest
case4	test/dp/JewelryTest.java	/^  public void case4() {$/;"	m	class:JewelryTest
case4	test/dp/KiloManX2Test.java	/^  public void case4() {	$/;"	m	class:KiloManX2Test
case4	test/dp/KiloManXTest.java	/^  public void case4() {	$/;"	m	class:KiloManXTest
case4	test/dp/QuickSumsTest.java	/^  public void case4() {$/;"	m	class:QuickSumsTest
case4	test/dp/ShortPalindromesTest.java	/^  public void case4() {$/;"	m	class:ShortPalindromesTest
case4	test/dp/StripePainterTest.java	/^  public void case4() {$/;"	m	class:StripePainterTest
case4	test/dp/ZigZagTest.java	/^  public void case4() {$/;"	m	class:ZigZagTest
case4	test/dynamic/ColorfulMazeTest.java	/^  public void case4() {$/;"	m	class:ColorfulMazeTest
case4	test/dynamic/MiniPaint2Test.java	/^  public void case4() {$/;"	m	class:MiniPaintTest
case4	test/dynamic/MiniPaintTest.java	/^  public void case4() {$/;"	m	class:MiniPaintTest
case4	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case4() {$/;"	m	class:TheProgrammingContestDivOneTest
case4	test/easy/BagOfDevouringTest.java	/^  public void case4() {$/;"	m	class:BagOfDevouringTest
case4	test/graph/CircuitsTest.java	/^  public void case4() {$/;"	m	class:CircuitsTest
case4	test/graph/DungeonEscapeTest.java	/^  public void case4() {$/;"	m	class:DungeonEscapeTest
case4	test/graph/EscapeTest.java	/^  public void case4() {$/;"	m	class:EscapeTest
case4	test/graph/GrafixMaskTest.java	/^  public void case4() {$/;"	m	class:GrafixMaskTest
case4	test/graph/IslandFerriesTest.java	/^  public void case4() {$/;"	m	class:IslandFerriesTest
case4	test/graph/KiloManX3Test.java	/^  public void case4() {	$/;"	m	class:KiloManX3Test
case4	test/graph/MarketingTest.java	/^  public void case4() {$/;"	m	class:MarketingTest
case4	test/graph/PathFindingTest.java	/^  public void case4() {$/;"	m	class:PathFindingTest
case4	test/graph/RoboCourierTest.java	/^  public void case4()	{$/;"	m	class:RoboCourierTest
case40	test/dp/ShortPalindromesTest.java	/^  public void case40() {$/;"	m	class:ShortPalindromesTest
case40	test/dynamic/ColorfulMazeTest.java	/^  public void case40() {$/;"	m	class:ColorfulMazeTest
case40	test/dynamic/MiniPaint2Test.java	/^  public void case40() {$/;"	m	class:MiniPaintTest
case40	test/dynamic/MiniPaintTest.java	/^  public void case40() {$/;"	m	class:MiniPaintTest
case40	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case40() {$/;"	m	class:TheProgrammingContestDivOneTest
case40	test/easy/BagOfDevouringTest.java	/^  public void case40() {$/;"	m	class:BagOfDevouringTest
case40	test/graph/DungeonEscapeTest.java	/^  public void case40() {$/;"	m	class:DungeonEscapeTest
case40	test/graph/EscapeTest.java	/^  public void case40() {$/;"	m	class:EscapeTest
case41	test/dp/ShortPalindromesTest.java	/^  public void case41() {$/;"	m	class:ShortPalindromesTest
case41	test/dynamic/ColorfulMazeTest.java	/^  public void case41() {$/;"	m	class:ColorfulMazeTest
case41	test/dynamic/MiniPaint2Test.java	/^  public void case41() {$/;"	m	class:MiniPaintTest
case41	test/dynamic/MiniPaintTest.java	/^  public void case41() {$/;"	m	class:MiniPaintTest
case41	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case41() {$/;"	m	class:TheProgrammingContestDivOneTest
case41	test/easy/BagOfDevouringTest.java	/^  public void case41() {$/;"	m	class:BagOfDevouringTest
case41	test/graph/DungeonEscapeTest.java	/^  public void case41() {$/;"	m	class:DungeonEscapeTest
case41	test/graph/EscapeTest.java	/^  public void case41() {$/;"	m	class:EscapeTest
case42	test/dp/ShortPalindromesTest.java	/^  public void case42() {$/;"	m	class:ShortPalindromesTest
case42	test/dynamic/ColorfulMazeTest.java	/^  public void case42() {$/;"	m	class:ColorfulMazeTest
case42	test/dynamic/MiniPaint2Test.java	/^  public void case42() {$/;"	m	class:MiniPaintTest
case42	test/dynamic/MiniPaintTest.java	/^  public void case42() {$/;"	m	class:MiniPaintTest
case42	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case42() {$/;"	m	class:TheProgrammingContestDivOneTest
case42	test/easy/BagOfDevouringTest.java	/^  public void case42() {$/;"	m	class:BagOfDevouringTest
case42	test/graph/EscapeTest.java	/^  public void case42() {$/;"	m	class:EscapeTest
case43	test/dp/ShortPalindromesTest.java	/^  public void case43() {$/;"	m	class:ShortPalindromesTest
case43	test/dynamic/ColorfulMazeTest.java	/^  public void case43() {$/;"	m	class:ColorfulMazeTest
case43	test/dynamic/MiniPaint2Test.java	/^  public void case43() {$/;"	m	class:MiniPaintTest
case43	test/dynamic/MiniPaintTest.java	/^  public void case43() {$/;"	m	class:MiniPaintTest
case43	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case43() {$/;"	m	class:TheProgrammingContestDivOneTest
case43	test/easy/BagOfDevouringTest.java	/^  public void case43() {$/;"	m	class:BagOfDevouringTest
case43	test/graph/EscapeTest.java	/^  public void case43() {$/;"	m	class:EscapeTest
case44	test/dp/ShortPalindromesTest.java	/^  public void case44() {$/;"	m	class:ShortPalindromesTest
case44	test/dynamic/ColorfulMazeTest.java	/^  public void case44() {$/;"	m	class:ColorfulMazeTest
case44	test/dynamic/MiniPaint2Test.java	/^  public void case44() {$/;"	m	class:MiniPaintTest
case44	test/dynamic/MiniPaintTest.java	/^  public void case44() {$/;"	m	class:MiniPaintTest
case44	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case44() {$/;"	m	class:TheProgrammingContestDivOneTest
case44	test/easy/BagOfDevouringTest.java	/^  public void case44() {$/;"	m	class:BagOfDevouringTest
case44	test/graph/EscapeTest.java	/^  public void case44() {$/;"	m	class:EscapeTest
case45	test/dp/ShortPalindromesTest.java	/^  public void case45() {$/;"	m	class:ShortPalindromesTest
case45	test/dynamic/ColorfulMazeTest.java	/^  public void case45() {$/;"	m	class:ColorfulMazeTest
case45	test/dynamic/MiniPaint2Test.java	/^  public void case45() {$/;"	m	class:MiniPaintTest
case45	test/dynamic/MiniPaintTest.java	/^  public void case45() {$/;"	m	class:MiniPaintTest
case45	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case45() {$/;"	m	class:TheProgrammingContestDivOneTest
case45	test/easy/BagOfDevouringTest.java	/^  public void case45() {$/;"	m	class:BagOfDevouringTest
case45	test/graph/EscapeTest.java	/^  public void case45() {$/;"	m	class:EscapeTest
case46	test/dp/ShortPalindromesTest.java	/^  public void case46() {$/;"	m	class:ShortPalindromesTest
case46	test/dynamic/ColorfulMazeTest.java	/^  public void case46() {$/;"	m	class:ColorfulMazeTest
case46	test/dynamic/MiniPaint2Test.java	/^  public void case46() {$/;"	m	class:MiniPaintTest
case46	test/dynamic/MiniPaintTest.java	/^  public void case46() {$/;"	m	class:MiniPaintTest
case46	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case46() {$/;"	m	class:TheProgrammingContestDivOneTest
case46	test/easy/BagOfDevouringTest.java	/^  public void case46() {$/;"	m	class:BagOfDevouringTest
case46	test/graph/EscapeTest.java	/^  public void case46() {$/;"	m	class:EscapeTest
case47	test/dp/ShortPalindromesTest.java	/^  public void case47() {$/;"	m	class:ShortPalindromesTest
case47	test/dynamic/ColorfulMazeTest.java	/^  public void case47() {$/;"	m	class:ColorfulMazeTest
case47	test/dynamic/MiniPaint2Test.java	/^  public void case47() {$/;"	m	class:MiniPaintTest
case47	test/dynamic/MiniPaintTest.java	/^  public void case47() {$/;"	m	class:MiniPaintTest
case47	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case47() {$/;"	m	class:TheProgrammingContestDivOneTest
case47	test/easy/BagOfDevouringTest.java	/^  public void case47() {$/;"	m	class:BagOfDevouringTest
case47	test/graph/EscapeTest.java	/^  public void case47() {$/;"	m	class:EscapeTest
case48	test/dp/ShortPalindromesTest.java	/^  public void case48() {$/;"	m	class:ShortPalindromesTest
case48	test/dynamic/ColorfulMazeTest.java	/^  public void case48() {$/;"	m	class:ColorfulMazeTest
case48	test/dynamic/MiniPaint2Test.java	/^  public void case48() {$/;"	m	class:MiniPaintTest
case48	test/dynamic/MiniPaintTest.java	/^  public void case48() {$/;"	m	class:MiniPaintTest
case48	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case48() {$/;"	m	class:TheProgrammingContestDivOneTest
case48	test/easy/BagOfDevouringTest.java	/^  public void case48() {$/;"	m	class:BagOfDevouringTest
case48	test/graph/EscapeTest.java	/^  public void case48() {$/;"	m	class:EscapeTest
case49	test/dp/ShortPalindromesTest.java	/^  public void case49() {$/;"	m	class:ShortPalindromesTest
case49	test/dynamic/ColorfulMazeTest.java	/^  public void case49() {$/;"	m	class:ColorfulMazeTest
case49	test/dynamic/MiniPaint2Test.java	/^  public void case49() {$/;"	m	class:MiniPaintTest
case49	test/dynamic/MiniPaintTest.java	/^  public void case49() {$/;"	m	class:MiniPaintTest
case49	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case49() {$/;"	m	class:TheProgrammingContestDivOneTest
case49	test/easy/BagOfDevouringTest.java	/^  public void case49() {$/;"	m	class:BagOfDevouringTest
case49	test/graph/EscapeTest.java	/^  public void case49() {$/;"	m	class:EscapeTest
case4a	test/dynamic/MiniPaint2Test.java	/^  public void case4a() {$/;"	m	class:MiniPaintTest
case4a	test/dynamic/MiniPaintTest.java	/^  public void case4a() {$/;"	m	class:MiniPaintTest
case5	test/dp/BadNeighborsTest.java	/^  public void case5() {$/;"	m	class:BadNeighborsTest
case5	test/dp/FlowerGardenTest.java	/^  public void case5() {$/;"	m	class:FlowerGardenTest
case5	test/dp/GameOfLifeDivOneTest.java	/^  public void case5() {$/;"	m	class:GameOfLifeDivOneTest
case5	test/dp/JewelryTest.java	/^  public void case5() {$/;"	m	class:JewelryTest
case5	test/dp/QuickSumsTest.java	/^  public void case5() {$/;"	m	class:QuickSumsTest
case5	test/dp/ShortPalindromesTest.java	/^  public void case5() {$/;"	m	class:ShortPalindromesTest
case5	test/dp/StripePainterTest.java	/^  public void case5() {$/;"	m	class:StripePainterTest
case5	test/dp/ZigZagTest.java	/^  public void case5() {$/;"	m	class:ZigZagTest
case5	test/dynamic/ColorfulMazeTest.java	/^  public void case5() {$/;"	m	class:ColorfulMazeTest
case5	test/dynamic/MiniPaint2Test.java	/^  public void case5() {$/;"	m	class:MiniPaintTest
case5	test/dynamic/MiniPaintTest.java	/^  public void case5() {$/;"	m	class:MiniPaintTest
case5	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case5() {$/;"	m	class:TheProgrammingContestDivOneTest
case5	test/easy/BagOfDevouringTest.java	/^  public void case5() {$/;"	m	class:BagOfDevouringTest
case5	test/graph/CircuitsTest.java	/^  public void case5() {$/;"	m	class:CircuitsTest
case5	test/graph/DungeonEscapeTest.java	/^  public void case5() {$/;"	m	class:DungeonEscapeTest
case5	test/graph/EscapeTest.java	/^  public void case5() {$/;"	m	class:EscapeTest
case5	test/graph/GrafixMaskTest.java	/^  public void case5() {$/;"	m	class:GrafixMaskTest
case5	test/graph/MarketingTest.java	/^  public void case5() {$/;"	m	class:MarketingTest
case5	test/graph/PathFindingTest.java	/^  public void case5() {$/;"	m	class:PathFindingTest
case5	test/graph/RoboCourierTest.java	/^  public void case5()	{$/;"	m	class:RoboCourierTest
case50	test/dp/ShortPalindromesTest.java	/^  public void case50() {$/;"	m	class:ShortPalindromesTest
case50	test/dynamic/ColorfulMazeTest.java	/^  public void case50() {$/;"	m	class:ColorfulMazeTest
case50	test/dynamic/MiniPaint2Test.java	/^  public void case50() {$/;"	m	class:MiniPaintTest
case50	test/dynamic/MiniPaintTest.java	/^  public void case50() {$/;"	m	class:MiniPaintTest
case50	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case50() {$/;"	m	class:TheProgrammingContestDivOneTest
case50	test/easy/BagOfDevouringTest.java	/^  public void case50() {$/;"	m	class:BagOfDevouringTest
case50	test/graph/EscapeTest.java	/^  public void case50() {$/;"	m	class:EscapeTest
case51	test/dp/ShortPalindromesTest.java	/^  public void case51() {$/;"	m	class:ShortPalindromesTest
case51	test/dynamic/ColorfulMazeTest.java	/^  public void case51() {$/;"	m	class:ColorfulMazeTest
case51	test/dynamic/MiniPaint2Test.java	/^  public void case51() {$/;"	m	class:MiniPaintTest
case51	test/dynamic/MiniPaintTest.java	/^  public void case51() {$/;"	m	class:MiniPaintTest
case51	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case51() {$/;"	m	class:TheProgrammingContestDivOneTest
case51	test/easy/BagOfDevouringTest.java	/^  public void case51() {$/;"	m	class:BagOfDevouringTest
case51	test/graph/EscapeTest.java	/^  public void case51() {$/;"	m	class:EscapeTest
case52	test/dp/ShortPalindromesTest.java	/^  public void case52() {$/;"	m	class:ShortPalindromesTest
case52	test/dynamic/ColorfulMazeTest.java	/^  public void case52() {$/;"	m	class:ColorfulMazeTest
case52	test/dynamic/MiniPaint2Test.java	/^  public void case52() {$/;"	m	class:MiniPaintTest
case52	test/dynamic/MiniPaintTest.java	/^  public void case52() {$/;"	m	class:MiniPaintTest
case52	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case52() {$/;"	m	class:TheProgrammingContestDivOneTest
case52	test/easy/BagOfDevouringTest.java	/^  public void case52() {$/;"	m	class:BagOfDevouringTest
case52	test/graph/EscapeTest.java	/^  public void case52() {$/;"	m	class:EscapeTest
case53	test/dp/ShortPalindromesTest.java	/^  public void case53() {$/;"	m	class:ShortPalindromesTest
case53	test/dynamic/ColorfulMazeTest.java	/^  public void case53() {$/;"	m	class:ColorfulMazeTest
case53	test/dynamic/MiniPaint2Test.java	/^  public void case53() {$/;"	m	class:MiniPaintTest
case53	test/dynamic/MiniPaintTest.java	/^  public void case53() {$/;"	m	class:MiniPaintTest
case53	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case53() {$/;"	m	class:TheProgrammingContestDivOneTest
case53	test/easy/BagOfDevouringTest.java	/^  public void case53() {$/;"	m	class:BagOfDevouringTest
case53	test/graph/EscapeTest.java	/^  public void case53() {$/;"	m	class:EscapeTest
case54	test/dp/ShortPalindromesTest.java	/^  public void case54() {$/;"	m	class:ShortPalindromesTest
case54	test/dynamic/ColorfulMazeTest.java	/^  public void case54() {$/;"	m	class:ColorfulMazeTest
case54	test/dynamic/MiniPaint2Test.java	/^  public void case54() {$/;"	m	class:MiniPaintTest
case54	test/dynamic/MiniPaintTest.java	/^  public void case54() {$/;"	m	class:MiniPaintTest
case54	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case54() {$/;"	m	class:TheProgrammingContestDivOneTest
case54	test/easy/BagOfDevouringTest.java	/^  public void case54() {$/;"	m	class:BagOfDevouringTest
case54	test/graph/EscapeTest.java	/^  public void case54() {$/;"	m	class:EscapeTest
case55	test/dp/ShortPalindromesTest.java	/^  public void case55() {$/;"	m	class:ShortPalindromesTest
case55	test/dynamic/ColorfulMazeTest.java	/^  public void case55() {$/;"	m	class:ColorfulMazeTest
case55	test/dynamic/MiniPaint2Test.java	/^  public void case55() {$/;"	m	class:MiniPaintTest
case55	test/dynamic/MiniPaintTest.java	/^  public void case55() {$/;"	m	class:MiniPaintTest
case55	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case55() {$/;"	m	class:TheProgrammingContestDivOneTest
case55	test/easy/BagOfDevouringTest.java	/^  public void case55() {$/;"	m	class:BagOfDevouringTest
case55	test/graph/EscapeTest.java	/^  public void case55() {$/;"	m	class:EscapeTest
case56	test/dynamic/ColorfulMazeTest.java	/^  public void case56() {$/;"	m	class:ColorfulMazeTest
case56	test/dynamic/MiniPaint2Test.java	/^  public void case56() {$/;"	m	class:MiniPaintTest
case56	test/dynamic/MiniPaintTest.java	/^  public void case56() {$/;"	m	class:MiniPaintTest
case56	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case56() {$/;"	m	class:TheProgrammingContestDivOneTest
case56	test/easy/BagOfDevouringTest.java	/^  public void case56() {$/;"	m	class:BagOfDevouringTest
case56	test/graph/EscapeTest.java	/^  public void case56() {$/;"	m	class:EscapeTest
case57	test/dynamic/ColorfulMazeTest.java	/^  public void case57() {$/;"	m	class:ColorfulMazeTest
case57	test/dynamic/MiniPaint2Test.java	/^  public void case57() {$/;"	m	class:MiniPaintTest
case57	test/dynamic/MiniPaintTest.java	/^  public void case57() {$/;"	m	class:MiniPaintTest
case57	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case57() {$/;"	m	class:TheProgrammingContestDivOneTest
case57	test/easy/BagOfDevouringTest.java	/^  public void case57() {$/;"	m	class:BagOfDevouringTest
case57	test/graph/EscapeTest.java	/^  public void case57() {$/;"	m	class:EscapeTest
case58	test/dynamic/ColorfulMazeTest.java	/^  public void case58() {$/;"	m	class:ColorfulMazeTest
case58	test/dynamic/MiniPaint2Test.java	/^  public void case58() {$/;"	m	class:MiniPaintTest
case58	test/dynamic/MiniPaintTest.java	/^  public void case58() {$/;"	m	class:MiniPaintTest
case58	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case58() {$/;"	m	class:TheProgrammingContestDivOneTest
case58	test/easy/BagOfDevouringTest.java	/^  public void case58() {$/;"	m	class:BagOfDevouringTest
case58	test/graph/EscapeTest.java	/^  public void case58() {$/;"	m	class:EscapeTest
case59	test/dynamic/ColorfulMazeTest.java	/^  public void case59() {$/;"	m	class:ColorfulMazeTest
case59	test/dynamic/MiniPaint2Test.java	/^  public void case59() {$/;"	m	class:MiniPaintTest
case59	test/dynamic/MiniPaintTest.java	/^  public void case59() {$/;"	m	class:MiniPaintTest
case59	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case59() {$/;"	m	class:TheProgrammingContestDivOneTest
case59	test/easy/BagOfDevouringTest.java	/^  public void case59() {$/;"	m	class:BagOfDevouringTest
case59	test/graph/EscapeTest.java	/^  public void case59() {$/;"	m	class:EscapeTest
case6	test/dp/BadNeighborsTest.java	/^  public void case6() {$/;"	m	class:BadNeighborsTest
case6	test/dp/FlowerGardenTest.java	/^  public void case6() {$/;"	m	class:FlowerGardenTest
case6	test/dp/JewelryTest.java	/^  public void case6() {$/;"	m	class:JewelryTest
case6	test/dp/QuickSumsTest.java	/^  public void case6() {$/;"	m	class:QuickSumsTest
case6	test/dp/ShortPalindromesTest.java	/^  public void case6() {$/;"	m	class:ShortPalindromesTest
case6	test/dp/StripePainterTest.java	/^  public void case6() {$/;"	m	class:StripePainterTest
case6	test/dp/ZigZagTest.java	/^  public void case6() {$/;"	m	class:ZigZagTest
case6	test/dynamic/ColorfulMazeTest.java	/^  public void case6() {$/;"	m	class:ColorfulMazeTest
case6	test/dynamic/MiniPaint2Test.java	/^  public void case6() {$/;"	m	class:MiniPaintTest
case6	test/dynamic/MiniPaintTest.java	/^  public void case6() {$/;"	m	class:MiniPaintTest
case6	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case6() {$/;"	m	class:TheProgrammingContestDivOneTest
case6	test/easy/BagOfDevouringTest.java	/^  public void case6() {$/;"	m	class:BagOfDevouringTest
case6	test/graph/CircuitsTest.java	/^  public void case6() {$/;"	m	class:CircuitsTest
case6	test/graph/DungeonEscapeTest.java	/^  public void case6() {$/;"	m	class:DungeonEscapeTest
case6	test/graph/EscapeTest.java	/^  public void case6() {$/;"	m	class:EscapeTest
case6	test/graph/MarketingTest.java	/^  public void case6() {$/;"	m	class:MarketingTest
case6	test/graph/PathFindingTest.java	/^  public void case6() {$/;"	m	class:PathFindingTest
case60	test/dynamic/ColorfulMazeTest.java	/^  public void case60() {$/;"	m	class:ColorfulMazeTest
case60	test/dynamic/MiniPaint2Test.java	/^  public void case60() {$/;"	m	class:MiniPaintTest
case60	test/dynamic/MiniPaintTest.java	/^  public void case60() {$/;"	m	class:MiniPaintTest
case60	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case60() {$/;"	m	class:TheProgrammingContestDivOneTest
case60	test/easy/BagOfDevouringTest.java	/^  public void case60() {$/;"	m	class:BagOfDevouringTest
case60	test/graph/EscapeTest.java	/^  public void case60() {$/;"	m	class:EscapeTest
case61	test/dynamic/ColorfulMazeTest.java	/^  public void case61() {$/;"	m	class:ColorfulMazeTest
case61	test/dynamic/MiniPaint2Test.java	/^  public void case61() {$/;"	m	class:MiniPaintTest
case61	test/dynamic/MiniPaintTest.java	/^  public void case61() {$/;"	m	class:MiniPaintTest
case61	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case61() {$/;"	m	class:TheProgrammingContestDivOneTest
case61	test/easy/BagOfDevouringTest.java	/^  public void case61() {$/;"	m	class:BagOfDevouringTest
case61	test/graph/EscapeTest.java	/^  public void case61() {$/;"	m	class:EscapeTest
case62	test/dynamic/ColorfulMazeTest.java	/^  public void case62() {$/;"	m	class:ColorfulMazeTest
case62	test/dynamic/MiniPaint2Test.java	/^  public void case62() {$/;"	m	class:MiniPaintTest
case62	test/dynamic/MiniPaintTest.java	/^  public void case62() {$/;"	m	class:MiniPaintTest
case62	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case62() {$/;"	m	class:TheProgrammingContestDivOneTest
case62	test/easy/BagOfDevouringTest.java	/^  public void case62() {$/;"	m	class:BagOfDevouringTest
case62	test/graph/EscapeTest.java	/^  public void case62() {$/;"	m	class:EscapeTest
case63	test/dynamic/ColorfulMazeTest.java	/^  public void case63() {$/;"	m	class:ColorfulMazeTest
case63	test/dynamic/MiniPaint2Test.java	/^  public void case63() {$/;"	m	class:MiniPaintTest
case63	test/dynamic/MiniPaintTest.java	/^  public void case63() {$/;"	m	class:MiniPaintTest
case63	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case63() {$/;"	m	class:TheProgrammingContestDivOneTest
case63	test/easy/BagOfDevouringTest.java	/^  public void case63() {$/;"	m	class:BagOfDevouringTest
case63	test/graph/EscapeTest.java	/^  public void case63() {$/;"	m	class:EscapeTest
case64	test/dynamic/ColorfulMazeTest.java	/^  public void case64() {$/;"	m	class:ColorfulMazeTest
case64	test/dynamic/MiniPaint2Test.java	/^  public void case64() {$/;"	m	class:MiniPaintTest
case64	test/dynamic/MiniPaintTest.java	/^  public void case64() {$/;"	m	class:MiniPaintTest
case64	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case64() {$/;"	m	class:TheProgrammingContestDivOneTest
case64	test/easy/BagOfDevouringTest.java	/^  public void case64() {$/;"	m	class:BagOfDevouringTest
case64	test/graph/EscapeTest.java	/^  public void case64() {$/;"	m	class:EscapeTest
case65	test/dynamic/ColorfulMazeTest.java	/^  public void case65() {$/;"	m	class:ColorfulMazeTest
case65	test/dynamic/MiniPaint2Test.java	/^  public void case65() {$/;"	m	class:MiniPaintTest
case65	test/dynamic/MiniPaintTest.java	/^  public void case65() {$/;"	m	class:MiniPaintTest
case65	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case65() {$/;"	m	class:TheProgrammingContestDivOneTest
case65	test/easy/BagOfDevouringTest.java	/^  public void case65() {$/;"	m	class:BagOfDevouringTest
case65	test/graph/EscapeTest.java	/^  public void case65() {$/;"	m	class:EscapeTest
case66	test/dynamic/ColorfulMazeTest.java	/^  public void case66() {$/;"	m	class:ColorfulMazeTest
case66	test/dynamic/MiniPaint2Test.java	/^  public void case66() {$/;"	m	class:MiniPaintTest
case66	test/dynamic/MiniPaintTest.java	/^  public void case66() {$/;"	m	class:MiniPaintTest
case66	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case66() {$/;"	m	class:TheProgrammingContestDivOneTest
case66	test/easy/BagOfDevouringTest.java	/^  public void case66() {$/;"	m	class:BagOfDevouringTest
case66	test/graph/EscapeTest.java	/^  public void case66() {$/;"	m	class:EscapeTest
case67	test/dynamic/ColorfulMazeTest.java	/^  public void case67() {$/;"	m	class:ColorfulMazeTest
case67	test/dynamic/MiniPaint2Test.java	/^  public void case67() {$/;"	m	class:MiniPaintTest
case67	test/dynamic/MiniPaintTest.java	/^  public void case67() {$/;"	m	class:MiniPaintTest
case67	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case67() {$/;"	m	class:TheProgrammingContestDivOneTest
case67	test/easy/BagOfDevouringTest.java	/^  public void case67() {$/;"	m	class:BagOfDevouringTest
case67	test/graph/EscapeTest.java	/^  public void case67() {$/;"	m	class:EscapeTest
case68	test/dynamic/ColorfulMazeTest.java	/^  public void case68() {$/;"	m	class:ColorfulMazeTest
case68	test/dynamic/MiniPaint2Test.java	/^  public void case68() {$/;"	m	class:MiniPaintTest
case68	test/dynamic/MiniPaintTest.java	/^  public void case68() {$/;"	m	class:MiniPaintTest
case68	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case68() {$/;"	m	class:TheProgrammingContestDivOneTest
case68	test/easy/BagOfDevouringTest.java	/^  public void case68() {$/;"	m	class:BagOfDevouringTest
case68	test/graph/EscapeTest.java	/^  public void case68() {$/;"	m	class:EscapeTest
case69	test/dynamic/ColorfulMazeTest.java	/^  public void case69() {$/;"	m	class:ColorfulMazeTest
case69	test/dynamic/MiniPaint2Test.java	/^  public void case69() {$/;"	m	class:MiniPaintTest
case69	test/dynamic/MiniPaintTest.java	/^  public void case69() {$/;"	m	class:MiniPaintTest
case69	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case69() {$/;"	m	class:TheProgrammingContestDivOneTest
case69	test/easy/BagOfDevouringTest.java	/^  public void case69() {$/;"	m	class:BagOfDevouringTest
case69	test/graph/EscapeTest.java	/^  public void case69() {$/;"	m	class:EscapeTest
case7	test/dp/JewelryTest.java	/^  public void case7() {$/;"	m	class:JewelryTest
case7	test/dp/QuickSumsTest.java	/^  public void case7() {$/;"	m	class:QuickSumsTest
case7	test/dp/ShortPalindromesTest.java	/^  public void case7() {$/;"	m	class:ShortPalindromesTest
case7	test/dp/StripePainterTest.java	/^  public void case7() {$/;"	m	class:StripePainterTest
case7	test/dynamic/ColorfulMazeTest.java	/^  public void case7() {$/;"	m	class:ColorfulMazeTest
case7	test/dynamic/MiniPaint2Test.java	/^  public void case7() {$/;"	m	class:MiniPaintTest
case7	test/dynamic/MiniPaintTest.java	/^  public void case7() {$/;"	m	class:MiniPaintTest
case7	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case7() {$/;"	m	class:TheProgrammingContestDivOneTest
case7	test/easy/BagOfDevouringTest.java	/^  public void case7() {$/;"	m	class:BagOfDevouringTest
case7	test/graph/DungeonEscapeTest.java	/^  public void case7() {$/;"	m	class:DungeonEscapeTest
case7	test/graph/EscapeTest.java	/^  public void case7() {$/;"	m	class:EscapeTest
case7	test/graph/MarketingTest.java	/^  public void case7() {$/;"	m	class:MarketingTest
case70	test/dynamic/ColorfulMazeTest.java	/^  public void case70() {$/;"	m	class:ColorfulMazeTest
case70	test/dynamic/MiniPaint2Test.java	/^  public void case70() {$/;"	m	class:MiniPaintTest
case70	test/dynamic/MiniPaintTest.java	/^  public void case70() {$/;"	m	class:MiniPaintTest
case70	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case70() {$/;"	m	class:TheProgrammingContestDivOneTest
case70	test/easy/BagOfDevouringTest.java	/^  public void case70() {$/;"	m	class:BagOfDevouringTest
case70	test/graph/EscapeTest.java	/^  public void case70() {$/;"	m	class:EscapeTest
case71	test/dynamic/ColorfulMazeTest.java	/^  public void case71() {$/;"	m	class:ColorfulMazeTest
case71	test/dynamic/MiniPaint2Test.java	/^  public void case71() {$/;"	m	class:MiniPaintTest
case71	test/dynamic/MiniPaintTest.java	/^  public void case71() {$/;"	m	class:MiniPaintTest
case71	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case71() {$/;"	m	class:TheProgrammingContestDivOneTest
case71	test/graph/EscapeTest.java	/^  public void case71() {$/;"	m	class:EscapeTest
case72	test/dynamic/ColorfulMazeTest.java	/^  public void case72() {$/;"	m	class:ColorfulMazeTest
case72	test/dynamic/MiniPaint2Test.java	/^  public void case72() {$/;"	m	class:MiniPaintTest
case72	test/dynamic/MiniPaintTest.java	/^  public void case72() {$/;"	m	class:MiniPaintTest
case72	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case72() {$/;"	m	class:TheProgrammingContestDivOneTest
case72	test/graph/EscapeTest.java	/^  public void case72() {$/;"	m	class:EscapeTest
case73	test/dynamic/ColorfulMazeTest.java	/^  public void case73() {$/;"	m	class:ColorfulMazeTest
case73	test/dynamic/MiniPaint2Test.java	/^  public void case73() {$/;"	m	class:MiniPaintTest
case73	test/dynamic/MiniPaintTest.java	/^  public void case73() {$/;"	m	class:MiniPaintTest
case73	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case73() {$/;"	m	class:TheProgrammingContestDivOneTest
case73	test/graph/EscapeTest.java	/^  public void case73() {$/;"	m	class:EscapeTest
case74	test/dynamic/ColorfulMazeTest.java	/^  public void case74() {$/;"	m	class:ColorfulMazeTest
case74	test/dynamic/MiniPaint2Test.java	/^  public void case74() {$/;"	m	class:MiniPaintTest
case74	test/dynamic/MiniPaintTest.java	/^  public void case74() {$/;"	m	class:MiniPaintTest
case74	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case74() {$/;"	m	class:TheProgrammingContestDivOneTest
case74	test/graph/EscapeTest.java	/^  public void case74() {$/;"	m	class:EscapeTest
case75	test/dynamic/ColorfulMazeTest.java	/^  public void case75() {$/;"	m	class:ColorfulMazeTest
case75	test/dynamic/MiniPaint2Test.java	/^  public void case75() {$/;"	m	class:MiniPaintTest
case75	test/dynamic/MiniPaintTest.java	/^  public void case75() {$/;"	m	class:MiniPaintTest
case75	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case75() {$/;"	m	class:TheProgrammingContestDivOneTest
case75	test/graph/EscapeTest.java	/^  public void case75() {$/;"	m	class:EscapeTest
case76	test/dynamic/MiniPaint2Test.java	/^  public void case76() {$/;"	m	class:MiniPaintTest
case76	test/dynamic/MiniPaintTest.java	/^  public void case76() {$/;"	m	class:MiniPaintTest
case76	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case76() {$/;"	m	class:TheProgrammingContestDivOneTest
case76	test/graph/EscapeTest.java	/^  public void case76() {$/;"	m	class:EscapeTest
case77	test/dynamic/MiniPaint2Test.java	/^  public void case77() {$/;"	m	class:MiniPaintTest
case77	test/dynamic/MiniPaintTest.java	/^  public void case77() {$/;"	m	class:MiniPaintTest
case77	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case77() {$/;"	m	class:TheProgrammingContestDivOneTest
case77	test/graph/EscapeTest.java	/^  public void case77() {$/;"	m	class:EscapeTest
case78	test/dynamic/MiniPaint2Test.java	/^  public void case78() {$/;"	m	class:MiniPaintTest
case78	test/dynamic/MiniPaintTest.java	/^  public void case78() {$/;"	m	class:MiniPaintTest
case78	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case78() {$/;"	m	class:TheProgrammingContestDivOneTest
case78	test/graph/EscapeTest.java	/^  public void case78() {$/;"	m	class:EscapeTest
case79	test/dynamic/MiniPaint2Test.java	/^  public void case79() {$/;"	m	class:MiniPaintTest
case79	test/dynamic/MiniPaintTest.java	/^  public void case79() {$/;"	m	class:MiniPaintTest
case79	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case79() {$/;"	m	class:TheProgrammingContestDivOneTest
case79	test/graph/EscapeTest.java	/^  public void case79() {$/;"	m	class:EscapeTest
case8	test/dp/QuickSumsTest.java	/^  public void case8() {$/;"	m	class:QuickSumsTest
case8	test/dp/ShortPalindromesTest.java	/^  public void case8() {$/;"	m	class:ShortPalindromesTest
case8	test/dp/StripePainterTest.java	/^  public void case8() {$/;"	m	class:StripePainterTest
case8	test/dynamic/ColorfulMazeTest.java	/^  public void case8() {$/;"	m	class:ColorfulMazeTest
case8	test/dynamic/MiniPaint2Test.java	/^  public void case8() {$/;"	m	class:MiniPaintTest
case8	test/dynamic/MiniPaintTest.java	/^  public void case8() {$/;"	m	class:MiniPaintTest
case8	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case8() {$/;"	m	class:TheProgrammingContestDivOneTest
case8	test/easy/BagOfDevouringTest.java	/^  public void case8() {$/;"	m	class:BagOfDevouringTest
case8	test/graph/DungeonEscapeTest.java	/^  public void case8() {$/;"	m	class:DungeonEscapeTest
case8	test/graph/EscapeTest.java	/^  public void case8() {$/;"	m	class:EscapeTest
case8	test/graph/MarketingTest.java	/^  public void case8() {$/;"	m	class:MarketingTest
case80	test/dynamic/MiniPaint2Test.java	/^  public void case80() {$/;"	m	class:MiniPaintTest
case80	test/dynamic/MiniPaintTest.java	/^  public void case80() {$/;"	m	class:MiniPaintTest
case80	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case80() {$/;"	m	class:TheProgrammingContestDivOneTest
case80	test/graph/EscapeTest.java	/^  public void case80() {$/;"	m	class:EscapeTest
case81	test/dynamic/MiniPaint2Test.java	/^  public void case81() {$/;"	m	class:MiniPaintTest
case81	test/dynamic/MiniPaintTest.java	/^  public void case81() {$/;"	m	class:MiniPaintTest
case81	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case81() {$/;"	m	class:TheProgrammingContestDivOneTest
case81	test/graph/EscapeTest.java	/^  public void case81() {$/;"	m	class:EscapeTest
case82	test/dynamic/MiniPaint2Test.java	/^  public void case82() {$/;"	m	class:MiniPaintTest
case82	test/dynamic/MiniPaintTest.java	/^  public void case82() {$/;"	m	class:MiniPaintTest
case82	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case82() {$/;"	m	class:TheProgrammingContestDivOneTest
case82	test/graph/EscapeTest.java	/^  public void case82() {$/;"	m	class:EscapeTest
case83	test/dynamic/MiniPaint2Test.java	/^  public void case83() {$/;"	m	class:MiniPaintTest
case83	test/dynamic/MiniPaintTest.java	/^  public void case83() {$/;"	m	class:MiniPaintTest
case83	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case83() {$/;"	m	class:TheProgrammingContestDivOneTest
case83	test/graph/EscapeTest.java	/^  public void case83() {$/;"	m	class:EscapeTest
case84	test/dynamic/MiniPaint2Test.java	/^  public void case84() {$/;"	m	class:MiniPaintTest
case84	test/dynamic/MiniPaintTest.java	/^  public void case84() {$/;"	m	class:MiniPaintTest
case84	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case84() {$/;"	m	class:TheProgrammingContestDivOneTest
case84	test/graph/EscapeTest.java	/^  public void case84() {$/;"	m	class:EscapeTest
case85	test/dynamic/MiniPaint2Test.java	/^  public void case85() {$/;"	m	class:MiniPaintTest
case85	test/dynamic/MiniPaintTest.java	/^  public void case85() {$/;"	m	class:MiniPaintTest
case85	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case85() {$/;"	m	class:TheProgrammingContestDivOneTest
case85	test/graph/EscapeTest.java	/^  public void case85() {$/;"	m	class:EscapeTest
case86	test/dynamic/MiniPaint2Test.java	/^  public void case86() {$/;"	m	class:MiniPaintTest
case86	test/dynamic/MiniPaintTest.java	/^  public void case86() {$/;"	m	class:MiniPaintTest
case86	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case86() {$/;"	m	class:TheProgrammingContestDivOneTest
case86	test/graph/EscapeTest.java	/^  public void case86() {$/;"	m	class:EscapeTest
case87	test/dynamic/MiniPaint2Test.java	/^  public void case87() {$/;"	m	class:MiniPaintTest
case87	test/dynamic/MiniPaintTest.java	/^  public void case87() {$/;"	m	class:MiniPaintTest
case87	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case87() {$/;"	m	class:TheProgrammingContestDivOneTest
case87	test/graph/EscapeTest.java	/^  public void case87() {$/;"	m	class:EscapeTest
case88	test/dynamic/MiniPaint2Test.java	/^  public void case88() {$/;"	m	class:MiniPaintTest
case88	test/dynamic/MiniPaintTest.java	/^  public void case88() {$/;"	m	class:MiniPaintTest
case88	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case88() {$/;"	m	class:TheProgrammingContestDivOneTest
case88	test/graph/EscapeTest.java	/^  public void case88() {$/;"	m	class:EscapeTest
case89	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case89() {$/;"	m	class:TheProgrammingContestDivOneTest
case89	test/graph/EscapeTest.java	/^  public void case89() {$/;"	m	class:EscapeTest
case9	test/dp/QuickSumsTest.java	/^  public void case9() {$/;"	m	class:QuickSumsTest
case9	test/dp/ShortPalindromesTest.java	/^  public void case9() {$/;"	m	class:ShortPalindromesTest
case9	test/dp/StripePainterTest.java	/^  public void case9() {$/;"	m	class:StripePainterTest
case9	test/dynamic/ColorfulMazeTest.java	/^  public void case9() {$/;"	m	class:ColorfulMazeTest
case9	test/dynamic/MiniPaint2Test.java	/^  public void case9() {$/;"	m	class:MiniPaintTest
case9	test/dynamic/MiniPaintTest.java	/^  public void case9() {$/;"	m	class:MiniPaintTest
case9	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case9() {$/;"	m	class:TheProgrammingContestDivOneTest
case9	test/easy/BagOfDevouringTest.java	/^  public void case9() {$/;"	m	class:BagOfDevouringTest
case9	test/graph/DungeonEscapeTest.java	/^  public void case9() {$/;"	m	class:DungeonEscapeTest
case9	test/graph/EscapeTest.java	/^  public void case9() {$/;"	m	class:EscapeTest
case9	test/graph/MarketingTest.java	/^  public void case9() {$/;"	m	class:MarketingTest
case90	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case90() {$/;"	m	class:TheProgrammingContestDivOneTest
case91	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case91() {$/;"	m	class:TheProgrammingContestDivOneTest
case92	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case92() {$/;"	m	class:TheProgrammingContestDivOneTest
case93	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case93() {$/;"	m	class:TheProgrammingContestDivOneTest
case94	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case94() {$/;"	m	class:TheProgrammingContestDivOneTest
case95	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case95() {$/;"	m	class:TheProgrammingContestDivOneTest
case96	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case96() {$/;"	m	class:TheProgrammingContestDivOneTest
case97	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case97() {$/;"	m	class:TheProgrammingContestDivOneTest
case98	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case98() {$/;"	m	class:TheProgrammingContestDivOneTest
case99	test/dynamic/TheProgrammingContestDivOneTest.java	/^  public void case99() {$/;"	m	class:TheProgrammingContestDivOneTest
ceilDiv	src/graph/KiloManX3.java	/^  int ceilDiv(int a, int b) {$/;"	m	class:KiloManX3
chancesOfWinning	src/math/KingOfTheCourt.java	/^  public double chancesOfWinning(int[] ability) {$/;"	m	class:KingOfTheCourt
chars	src/dp/ShortPalindromes.java	/^  char[] chars;$/;"	f	class:ShortPalindromes
cloneMatch	src/graph/Parking.java	/^  int[][] cloneMatch() {$/;"	m	class:Parking
color	src/dynamic/CssRules.java	/^    public final int color;$/;"	f	class:CssRules.Tag
color	src/graph/Marketing.java	/^  int[] color;$/;"	f	class:Marketing
colorfulmaze	test/dynamic/ColorfulMazeTest.java	/^  ColorfulMaze colorfulmaze = new ColorfulMaze();$/;"	f	class:ColorfulMazeTest
cols	src/graph/RevolvingDoors.java	/^  int cols = 0;$/;"	f	class:RevolvingDoors
compact	src/dp/KiloManX.java	/^  int[] compact(int[] xs, int i) {$/;"	m	class:KiloManX
compare	src/dp/ShortPalindromes.java	/^    public int compare(String a, String b) {$/;"	m	class:ShortPalindromes.StringComparator
compareTo	src/dp/WeightedIntervalScheduling.java	/^    public int compareTo(Interval other) {$/;"	m	class:WeightedIntervalScheduling.Interval
compareTo	src/dynamic/Gifts.java	/^        public int compareTo(Node other) {$/;"	m	class:Gifts.Node
compareTo	src/dynamic/MiniPaint.java	/^    public int compareTo(Node other) {$/;"	m	class:MiniPaint.Node
compareTo	src/easy/MedalTable.java	/^    public int compareTo(Country other) {$/;"	m	class:MedalTable.Country
compareTo	src/graph/IslandFerries.java	/^    public int compareTo(Node other) {$/;"	m	class:IslandFerries.Node
compareTo	src/graph/KiloManX3.java	/^    public int compareTo(Node other) {$/;"	m	class:KiloManX3.Node
compareTo	src/graph/RoadReconstruction.java	/^    public int compareTo(Node other) {$/;"	m	class:RoadReconstruction.Node
compareTo	src/graph/RoboCourier.java	/^    public int compareTo(Node other) {$/;"	m	class:RoboCourier.Node
compareTo	src/greedy/MLBRecord.java	/^    public int compareTo(Team other) {$/;"	m	class:MLBRecord.Team
compute	src/dynamic/ColorfulMazeTwo.java	/^  double compute(String[] maze, int[] trap) {$/;"	m	class:ColorfulMazeTwo
computeBest	src/graph/Parking.java	/^  int computeBest() {$/;"	m	class:Parking
computeMatching	src/graph/Parking.java	/^  int computeMatching(int cutoff) {$/;"	m	class:Parking
computeStrokes	src/dynamic/MiniPaint.java	/^  void computeStrokes() {$/;"	m	class:MiniPaint
computeWeights	src/graph/Parking.java	/^  void computeWeights(int car) {$/;"	m	class:Parking
copy	src/bkt/BridgeCrossing.java	/^    public State copy() {$/;"	m	class:BridgeCrossing.State
copyGame	src/recursion/AntiChess.java	/^  int[][] copyGame(int[][] game) {$/;"	m	class:AntiChess
copyGame	src/recursion/AntiChess.java	/^  int[][] copyGame(int[][] game, int j) {$/;"	m	class:AntiChess
copyMaze	src/graph/RevolvingDoors.java	/^    public int[][] copyMaze() {$/;"	m	class:RevolvingDoors.Maze
cost	src/dp/KiloManX.java	/^    public int cost;$/;"	f	class:KiloManX.Node
cost	src/dynamic/RadarGuns.java	/^  int[][] cost;$/;"	f	class:Hungarian
cost	src/dynamic/RadarGuns.java	/^  int[][] cost;$/;"	f	class:RadarGuns
cost	src/graph/Escape.java	/^    public int cost;$/;"	f	class:Escape.Node
cost	src/graph/Escape.java	/^  int[][] cost;$/;"	f	class:Escape
cost	src/graph/IslandFerries.java	/^    public int cost;$/;"	f	class:IslandFerries.Node
cost	src/graph/IslandFerries.java	/^    public int cost;$/;"	f	class:IslandFerries.Ticket
cost	src/graph/KiloManX3.java	/^    public int cost;$/;"	f	class:KiloManX3.Node
cost	src/graph/RoadReconstruction.java	/^    public final int cost;$/;"	f	class:RoadReconstruction.Node
cost	src/graph/RoboCourier.java	/^    public int cost;$/;"	f	class:RoboCourier.Node
costs	src/graph/IslandFerries.java	/^  int[] costs;$/;"	f	class:IslandFerries
costs	src/graph/IslandFerries.java	/^  public int[] costs(String[] ferryLegs, String[] ferryPrices) {$/;"	m	class:IslandFerries
count	src/dynamic/Nim.java	/^  public int count(int K, int L) {$/;"	m	class:Nim
count	src/dynamic/NumberPyramids.java	/^    public int count(int baseLength, int top) {$/;"	m	class:NumberPyramids
count	src/dynamic/NumbersAndMatches.java	/^    long count(int d, int moves, int matches) {$/;"	m	class:NumbersAndMatches
count	src/dynamic/RotatingTriangles.java	/^  public int count(String[] grid) {$/;"	m	class:RotatingTriangles
count	src/dynamic/WeirdTimes.java	/^    int[][] count;$/;"	f	class:WeirdTimes
count	src/dynamic/YetAnotherORProblem.java	/^  long count(int t, int eq) {$/;"	m	class:YetAnotherORProblem
count	src/easy/PrimePalindromic.java	/^  public int count(int A, int B) {$/;"	m	class:PrimePalindromic
count	src/graph/PathFinding.java	/^    public int count;$/;"	f	class:PathFinding.Node
countFlags	src/dynamic/Flags.java	/^  long countFlags(long stripes) {$/;"	m	class:Flags
countOnes	src/dynamic/Gifts.java	/^    int countOnes(int mask) {$/;"	m	class:Gifts
countOnes	src/math/Hangman42.java	/^  int countOnes(int mask) {$/;"	m	class:Hangman42
countOperations	src/graph/DivisorInc.java	/^  public int countOperations(int N, int M) {$/;"	m	class:DivisorInc
countReachable	src/graph/IslandFerries.java	/^  void countReachable() {$/;"	m	class:IslandFerries
countRules	src/dynamic/CssRules.java	/^  int countRules(Tag t, boolean covered) {$/;"	m	class:CssRules
countSequences	src/dynamic/YetAnotherORProblem.java	/^  public int countSequences(long[] R) {$/;"	m	class:YetAnotherORProblem
create	src/graph/Escape.java	/^    public Node create(int dx, int dy) {$/;"	m	class:Escape.Node
curStrokes	src/dynamic/MiniPaint.java	/^    public int curStrokes;$/;"	f	class:MiniPaint.Node
data	src/dp/QuickSums.java	/^  int[][] data;$/;"	f	class:QuickSums
data	src/dp/StripePainter.java	/^  int[][][] data;$/;"	f	class:StripePainter
data	src/dynamic/StarAdventure.java	/^  int[][] data;$/;"	f	class:StarAdventure
dc	src/dynamic/TheEasyChase.java	/^    int dc[] = {0,0,-1,1,0,0,-2,2};$/;"	f	class:TheEasyChase
debug	src/bkt/BridgeCrossing.java	/^  void debug(Object...os) {$/;"	m	class:BridgeCrossing
debug	src/dp/AvoidRoads.java	/^  void debug(Object...os) {$/;"	m	class:AvoidRoads
debug	src/dp/BadNeighbors.java	/^  void debug(Object...os) {$/;"	m	class:BadNeighbors
debug	src/dp/FlowerGarden.java	/^  void debug(Object...os) {$/;"	m	class:FlowerGarden
debug	src/dp/GameOfLifeDivOne.java	/^  void debug(Object...os) {$/;"	m	class:GameOfLifeDivOne
debug	src/dp/Jewelry.java	/^  void debug(Object...os) {$/;"	m	class:Jewelry
debug	src/dp/KiloManX.java	/^  void debug(Object...os) {$/;"	m	class:KiloManX
debug	src/dp/QuickSums.java	/^  void debug(Object...os) {$/;"	m	class:QuickSums
debug	src/dp/ShortPalindromes.java	/^  void debug(Object...os) {$/;"	m	class:ShortPalindromes
debug	src/dp/StripePainter.java	/^  void debug(Object...os) {$/;"	m	class:StripePainter
debug	src/dp/WeightedIntervalScheduling.java	/^  void debug(Object...os) {$/;"	m	class:WeightedIntervalScheduling
debug	src/dp/ZigZag.java	/^  void debug(Object...os) {$/;"	m	class:ZigZag
debug	src/dynamic/AdjacentSwaps.java	/^  private void debug(Object... os) {$/;"	m	class:AdjacentSwaps	file:
debug	src/dynamic/AntiMatter.java	/^  private void debug(Object... os) {$/;"	m	class:AntiMatter	file:
debug	src/dynamic/ChessKnight.java	/^  private void debug(Object... os) {$/;"	m	class:ChessKnight	file:
debug	src/dynamic/ColorfulMaze.java	/^    private void debug(Object... os) {$/;"	m	class:ColorfulMaze	file:
debug	src/dynamic/ColorfulMazeTwo.java	/^  private void debug(Object... os) {$/;"	m	class:ColorfulMazeTwo	file:
debug	src/dynamic/CssRules.java	/^  private void debug(Object... os) {$/;"	m	class:CssRules	file:
debug	src/dynamic/Flags.java	/^  private void debug(Object... os) {$/;"	m	class:Flags	file:
debug	src/dynamic/FoxAverageSequence.java	/^  private void debug(Object... os) {$/;"	m	class:FoxAverageSequence	file:
debug	src/dynamic/Gifts.java	/^    private void debug(Object... os) {$/;"	m	class:Gifts	file:
debug	src/dynamic/MakeSquare.java	/^  private void debug(Object... os) {$/;"	m	class:MakeSquare	file:
debug	src/dynamic/MiniPaint.java	/^  private void debug(Object... os) {$/;"	m	class:MiniPaint	file:
debug	src/dynamic/Nim.java	/^  private void debug(Object... os) {$/;"	m	class:Nim	file:
debug	src/dynamic/NumberPyramids.java	/^    private void debug(Object... os) {$/;"	m	class:NumberPyramids	file:
debug	src/dynamic/NumbersAndMatches.java	/^    private void debug(Object... os) {$/;"	m	class:NumbersAndMatches	file:
debug	src/dynamic/P8XCoinChange.java	/^  private void debug(Object... os) {$/;"	m	class:P8XCoinChange	file:
debug	src/dynamic/RadarGuns.java	/^  private void debug(Object... os) {$/;"	m	class:RadarGuns	file:
debug	src/dynamic/RadarGuns.java	/^  void debug(Object... os) {$/;"	m	class:Hungarian
debug	src/dynamic/RandomSort.java	/^    private void debug(Object... os) {$/;"	m	class:RandomSort	file:
debug	src/dynamic/RotatingTriangles.java	/^  private void debug(Object... os) {$/;"	m	class:RotatingTriangles	file:
debug	src/dynamic/StarAdventure.java	/^  private void debug(Object... os) {$/;"	m	class:StarAdventure	file:
debug	src/dynamic/TheCowDivTwo.java	/^  private void debug(Object... os) {$/;"	m	class:TheCowDivTwo	file:
debug	src/dynamic/TheEasyChase.java	/^    private void debug(Object... os) {$/;"	m	class:TheEasyChase	file:
debug	src/dynamic/TheSumOfLuckyNumbers.java	/^    private void debug(Object... os) {$/;"	m	class:TheSumOfLuckyNumbers	file:
debug	src/dynamic/WeirdTimes.java	/^    private void debug(Object... os) {$/;"	m	class:WeirdTimes	file:
debug	src/dynamic/YetAnotherORProblem.java	/^  private void debug(Object... os) {$/;"	m	class:YetAnotherORProblem	file:
debug	src/easy/FairWorkload.java	/^  private void debug(Object... os) {$/;"	m	class:FairWorkload	file:
debug	src/easy/LargestGap.java	/^    private void debug(Object... os) {$/;"	m	class:LargestGap	file:
debug	src/easy/PrimePalindromic.java	/^  private void debug(Object... os) {$/;"	m	class:PrimePalindromic	file:
debug	src/easy/Rationalization.java	/^  private void debug(Object... os) {$/;"	m	class:Rationalization	file:
debug	src/geometry/PackingShapes.java	/^  private void debug(Object... os) {$/;"	m	class:PackingShapes	file:
debug	src/geometry/RemoteRover.java	/^  private void debug(Object... os) {$/;"	m	class:RemoteRover	file:
debug	src/graph/Circuits.java	/^  void debug(Object...os) {$/;"	m	class:Circuits
debug	src/graph/DivisorInc.java	/^  private void debug(Object... os) {$/;"	m	class:DivisorInc	file:
debug	src/graph/DrivingAround.java	/^  private void debug(Object... os) {$/;"	m	class:DrivingAround	file:
debug	src/graph/DungeonEscape.java	/^  private void debug(Object... os) {$/;"	m	class:DungeonEscape	file:
debug	src/graph/Escape.java	/^  void debug(Object...os) {$/;"	m	class:Escape
debug	src/graph/Graduation.java	/^  private void debug(Object... os) {$/;"	m	class:Graduation	file:
debug	src/graph/GrafixMask.java	/^  void debug(Object...os) {$/;"	m	class:GrafixMask
debug	src/graph/IslandFerries.java	/^  void debug(Object...os) {$/;"	m	class:IslandFerries
debug	src/graph/Marketing.java	/^  void debug(Object...os) {$/;"	m	class:Marketing
debug	src/graph/Parking.java	/^  private void debug(Object... os) {$/;"	m	class:Parking	file:
debug	src/graph/RoadReconstruction.java	/^  private void debug(Object... os) {$/;"	m	class:RoadReconstruction	file:
debug	src/graph/RoboCourier.java	/^  void debug(Object...os) {$/;"	m	class:RoboCourier
debug	src/graph/TeamBuilder.java	/^  private void debug(Object... os) {$/;"	m	class:TeamBuilder	file:
debug	src/greedy/MLBRecord.java	/^  private void debug(Object... os) {$/;"	m	class:MLBRecord	file:
debug	src/math/BaseballLineup.java	/^  private void debug(Object... os) {$/;"	m	class:BaseballLineup	file:
debug	src/math/BenfordsLaw.java	/^  private void debug(Object... os) {$/;"	m	class:BenfordsLaw	file:
debug	src/math/Disaster.java	/^  private void debug(Object... os) {$/;"	m	class:Disaster	file:
debug	src/math/Hangman42.java	/^  private void debug(Object... os) {$/;"	m	class:Hangman42	file:
debug	src/math/KingOfTheCourt.java	/^  private void debug(Object... os) {$/;"	m	class:KingOfTheCourt	file:
debug	src/math/TestScores.java	/^  private void debug(Object... os) {$/;"	m	class:TestScores	file:
debug	src/recursion/AntiChess.java	/^  private void debug(Object... os) {$/;"	m	class:AntiChess	file:
debug	src/recursion/PermissionTree.java	/^  private void debug(Object... os) {$/;"	m	class:PermissionTree	file:
debug	src/recursion/RedBlack.java	/^  private void debug(Object... os) {$/;"	m	class:RedBlack	file:
debug	src/sorting/FloatingMedian.java	/^  private void debug(Object... os) {$/;"	m	class:FloatingMedian	file:
debug	src/stringm/DirectoryTree.java	/^  private void debug(Object... os) {$/;"	m	class:DirectoryTree	file:
debug	test/dp/ShortPalindromesTest.java	/^  void debug(Object...os) {$/;"	m	class:ShortPalindromesTest
decode	src/dp/AvoidRoads.java	/^  static int[] decode(int x) {$/;"	m	class:AvoidRoads
decode	src/graph/RevolvingDoors.java	/^  public static int[] decode(int x) {$/;"	m	class:RevolvingDoors
delete	src/dynamic/MakeSquare.java	/^  int delete(int c) {$/;"	m	class:MakeSquare
dfs	src/graph/Circuits.java	/^  void dfs(int x, int len) {$/;"	m	class:Circuits
dfs	src/graph/Marketing.java	/^  boolean dfs(int x, int c) {$/;"	m	class:Marketing
differentNumbers	src/dynamic/NumbersAndMatches.java	/^    public long differentNumbers(long N, int K) {$/;"	m	class:NumbersAndMatches
digits	src/dynamic/NumbersAndMatches.java	/^    int[] digits;$/;"	f	class:NumbersAndMatches
dijkstra	src/graph/IslandFerries.java	/^  void dijkstra() {$/;"	m	class:IslandFerries
dijstra	src/graph/RoadReconstruction.java	/^  void dijstra() {$/;"	m	class:RoadReconstruction
dir	src/graph/RoboCourier.java	/^    public int dir;$/;"	f	class:RoboCourier.Node
display	src/stringm/DirectoryTree.java	/^    public ArrayList<String> display() {$/;"	m	class:DirectoryTree.Node
display	src/stringm/DirectoryTree.java	/^  public String[] display(String[] files) {$/;"	m	class:DirectoryTree
domes	src/dp/ShortPalindromes.java	/^  String[][][] domes;$/;"	f	class:ShortPalindromes
done	src/bkt/BridgeCrossing.java	/^    public boolean done() {$/;"	m	class:BridgeCrossing.State
dp	src/dynamic/ColorfulMaze.java	/^    double dp(int r, int c, int d, int s) {$/;"	m	class:ColorfulMaze
dr	src/dynamic/TheEasyChase.java	/^    int dr[] = {-1,1,0,0,-2,2,0,0};$/;"	f	class:TheEasyChase
dungeonescape	test/graph/DungeonEscapeTest.java	/^  DungeonEscape dungeonescape = new DungeonEscape();$/;"	f	class:DungeonEscapeTest
dx	src/dynamic/Gifts.java	/^    int [] dx = {0, 0, 1, -1};$/;"	f	class:Gifts
dy	src/dynamic/Gifts.java	/^    int [] dy = {1, -1, 0, 0}; $/;"	f	class:Gifts
encode	src/dp/AvoidRoads.java	/^  static int encode(int i, int j) {$/;"	m	class:AvoidRoads
encode	src/graph/RevolvingDoors.java	/^  public static int encode(int i, int j) {$/;"	m	class:RevolvingDoors
end	src/graph/RoboCourier.java	/^  Node end;$/;"	f	class:RoboCourier
exitTime	src/graph/DungeonEscape.java	/^  public int exitTime(String[] up, String[] down, String[] east, String[] west, int startLevel, int startEasting) {$/;"	m	class:DungeonEscape
exp	src/math/BaseballLineup.java	/^  double exp(int inning, int player, int batters, int outs, int runners) {$/;"	m	class:BaseballLineup
expand	src/dp/KiloManX.java	/^  int[] expand(int[] xs, int x) {$/;"	m	class:KiloManX
expected	src/math/Disaster.java	/^  public double expected(double b, String[] roads) {$/;"	m	class:Disaster
expectedRuns	src/math/BaseballLineup.java	/^  public double expectedRuns(String[] stats) {$/;"	m	class:BaseballLineup
extendedKey	src/graph/RoboCourier.java	/^    public String extendedKey() {$/;"	m	class:RoboCourier.Node
fast	src/graph/RoboCourier.java	/^    public boolean fast = false;$/;"	f	class:RoboCourier.Node
ferry	src/graph/IslandFerries.java	/^    public int ferry;$/;"	f	class:IslandFerries.Ticket
fill	src/graph/Escape.java	/^  void fill(String[] regions, int value) {$/;"	m	class:Escape
fillArea	src/graph/GrafixMask.java	/^  int fillArea(int x, int y, int[][] grid) {$/;"	m	class:GrafixMask
fillStructures	src/graph/IslandFerries.java	/^  void fillStructures(String[] ferryLegs, String[] ferryPrices) {$/;"	m	class:IslandFerries
find	src/dynamic/Gifts.java	/^    int find(char[][] graph, int lim) {$/;"	m	class:Gifts
find	src/dynamic/TheCowDivTwo.java	/^  public int find(int N, int K) {$/;"	m	class:TheCowDivTwo
findBest	src/dynamic/StarAdventure.java	/^  int findBest(int row, int start, int end, int[][] pathBest) {$/;"	m	class:StarAdventure
findHome	src/recursion/PermissionTree.java	/^  public int[] findHome(String[] folders, String[] users) {$/;"	m	class:PermissionTree
findMatch	src/dynamic/RadarGuns.java	/^  boolean findMatch(int i, int cutoff, int[] match, boolean[] seen) {$/;"	m	class:RadarGuns
findPath	src/graph/Graduation.java	/^  int findPath() {$/;"	m	class:Graduation
findPath	src/graph/Parking.java	/^  Vertex findPath(List<Integer>[] graph, int end) {$/;"	m	class:Parking
firstDigit	src/math/BenfordsLaw.java	/^  public static int firstDigit(int n) {$/;"	m	class:BenfordsLaw
func	src/geometry/RemoteRover.java	/^  double func(double x, double offset, int index) {$/;"	m	class:RemoteRover
game	src/graph/Escape.java	/^  int[][] game;$/;"	f	class:Escape
game	src/graph/PathFinding.java	/^  int[][] game;$/;"	f	class:PathFinding
games	src/greedy/MLBRecord.java	/^  int games;$/;"	f	class:MLBRecord
gcd	src/dynamic/ChessKnight.java	/^  public int gcd(int a, int b)$/;"	m	class:ChessKnight
gcd	src/graph/DivisorInc.java	/^  int gcd(int n, int m) {$/;"	m	class:DivisorInc
gen	src/dp/ShortPalindromes.java	/^  void gen(int i, int j, int k) {$/;"	m	class:ShortPalindromes
genNums	src/dynamic/TheSumOfLuckyNumbers.java	/^    void genNums(int c, String s) {$/;"	m	class:TheSumOfLuckyNumbers
generate	src/easy/MedalTable.java	/^  public String[] generate(String[] results) {$/;"	m	class:MedalTable
getAbove	src/graph/RevolvingDoors.java	/^    public int getAbove(int position) {$/;"	m	class:RevolvingDoors.Maze
getAdjCells	src/graph/RevolvingDoors.java	/^    public int[] getAdjCells(int position) {$/;"	m	class:RevolvingDoors.Maze
getBelow	src/graph/RevolvingDoors.java	/^    public int getBelow(int position) {$/;"	m	class:RevolvingDoors.Maze
getBits	src/easy/TableSeating.java	/^  public int[] getBits(int n, int size) {$/;"	m	class:TableSeating
getColorValue	src/dynamic/CssRules.java	/^    private int getColorValue(String color) {$/;"	m	class:CssRules.Tag	file:
getCount	src/dynamic/AdjacentSwaps.java	/^  long getCount(int[] p) {$/;"	m	class:AdjacentSwaps
getCount	src/dynamic/FoxAverageSequence.java	/^  long getCount() {$/;"	m	class:FoxAverageSequence
getCount	src/dynamic/FoxAverageSequence.java	/^  long getCount(int k, int sum, int last, int lt) {$/;"	m	class:FoxAverageSequence
getCount	src/dynamic/WeirdTimes.java	/^    int getCount(int v, int i) {$/;"	m	class:WeirdTimes
getCountDP	src/dynamic/FoxAverageSequence.java	/^  long getCountDP() {$/;"	m	class:FoxAverageSequence
getEnd	src/dp/WeightedIntervalScheduling.java	/^    public int getEnd() {$/;"	m	class:WeightedIntervalScheduling.Interval
getEnd	src/graph/RevolvingDoors.java	/^    public int getEnd() {$/;"	m	class:RevolvingDoors.Maze
getExpected	src/dynamic/RandomSort.java	/^    public double getExpected(int[] permutation) {$/;"	m	class:RandomSort
getExpected	src/easy/TableSeating.java	/^  public double getExpected(int numTables, int[] probValues) {$/;"	m	class:TableSeating
getForbidden	src/graph/SmartWordToy.java	/^  public HashSet<String> getForbidden(String[] forbid) {$/;"	m	class:SmartWordToy
getLargest	src/easy/LargestGap.java	/^    public int getLargest(String[] board) {$/;"	m	class:LargestGap
getLeft	src/graph/RevolvingDoors.java	/^    public int getLeft(int position) {$/;"	m	class:RevolvingDoors.Maze
getLevel	src/graph/RevolvingDoors.java	/^    public int getLevel() {$/;"	m	class:RevolvingDoors.Maze
getLevel	src/graph/SmartWordToy.java	/^    public int getLevel() {$/;"	m	class:SmartWordToy.Word
getMaze	src/graph/RevolvingDoors.java	/^    public int[][] getMaze() {$/;"	m	class:RevolvingDoors.Maze
getMin	src/dynamic/RadarGuns.java	/^  int getMin() {$/;"	m	class:RadarGuns
getMinimalCssRuleCount	src/dynamic/CssRules.java	/^  public int getMinimalCssRuleCount(String[] xhtml) {$/;"	m	class:CssRules
getMostWork	src/easy/FairWorkload.java	/^  public int getMostWork(int[] folders, int workers) {$/;"	m	class:FairWorkload
getName	src/easy/MedalTable.java	/^    public String getName() { return _name; }$/;"	m	class:MedalTable.Country
getNameValue	src/dynamic/CssRules.java	/^    private int getNameValue(String name) {$/;"	m	class:CssRules.Tag	file:
getNext	src/dynamic/WeirdTimes.java	/^    int getNext(int h, int i) {$/;"	m	class:WeirdTimes
getNext	src/graph/SmartWordToy.java	/^    public Word[] getNext() {$/;"	m	class:SmartWordToy.Word
getOrdering	src/dp/FlowerGarden.java	/^  public int[] getOrdering(int[] height, int[] bloom, int[] wilt) {$/;"	m	class:FlowerGarden
getPeople	src/easy/TallPeople.java	/^  public int[] getPeople(String[] people) {$/;"	m	class:TallPeople
getPrimes	src/dynamic/Nim.java	/^  boolean[] getPrimes(int n) {$/;"	m	class:Nim
getPrimes	src/easy/PrimePalindromic.java	/^  boolean[] getPrimes(int n) {$/;"	m	class:PrimePalindromic
getProb	src/dynamic/ColorfulMazeTwo.java	/^  double getProb(char c, int[] trap, boolean[] seen) {$/;"	m	class:ColorfulMazeTwo
getProbability	src/dynamic/ColorfulMaze.java	/^    public double getProbability(String[] maze, int[] trap) {$/;"	m	class:ColorfulMaze
getProbability	src/dynamic/ColorfulMazeTwo.java	/^  public double getProbability(String[] maze, int[] trap) {$/;"	m	class:ColorfulMazeTwo
getRange	src/dynamic/RadarGuns.java	/^  public int[] getRange(int[] enterTimes, int[] exitTimes, int speedTime, int fineCap) {$/;"	m	class:RadarGuns
getRight	src/graph/RevolvingDoors.java	/^    public int getRight(int position) {$/;"	m	class:RevolvingDoors.Maze
getStart	src/dp/WeightedIntervalScheduling.java	/^    public int getStart() {$/;"	m	class:WeightedIntervalScheduling.Interval
getStart	src/dynamic/Gifts.java	/^    Node getStart(char[][] graph) {$/;"	m	class:Gifts
getStart	src/graph/RevolvingDoors.java	/^    public int getStart() {$/;"	m	class:RevolvingDoors.Maze
getTask	src/easy/BusinessTasks.java	/^    public String getTask(String[] list, int n) {$/;"	m	class:BusinessTasks
getTime	src/bkt/BridgeCrossing.java	/^    public int getTime() {$/;"	m	class:BridgeCrossing.State
getTimes	src/bkt/BridgeCrossing.java	/^    public int[] getTimes() {$/;"	m	class:BridgeCrossing.State
getValue	src/graph/RevolvingDoors.java	/^    public int getValue(int position) {$/;"	m	class:RevolvingDoors.Maze
getWeight	src/dp/WeightedIntervalScheduling.java	/^    public int getWeight() {$/;"	m	class:WeightedIntervalScheduling.Interval
getWord	src/graph/SmartWordToy.java	/^    public String getWord() {$/;"	m	class:SmartWordToy.Word
getp	src/dp/WeightedIntervalScheduling.java	/^    public int getp() {$/;"	m	class:WeightedIntervalScheduling.Interval
gifts	src/dynamic/Gifts.java	/^        public final int gifts;$/;"	f	class:Gifts.Node
graph	src/graph/Circuits.java	/^  int[][] graph;$/;"	f	class:Circuits
graph	src/graph/IslandFerries.java	/^  int[][][] graph;$/;"	f	class:IslandFerries
graph	src/graph/Marketing.java	/^  int[][] graph;$/;"	f	class:Marketing
graph	src/math/Disaster.java	/^  double[][] graph;$/;"	f	class:Disaster
gx	src/dynamic/Gifts.java	/^    int [] gx;$/;"	f	class:Gifts
gy	src/dynamic/Gifts.java	/^    int [] gy;$/;"	f	class:Gifts
h	src/dp/FlowerGarden.java	/^  int[] h;$/;"	f	class:FlowerGarden
hasLoc	src/graph/RoboCourier.java	/^    public boolean hasLoc(int x, int y) {$/;"	m	class:RoboCourier.Node
hi	src/greedy/MLBRecord.java	/^    public int hi;$/;"	f	class:MLBRecord.Team
hit	src/math/BaseballLineup.java	/^  int[] hit(int action, int runners) {$/;"	m	class:BaseballLineup
hourValues	src/dynamic/WeirdTimes.java	/^    public int[] hourValues(int[] minuteValues, int K) {$/;"	m	class:WeirdTimes
hours	src/dynamic/WeirdTimes.java	/^    int[] hours; $/;"	f	class:WeirdTimes
howLong	src/graph/Circuits.java	/^  public int howLong(String[] connects, String[] costs) {$/;"	m	class:Circuits
howMany	src/dp/Jewelry.java	/^  public long howMany(int[] values) {$/;"	m	class:Jewelry
howMany	src/graph/Marketing.java	/^  public long howMany(String[] compete) {$/;"	m	class:Marketing
id	src/dynamic/CssRules.java	/^    public final String id;$/;"	f	class:CssRules.Tag
id	src/graph/Parking.java	/^    public final int id;$/;"	f	class:Parking.Vertex
index	src/easy/LargestGap.java	/^        int index;$/;"	f	class:LargestGap.Piece
index	src/greedy/MLBRecord.java	/^    public final int index;$/;"	f	class:MLBRecord.Team
index	src/recursion/PermissionTree.java	/^    public final int index;$/;"	f	class:PermissionTree.Node
index	src/stringm/DirectoryTree.java	/^    public final int index;$/;"	f	class:DirectoryTree.Node
indexToPerm	src/math/KingOfTheCourt.java	/^  int[] indexToPerm(int j, int d) {$/;"	m	class:KingOfTheCourt
initCount	src/dynamic/WeirdTimes.java	/^    void initCount() {$/;"	m	class:WeirdTimes
initLabels	src/dynamic/RadarGuns.java	/^  void initLabels() {$/;"	m	class:Hungarian
initMatch	src/dynamic/RadarGuns.java	/^  void initMatch() {$/;"	m	class:Hungarian
initMatrix	src/dynamic/Flags.java	/^  void initMatrix(String[] forbidden) {$/;"	m	class:Flags
initMatrix	src/dynamic/P8XCoinChange.java	/^  long[][] initMatrix(int n, int start) {$/;"	m	class:P8XCoinChange
initMoves	src/dynamic/NumbersAndMatches.java	/^    void initMoves() {$/;"	m	class:NumbersAndMatches
initNext	src/dynamic/WeirdTimes.java	/^    void initNext() {$/;"	m	class:WeirdTimes
initSlack	src/dynamic/RadarGuns.java	/^  void initSlack(int root) {$/;"	m	class:Hungarian
innerRec	src/dp/GameOfLifeDivOne.java	/^  long innerRec(char[] state) {$/;"	m	class:GameOfLifeDivOne
insert	src/sorting/FloatingMedian.java	/^  void insert(int x) {$/;"	m	class:FloatingMedian
isPrime	src/graph/DivisorInc.java	/^  boolean isPrime(int n){$/;"	m	class:DivisorInc
island	src/graph/IslandFerries.java	/^    public int island;$/;"	f	class:IslandFerries.Node
items	src/stringm/DirectoryTree.java	/^    public ArrayList<Node> items;$/;"	f	class:DirectoryTree.Node
join	src/dynamic/CssRules.java	/^  String join(String[] input) {$/;"	m	class:CssRules
join	src/easy/LargestGap.java	/^    String join(String[] s) {$/;"	m	class:LargestGap
k	src/greedy/MLBRecord.java	/^  int k;$/;"	f	class:MLBRecord
key	src/dp/KiloManX.java	/^    public String key;$/;"	f	class:KiloManX.Node
kth	src/sorting/FloatingMedian.java	/^  long kth(int k) {$/;"	m	class:FloatingMedian
last	src/dp/KiloManX.java	/^    public int last;$/;"	f	class:KiloManX.Node
leastBad	src/dynamic/MiniPaint.java	/^  public int leastBad(String[] picture, int maxStrokes) {$/;"	m	class:MiniPaint
leastShots	src/dp/KiloManX.java	/^  public int leastShots(String[] damageChart, int[] bossHealth) {$/;"	m	class:KiloManX
leastShots	src/dp/KiloManX2.java	/^  public int leastShots(String[] damageChart, int[] bossHealth) {$/;"	m	class:KiloManX2
leastShots	src/graph/KiloManX3.java	/^  public int leastShots(String[] damageChart, int[] bossHealth) {$/;"	m	class:KiloManX3
length	src/easy/LargestGap.java	/^        int length;$/;"	f	class:LargestGap.Piece
lo	src/greedy/MLBRecord.java	/^    public final int lo;$/;"	f	class:MLBRecord.Team
longestZigZag	src/dp/ZigZag.java	/^  public int longestZigZag(int[] seq) {$/;"	m	class:ZigZag
lowest	src/graph/Escape.java	/^  public int lowest(String[] harmful, String[] deadly) {$/;"	m	class:Escape
lx	src/dynamic/RadarGuns.java	/^  int[] lx;       \/\/ x labels$/;"	f	class:Hungarian
ly	src/dynamic/RadarGuns.java	/^  int[] ly;       \/\/ y labels$/;"	f	class:Hungarian
m	src/dynamic/ColorfulMaze.java	/^    int m;$/;"	f	class:ColorfulMaze
m	src/dynamic/Gifts.java	/^    int m;$/;"	f	class:Gifts
m	src/graph/DivisorInc.java	/^    public final int m;$/;"	f	class:DivisorInc.Node
m	src/graph/PathFinding.java	/^  int m, n;$/;"	f	class:PathFinding
make	src/dp/ShortPalindromes.java	/^  String make(String s, char c) {$/;"	m	class:ShortPalindromes
match	src/dynamic/MakeSquare.java	/^  int match(char c1, char c2) {$/;"	m	class:MakeSquare
match	src/graph/Parking.java	/^  int[][] match;$/;"	f	class:Parking
matchCount	src/dynamic/NumbersAndMatches.java	/^    int matchCount(int from, int to) {$/;"	m	class:NumbersAndMatches
max	src/graph/Circuits.java	/^  int max;$/;"	f	class:Circuits
maxAltSum	src/dynamic/MiniPaint.java	/^  int maxAltSum(byte[] row, int index) {$/;"	m	class:MiniPaint
maxDonations	src/dp/BadNeighbors.java	/^  public int maxDonations(int[] donations) {$/;"	m	class:BadNeighbors
maxGifts	src/dynamic/Gifts.java	/^    public int maxGifts(String[] city, int T) {$/;"	m	class:Gifts
maxMatch	src/dynamic/RadarGuns.java	/^  int maxMatch;$/;"	f	class:Hungarian
maxPainted	src/dynamic/MiniPaint.java	/^  int maxPainted() {$/;"	m	class:MiniPaint
maxWeight	src/dp/WeightedIntervalScheduling.java	/^  public int maxWeight(String[] intervals) {$/;"	m	class:WeightedIntervalScheduling
maxWeightMatch	src/dynamic/RadarGuns.java	/^  public int maxWeightMatch() {$/;"	m	class:Hungarian
maze	src/dynamic/ColorfulMaze.java	/^    char[][] maze;$/;"	f	class:ColorfulMaze
mazes	src/graph/RevolvingDoors.java	/^  Queue<Maze> mazes;$/;"	f	class:RevolvingDoors
memo	src/dynamic/ChessKnight.java	/^  double[][][] memo = new double[B][B][100];$/;"	f	class:ChessKnight
memo	src/dynamic/ColorfulMaze.java	/^    double[][][][] memo;$/;"	f	class:ColorfulMaze
memo	src/dynamic/FoxAverageSequence.java	/^  long[][][][] memo;$/;"	f	class:FoxAverageSequence
memo	src/dynamic/TheCowDivTwo.java	/^  long[][][] memo;$/;"	f	class:TheCowDivTwo
memo	src/dynamic/WeirdTimes.java	/^    int[][] memo;$/;"	f	class:WeirdTimes
memo	src/dynamic/YetAnotherORProblem.java	/^  long[][] memo;$/;"	f	class:YetAnotherORProblem
memo	src/math/BaseballLineup.java	/^  double[][][][][] memo;$/;"	f	class:BaseballLineup
memo	src/math/Hangman42.java	/^  double[] memo;$/;"	f	class:Hangman42
merge	src/easy/LargestGap.java	/^        public Piece merge(Piece other) {$/;"	m	class:LargestGap.Piece
minChanges	src/dynamic/MakeSquare.java	/^  public int minChanges(String S) {$/;"	m	class:MakeSquare
minPresses	src/graph/SmartWordToy.java	/^  public int minPresses(String start, String finish, String[] forbid) {$/;"	m	class:SmartWordToy
minStrokes	src/dp/StripePainter.java	/^  public int minStrokes(String stripes) {$/;"	m	class:StripePainter
minSums	src/dp/QuickSums.java	/^  public int minSums(String numbers, int sum) {$/;"	m	class:QuickSums
minTime	src/bkt/BridgeCrossing.java	/^  public int minTime(int[] t) {$/;"	m	class:BridgeCrossing
minTime	src/graph/Parking.java	/^  public int minTime(String[] parking) {$/;"	m	class:Parking
minTimeOld	src/bkt/BridgeCrossing.java	/^  public int minTimeOld(int[] times) {$/;"	m	class:BridgeCrossing
minTurns	src/graph/PathFinding.java	/^  public int minTurns(String[] board) {$/;"	m	class:PathFinding
minTweaks	src/easy/Rationalization.java	/^  public int minTweaks(int[] weights, String[] scores, int desired) {$/;"	m	class:Rationalization
minipaint	test/dynamic/MiniPaint2Test.java	/^  MiniPaint minipaint = new MiniPaint();$/;"	f	class:MiniPaintTest
minipaint	test/dynamic/MiniPaintTest.java	/^  MiniPaint minipaint = new MiniPaint();$/;"	f	class:MiniPaintTest
mins	src/dynamic/WeirdTimes.java	/^    int[] mins;$/;"	f	class:WeirdTimes
moreClasses	src/graph/Graduation.java	/^  public String moreClasses(String classesTaken, String[] requirements) {$/;"	m	class:Graduation
mostStars	src/dynamic/StarAdventure.java	/^  public int mostStars(String[] level) {$/;"	m	class:StarAdventure
move	src/bkt/BridgeCrossing.java	/^    public void move(int i, int j) {$/;"	m	class:BridgeCrossing.State
move	src/dynamic/ColorfulMaze.java	/^    int[][] move = new int[][] { new int[] { -1, 0, 1, 0 }, new int[] { 0, -1, 0, 1 } }; \/\/ TODO: remove$/;"	f	class:ColorfulMaze
move	src/dynamic/NumbersAndMatches.java	/^    int[][] move;$/;"	f	class:NumbersAndMatches
move	src/graph/RoboCourier.java	/^    public Node move(int dir, int cost) {$/;"	m	class:RoboCourier.Node
move	src/graph/RoboCourier.java	/^    public Node move(int dir, int cost, boolean fast) {$/;"	m	class:RoboCourier.Node
move	src/graph/RoboCourier.java	/^    public Node[] move(String to) {$/;"	m	class:RoboCourier.Node
moveBlack	src/recursion/AntiChess.java	/^  int moveBlack(int[][] game, int taken, int qbest) {$/;"	m	class:AntiChess
moveCount	src/dynamic/NumbersAndMatches.java	/^    int moveCount(int from, int to) {$/;"	m	class:NumbersAndMatches
moveWhite	src/recursion/AntiChess.java	/^  int moveWhite(int[][] game, int taken, int qbest) {$/;"	m	class:AntiChess
movec	src/dynamic/ColorfulMaze.java	/^    int[] movec = new int[] { 0, -1, 0, 1 };$/;"	f	class:ColorfulMaze
mover	src/dynamic/ColorfulMaze.java	/^    int[] mover = new int[] { -1, 0, 1, 0 };$/;"	f	class:ColorfulMaze
mul	src/dynamic/P8XCoinChange.java	/^  public static long[][] mul(long[][] a, long[][] b, long mod) {$/;"	m	class:Matrix
mul	src/graph/DrivingAround.java	/^  public static long[][] mul(long[][] a, long[][] b) {$/;"	m	class:DAMatrix
n	src/dp/FlowerGarden.java	/^  int n;$/;"	f	class:FlowerGarden
n	src/dp/ShortPalindromes.java	/^  int n;$/;"	f	class:ShortPalindromes
n	src/dynamic/AdjacentSwaps.java	/^  int n;$/;"	f	class:AdjacentSwaps
n	src/dynamic/ColorfulMaze.java	/^    int n;$/;"	f	class:ColorfulMaze
n	src/dynamic/Gifts.java	/^    int n;$/;"	f	class:Gifts
n	src/dynamic/RadarGuns.java	/^  int n;$/;"	f	class:Hungarian
n	src/dynamic/RadarGuns.java	/^  int n;$/;"	f	class:RadarGuns
n	src/easy/TableSeating.java	/^  int n;$/;"	f	class:TableSeating
n	src/geometry/RemoteRover.java	/^  int n;$/;"	f	class:RemoteRover
n	src/graph/Marketing.java	/^  int n;$/;"	f	class:Marketing
n	src/graph/PathFinding.java	/^  int m, n;$/;"	f	class:PathFinding
n	src/greedy/MLBRecord.java	/^  int n;$/;"	f	class:MLBRecord
name	src/dynamic/CssRules.java	/^    public final int name;$/;"	f	class:CssRules.Tag
name	src/graph/RoadReconstruction.java	/^    public final String name;$/;"	f	class:RoadReconstruction.Node
name	src/stringm/DirectoryTree.java	/^    public final String name;$/;"	f	class:DirectoryTree.Node
next	src/dynamic/WeirdTimes.java	/^    int[][] next;$/;"	f	class:WeirdTimes
nextGen	src/dp/GameOfLifeDivOne.java	/^  long nextGen(long curr, int n) {$/;"	m	class:GameOfLifeDivOne
node	src/graph/GrafixMask.java	/^  Node node(int x, int y) {$/;"	m	class:GrafixMask
node	src/graph/PathFinding.java	/^  Node node(int xa, int ya, int xb, int yb, int count) {$/;"	m	class:PathFinding
numStripes	src/dynamic/Flags.java	/^  public long numStripes(String numFlags, String[] forbidden) {$/;"	m	class:Flags
numTwists	src/recursion/RedBlack.java	/^  public int numTwists(int[] keys) {$/;"	m	class:RedBlack
numWays	src/dp/AvoidRoads.java	/^  public long numWays(int width, int height, String[] bad) {$/;"	m	class:AvoidRoads
numberOfWays	src/graph/DrivingAround.java	/^  public int numberOfWays(String[] adj, int start, int finish, int time) {$/;"	m	class:DrivingAround
nums	src/dynamic/NumbersAndMatches.java	/^    int[] nums = { 6, 3, 5, 5, 4, 5, 6, 3, 7, 6 };$/;"	f	class:NumbersAndMatches
nums	src/dynamic/TheSumOfLuckyNumbers.java	/^    int [] nums;$/;"	f	class:TheSumOfLuckyNumbers
on	src/dynamic/ChessKnight.java	/^  boolean on(int x) {$/;"	m	class:ChessKnight
onDeadly	src/graph/Escape.java	/^    public boolean onDeadly() {$/;"	m	class:Escape.Node
ones	src/dp/GameOfLifeDivOne.java	/^  int ones(long k, int n) {$/;"	m	class:GameOfLifeDivOne
optimalTravel	src/geometry/RemoteRover.java	/^  public double optimalTravel(int[] width, int[] speed, int offset) {$/;"	m	class:RemoteRover
outerRec	src/dp/GameOfLifeDivOne.java	/^  long outerRec(char[] init, int pos) {$/;"	m	class:GameOfLifeDivOne
outside	src/graph/Escape.java	/^    public boolean outside() {$/;"	m	class:Escape.Node
outside	src/graph/PathFinding.java	/^  boolean outside(int x, int y) {$/;"	m	class:PathFinding
paint	src/dynamic/MiniPaint.java	/^  byte[][][][] paint;$/;"	f	class:MiniPaint
palindromic	src/easy/PrimePalindromic.java	/^  boolean palindromic(int n) {$/;"	m	class:PrimePalindromic
parent	src/dynamic/RadarGuns.java	/^  int[] parent;   \/\/ used for storing alternating paths$/;"	f	class:Hungarian
parent	src/graph/Parking.java	/^    public final Vertex parent;$/;"	f	class:Parking.Vertex
parent	src/recursion/PermissionTree.java	/^    public final int parent;$/;"	f	class:PermissionTree.Node
park	src/graph/Parking.java	/^  int[][] park;$/;"	f	class:Parking
parse	src/dynamic/CssRules.java	/^  Tag parse(String input) {$/;"	m	class:CssRules
parse	src/stringm/DirectoryTree.java	/^  int parse(Node parent, int index, int start) {$/;"	m	class:DirectoryTree
parseAttr	src/dynamic/CssRules.java	/^  String parseAttr(String input) {$/;"	m	class:CssRules
parseTag	src/dynamic/CssRules.java	/^  Result parseTag(String text) {$/;"	m	class:CssRules
partition	src/easy/FairWorkload.java	/^  int partition(int[] input, int s, int k) {$/;"	m	class:FairWorkload
paths	src/stringm/DirectoryTree.java	/^  String[][] paths;$/;"	f	class:DirectoryTree
perfectMatch	src/dynamic/RadarGuns.java	/^  boolean perfectMatch(int cutoff) {$/;"	m	class:RadarGuns
permToIndex	src/math/KingOfTheCourt.java	/^  int permToIndex(int[] p) {$/;"	m	class:KingOfTheCourt
pic	src/dynamic/MiniPaint.java	/^  byte[][] pic;$/;"	f	class:MiniPaint
populateClinched	src/greedy/MLBRecord.java	/^  void populateClinched(int[] status) {$/;"	m	class:MLBRecord
pow	src/dynamic/Nim.java	/^  long pow(long x, long y) {$/;"	m	class:Nim
pow	src/dynamic/P8XCoinChange.java	/^  public static long[][] pow(long[][] m, long k, long mod) {$/;"	m	class:Matrix
pow	src/graph/DrivingAround.java	/^  public static long[][] pow(long[][] m, long k) {$/;"	m	class:DAMatrix
prices	src/graph/IslandFerries.java	/^  int[][] prices;$/;"	f	class:IslandFerries
prime	src/easy/PrimePalindromic.java	/^  boolean[] prime;$/;"	f	class:PrimePalindromic
print	src/dynamic/CssRules.java	/^    public void print(String pad) {$/;"	m	class:CssRules.Tag
printGen	src/dp/GameOfLifeDivOne.java	/^  void printGen(int n, int t) {$/;"	m	class:GameOfLifeDivOne
printMaze	src/graph/RevolvingDoors.java	/^  public void printMaze(int[][] maze) {$/;"	m	class:RevolvingDoors
printSolution	src/dp/WeightedIntervalScheduling.java	/^  void printSolution(int k, Interval[] ivals, int[] cache) {$/;"	m	class:WeightedIntervalScheduling
prob	src/dynamic/ChessKnight.java	/^  double prob(int x, int y, int n) {$/;"	m	class:ChessKnight
probOrig	src/dynamic/ChessKnight.java	/^  double probOrig(int x, int y, double p, int n) {$/;"	m	class:ChessKnight
probability	src/dynamic/ChessKnight.java	/^  public double probability(int x, int y, int n) {$/;"	m	class:ChessKnight
probability	src/math/Hangman42.java	/^  public double probability(String[] words) {$/;"	m	class:Hangman42
probs	src/easy/TableSeating.java	/^  double[] probs;$/;"	f	class:TableSeating
probs	src/math/BaseballLineup.java	/^  double[][] probs;$/;"	f	class:BaseballLineup
pushDoor	src/graph/RevolvingDoors.java	/^    public Maze pushDoor(int position, int doorCell) {$/;"	m	class:RevolvingDoors.Maze
px	src/dynamic/Gifts.java	/^        public final int px;$/;"	f	class:Gifts.Node
py	src/dynamic/Gifts.java	/^        public final int py;$/;"	f	class:Gifts.Node
questionableDigit	src/math/BenfordsLaw.java	/^  public int questionableDigit(int[] transactions, int threshold) {$/;"	m	class:BenfordsLaw
queue	src/dp/ShortPalindromes.java	/^  Queue<int[]> queue;$/;"	f	class:ShortPalindromes
r	src/dynamic/ColorfulMaze.java	/^        public final int r;$/;"	f	class:ColorfulMaze.Pt
read	src/recursion/AntiChess.java	/^  void read(int[] pos, String val) {$/;"	m	class:AntiChess
readBad	src/dp/AvoidRoads.java	/^  HashSet<Integer> readBad(String[] bad) {$/;"	m	class:AvoidRoads
rec	src/dp/GameOfLifeDivOne.java	/^  long rec(int stage, int at, int have) {$/;"	m	class:GameOfLifeDivOne
rec	src/dynamic/RandomSort.java	/^    double rec(int[] perm) {$/;"	m	class:RandomSort
rec	src/dynamic/TheCowDivTwo.java	/^  long rec(int n, int k, int sum) {$/;"	m	class:TheCowDivTwo
remove	src/sorting/FloatingMedian.java	/^  void remove(int x) {$/;"	m	class:FloatingMedian
rest	src/dynamic/CssRules.java	/^    public final String rest;$/;"	f	class:CssRules.Result
reverse	src/dp/BadNeighbors.java	/^  void reverse(int[] arr) {$/;"	m	class:BadNeighbors
reverse	src/dp/FlowerGarden.java	/^  void reverse(int[] arr) {$/;"	m	class:FlowerGarden
rotate	src/graph/RevolvingDoors.java	/^    public void rotate(int[][] maze, int i, int j, int left, int right, int up, int down, int flag) {$/;"	m	class:RevolvingDoors.Maze
rotate	src/math/KingOfTheCourt.java	/^  int[] rotate(int[] input, int index) {$/;"	m	class:KingOfTheCourt
row	src/dynamic/MiniPaint.java	/^    public int row;$/;"	f	class:MiniPaint.Node
rows	src/graph/RevolvingDoors.java	/^  int rows = 0;$/;"	f	class:RevolvingDoors
run	src/dynamic/ColorfulMaze.java	/^    double run(int dangerous, int safe, int r, int c) {$/;"	m	class:ColorfulMaze
runCont	src/dynamic/ColorfulMaze.java	/^    double runCont(int dangerous, int safe, int r, int c) {$/;"	m	class:ColorfulMaze
sacrifice	src/recursion/AntiChess.java	/^  public int sacrifice(String[] white, String black) {$/;"	m	class:AntiChess
safe	src/graph/RoboCourier.java	/^  HashMap<String, ArrayList<String>> safe;$/;"	f	class:RoboCourier
samePrefix	src/stringm/DirectoryTree.java	/^  boolean samePrefix(int i, int j, int index) {$/;"	m	class:DirectoryTree
seatings	src/easy/TableSeating.java	/^  double[] seatings;$/;"	f	class:TableSeating
seen	src/graph/KiloManX3.java	/^  boolean[] seen;$/;"	f	class:KiloManX3
seen	src/graph/PathFinding.java	/^  int[][][][] seen;$/;"	f	class:PathFinding
seen	src/graph/RoboCourier.java	/^  HashSet<String> seen;$/;"	f	class:RoboCourier
selectReconstruction	src/graph/RoadReconstruction.java	/^  public String selectReconstruction(String[] roads) {$/;"	m	class:RoadReconstruction
seq	src/dynamic/FoxAverageSequence.java	/^  int[] seq;$/;"	f	class:FoxAverageSequence
setp	src/dp/WeightedIntervalScheduling.java	/^    public void setp(int pval) {$/;"	m	class:WeightedIntervalScheduling.Interval
shortest	src/dp/ShortPalindromes.java	/^  public String shortest(String base) {$/;"	m	class:ShortPalindromes
skill	src/math/KingOfTheCourt.java	/^  int[] skill;$/;"	f	class:KingOfTheCourt
skip	src/dp/AvoidRoads.java	/^  boolean skip(int i, int j) {$/;"	m	class:AvoidRoads
slack	src/dynamic/RadarGuns.java	/^  int[] slack ;$/;"	f	class:Hungarian
slackx	src/dynamic/RadarGuns.java	/^  int[] slackx;   \/\/ l(slackx[y]) + l(y) - w(slackx[y], y) = slack[y]$/;"	f	class:Hungarian
solve	src/bkt/BridgeCrossing.java	/^  void solve(State s) {$/;"	m	class:BridgeCrossing
solve	src/dp/KiloManX.java	/^  int solve() {$/;"	m	class:KiloManX
solve	src/dp/QuickSums.java	/^  int solve(int[] nums, int sum) {$/;"	m	class:QuickSums
solve	src/dp/StripePainter.java	/^  int solve(String input, int left, int right, char c) {$/;"	m	class:StripePainter
solve	src/dynamic/P8XCoinChange.java	/^  public int solve(long coins_sum, long[] values) {$/;"	m	class:P8XCoinChange
solve	src/easy/TableSeating.java	/^  double solve(int mask) {$/;"	m	class:TableSeating
solve	src/graph/RevolvingDoors.java	/^  boolean solve(Maze maze) {$/;"	m	class:RevolvingDoors
solve	src/graph/RoboCourier.java	/^  int solve() {$/;"	m	class:RoboCourier
solveIter	src/dp/WeightedIntervalScheduling.java	/^  int solveIter(Interval[] ivals) {$/;"	m	class:WeightedIntervalScheduling
solveRec	src/dp/WeightedIntervalScheduling.java	/^  int solveRec(int k, Interval[] ivals, int[] cache) {$/;"	m	class:WeightedIntervalScheduling
sons	src/dynamic/CssRules.java	/^    public final List<Tag> sons;$/;"	f	class:CssRules.Tag
sons	src/recursion/PermissionTree.java	/^    public final List<Node> sons;$/;"	f	class:PermissionTree.Node
sort	src/dp/FlowerGarden.java	/^  void sort() {$/;"	m	class:FlowerGarden
sortDesc	src/greedy/MLBRecord.java	/^  void sortDesc(Team[] arr) {$/;"	m	class:MLBRecord
sortedAreas	src/graph/GrafixMask.java	/^  public int[] sortedAreas(String[] rectangles) {$/;"	m	class:GrafixMask
specialLocations	src/graph/TeamBuilder.java	/^  public int[] specialLocations(String[] paths) {$/;"	m	class:TeamBuilder
speed	src/geometry/RemoteRover.java	/^  int[] speed;$/;"	f	class:RemoteRover
spots	src/graph/Parking.java	/^  int[][] spots;$/;"	f	class:Parking
stat	src/dynamic/ColorfulMaze.java	/^    int[][][][] stat;$/;"	f	class:ColorfulMaze
state	src/dp/GameOfLifeDivOne.java	/^  char[] state;$/;"	f	class:GameOfLifeDivOne
state	src/graph/Circuits.java	/^  int[] state;$/;"	f	class:Circuits
states	src/bkt/BridgeCrossing.java	/^  Queue<State> states;$/;"	f	class:BridgeCrossing
states	src/math/Hangman42.java	/^  long[][] states;$/;"	f	class:Hangman42
sum	src/dp/GameOfLifeDivOne.java	/^  int sum(int[] arr) {$/;"	m	class:GameOfLifeDivOne
sum	src/dynamic/StarAdventure.java	/^  int sum(int row, int start, int end) {$/;"	m	class:StarAdventure
sum	src/dynamic/TheSumOfLuckyNumbers.java	/^    public int[] sum(int n) {$/;"	m	class:TheSumOfLuckyNumbers
sumOfMedians	src/sorting/FloatingMedian.java	/^  public long sumOfMedians(int seed, int mul, int add, int N, int K) {$/;"	m	class:FloatingMedian
swap	src/dynamic/RandomSort.java	/^    int[] swap(int i, int j, int[] arr) {$/;"	m	class:RandomSort
swapped	src/graph/PathFinding.java	/^  boolean swapped(Node a, Node b) {$/;"	m	class:PathFinding
tag	src/dynamic/CssRules.java	/^    public final Tag tag;$/;"	f	class:CssRules.Result
teamStatus	src/greedy/MLBRecord.java	/^  public String teamStatus(int[] wins, int gamesLeft, int N) {$/;"	m	class:MLBRecord
teams	src/greedy/MLBRecord.java	/^  Team[] teams;$/;"	f	class:MLBRecord
testCase1	test/bkt/BridgeCrossingTest.java	/^  public void testCase1() {$/;"	m	class:BridgeCrossingTest
testCase1	test/easy/BusinessTasksTest.java	/^  public void testCase1() throws Exception {$/;"	m	class:BusinessTasksTest
testCase1	test/easy/MedalTableTest.java	/^  public void testCase1() {$/;"	m	class:MedalTableTest
testCase1	test/easy/TableSeatingTest.java	/^  public void testCase1() {$/;"	m	class:TableSeatingTest
testCase1	test/easy/TallPeopleTest.java	/^  public void testCase1() {$/;"	m	class:TallPeopleTest
testCase1	test/graph/RevolvingDoorsTest.java	/^  public void testCase1() {$/;"	m	class:RevolvingDoorsTest
testCase1	test/graph/SmartWordToyTest.java	/^  public void testCase1() {$/;"	m	class:SmartWordToyTest
testCase2	test/bkt/BridgeCrossingTest.java	/^  public void testCase2() {$/;"	m	class:BridgeCrossingTest
testCase2	test/easy/MedalTableTest.java	/^  public void testCase2() {$/;"	m	class:MedalTableTest
testCase2	test/graph/RevolvingDoorsTest.java	/^  public void testCase2() {$/;"	m	class:RevolvingDoorsTest
testCase2	test/graph/SmartWordToyTest.java	/^  public void testCase2() {$/;"	m	class:SmartWordToyTest
testCase3	test/bkt/BridgeCrossingTest.java	/^  public void testCase3() {$/;"	m	class:BridgeCrossingTest
testCase3	test/easy/MedalTableTest.java	/^  public void testCase3() {$/;"	m	class:MedalTableTest
testCase3	test/easy/TableSeatingTest.java	/^  public void testCase3() {$/;"	m	class:TableSeatingTest
testCase3	test/graph/RevolvingDoorsTest.java	/^  public void testCase3() {$/;"	m	class:RevolvingDoorsTest
testCase3	test/graph/SmartWordToyTest.java	/^  public void testCase3() {$/;"	m	class:SmartWordToyTest
testCase4	test/bkt/BridgeCrossingTest.java	/^  public void testCase4() {$/;"	m	class:BridgeCrossingTest
testCase4	test/easy/TableSeatingTest.java	/^  public void testCase4() {$/;"	m	class:TableSeatingTest
testCase4	test/graph/RevolvingDoorsTest.java	/^  public void testCase4() {$/;"	m	class:RevolvingDoorsTest
testCase4	test/graph/SmartWordToyTest.java	/^  public void testCase4() {$/;"	m	class:SmartWordToyTest
testCase5	test/easy/TableSeatingTest.java	/^  public void testCase5() {$/;"	m	class:TableSeatingTest
testCase5	test/graph/RevolvingDoorsTest.java	/^  public void testCase5() {$/;"	m	class:RevolvingDoorsTest
testCase5	test/graph/SmartWordToyTest.java	/^  public void testCase5() {$/;"	m	class:SmartWordToyTest
testCase6	test/graph/RevolvingDoorsTest.java	/^  public void testCase6() {$/;"	m	class:RevolvingDoorsTest
testCase6	test/graph/SmartWordToyTest.java	/^  public void testCase6() {$/;"	m	class:SmartWordToyTest
testCase7	test/graph/RevolvingDoorsTest.java	/^  public void testCase7() {$/;"	m	class:RevolvingDoorsTest
testShouldEncodeDecode	test/graph/RevolvingDoorsTest.java	/^  public void testShouldEncodeDecode() {$/;"	m	class:RevolvingDoorsTest
testShouldGetBits	test/easy/TableSeatingTest.java	/^  public void testShouldGetBits() {$/;"	m	class:TableSeatingTest
testShouldGetForbidden	test/graph/SmartWordToyTest.java	/^  public void testShouldGetForbidden() {$/;"	m	class:SmartWordToyTest
theCount	src/dp/GameOfLifeDivOne.java	/^  public long theCount(String init, int t, int k) {$/;"	m	class:GameOfLifeDivOne
theCount	src/dynamic/AdjacentSwaps.java	/^  public int theCount(int[] p) {$/;"	m	class:AdjacentSwaps
theCount	src/dynamic/FoxAverageSequence.java	/^  public int theCount(int[] seq) {$/;"	m	class:FoxAverageSequence
theprogrammingcontestdivone	test/dynamic/TheProgrammingContestDivOneTest.java	/^  TheProgrammingContestDivOne theprogrammingcontestdivone = new TheProgrammingContestDivOne();$/;"	f	class:TheProgrammingContestDivOneTest
ticket	src/graph/IslandFerries.java	/^    public int ticket(int ferry) {$/;"	m	class:IslandFerries.Node
ticket1	src/graph/IslandFerries.java	/^    public Ticket ticket1;$/;"	f	class:IslandFerries.Node
ticket2	src/graph/IslandFerries.java	/^    public Ticket ticket2;$/;"	f	class:IslandFerries.Node
time	src/bkt/BridgeCrossing.java	/^  int time;$/;"	f	class:BridgeCrossing
time	src/dynamic/Gifts.java	/^        public final int time;$/;"	f	class:Gifts.Node
time	src/geometry/RemoteRover.java	/^  double time(int index, double offset) {$/;"	m	class:RemoteRover
time	src/graph/DungeonEscape.java	/^    public final int time;$/;"	f	class:DungeonEscape.Node
time	src/graph/Parking.java	/^    public final int time;$/;"	f	class:Parking.Node
timeToDeliver	src/graph/RoboCourier.java	/^  public int timeToDeliver(String[] path) {$/;"	m	class:RoboCourier
toBits	src/dp/GameOfLifeDivOne.java	/^  String toBits(long k, int n) {$/;"	m	class:GameOfLifeDivOne
toString	src/dp/WeightedIntervalScheduling.java	/^    public String toString() {$/;"	m	class:WeightedIntervalScheduling.Interval
toString	src/dynamic/CssRules.java	/^    public String toString() {$/;"	m	class:CssRules.Tag
toString	src/dynamic/Gifts.java	/^        public String toString() {$/;"	m	class:Gifts.Node
toString	src/easy/LargestGap.java	/^        public String toString() {$/;"	m	class:LargestGap.Piece
toString	src/easy/MedalTable.java	/^    public String toString() {$/;"	m	class:MedalTable.Country
toString	src/graph/IslandFerries.java	/^    public String toString() {$/;"	m	class:IslandFerries.Node
toString	src/graph/IslandFerries.java	/^    public String toString() {$/;"	m	class:IslandFerries.Ticket
toString	src/graph/Parking.java	/^    public String toString() {$/;"	m	class:Parking.Node
toString	src/graph/RevolvingDoors.java	/^    public String toString() {$/;"	m	class:RevolvingDoors.Maze
toString	src/graph/RoboCourier.java	/^    public String toString() {$/;"	m	class:RoboCourier.Node
toString	src/stringm/DirectoryTree.java	/^    public String toString() {$/;"	m	class:DirectoryTree.Node
tokenize	src/easy/TallPeople.java	/^  int[] tokenize(String row) {$/;"	m	class:TallPeople
topc.bkt	src/bkt/BridgeCrossing.java	/^package topc.bkt;$/;"	p
topc.dp	src/dp/AvoidRoads.java	/^package topc.dp;$/;"	p
topc.dp	src/dp/BadNeighbors.java	/^package topc.dp;$/;"	p
topc.dp	src/dp/FlowerGarden.java	/^package topc.dp;$/;"	p
topc.dp	src/dp/GameOfLifeDivOne.java	/^package topc.dp;$/;"	p
topc.dp	src/dp/Jewelry.java	/^package topc.dp;$/;"	p
topc.dp	src/dp/KiloManX.java	/^package topc.dp;$/;"	p
topc.dp	src/dp/KiloManX2.java	/^package topc.dp;$/;"	p
topc.dp	src/dp/QuickSums.java	/^package topc.dp;$/;"	p
topc.dp	src/dp/ShortPalindromes.java	/^package topc.dp;$/;"	p
topc.dp	src/dp/StripePainter.java	/^package topc.dp;$/;"	p
topc.dp	src/dp/WeightedIntervalScheduling.java	/^package topc.dp;$/;"	p
topc.dp	src/dp/ZigZag.java	/^package topc.dp;$/;"	p
topc.dynamic	src/dynamic/AdjacentSwaps.java	/^package topc.dynamic;$/;"	p
topc.dynamic	src/dynamic/AntiMatter.java	/^package topc.dynamic;$/;"	p
topc.dynamic	src/dynamic/ChessKnight.java	/^package topc.dynamic;$/;"	p
topc.dynamic	src/dynamic/ColorfulMaze.java	/^package topc.dynamic;$/;"	p
topc.dynamic	src/dynamic/ColorfulMazeTwo.java	/^package topc.dynamic;$/;"	p
topc.dynamic	src/dynamic/CssRules.java	/^package topc.dynamic;$/;"	p
topc.dynamic	src/dynamic/Flags.java	/^package topc.dynamic;$/;"	p
topc.dynamic	src/dynamic/FoxAverageSequence.java	/^package topc.dynamic;$/;"	p
topc.dynamic	src/dynamic/Gifts.java	/^package topc.dynamic;$/;"	p
topc.dynamic	src/dynamic/MakeSquare.java	/^package topc.dynamic;$/;"	p
topc.dynamic	src/dynamic/MiniPaint.java	/^package topc.dynamic;$/;"	p
topc.dynamic	src/dynamic/Nim.java	/^package topc.dynamic;$/;"	p
topc.dynamic	src/dynamic/NumberPyramids.java	/^package topc.dynamic;$/;"	p
topc.dynamic	src/dynamic/NumbersAndMatches.java	/^package topc.dynamic;$/;"	p
topc.dynamic	src/dynamic/P8XCoinChange.java	/^package topc.dynamic;$/;"	p
topc.dynamic	src/dynamic/RadarGuns.java	/^package topc.dynamic;$/;"	p
topc.dynamic	src/dynamic/RandomSort.java	/^package topc.dynamic;$/;"	p
topc.dynamic	src/dynamic/RotatingTriangles.java	/^package topc.dynamic;$/;"	p
topc.dynamic	src/dynamic/StarAdventure.java	/^package topc.dynamic;$/;"	p
topc.dynamic	src/dynamic/TheCowDivTwo.java	/^package topc.dynamic;$/;"	p
topc.dynamic	src/dynamic/TheEasyChase.java	/^package topc.dynamic;$/;"	p
topc.dynamic	src/dynamic/TheSumOfLuckyNumbers.java	/^package topc.dynamic;$/;"	p
topc.dynamic	src/dynamic/WeirdTimes.java	/^package topc.dynamic;$/;"	p
topc.dynamic	src/dynamic/YetAnotherORProblem.java	/^package topc.dynamic;$/;"	p
topc.easy	src/easy/BusinessTasks.java	/^package topc.easy;$/;"	p
topc.easy	src/easy/FairWorkload.java	/^package topc.easy;$/;"	p
topc.easy	src/easy/Fib.java	/^package topc.easy;$/;"	p
topc.easy	src/easy/LargestGap.java	/^package topc.easy;$/;"	p
topc.easy	src/easy/MedalTable.java	/^package topc.easy;$/;"	p
topc.easy	src/easy/PrimePalindromic.java	/^package topc.easy;$/;"	p
topc.easy	src/easy/Rationalization.java	/^package topc.easy;$/;"	p
topc.easy	src/easy/TableSeating.java	/^package topc.easy;$/;"	p
topc.easy	src/easy/TallPeople.java	/^package topc.easy;$/;"	p
topc.geometry	src/geometry/PackingShapes.java	/^package topc.geometry;$/;"	p
topc.geometry	src/geometry/RemoteRover.java	/^package topc.geometry;$/;"	p
topc.graph	src/graph/Circuits.java	/^package topc.graph;$/;"	p
topc.graph	src/graph/DivisorInc.java	/^package topc.graph;$/;"	p
topc.graph	src/graph/DrivingAround.java	/^package topc.graph;$/;"	p
topc.graph	src/graph/DungeonEscape.java	/^package topc.graph;$/;"	p
topc.graph	src/graph/Escape.java	/^package topc.graph;$/;"	p
topc.graph	src/graph/Graduation.java	/^package topc.graph;$/;"	p
topc.graph	src/graph/GrafixMask.java	/^package topc.graph;$/;"	p
topc.graph	src/graph/IslandFerries.java	/^package topc.graph;$/;"	p
topc.graph	src/graph/KiloManX3.java	/^package topc.graph;$/;"	p
topc.graph	src/graph/Marketing.java	/^package topc.graph;$/;"	p
topc.graph	src/graph/Parking.java	/^package topc.graph;$/;"	p
topc.graph	src/graph/PathFinding.java	/^package topc.graph;$/;"	p
topc.graph	src/graph/RevolvingDoors.java	/^package topc.graph;$/;"	p
topc.graph	src/graph/RoadReconstruction.java	/^package topc.graph;$/;"	p
topc.graph	src/graph/RoboCourier.java	/^package topc.graph;$/;"	p
topc.graph	src/graph/SmartWordToy.java	/^package topc.graph;$/;"	p
topc.graph	src/graph/TeamBuilder.java	/^package topc.graph;$/;"	p
topc.greedy	src/greedy/MLBRecord.java	/^package topc.greedy;$/;"	p
topc.math	src/math/BaseballLineup.java	/^package topc.math;$/;"	p
topc.math	src/math/BenfordsLaw.java	/^package topc.math;$/;"	p
topc.math	src/math/Disaster.java	/^package topc.math;$/;"	p
topc.math	src/math/Hangman42.java	/^package topc.math;$/;"	p
topc.math	src/math/KingOfTheCourt.java	/^package topc.math;$/;"	p
topc.math	src/math/TestScores.java	/^package topc.math;$/;"	p
topc.recursion	src/recursion/AntiChess.java	/^package topc.recursion;$/;"	p
topc.recursion	src/recursion/PermissionTree.java	/^package topc.recursion;$/;"	p
topc.recursion	src/recursion/RedBlack.java	/^package topc.recursion;$/;"	p
topc.sorting	src/sorting/FloatingMedian.java	/^package topc.sorting;$/;"	p
topc.stringm	src/stringm/DirectoryTree.java	/^package topc.stringm;$/;"	p
topc.test	test/AllTests.java	/^package topc.test;$/;"	p
topc.test	test/Runner.java	/^package topc.test;$/;"	p
topc.test.bkt	test/bkt/BridgeCrossingTest.java	/^package topc.test.bkt;$/;"	p
topc.test.dp	test/dp/AvoidRoadsTest.java	/^package topc.test.dp;$/;"	p
topc.test.dp	test/dp/BadNeighborsTest.java	/^package topc.test.dp;$/;"	p
topc.test.dp	test/dp/FlowerGardenTest.java	/^package topc.test.dp;$/;"	p
topc.test.dp	test/dp/GameOfLifeDivOneTest.java	/^package topc.test.dp;$/;"	p
topc.test.dp	test/dp/JewelryTest.java	/^package topc.test.dp;$/;"	p
topc.test.dp	test/dp/KiloManX2Test.java	/^package topc.test.dp;$/;"	p
topc.test.dp	test/dp/KiloManXTest.java	/^package topc.test.dp;$/;"	p
topc.test.dp	test/dp/QuickSumsTest.java	/^package topc.test.dp;$/;"	p
topc.test.dp	test/dp/ShortPalindromesTest.java	/^package topc.test.dp;$/;"	p
topc.test.dp	test/dp/StripePainterTest.java	/^package topc.test.dp;$/;"	p
topc.test.dp	test/dp/WeightedIntervalSchedulingTest.java	/^package topc.test.dp;$/;"	p
topc.test.dp	test/dp/ZigZagTest.java	/^package topc.test.dp;$/;"	p
topc.test.dynamic	test/dynamic/ColorfulMazeTest.java	/^package topc.test.dynamic;$/;"	p
topc.test.dynamic	test/dynamic/MiniPaint2Test.java	/^package topc.test.dynamic;$/;"	p
topc.test.dynamic	test/dynamic/MiniPaintTest.java	/^package topc.test.dynamic;$/;"	p
topc.test.dynamic	test/dynamic/TheProgrammingContestDivOneTest.java	/^package topc.test.dynamic;$/;"	p
topc.test.easy	test/easy/BagOfDevouringTest.java	/^package topc.test.easy;$/;"	p
topc.test.easy	test/easy/BusinessTasksTest.java	/^package topc.test.easy;$/;"	p
topc.test.easy	test/easy/FibTest.java	/^package topc.test.easy;$/;"	p
topc.test.easy	test/easy/MedalTableTest.java	/^package topc.test.easy;$/;"	p
topc.test.easy	test/easy/TableSeatingTest.java	/^package topc.test.easy;$/;"	p
topc.test.easy	test/easy/TallPeopleTest.java	/^package topc.test.easy;$/;"	p
topc.test.graph	test/graph/CircuitsTest.java	/^package topc.test.graph;$/;"	p
topc.test.graph	test/graph/DungeonEscapeTest.java	/^package topc.test.graph;$/;"	p
topc.test.graph	test/graph/EscapeTest.java	/^package topc.test.graph;$/;"	p
topc.test.graph	test/graph/GrafixMaskTest.java	/^package topc.test.graph;$/;"	p
topc.test.graph	test/graph/IslandFerriesTest.java	/^package topc.test.graph;$/;"	p
topc.test.graph	test/graph/KiloManX3Test.java	/^package topc.test.graph;$/;"	p
topc.test.graph	test/graph/MarketingTest.java	/^package topc.test.graph;$/;"	p
topc.test.graph	test/graph/PathFindingTest.java	/^package topc.test.graph;$/;"	p
topc.test.graph	test/graph/RevolvingDoorsTest.java	/^package topc.test.graph;$/;"	p
topc.test.graph	test/graph/RoboCourierTest.java	/^package topc.test.graph;$/;"	p
topc.test.graph	test/graph/SmartWordToyTest.java	/^package topc.test.graph;$/;"	p
totPainted	src/dynamic/MiniPaint.java	/^    public int totPainted;$/;"	f	class:MiniPaint.Node
totStrokes	src/dynamic/MiniPaint.java	/^    public int totStrokes;$/;"	f	class:MiniPaint.Node
transform	src/dynamic/Nim.java	/^  void transform(long[] a, int i, int j) {$/;"	m	class:Nim
trap	src/dynamic/ColorfulMaze.java	/^    double[] trap;$/;"	f	class:ColorfulMaze
tree	src/recursion/PermissionTree.java	/^  Node tree;$/;"	f	class:PermissionTree
tree	src/sorting/FloatingMedian.java	/^  int[][] tree;$/;"	f	class:FloatingMedian
tryToFit	src/geometry/PackingShapes.java	/^  public String[] tryToFit(int width, int height, String[] shapes) {$/;"	m	class:PackingShapes
turns	src/graph/RevolvingDoors.java	/^  public int turns(String[] map) {$/;"	m	class:RevolvingDoors
uniqs	src/graph/RevolvingDoors.java	/^  HashSet<String> uniqs;$/;"	f	class:RevolvingDoors
unit	src/dynamic/P8XCoinChange.java	/^  public static long[][] unit(int n) {$/;"	m	class:Matrix
unit	src/graph/DrivingAround.java	/^  public static long[][] unit(int n) {$/;"	m	class:DAMatrix
unstable	src/dynamic/AntiMatter.java	/^  public String unstable(int[] xform) {$/;"	m	class:AntiMatter
untransform	src/dynamic/Nim.java	/^  void untransform(long[] a, int i, int j) {$/;"	m	class:Nim
updateLabels	src/dynamic/RadarGuns.java	/^  void updateLabels() {$/;"	m	class:Hungarian
users	src/recursion/PermissionTree.java	/^    public final Set<String> users;$/;"	f	class:PermissionTree.Node
val	src/recursion/RedBlack.java	/^    public final int val;$/;"	f	class:RedBlack.Node
values	src/dp/KiloManX.java	/^    public int[] values;$/;"	f	class:KiloManX.Node
w	src/dp/FlowerGarden.java	/^  int[] w;$/;"	f	class:FlowerGarden
weight	src/dp/KiloManX.java	/^    public int[] weight;$/;"	f	class:KiloManX.Node
weight	src/graph/KiloManX3.java	/^    public int weight;$/;"	f	class:KiloManX3.Node
weightedScore	src/math/TestScores.java	/^  public double weightedScore(double[] questions, int testScore) {$/;"	m	class:TestScores
width	src/geometry/RemoteRover.java	/^  int[] width;$/;"	f	class:RemoteRover
willHave	src/dp/GameOfLifeDivOne.java	/^  int willHave(char[] state) {$/;"	m	class:GameOfLifeDivOne
win	src/math/Hangman42.java	/^  double win(int state) {$/;"	m	class:Hangman42
win	src/math/KingOfTheCourt.java	/^  double win(int[] pos, int lim) {$/;"	m	class:KingOfTheCourt
winner	src/dynamic/TheEasyChase.java	/^    public String winner(int n, int rowWhite, int colWhite, int rowBlack, int colBlack) {$/;"	m	class:TheEasyChase
x	src/dynamic/Gifts.java	/^        public final int x;$/;"	f	class:Gifts.Node
x	src/graph/DungeonEscape.java	/^    public final int x;$/;"	f	class:DungeonEscape.Node
x	src/graph/Escape.java	/^    public int x;$/;"	f	class:Escape.Node
x	src/graph/GrafixMask.java	/^    public int x = 0;$/;"	f	class:GrafixMask.Node
x	src/graph/Parking.java	/^    public final int x;$/;"	f	class:Parking.Node
x	src/graph/RoboCourier.java	/^    public int x;$/;"	f	class:RoboCourier.Node
xa	src/graph/PathFinding.java	/^    public int xa;$/;"	f	class:PathFinding.Node
xb	src/graph/PathFinding.java	/^    public int xb;$/;"	f	class:PathFinding.Node
xmatch	src/dynamic/RadarGuns.java	/^  int[] xmatch;   \/\/ xmatch[x] = vertex matched with x$/;"	f	class:Hungarian
y	src/dynamic/Gifts.java	/^        public final int y;$/;"	f	class:Gifts.Node
y	src/graph/DungeonEscape.java	/^    public final int y;$/;"	f	class:DungeonEscape.Node
y	src/graph/Escape.java	/^    public int y;$/;"	f	class:Escape.Node
y	src/graph/GrafixMask.java	/^    public int y = 0;$/;"	f	class:GrafixMask.Node
y	src/graph/Parking.java	/^    public final int y;$/;"	f	class:Parking.Node
y	src/graph/RoboCourier.java	/^    public int y;$/;"	f	class:RoboCourier.Node
ya	src/graph/PathFinding.java	/^    public int ya;$/;"	f	class:PathFinding.Node
yb	src/graph/PathFinding.java	/^    public int yb;$/;"	f	class:PathFinding.Node
ymatch	src/dynamic/RadarGuns.java	/^  int[] ymatch;   \/\/ ymatch[y] = vertex matched with y$/;"	f	class:Hungarian
